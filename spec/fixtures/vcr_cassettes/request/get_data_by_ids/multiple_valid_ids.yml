---
http_interactions:
- request:
    method: get
    uri: http://lda.data.parliament.uk/resources/143468.json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - lda.data.parliament.uk
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 24 Jan 2018 10:23:04 GMT
      Content-Type:
      - application/json
      Set-Cookie:
      - __cfduid=d42df7cee9f8c6b47a9d17149875e465c1516789384; expires=Thu, 24-Jan-19
        10:23:04 GMT; path=/; domain=.parliament.uk; HttpOnly
      X-Response-Id:
      - '20504'
      Access-Control-Allow-Origin:
      - "*"
      Expires:
      - Wed, 24 Jan 2018 10:39:44 GMT
      Etag:
      - W/"fe66d69d3da023ee"
      Content-Location:
      - http://lda.data.parliament.uk/resources/143468.json
      Server:
      - cloudflare
      Cf-Ray:
      - 3e22467737560c65-AMS
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: |
        { "format" : "linked-data-api", "version" : "0.2", "result" : {"_about" : "http://lda.data.parliament.uk/resources/143468.json", "definition" : "http://lda.data.parliament.uk/meta/resources/_id.json", "extendedMetadataVersion" : "http://lda.data.parliament.uk/resources/143468.json?_metadata=all", "primaryTopic" : {"_about" : "http://data.parliament.uk/resources/143468", "constituencyType" : "Borough", "ddpCreated" : {"_value" : "2014-11-07T19:29:01.853Z", "_datatype" : "dateTime"}
              , "ddpModified" : {"_value" : "2014-11-07T19:29:01.853Z", "_datatype" : "dateTime"}
              , "endedDate" : {"_value" : "2005-05-05", "_datatype" : "dateTime"}
              , "gssCode" : "", "humanIndexable" : {"_value" : "false", "_datatype" : "boolean"}
              , "isPrimaryTopicOf" : "http://lda.data.parliament.uk/resources/143468.json", "label" : {"_value" : "Aberdeen Central"}
              , "osName" : "Aberdeen Central Burgh Const", "prefLabel" : {"_value" : "Aberdeen Central"}
              , "previousConstituency" : "1997-570", "published" : {"_value" : "true", "_datatype" : "boolean"}
              , "sameAs" : ["http://statistics.data.gov.uk/id/statistical-geography/"], "startedDate" : {"_value" : "1997-05-01", "_datatype" : "dateTime"}
              , "type" : "http://data.ordnancesurvey.co.uk/ontology/admingeo/WestminsterConstituency"}
            , "type" : ["http://purl.org/linked-data/api/vocab#ItemEndpoint", "http://purl.org/linked-data/api/vocab#Page"]}
        }
    http_version: 
  recorded_at: Wed, 24 Jan 2018 10:23:05 GMT
- request:
    method: get
    uri: http://lda.data.parliament.uk/resources/143491.json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - lda.data.parliament.uk
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 24 Jan 2018 10:23:05 GMT
      Content-Type:
      - application/json
      Set-Cookie:
      - __cfduid=d1c08fab69a361dcb979f9ab16ed6dd181516789385; expires=Thu, 24-Jan-19
        10:23:05 GMT; path=/; domain=.parliament.uk; HttpOnly
      X-Response-Id:
      - '20505'
      Access-Control-Allow-Origin:
      - "*"
      Expires:
      - Wed, 24 Jan 2018 10:39:45 GMT
      Etag:
      - W/"c6f1105cc5ac0372"
      Content-Location:
      - http://lda.data.parliament.uk/resources/143491.json
      Server:
      - cloudflare
      Cf-Ray:
      - 3e224679271d0c71-AMS
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: |
        { "format" : "linked-data-api", "version" : "0.2", "result" : {"_about" : "http://lda.data.parliament.uk/resources/143491.json", "definition" : "http://lda.data.parliament.uk/meta/resources/_id.json", "extendedMetadataVersion" : "http://lda.data.parliament.uk/resources/143491.json?_metadata=all", "primaryTopic" : {"_about" : "http://data.parliament.uk/resources/143491", "constituencyType" : "", "ddpCreated" : {"_value" : "2014-11-07T19:29:12.870Z", "_datatype" : "dateTime"}
              , "ddpModified" : {"_value" : "2014-11-07T19:29:12.870Z", "_datatype" : "dateTime"}
              , "endedDate" : {"_value" : "1974-02-28", "_datatype" : "dateTime"}
              , "gssCode" : "", "humanIndexable" : {"_value" : "false", "_datatype" : "boolean"}
              , "isPrimaryTopicOf" : "http://lda.data.parliament.uk/resources/143491.json", "label" : {"_value" : "Accrington"}
              , "osName" : "", "prefLabel" : {"_value" : "Accrington"}
              , "previousConstituency" : "1950-7", "published" : {"_value" : "true", "_datatype" : "boolean"}
              , "sameAs" : ["http://statistics.data.gov.uk/id/statistical-geography/"], "startedDate" : {"_value" : "1950-02-23", "_datatype" : "dateTime"}
              , "type" : "http://data.ordnancesurvey.co.uk/ontology/admingeo/WestminsterConstituency"}
            , "type" : ["http://purl.org/linked-data/api/vocab#ItemEndpoint", "http://purl.org/linked-data/api/vocab#Page"]}
        }
    http_version: 
  recorded_at: Wed, 24 Jan 2018 10:23:05 GMT
- request:
    method: get
    uri: http://lda.data.parliament.uk/resources/824308.json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - lda.data.parliament.uk
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 24 Jan 2018 10:23:05 GMT
      Content-Type:
      - application/json
      Set-Cookie:
      - __cfduid=dbd447ed72f78d3f3821098d409fd9fc11516789385; expires=Thu, 24-Jan-19
        10:23:05 GMT; path=/; domain=.parliament.uk; HttpOnly
      X-Response-Id:
      - '20506'
      Access-Control-Allow-Origin:
      - "*"
      Expires:
      - Wed, 24 Jan 2018 10:39:45 GMT
      Etag:
      - W/"e4440b7ba577cc43"
      Content-Location:
      - http://lda.data.parliament.uk/resources/824308.json
      Server:
      - cloudflare
      Cf-Ray:
      - 3e22467a97829c2f-AMS
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 24 Jan 2018 10:23:05 GMT
recorded_with: VCR 4.0.0
