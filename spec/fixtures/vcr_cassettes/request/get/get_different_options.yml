---
http_interactions:
- request:
    method: get
    uri: http://lda.data.parliament.uk/researchbriefings.json?_page=0&_pageSize=500&exists-category=true&max-date=2017-06-29&min-date=2017-01-01
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Typhoeus - https://github.com/typhoeus/typhoeus
      Expect:
      - ''
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 09 Feb 2018 11:42:17 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - __cfduid=d70851da83d013f3226920adf73fd6d351518176536; expires=Sat, 09-Feb-19
        11:42:16 GMT; path=/; domain=.parliament.uk; HttpOnly
      Content-Location:
      - http://eldaddp.azurewebsites.net/researchbriefings.json?_pageSize=500&_page=0&exists-category=true&min-date=2017-01-01&max-date=2017-06-29
      Expires:
      - Fri, 09 Feb 2018 15:42:17 GMT
      Etag:
      - W/"ea77ebd387d99db"
      Vary:
      - Accept-Encoding
      X-Response-Id:
      - '130018'
      Access-Control-Allow-Origin:
      - "*"
      X-Powered-By:
      - ASP.NET
      Cf-Cache-Status:
      - MISS
      Cache-Control:
      - public, max-age=14400
      Server:
      - cloudflare
      Cf-Ray:
      - 3ea6907b320e0ccb-LHR
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyAiZm9ybWF0IiA6ICJsaW5rZWQtZGF0YS1hcGkiLCAidmVyc2lvbiIgOiAiMC4yIiwgInJlc3VsdCIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2VsZGFkZHAuYXp1cmV3ZWJzaXRlcy5uZXQvcmVzZWFyY2hicmllZmluZ3MuanNvbj9fcGFnZVNpemU9NTAwJl9wYWdlPTAmZXhpc3RzLWNhdGVnb3J5PXRydWUmbWluLWRhdGU9MjAxNy0wMS0wMSZtYXgtZGF0ZT0yMDE3LTA2LTI5IiwgImRlZmluaXRpb24iIDogImh0dHA6Ly9lbGRhZGRwLmF6dXJld2Vic2l0ZXMubmV0L21ldGEvcmVzZWFyY2hicmllZmluZ3MuanNvbj9leGlzdHMtY2F0ZWdvcnk9dHJ1ZSZtaW4tZGF0ZT0yMDE3LTAxLTAxJm1heC1kYXRlPTIwMTctMDYtMjkiLCAiZXh0ZW5kZWRNZXRhZGF0YVZlcnNpb24iIDogImh0dHA6Ly9lbGRhZGRwLmF6dXJld2Vic2l0ZXMubmV0L3Jlc2VhcmNoYnJpZWZpbmdzLmpzb24/X3BhZ2VTaXplPTUwMCZfcGFnZT0wJmV4aXN0cy1jYXRlZ29yeT10cnVlJm1pbi1kYXRlPTIwMTctMDEtMDEmbWF4LWRhdGU9MjAxNy0wNi0yOSZfbWV0YWRhdGE9YWxsIiwgImZpcnN0IiA6ICJodHRwOi8vZWxkYWRkcC5henVyZXdlYnNpdGVzLm5ldC9yZXNlYXJjaGJyaWVmaW5ncy5qc29uP19wYWdlPTAmZXhpc3RzLWNhdGVnb3J5PXRydWUmbWluLWRhdGU9MjAxNy0wMS0wMSZtYXgtZGF0ZT0yMDE3LTA2LTI5IiwgImlzUGFydE9mIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZWxkYWRkcC5henVyZXdlYnNpdGVzLm5ldC9yZXNlYXJjaGJyaWVmaW5ncy5qc29uP2V4aXN0cy1jYXRlZ29yeT10cnVlJm1pbi1kYXRlPTIwMTctMDEtMDEmbWF4LWRhdGU9MjAxNy0wNi0yOSIsICJkZWZpbml0aW9uIiA6ICJodHRwOi8vZWxkYWRkcC5henVyZXdlYnNpdGVzLm5ldC9tZXRhL3Jlc2VhcmNoYnJpZWZpbmdzLmpzb24/ZXhpc3RzLWNhdGVnb3J5PXRydWUmbWluLWRhdGU9MjAxNy0wMS0wMSZtYXgtZGF0ZT0yMDE3LTA2LTI5IiwgImhhc1BhcnQiIDogImh0dHA6Ly9lbGRhZGRwLmF6dXJld2Vic2l0ZXMubmV0L3Jlc2VhcmNoYnJpZWZpbmdzLmpzb24/X3BhZ2VTaXplPTUwMCZfcGFnZT0wJmV4aXN0cy1jYXRlZ29yeT10cnVlJm1pbi1kYXRlPTIwMTctMDEtMDEmbWF4LWRhdGU9MjAxNy0wNi0yOSIsICJ0eXBlIiA6ICJodHRwOi8vcHVybC5vcmcvbGlua2VkLWRhdGEvYXBpL3ZvY2FiI0xpc3RFbmRwb2ludCJ9CiAgICAsICJpdGVtcyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzczMjI1OCIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiSGVwYXRpdGlzIEMgaXMgYSBibG9vZC1ib3JuZSB2aXJ1cyB3aGljaCBpbmZlY3RzIGFuZCBkYW1hZ2VzIHRoZSBsaXZlci4gSXQgYWZmZWN0cyBhbiBlc3RpbWF0ZWQgMjE1LDAwMCBwZW9wbGUgaW4gdGhlIFVLIGFuZCAxMzBcdTIwMTMxNTAgbWlsbGlvbiBwZW9wbGUgZ2xvYmFsbHkuIEl0IGNhbiBjYXVzZSBpbmZsYW1tYXRpb24sIGZpYnJvc2lzLCB3ZWlnaHQgbG9zcywgYWJkb21pbmFsIHBhaW4sIGFuZCBpbiBhZHZhbmNlZCBjYXNlcywgY2lycmhvc2lzLiBUaGUgbW9zdCBjb21tb24gbW9kZXMgb2YgdHJhbnNtaXNzaW9uIGFyZSB0aGUgc2hhcmluZyBvZiBuZWVkbGVzIGJ5IGludHJhdmVub3VzIGRydWcgdXNlcnMsIGluYWRlcXVhdGVseSBzdGVyaWxpc2VkIG1lZGljYWwgZXF1aXBtZW50LCBhbmQgdGhlIHRyYW5zZnVzaW9uIG9mIHVuc2NyZWVuZWQgYmxvb2QgYW5kIGJsb29kIHByb2R1Y3RzLlxuIFxuVGhpcyBicmllZmluZyBzdW1tYXJpc2VzIHRoZSB0cmVhdG1lbnQgb3B0aW9ucywgYW5kIHByb3ZpZGVzIGEgc3RhdGlzdGljYWwgc3VtbWFyeSBvZiB0aGUgaW5jaWRlbmNlIG9mIHRoZSBkaXNlYXNlIGluIHRoZSBVSywgYW5kIGdsb2JhbGx5LiBJdCBhbHNvIHN1bW1hcmlzZXMgcmVjZW50IFVLIGdvdmVybm1lbnQgcG9saWN5IG9uIHRoZSBzdWJqZWN0LCB0b2dldGhlciB3aXRoIGdsb2JhbCBlZmZvcnRzIHRvIGVyYWRpY2F0ZSB0aGUgZGlzZWFzZSwgaW5mb3JtZWQgYnkgdGhlIFdvcmxkIEhlYWx0aCBPcmdhbmlzYXRpb25cdTIwMTlzIEdsb2JhbCBTdHJhdGVneSBvbiBWaXJhbCBIZXBhdGl0aXMgMjAxNlx1MjAxMzIwMjEuIFBhcnQgb2YgdGhpcyBzdHJhdGVneSBpcyB0aGUgYW5udWFsIG9ic2VydmFuY2Ugb2YgV29ybGQgSGVwYXRpdGlzIERheSwgb24gMjggSnVseS4ifQogICAgICAsICJkYXRlIiA6IHsiX3ZhbHVlIiA6ICIyMDE3LTA2LTIzVDEzOjU3OjE3LjI2NTMyNTIrMDE6MDAiLCAiX2RhdGF0eXBlIiA6ICJkYXRlVGltZSJ9CiAgICAgICwgImRlc2NyaXB0aW9uIiA6IFsiVGhpcyBIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5IGJyaWVmaW5nIHByb3ZpZGVzIGEgc3VtbWFyeSBvZiByZWNlbnQgc3RhdGlzdGljcyBhbmQgZGV2ZWxvcG1lbnRzIGluIHRhY2tsaW5nIHRoZSBzcHJlYWQgb2YgaGVwYXRpdGlzIEMgdmlydXMgaW4gdGhlIFVLLCBhbmQgZ2xvYmFsbHkuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMTE4tMjAxNy0wMDMzIn0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8zNDY3MTMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBMaWJyYXJ5IG5vdGVzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiSGVwYXRpdGlzIEM6IFN0YXRpc3RpY3MgYW5kIERldmVsb3BtZW50cyIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU1MjciLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJDb21tdW5pY2FibGUgZGlzZWFzZXMifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU1NTQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJEaXNlYXNlcyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTU1NyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkRydWdzIG1pc3VzZSJ9CiAgICAgIH0KICAgICAgXSwgInR5cGUiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvc2NoZW1hL3BhcmwjUmVzZWFyY2hCcmllZmluZyJ9CiAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Jlc291cmNlcy83MzE2NzAiLCAiYWJzdHJhY3QiIDogeyJfdmFsdWUiIDogIlByaW9yIHRvIHRoZSBkaXNzb2x1dGlvbiBvZiB0aGUgMjAxNVx1MjAxMzE3IHBhcmxpYW1lbnQsIHRoZSBHb3Zlcm5tZW50IENoaWVmIFdoaXAgaW4gdGhlIEhvdXNlIG9mIExvcmRzLCBMb3JkIFRheWxvciBvZiBIb2xiZWFjaCwgc3RhdGVkIHRoYXQgdGhlIFN0YXRlIE9wZW5pbmcgZm9sbG93aW5nIHRoZSBnZW5lcmFsIGVsZWN0aW9uIGhlbGQgb24gOCBKdW5lIHdvdWxkIHRha2UgcGxhY2Ugb24gMTkgSnVuZSAyMDE3LiBIb3dldmVyLCB0aGUgbmV3IExlYWRlciBvZiB0aGUgSG91c2Ugb2YgQ29tbW9ucywgQW5kcmVhIExlYWRzb20sIHN0YXRlZCBhZnRlciBwb2xsaW5nIGRheSB0aGF0IHRoZSBHb3Zlcm5tZW50IGhhZCBhZ3JlZWQgd2l0aCBCdWNraW5naGFtIFBhbGFjZSB0aGF0IFN0YXRlIE9wZW5pbmcgd291bGQgdGFrZSBwbGFjZSB0d28gZGF5cyBsYXRlciwgb24gMjEgSnVuZSAyMDE3LiBJdCB3YXMgcmVwb3J0ZWQgdGhhdCB0aGUgcG9zdHBvbmVtZW50IHdhcyBkdWUgdG8gcG9zdC1lbGVjdGlvbiB0YWxrcyBiZXR3ZWVuIHRoZSBDb25zZXJ2YXRpdmUgUGFydHkgYW5kIHRoZSBEZW1vY3JhdGljIFVuaW9uaXN0IFBhcnR5LlxuIFxuVGhpcyBicmllZmluZyBwcm92aWRlcyBpbmZvcm1hdGlvbiBvbiBmb3VyIHByZXZpb3VzIG9jY2FzaW9ucyBvbiB3aGljaCB0aGUgU3RhdGUgT3BlbmluZyBvZiBQYXJsaWFtZW50IGlzIHJlY29yZGVkIHRvIGhhdmUgYmVlbiBwb3N0cG9uZWQuIFRoaXMgYnJpZWZpbmcgaXMgbm90IGV4aGF1c3RpdmUgYW5kIHRoZSBIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5IHdvdWxkIHdlbGNvbWUgaW5mb3JtYXRpb24gb24gb3RoZXIgb2NjYXNpb25zIHdoZW4gdGhlIFN0YXRlIE9wZW5pbmcgb2YgUGFybGlhbWVudCBoYXMgYmVlbiBwb3N0cG9uZWQuXG4gXG5QcmV2aW91cyBQb3N0cG9uZW1lbnRzIG9mIHRoZSBTdGF0ZSBPcGVuaW5nIG9mIFBhcmxpYW1lbnRcbiBcbjE5ODBcbiBcbk9uIDE2IE9jdG9iZXIgMTk4MCwgTG9yZCBTb2FtZXMgKENvbnNlcnZhdGl2ZSksIHRoZW4gTG9yZCBQcmVzaWRlbnQgb2YgdGhlIENvdW5jaWwsIG1hZGUgYSBzdGF0ZW1lbnQgaW4gd2hpY2ggaGUgb3V0bGluZWQgdGhlIEdvdmVybm1lbnRcdTIwMTlzIGRlY2lzaW9uIHRvIHBvc3Rwb25lIHRoZSBTdGF0ZSBPcGVuaW5nIG9mIFBhcmxpYW1lbnQgZm9yIGEgd2VlaywgZnJvbSAxMyBOb3ZlbWJlciB0byAyMCBOb3ZlbWJlciBvZiB0aGF0IHllYXIuIExvcmQgU29hbWVzIGNpdGVkIHRoZSBHb3Zlcm5tZW50IGhhdmluZyB0YWtlbiBub3RlIG9mIHRoZSBcdTIwMWNuZWVkIGZvciBmdWxsIGNvbnNpZGVyYXRpb25cdTIwMWQgb2YgQmlsbHMgdGhlbiBiZWZvcmUgdGhlIEhvdXNlIGFzIHRoZSByZWFzb24gZm9yIHRoZSBwb3N0cG9uZW1lbnQuXG4gXG4xOTc2XG4gXG5PbiAyNiBPY3RvYmVyIDE5NzYsIExvcmQgQnllcnMgKExpYmVyYWwpLCB0aGVuIExlYWRlciBvZiB0aGUgTGliZXJhbCBQYXJ0eSBpbiB0aGUgSG91c2Ugb2YgTG9yZHMsIG1vdmVkIGEgbW90aW9uIHRvIHRoZSBlZmZlY3QgdGhhdCB0aGUgSG91c2UgaGFkIG5vdCBiZWVuIGFibGUgdG8gZWZmZWN0aXZlbHkgZnVsZmlsIGl0cyByb2xlIGFzIGEgcmV2aXNpbmcgY2hhbWJlciBkdWUgdG8gdGhlIHByZXNzdXJlIG9mIHRoZSBwYXJsaWFtZW50YXJ5IHRpbWV0YWJsZS4gTG9yZCBDYXJyaW5ndG9uIChDb25zZXJ2YXRpdmUpLCB0aGVuIExlYWRlciBvZiB0aGUgT3Bwb3NpdGlvbiwgbW92ZWQgdHdvIGFtZW5kbWVudHMgdG8gdGhpcyBtb3Rpb24uIFdoZW4gbW92aW5nIGhpcyBhbWVuZG1lbnRzLCBMb3JkIENhcnJpbmd0b24gc3RhdGVkIHRoYXQgaGUgdGhvdWdodCB0aGUgSG91c2UgaGFkIGJlZW4gXHUyMDFjYXNrZWQgdG8gd29yayBhdCBhIHByZXNzdXJlIHdoaWNoIG1ha2VzIGl0IGltcG9zc2libGUgZm9yIHRoZSBCaWxscyBiZWZvcmUgdGhpcyBIb3VzZSB0byBiZSBhZGVxdWF0ZWx5IGRpc2N1c3NlZFx1MjAxZC4gVGhlIG1vdGlvbiwgYXMgYW1lbmRlZCwgd2FzIGFncmVlZCB0byBhbmQgcmVhZCBhcyBmb2xsb3dzOlxuIFxuIFRoYXQgdGhpcyBIb3VzZSBjYWxscyB1cG9uIEhlciBNYWplc3R5XHUyMDE5cyBHb3Zlcm5tZW50IHRvIHJlY29nbmlzZSB0aGF0IGl0IGlzIHZpdGFsbHkgaW1wb3J0YW50IHRoYXQgdGhpcyBIb3VzZSBzaG91bGQgZXhhbWluZSBpbiBkZXRhaWwgbGVnaXNsYXRpb24gbXVjaCBvZiB3aGljaCBoYXMgYmVlbiBkZW5pZWQgZGlzY3Vzc2lvbiBhbmQgc2NydXRpbnkgb24gdGhlIGZsb29yIG9mIHRoZSBIb3VzZSBvZiBDb21tb25zLCByZWdyZXRzIHRoYXQgSGVyIE1hamVzdHlcdTIwMTlzIEdvdmVybm1lbnQgaGFzIGZhaWxlZCB0byBnaXZlIGVmZmVjdCB0byB0aGlzIHByaW5jaXBsZSBhbmQgcmVxdWVzdHMgdGhhdCBhZGVxdWF0ZSBwYXJsaWFtZW50YXJ5IHRpbWUgYmUgYWZmb3JkZWQgZm9yIHRoZSBkaXNjdXNzaW9uIGFuZCBzY3J1dGlueSBvZiBsZWdpc2xhdGlvbi4gXG4gXG5Ud28gZGF5cyBsYXRlciwgQmFyb25lc3MgTGxld2VseW4tRGF2aWVzIG9mIEhhc3RvZSAoTGFib3VyKSwgdGhlbiBHb3Zlcm5tZW50IENoaWVmIFdoaXAgaW4gdGhlIEhvdXNlIG9mIExvcmRzLCBtYWRlIGEgc3RhdGVtZW50IHRvIHRoZSBlZmZlY3QgdGhhdCB0aGUgc2Vzc2lvbiB3YXMgYmVpbmcgZXh0ZW5kZWQuIFNoZSBzdGF0ZWQgdGhhdCB0aGUgU3RhdGUgT3BlbmluZyBvZiBQYXJsaWFtZW50IGZvciB0aGUgbmV4dCBzZXNzaW9uIHdvdWxkIG5vIGxvbmdlciB0YWtlIHBsYWNlIG9uIDE3IE5vdmVtYmVyLCBhcyBwbGFubmVkLiBJbnN0ZWFkLCB0aGUgUXVlZW4gaGFkIGFncmVlZCB0byBvcGVuIHRoZSBuZXh0IHNlc3Npb24gYSB3ZWVrIGxhdGVyXHUyMDE0b24gMjQgTm92ZW1iZXIuXG4gXG4xOTQ1XG4gXG5PbiAzMCBKdWx5IDE5NDUsIFRoZSBUaW1lcyByZXBvcnRlZCB0aGF0IHRoZSBmaXJzdCBTdGF0ZSBPcGVuaW5nIG9mIFBhcmxpYW1lbnQgZm9sbG93aW5nIHRoZSBnZW5lcmFsIGVsZWN0aW9uIG9mIHRoYXQgeWVhciBoYWQgYmVlbiBwb3N0cG9uZWQgZnJvbSA4IEF1Z3VzdCB0byAxNSBBdWd1c3QgaW4gb3JkZXIgdG8gXHUyMDFjZ2l2ZSB0aGUgUHJpbWUgTWluaXN0ZXIgW0NsZW1lbnQgQXR0bGVlXSBtb3JlIHRpbWUgdG8gY29tcGxldGUgdGhlIG5ldyBnb3Zlcm5tZW50IGFuZCB0byBmb3JtdWxhdGUgdGhlaXIgcHJvZ3JhbW1lXHUyMDFkLCBhZnRlciBoaXMgcmV0dXJuIGZyb20gdGhlIFBvdHNkYW0gQ29uZmVyZW5jZSB0YWtpbmcgcGxhY2UgaW4gb2NjdXBpZWQgR2VybWFueS4gVGhlIGZpcnN0IFN0YXRlIE9wZW5pbmcgb2YgdGhlIDE5NDVcdTIwMTM1MCBwYXJsaWFtZW50IHRvb2sgcGxhY2Ugb24gdGhpcyBsYXRlciBkYXRlLCB3aXRoIEtpbmcgR2VvcmdlIFZJIHJlYWRpbmcgdGhlIHNwZWVjaCBmcm9tIHRoZSB0aHJvbmUuXG4gXG4xOTI0XG4gXG5UaGUgZmlyc3QgU3RhdGUgT3BlbmluZyBvZiBQYXJsaWFtZW50IGZvbGxvd2luZyB0aGUgZ2VuZXJhbCBlbGVjdGlvbiBoZWxkIGluIE9jdG9iZXIgMTkyNCB3YXMgcGxhbm5lZCB0byB0YWtlIHBsYWNlIG9uIDI0IE5vdmVtYmVyIG9mIHRoYXQgeWVhci4gSG93ZXZlciwgaXQgd2FzIHJlcG9ydGVkIGluIGVhcmx5IE5vdmVtYmVyIHRoYXQgaXQgd2FzIHByb2JhYmxlIHRoYXQgdGhlIFN0YXRlIE9wZW5pbmcgd291bGQgYmUgZGVmZXJyZWQuwqAgSXQgd2FzIGxhdGVyIGNvbmZpcm1lZCB0aGF0IHRoZSBTdGF0ZSBPcGVuaW5nIHdvdWxkIGJlIGhlbGQgb24gOSBEZWNlbWJlciAxOTI0LiBLaW5nIEdlb3JnZSBWIHJlYWQgdGhlIHNwZWVjaCBmcm9tIHRoZSB0aHJvbmUgb24gdGhpcyBkYXRlLiJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDYtMjJUMTM6MjQ6NTIuNTUwMjEyNiswMTowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIEhvdXNlIG9mIExvcmRzIExpYnJhcnkgYnJpZWZpbmcgcHJvdmlkZXMgaW5mb3JtYXRpb24gb24gb2NjYXNpb25zIG9uIHdoaWNoIHRoZSBTdGF0ZSBPcGVuaW5nIG9mIFBhcmxpYW1lbnQgaGFzIGJlZW4gcG9zdHBvbmVkLiJdLCAiaWRlbnRpZmllciIgOiB7Il92YWx1ZSIgOiAiTExOLTIwMTctMDAzMSJ9CiAgICAgICwgInB1Ymxpc2hlciIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgICwgInNlY3Rpb24iIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgXSwgInN1YlR5cGUiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMzQ2NzEzIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTG9yZHMgTGlicmFyeSBub3RlcyJ9CiAgICAgIH0KICAgICAgLCAidGl0bGUiIDogIlN0YXRlIE9wZW5pbmcgb2YgUGFybGlhbWVudDogUG9zdHBvbmVtZW50cyIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU3MDMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJQYXJsaWFtZW50In0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzczMTY2NiIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiRm9sbG93aW5nIHRoZSAyMDE3IGdlbmVyYWwgZWxlY3Rpb24sIHRoZSBHb3Zlcm5tZW50IGFubm91bmNlZCB0aGF0IHRoZSBmaXJzdCBzZXNzaW9uIG9mIHRoZSBuZXcgcGFybGlhbWVudCB3b3VsZCBiZSBleHRlbmRlZCB0byB0d28geWVhcnMuwqAgQXMgYSByZXN1bHQsIHRoZXJlIGlzIGV4cGVjdGVkIHRvIGJlIG5vIFF1ZWVuXHUyMDE5cyBTcGVlY2ggaW4gMjAxOC4gVGhlIGxhc3QgeWVhciBpbiB3aGljaCB0aGVyZSB3YXMgbm8gUXVlZW5cdTIwMTlzIFNwZWVjaCB3YXMgMjAxMS4gUHJpb3IgdG8gdGhpcywgdGhlcmUgd2FzIG5vIEtpbmdcdTIwMTlzIFNwZWVjaCBpbiAxOTE1LCAxOTI1IG9yIDE5NDkuXG4gXG5UaGUgMjAxMFx1MjAxMzEyIHNlc3Npb24gd2FzIHRoZSBsb25nZXN0IHNpbmNlIDE5MDAgaW4gdGVybXMgb2YgdGhlIG51bWJlciBvZiBzaXR0aW5nIGRheXMuIER1cmluZyB0aGlzIHNlc3Npb24sIHRoZSBIb3VzZSBvZiBDb21tb25zIHNhdCBmb3IgYSB0b3RhbCBvZiAyOTUgZGF5cy7CoCBQcmlvciB0byB0aGlzIHRoZSBsb25nZXN0IHNlc3Npb24gaW4gdGVybXMgb2Ygc2l0dGluZyBkYXlzIHdhcyB0aGUgMTk2Nlx1MjAxMzY3IHNlc3Npb24gaW4gd2hpY2ggdGhlIEhvdXNlIG9mIENvbW1vbnMgc2F0IGZvciBhIHRvdGFsIG9mIDI0NiBkYXlzLiJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDYtMjJUMTI6NTY6MzYuODUwOTk2KzAxOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgSG91c2Ugb2YgTG9yZHMgTGlicmFyeSBicmllZmluZyBwcm92aWRlcyBzdGF0aXN0aWNzIG9uIHNlc3Npb25zIHNpbmNlIDE5MDAgdGhhdCBoYXZlIGxhc3RlZCBmb3IgbW9yZSB0aGFuIDEyIG1vbnRocyBhbmQgbGlzdHMgdGhlIHllYXJzIGluIHdoaWNoIHRoZXJlIGhhcyBiZWVuIG5vIFF1ZWVuXHUyMDE5cy9LaW5nXHUyMDE5cyBTcGVlY2guIEl0IGFsc28gc2V0cyBvdXQgaG93IHRoZSBsZW5ndGggb2YgYSBzZXNzaW9uIGlzIGVzdGFibGlzaGVkLiJdLCAiaWRlbnRpZmllciIgOiB7Il92YWx1ZSIgOiAiTExOLTIwMTctMDAzMiJ9CiAgICAgICwgInB1Ymxpc2hlciIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgICwgInNlY3Rpb24iIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgXSwgInN1YlR5cGUiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMzQ2NzEzIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTG9yZHMgTGlicmFyeSBub3RlcyJ9CiAgICAgIH0KICAgICAgLCAidGl0bGUiIDogIlBhcmxpYW1lbnRhcnkgU2Vzc2lvbnM6IFllYXJzIFdpdGhvdXQgYSBRdWVlbidzIFNwZWVjaCIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU1MzIiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJDb25zdGl0dXRpb24ifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU3MDMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJQYXJsaWFtZW50In0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzczMDgyOCIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiVGhlIFNhbGlzYnVyeS1BZGRpc29uIENvbnZlbnRpb24gaXMgY29tbW9ubHkgdW5kZXJzdG9vZCB0byBtZWFuIHRoYXQgdGhlIEhvdXNlIG9mIExvcmRzIGdpdmVzIGEgc2Vjb25kIHJlYWRpbmcgdG8gZ292ZXJubWVudCBiaWxscyB3aGljaCBzZWVrIHRvIGltcGxlbWVudCBtYW5pZmVzdG8gY29tbWl0bWVudHMsIGFuZCB0aGF0IHRoZSBIb3VzZSBkb2VzIG5vdCB0YWJsZSB3cmVja2luZyBhbWVuZG1lbnRzIHdoaWNoIG1pZ2h0IG90aGVyd2lzZSBhbHRlciB0aGUgYmlsbFx1MjAxOXMgaW50ZW50LiBJbiByZWNlbnQgdGltZXMsIGl0IGlzIG9mdGVuIHJlZmVycmVkIHRvIHNpbXBseSBhcyB0aGUgU2FsaXNidXJ5IENvbnZlbnRpb24uXG4gXG5JbiB0aGUgMjAxNyBnZW5lcmFsIGVsZWN0aW9uLCB0aGUgQ29uc2VydmF0aXZlIFBhcnR5IHdvbiB0aGUgbGFyZ2VzdCBudW1iZXIgb2Ygc2VhdHMsIGJ1dCBkaWQgbm90IHNlY3VyZSBhbiBvdmVyYWxsIG1ham9yaXR5IGluIHRoZSBIb3VzZSBvZiBDb21tb25zLiBUaGlzIGhhcyBnaXZlbiByaXNlIHRvIHF1ZXN0aW9ucyBhYm91dCB3aGV0aGVyIG9yIGhvdyB0aGUgU2FsaXNidXJ5IENvbnZlbnRpb24gd291bGQgYXBwbHkgaW4gdGhlIGNhc2Ugb2YgYSBtaW5vcml0eSBnb3Zlcm5tZW50IHRoYXQgaGFzIGZhaWxlZCB0byBzZWN1cmUgYW4gZWxlY3RvcmFsIG1hbmRhdGUgZm9yIGl0cyBtYW5pZmVzdG8uIERpZmZlcmluZyB2aWV3cyBoYXZlIGJlZW4gZXhwcmVzc2VkIGFtb25nc3QgcG9saXRpY2lhbnMgYW5kIGFjYWRlbWljcyBvbiB0aGlzIHBvaW50LiBNYXJrIEVsbGlvdHQsIFByb2Zlc3NvciBvZiBQdWJsaWMgTGF3IGF0IHRoZSBVbml2ZXJzaXR5IG9mIENhbWJyaWRnZSwgaGFzIHN1Z2dlc3RlZCB0aGF0IFx1MjAxY3RoZSBnb3Zlcm5pbmcgY3JpdGVyaW9uIGlzIHVsdGltYXRlbHkgd2hhdCBtZW1iZXJzIG9mIHRoZSByZWxldmFudCBwb2xpdGljYWwgY29tbXVuaXR5IHRoaW5rXHUyMDFkLiBMb3JkIFRob21hcyBvZiBHcmVzZm9yZCwgdGhlIExpYmVyYWwgRGVtb2NyYXRzXHUyMDE5IFNoYWRvdyBBdHRvcm5leSBHZW5lcmFsLCBoYXMgYWxyZWFkeSBpbmRpY2F0ZWQgaGlzIHZpZXcgdGhhdCB0aGUgU2FsaXNidXJ5IENvbnZlbnRpb24gZG9lcyBub3QgYXBwbHkgdG8gYmlsbHMgcHV0IGZvcndhcmQgYnkgYSBtaW5vcml0eSBnb3Zlcm5tZW50IG9yIHVuZGVyIGEgY29uZmlkZW5jZSBhbmQgc3VwcGx5IGFycmFuZ2VtZW50LlxuIFxuU2ltaWxhciBxdWVzdGlvbnMgYWJvdXQgdGhlIGFwcGxpY2FiaWxpdHkgb2YgdGhlIFNhbGlzYnVyeSBDb252ZW50aW9uIGFyb3NlIGFmdGVyIHRoZSAyMDEwIGdlbmVyYWwgZWxlY3Rpb24gd2hpY2ggYWxzbyBwcm9kdWNlZCBhIGh1bmcgcGFybGlhbWVudC4gV2hlbiB0aGUgQ29uc2VydmF0aXZlcyBhbmQgTGliZXJhbCBEZW1vY3JhdHMgZm9ybWVkIGEgY29hbGl0aW9uIGdvdmVybm1lbnQsIHRoZXJlIHdlcmUgZGViYXRlcyBhYm91dCB3aGV0aGVyIHRoZSBTYWxpc2J1cnkgQ29udmVudGlvbiBhcHBsaWVkLCBzaW5jZSB0aGUgdHdvIHBhcnRpZXMgaGFkIGNhbXBhaWduZWQgb24gZGlmZmVyZW50IG1hbmlmZXN0b3MsIGFuZCB0aGUgY29hbGl0aW9uIGFncmVlbWVudCBpbiB3aGljaCB0aGV5IHNldCBvdXQgdGhlaXIgcHJvZ3JhbW1lIGZvciBnb3Zlcm5tZW50IHdhcyBub3QgZHJhd24gdXAgdW50aWwgYWZ0ZXIgdGhlIGVsZWN0aW9uLiBXaGlsZSB0aGUgR292ZXJubWVudCBpbml0aWFsbHkgYXNzZXJ0ZWQgdGhhdCB0aGUgQ29udmVudGlvbiBzdGlsbCBoZWxkLCBpbiAyMDExIHRoZSBNaW5pc3RlciBmb3IgUG9saXRpY2FsIGFuZCBDb25zdGl0dXRpb25hbCBSZWZvcm0gYWNrbm93bGVkZ2VkIHRoYXQgXHUyMDFjd2l0aCB0aGUgYWR2ZW50IG9mIGEgY29hbGl0aW9uIGdvdmVybm1lbnQgW1x1MjAyNl0gdGhlIFNhbGlzYnVyeS1BZGRpc29uIENvbnZlbnRpb24gZG9lcyBub3Qgb3BlcmF0ZSBpbiB0aGUgc2FtZSB3YXksIGlmIGF0IGFsbFx1MjAxZC4gRHVyaW5nIHRoZSBwZXJpb2Qgb2YgdGhlIENvYWxpdGlvbiBHb3Zlcm5tZW50LCB0aGVyZSB3ZXJlIGF0dGVtcHRzIG9uIHRocmVlIG9jY2FzaW9ucyB0byBibG9jayBhIGdvdmVybm1lbnQgYmlsbCBhdCBzZWNvbmQgcmVhZGluZyBpbiB0aGUgSG91c2Ugb2YgTG9yZHMsIGFsbCBvZiB3aGljaCBmYWlsZWQuIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wNi0yMFQxNjo0MjoxOC43Njk1MzY3KzAxOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgSG91c2Ugb2YgTG9yZHMgTGlicmFyeSBicmllZmluZyBkZXNjcmliZXMgdGhlIGJhY2tncm91bmQgdG8gdGhlIFNhbGlzYnVyeSBDb252ZW50aW9uIGFuZCBjb25zaWRlcnMgaG93IGl0IGFwcGxpZXMgd2hlbiBhIGh1bmcgcGFybGlhbWVudCBwcm9kdWNlcyBhIG1pbm9yaXR5IG9yIGNvYWxpdGlvbiBnb3Zlcm5tZW50LiJdLCAiaWRlbnRpZmllciIgOiB7Il92YWx1ZSIgOiAiTExOLTIwMTctMDAzMCJ9CiAgICAgICwgInB1Ymxpc2hlciIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgICwgInNlY3Rpb24iIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgXSwgInN1YlR5cGUiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMzQ2NzEzIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTG9yZHMgTGlicmFyeSBub3RlcyJ9CiAgICAgIH0KICAgICAgLCAidGl0bGUiIDogIlNhbGlzYnVyeSBDb252ZW50aW9uIGluIGEgSHVuZyBQYXJsaWFtZW50IiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTUzMiIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkNvbnN0aXR1dGlvbiJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTYyOCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NzAzIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiUGFybGlhbWVudCJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTcwNSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlBhcmxpYW1lbnRhcnkgcHJvY2VkdXJlIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzczMDgyNyIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiUG9vciBhaXIgcXVhbGl0eSBpcyBlc3RpbWF0ZWQgdG8gY2F1c2UgYXBwcm94aW1hdGVseSA0MCwwMDAgcHJlbWF0dXJlIGRlYXRocyBhIHllYXIgaW4gdGhlIFVLLiBUaGUgVUsgaXMgYm91bmQgYnkgRVUgbGF3cyB0aGF0IHJlZ3VsYXRlIGFpciBwb2xsdXRpb24sIGluIHBhcnRpY3VsYXIgdGhlIDIwMDggYW1iaWVudCBhaXIgcXVhbGl0eSBkaXJlY3RpdmUgMjAwOC81MC9FQy4gSW4gcmVjZW50IHllYXJzIGdyZWF0ZXIgYXR0ZW50aW9uIGhhcyBiZWVuIGRyYXduIHRvIHBvbGx1dGlvbiBsZXZlbHMgaW4gdXJiYW4gYXJlYXMsIHBhcnRpY3VsYXJseSBuaXRyb2dlbiBkaW94aWRlIChOTzIpLCB0aGUgbW9zdCBjb21tb24gc291cmNlIG9mIHdoaWNoIGFyZSBkaWVzZWwgZW5naW5lIHJvYWQgdmVoaWNsZXMuIEEgbnVtYmVyIG9mIGxlZ2FsIGNhc2VzIGhhdmUgYmVlbiBicm91Z2h0IGFnYWluc3QgdGhlIGdvdmVybm1lbnQsIGNoYWxsZW5naW5nIHRoZWlyIHByb3Bvc2VkIHBsYW5zIHRvIHJlZHVjZSBlbWlzc2lvbnMgYW5kIHRoZSBzcGVlZCBhdCB3aGljaCB0aGUgcGxhbnMgd2lsbCBiZSBpbXBsZW1lbnRlZC4gVGhpcyBicmllZmluZyBzdW1tYXJpc2VzIHRoZSBwcm92aXNpb25zIGluIHRoZSBcdTIwMThDbGVhbiBBaXIgWm9uZXMgRnJhbWV3b3JrXHUyMDE5LCBwdWJsaXNoZWQgb24gNSBNYXkgMjAxNywgYXQgdGhlIGluc3RydWN0aW9uIG9mIHRoZSBIaWdoIENvdXJ0LiBUaGUgRnJhbWV3b3JrIHByb3ZpZGVzIGd1aWRhbmNlIGZvciBsb2NhbCBhdXRob3JpdGllcyBpbiBFbmdsYW5kIHdoZW4gZXN0YWJsaXNoaW5nIGJvdGggY2hhcmdpbmcgYW5kIG5vbi1jaGFyZ2luZyB6b25lcywgYW5kIHNldHMgb3V0IHRoZSBwZXJtaXR0ZWQgdmVoaWNsZSBlbWlzc2lvbnMgc3RhbmRhcmRzLiBUaGUgYnJpZWZpbmcgYWxzbyBzdW1tYXJpc2VzIHRoZSByZWFjdGlvbiB0byB0aGUgcHJvcG9zYWxzLCBhbmQgdGhlIGdlbmVyYWwgZWxlY3Rpb24gbWFuaWZlc3RvIGNvbW1pdG1lbnRzIG1hZGUgYnkgdGhlIG1haW4gcG9saXRpY2FsIHBhcnRpZXMgb24gdGhlIHN1YmplY3Qgb2YgYWlyIHBvbGx1dGlvbi4ifQogICAgICAsICJkYXRlIiA6IHsiX3ZhbHVlIiA6ICIyMDE3LTA2LTIwVDE0OjQ4OjM2LjIyMTIwMiswMTowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIEhvdXNlIG9mIExvcmRzIExpYnJhcnkgYnJpZWZpbmcgcHJvdmlkZXMgYSBzdW1tYXJ5IG9mIHJlY2VudCBkZXZlbG9wbWVudHMgb24gdGhlIHN1YmplY3Qgb2YgYWlyIHBvbGx1dGlvbiBpbiBFbmdsYW5kLCBpbmNsdWRpbmcgdGhlIEdvdmVybm1lbnRcdTIwMTlzIHBsYW4gcHVibGlzaGVkIG9uIDUgTWF5IDIwMTcsIG9uIHRoZSBpbnN0cnVjdGlvbiBvZiB0aGUgSGlnaCBDb3VydC4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIkxMTi0yMDE3LTAwMjkifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzM0NjcxMyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkxvcmRzIExpYnJhcnkgbm90ZXMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJBaXIgUG9sbHV0aW9uIGluIEVuZ2xhbmQ6IFJlY2VudCBEZXZlbG9wbWVudHMiLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NzE0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiUG9sbHV0aW9uIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzczMDgyNiIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiSXQgaGFzIGJlZW4gYW5ub3VuY2VkIHRoYXQgdGhlIFN0YXRlIE9wZW5pbmcgd2hpY2ggd2lsbCB0YWtlIHBsYWNlIG9uIDIxIEp1bmUgMjAxNyB3aWxsIGJlIGNvbmR1Y3RlZCBvbiB0aGUgZm9sbG93aW5nIGJhc2lzOlxuIFxuIE5vIGNhcnJpYWdlcyB3aWxsIGJlIHVzZWQsIHRoZSBRdWVlbiBhbmQgdGhlIFJlZ2FsaWEgb2YgU3RhdGUgd2lsbCB0cmF2ZWwgYnkgY2FyLiBUaGUgUXVlZW4gd2lsbCB3ZWFyIGRheSBkcmVzcyBhbmQgYSBoYXQsIHdoaWxzdCBPZmZpY2VycyBvZiBTdGF0ZSB3aWxsIGNhcnJ5IHRoZSBJbXBlcmlhbCBTdGF0ZSBDcm93biwgU3dvcmQgb2YgU3RhdGUgYW5kIENhcCBvZiBNYWludGVuYW5jZS4gVGhlIFJveWFsIFByb2Nlc3Npb24gd2lsbCB0YWtlIHBsYWNlIG9uIGEgcmVkdWNlZCBzY2FsZS4gXG4gXG5UaGlzIGJyaWVmaW5nIGdpdmVzIGFuIG91dGxpbmUgb2YgdGhlIHRyYWRpdGlvbmFsIFN0YXRlIE9wZW5pbmcgQ2VyZW1vbnksIGZvbGxvd2VkIGJ5IGEgZGVzY3JpcHRpb24gb2YgdGhlIFN0YXRlIE9wZW5pbmdzIG9mIDE5MzkgYW5kIE1hcmNoIDE5NzQsIHNldHRpbmcgb3V0IGhvdyB0aGUgY2VyZW1vbmllcyBpbiB0aGVzZSB5ZWFycyBkaWZmZXJlZCBmcm9tIHRoZSBub3JtLlxuIFxuwqAifQogICAgICAsICJkYXRlIiA6IHsiX3ZhbHVlIiA6ICIyMDE3LTA2LTIwVDEyOjIzOjAyLjYzOTQ4NTcrMDE6MDAiLCAiX2RhdGF0eXBlIiA6ICJkYXRlVGltZSJ9CiAgICAgICwgImRlc2NyaXB0aW9uIiA6IFsiVGhpcyBIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5IGJyaWVmaW5nIGdpdmVzIGEgYnJpZWYgb3ZlcnZpZXcgb2YgdGhlIGNlcmVtb255IGZvciB0aGUgMjAxNyBTdGF0ZSBPcGVuaW5nIG9mIFBhcmxpYW1lbnQgYW5kIGhvdyBpdCBkaWZmZXJzIGZyb20gcHJldmlvdXMgeWVhcnMuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMTE4tMjAxNy0wMDI4In0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8zNDY3MTMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBMaWJyYXJ5IG5vdGVzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiU3RhdGUgT3BlbmluZ3Mgb2YgUGFybGlhbWVudDogUmVkdWNlZCBDZXJlbW9uaWFsIiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTcwMyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlBhcmxpYW1lbnQifQogICAgICB9CiAgICAgIF0sICJ0eXBlIiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3NjaGVtYS9wYXJsI1Jlc2VhcmNoQnJpZWZpbmcifQogICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9yZXNvdXJjZXMvNzMwODI0IiwgImFic3RyYWN0IiA6IHsiX3ZhbHVlIiA6ICJUaGUgQ29uc2VydmF0aXZlIFBhcnR5IHdvbiB0aGUgbGFyZ2VzdCBudW1iZXIgb2Ygc2VhdHMgYXQgdGhlIDIwMTcgZ2VuZXJhbCBlbGVjdGlvbiwgYnV0IGRpZCBub3Qgc2VjdXJlIGFuIG92ZXJhbGwgbWFqb3JpdHkgaW4gdGhlIEhvdXNlIG9mIENvbW1vbnMuIEF0IHRoZSB0aW1lIG9mIHdyaXRpbmcsIHRoZSBDb25zZXJ2YXRpdmUgUGFydHkgYW5kIHRoZSBEZW1vY3JhdGljIFVuaW9uaXN0IFBhcnR5IHdlcmUgaW4gbmVnb3RpYXRpb25zIHJlZ2FyZGluZyBhIHBvdGVudGlhbCBjb2FsaXRpb24gb3IgY29uZmlkZW5jZSBhbmQgc3VwcGx5IGFycmFuZ2VtZW50LiBBbnkgYWdyZWVtZW50IGJldHdlZW4gdGhlIHBhcnRpZXMgd2lsbCBoYXZlIGltcGxpY2F0aW9ucyBmb3Igd2hpY2ggcHJvcG9zYWxzIHRoZSBHb3Zlcm5tZW50IHdpbGwgYnJpbmcgZm9yd2FyZC4gSG93ZXZlciwgaW4gbGlldSBvZiBhbnkgYWdyZWVtZW50LCB0aGUgQ29uc2VydmF0aXZlcyBtYXkgc2VlayB0byBnb3Zlcm4gd2l0aG91dCBhIG1ham9yaXR5LCB3aGljaCBhZ2FpbiB3aWxsIGFmZmVjdCB0aGUgY29udGVudHMgb2YgdGhlIFF1ZWVuXHUyMDE5cyBTcGVlY2guIFRoZSBMYWJvdXIgUGFydHkgaGFzIHNhaWQgaXQgd2lsbCB0YWJsZSBhbiBhbWVuZG1lbnQsIHNldHRpbmcgb3V0IGl0cyBvd24gcHJvZ3JhbW1lIGZvciBnb3Zlcm5tZW50LlxuIFxuSW4gdGhpcyBjb250ZXh0LCB0aGlzIGJyaWVmaW5nIHNldHMgb3V0IGNvbW1pdG1lbnRzIGluIHRoZSBDb25zZXJ2YXRpdmUgUGFydHkgbWFuaWZlc3RvIGZvciBlYWNoIHBvbGljeSBhcmVhIHRvIGJlIGRlYmF0ZWQsIHRvZ2V0aGVyIHdpdGggcmVsZXZhbnQgcG9saWN5IGFuZCBsZWdpc2xhdGl2ZSBwcm9wb3NhbHMgbWFkZSBieSB0aGUgcHJldmlvdXMgQ29uc2VydmF0aXZlIEdvdmVybm1lbnQuIEl0IGRvZXMgbm90IGNvbnN0aXR1dGUgb2ZmaWNpYWwgaW5mb3JtYXRpb24gYWJvdXQgdGhlIEdvdmVybm1lbnRcdTIwMTlzIGludGVudGlvbnMgb3IgcHJvdmlkZSBhIGNvbXBsZXRlIGxpc3Qgb2YgYmlsbHMgdG8gYmUgYW5ub3VuY2VkLiBUaGlzIGJyaWVmaW5nIGFsc28gaGlnaGxpZ2h0cyBzZWN0aW9ucyBvZiB0aGUgRGVtb2NyYXRpYyBVbmlvbmlzdCBQYXJ0eSBtYW5pZmVzdG8sIGFuZCBjb21tZW50cyBvciBtYXRlcmlhbCBmcm9tIG9wcG9zaXRpb24gcGFydGllcywgd2hpY2ggbWF5IGJlIGhlbHBmdWwgaW4gZXN0YWJsaXNoaW5nIHdoaWNoIENvbnNlcnZhdGl2ZSBwcm9wb3NhbHMgd2lsbCBiZSBwdXQgZm9yd2FyZCBpbiB0aGUgUXVlZW5cdTIwMTlzIFNwZWVjaC4gQWdhaW4sIHRoaXMgZG9lcyBub3QgY29uc3RpdHV0ZSBvZmZpY2lhbCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgZm9ydGhjb21pbmcgbGVnaXNsYXRpdmUgcHJvZ3JhbW1lLCByYXRoZXIgaXQgaXMgcHJvdmlkZWQgd2l0aCB0aGUgYWltIG9mIGluZGljYXRpbmcgdGhlIHBvbGljeSBpbnRlbnRpb25zIG9mIHBhcnRpZXMgcHJpb3IgdG8gdGhlIGdlbmVyYWwgZWxlY3Rpb24uXG4gXG5UaGUgR292ZXJubWVudCBhbm5vdW5jZWQgb24gMTcgSnVuZSAyMDE3IHRoYXQgdGhlIGZvcnRoY29taW5nIHBhcmxpYW1lbnRhcnkgc2Vzc2lvbiB3b3VsZCBsYXN0IHR3byB5ZWFycyB0byBcImdpdmUgTVBzIGVub3VnaCB0aW1lIHRvIGZ1bGx5IGNvbnNpZGVyIHRoZSBsYXdzIHJlcXVpcmVkIHRvIG1ha2UgQnJpdGFpbiByZWFkeSBmb3IgQnJleGl0XCIuIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wNi0xOVQxNDo1MToxOS42OTg4MjYyKzAxOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgTG9yZHMgTGlicmFyeSBicmllZmluZyBoYXMgYmVlbiBwcmVwYXJlZCBpbiBhZHZhbmNlIG9mIHRoZSBmb3J0aGNvbWluZyBRdWVlblx1MjAxOXMgU3BlZWNoLCB3aGljaCBpcyBkdWUgdG8gdGFrZSBwbGFjZSBvbiAyMSBKdW5lIDIwMTcuIFRoZSBIb3VzZSBvZiBMb3JkcyBpcyBkdWUgdG8gZGViYXRlIHRoZSBRdWVlblx1MjAxOXMgU3BlZWNoIG92ZXIgZml2ZSBkYXlzIGJldHdlZW4gMjIgYW5kIDI5IEp1bmUgMjAxNy4gVGhpcyBicmllZmluZyBpcyBvbmUgb2YgZml2ZSBwcmVwYXJlZCBieSB0aGUgSG91c2Ugb2YgTG9yZHMgTGlicmFyeSB0byBjb3ZlciB0aGUgdGhlbWVzIG9mIGVhY2ggZGF5IG9mIGRlYmF0ZS4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIkxMTi0yMDE3LTAwMjcifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzM0NjcxMyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkxvcmRzIExpYnJhcnkgbm90ZXMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJRdWVlbidzIFNwZWVjaCAyMDE3IERheSA1OiBFZHVjYXRpb24sIEhlYWx0aCwgV2VsZmFyZSwgUGVuc2lvbnMgYW5kIEN1bHR1cmUiLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTA0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQmVuZWZpdHMgcG9saWN5In0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTA3IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQnJvYWRjYXN0aW5nIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTE4IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQ2hpbGRyZW4gYW5kIGZhbWlsaWVzIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTI5IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQ29tbXVuaXR5IGNhcmUifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2MTQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJGdXJ0aGVyIGVkdWNhdGlvbiJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTYyMCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhlYWx0aCBmaW5hbmNlIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjIxIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSGVhbHRoIHNlcnZpY2VzIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjI1IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSGlnaGVyIGVkdWNhdGlvbiJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTY3MSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIk1lZGlhIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1Njc2IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTWVudGFsIGhlYWx0aCJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTcwOCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlBlbnNpb25zIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NzQwIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiU2Nob29scyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTc4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIldvcmtpbmcgYWdlIGJlbmVmaXRzIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzczMDgyMyIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiVGhlIENvbnNlcnZhdGl2ZSBQYXJ0eSB3b24gdGhlIGxhcmdlc3QgbnVtYmVyIG9mIHNlYXRzIGF0IHRoZSAyMDE3IGdlbmVyYWwgZWxlY3Rpb24sIGJ1dCBkaWQgbm90IHNlY3VyZSBhbiBvdmVyYWxsIG1ham9yaXR5IGluIHRoZSBIb3VzZSBvZiBDb21tb25zLiBBdCB0aGUgdGltZSBvZiB3cml0aW5nLCB0aGUgQ29uc2VydmF0aXZlIFBhcnR5IGFuZCB0aGUgRGVtb2NyYXRpYyBVbmlvbmlzdCBQYXJ0eSB3ZXJlIGluIG5lZ290aWF0aW9ucyByZWdhcmRpbmcgYSBwb3RlbnRpYWwgY29hbGl0aW9uIG9yIGNvbmZpZGVuY2UgYW5kIHN1cHBseSBhcnJhbmdlbWVudC4gQW55IGFncmVlbWVudCBiZXR3ZWVuIHRoZSBwYXJ0aWVzIHdpbGwgaGF2ZSBpbXBsaWNhdGlvbnMgZm9yIHdoaWNoIHByb3Bvc2FscyB0aGUgR292ZXJubWVudCB3aWxsIGJyaW5nIGZvcndhcmQuIEhvd2V2ZXIsIGluIGxpZXUgb2YgYW55IGFncmVlbWVudCwgdGhlIENvbnNlcnZhdGl2ZXMgbWF5IHNlZWsgdG8gZ292ZXJuIHdpdGhvdXQgYSBtYWpvcml0eSwgd2hpY2ggYWdhaW4gd2lsbCBhZmZlY3QgdGhlIGNvbnRlbnRzIG9mIHRoZSBRdWVlblx1MjAxOXMgU3BlZWNoLiBUaGUgTGFib3VyIFBhcnR5IGhhcyBzYWlkIGl0IHdpbGwgdGFibGUgYW4gYW1lbmRtZW50LCBzZXR0aW5nIG91dCBpdHMgb3duIHByb2dyYW1tZSBmb3IgZ292ZXJubWVudC5cbiBcbkluIHRoaXMgY29udGV4dCwgdGhpcyBicmllZmluZyBzZXRzIG91dCBjb21taXRtZW50cyBpbiB0aGUgQ29uc2VydmF0aXZlIFBhcnR5IG1hbmlmZXN0byBmb3IgZWFjaCBwb2xpY3kgYXJlYSB0byBiZSBkZWJhdGVkLCB0b2dldGhlciB3aXRoIHJlbGV2YW50IHBvbGljeSBhbmQgbGVnaXNsYXRpdmUgcHJvcG9zYWxzIG1hZGUgYnkgdGhlIHByZXZpb3VzIENvbnNlcnZhdGl2ZSBHb3Zlcm5tZW50LiBJdCBkb2VzIG5vdCBjb25zdGl0dXRlIG9mZmljaWFsIGluZm9ybWF0aW9uIGFib3V0IHRoZSBHb3Zlcm5tZW50XHUyMDE5cyBpbnRlbnRpb25zIG9yIHByb3ZpZGUgYSBjb21wbGV0ZSBsaXN0IG9mIGJpbGxzIHRvIGJlIGFubm91bmNlZC4gVGhpcyBicmllZmluZyBhbHNvIGhpZ2hsaWdodHMgc2VjdGlvbnMgb2YgdGhlIERlbW9jcmF0aWMgVW5pb25pc3QgUGFydHkgbWFuaWZlc3RvLCBhbmQgY29tbWVudHMgb3IgbWF0ZXJpYWwgZnJvbSBvcHBvc2l0aW9uIHBhcnRpZXMsIHdoaWNoIG1heSBiZSBoZWxwZnVsIGluIGVzdGFibGlzaGluZyB3aGljaCBDb25zZXJ2YXRpdmUgcHJvcG9zYWxzIHdpbGwgYmUgcHV0IGZvcndhcmQgaW4gdGhlIFF1ZWVuXHUyMDE5cyBTcGVlY2guIEFnYWluLCB0aGlzIGRvZXMgbm90IGNvbnN0aXR1dGUgb2ZmaWNpYWwgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGZvcnRoY29taW5nIGxlZ2lzbGF0aXZlIHByb2dyYW1tZSwgcmF0aGVyIGl0IGlzIHByb3ZpZGVkIHdpdGggdGhlIGFpbSBvZiBpbmRpY2F0aW5nIHRoZSBwb2xpY3kgaW50ZW50aW9ucyBvZiBwYXJ0aWVzIHByaW9yIHRvIHRoZSBnZW5lcmFsIGVsZWN0aW9uLlxuIFxuVGhlIEdvdmVybm1lbnQgYW5ub3VuY2VkIG9uIDE3IEp1bmUgMjAxNyB0aGF0IHRoZSBmb3J0aGNvbWluZyBwYXJsaWFtZW50YXJ5IHNlc3Npb24gd291bGQgbGFzdCB0d28geWVhcnMgdG8gXCJnaXZlIE1QcyBlbm91Z2ggdGltZSB0byBmdWxseSBjb25zaWRlciB0aGUgbGF3cyByZXF1aXJlZCB0byBtYWtlIEJyaXRhaW4gcmVhZHkgZm9yIEJyZXhpdFwiLiJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDYtMTlUMTQ6NTA6NDEuOTIyODM5MyswMTowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIExvcmRzIExpYnJhcnkgYnJpZWZpbmcgaGFzIGJlZW4gcHJlcGFyZWQgaW4gYWR2YW5jZSBvZiB0aGUgZm9ydGhjb21pbmcgUXVlZW5cdTIwMTlzIFNwZWVjaCwgd2hpY2ggaXMgZHVlIHRvIHRha2UgcGxhY2Ugb24gMjEgSnVuZSAyMDE3LiBUaGUgSG91c2Ugb2YgTG9yZHMgaXMgZHVlIHRvIGRlYmF0ZSB0aGUgUXVlZW5cdTIwMTlzIFNwZWVjaCBvdmVyIGZpdmUgZGF5cyBiZXR3ZWVuIDIyIGFuZCAyOSBKdW5lIDIwMTcuIFRoaXMgYnJpZWZpbmcgaXMgb25lIG9mIGZpdmUgcHJlcGFyZWQgYnkgdGhlIEhvdXNlIG9mIExvcmRzIExpYnJhcnkgdG8gY292ZXIgdGhlIHRoZW1lcyBvZiBlYWNoIGRheSBvZiBkZWJhdGUuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMTE4tMjAxNy0wMDI2In0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8zNDY3MTMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBMaWJyYXJ5IG5vdGVzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiUXVlZW4ncyBTcGVlY2ggMjAxNyBEYXkgNDogRXhpdGluZyB0aGUgRXVyb3BlYW4gVW5pb24iLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTMyIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQ29uc3RpdHV0aW9uIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiRVUgYnVkZ2V0In0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTkxIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiRVUgbGF3IGFuZCB0cmVhdGllcyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTU5MyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkV1cm9wZSJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTcwNSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlBhcmxpYW1lbnRhcnkgcHJvY2VkdXJlIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzczMDgyMiIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiVGhlIENvbnNlcnZhdGl2ZSBQYXJ0eSB3b24gdGhlIGxhcmdlc3QgbnVtYmVyIG9mIHNlYXRzIGF0IHRoZSAyMDE3IGdlbmVyYWwgZWxlY3Rpb24sIGJ1dCBkaWQgbm90IHNlY3VyZSBhbiBvdmVyYWxsIG1ham9yaXR5IGluIHRoZSBIb3VzZSBvZiBDb21tb25zLiBBdCB0aGUgdGltZSBvZiB3cml0aW5nLCB0aGUgQ29uc2VydmF0aXZlIFBhcnR5IGFuZCB0aGUgRGVtb2NyYXRpYyBVbmlvbmlzdCBQYXJ0eSB3ZXJlIGluIG5lZ290aWF0aW9ucyByZWdhcmRpbmcgYSBwb3RlbnRpYWwgY29hbGl0aW9uIG9yIGNvbmZpZGVuY2UgYW5kIHN1cHBseSBhcnJhbmdlbWVudC4gQW55IGFncmVlbWVudCBiZXR3ZWVuIHRoZSBwYXJ0aWVzIHdpbGwgaGF2ZSBpbXBsaWNhdGlvbnMgZm9yIHdoaWNoIHByb3Bvc2FscyB0aGUgR292ZXJubWVudCB3aWxsIGJyaW5nIGZvcndhcmQuIEhvd2V2ZXIsIGluIGxpZXUgb2YgYW55IGFncmVlbWVudCwgdGhlIENvbnNlcnZhdGl2ZXMgbWF5IHNlZWsgdG8gZ292ZXJuIHdpdGhvdXQgYSBtYWpvcml0eSwgd2hpY2ggYWdhaW4gd2lsbCBhZmZlY3QgdGhlIGNvbnRlbnRzIG9mIHRoZSBRdWVlblx1MjAxOXMgU3BlZWNoLiBUaGUgTGFib3VyIFBhcnR5IGhhcyBzYWlkIGl0IHdpbGwgdGFibGUgYW4gYW1lbmRtZW50LCBzZXR0aW5nIG91dCBpdHMgb3duIHByb2dyYW1tZSBmb3IgZ292ZXJubWVudC5cbiBcbkluIHRoaXMgY29udGV4dCwgdGhpcyBicmllZmluZyBzZXRzIG91dCBjb21taXRtZW50cyBpbiB0aGUgQ29uc2VydmF0aXZlIFBhcnR5IG1hbmlmZXN0byBmb3IgZWFjaCBwb2xpY3kgYXJlYSB0byBiZSBkZWJhdGVkLCB0b2dldGhlciB3aXRoIHJlbGV2YW50IHBvbGljeSBhbmQgbGVnaXNsYXRpdmUgcHJvcG9zYWxzIG1hZGUgYnkgdGhlIHByZXZpb3VzIENvbnNlcnZhdGl2ZSBHb3Zlcm5tZW50LiBJdCBkb2VzIG5vdCBjb25zdGl0dXRlIG9mZmljaWFsIGluZm9ybWF0aW9uIGFib3V0IHRoZSBHb3Zlcm5tZW50XHUyMDE5cyBpbnRlbnRpb25zIG9yIHByb3ZpZGUgYSBjb21wbGV0ZSBsaXN0IG9mIGJpbGxzIHRvIGJlIGFubm91bmNlZC4gVGhpcyBicmllZmluZyBhbHNvIGhpZ2hsaWdodHMgc2VjdGlvbnMgb2YgdGhlIERlbW9jcmF0aWMgVW5pb25pc3QgUGFydHkgbWFuaWZlc3RvLCBhbmQgY29tbWVudHMgb3IgbWF0ZXJpYWwgZnJvbSBvcHBvc2l0aW9uIHBhcnRpZXMsIHdoaWNoIG1heSBiZSBoZWxwZnVsIGluIGVzdGFibGlzaGluZyB3aGljaCBDb25zZXJ2YXRpdmUgcHJvcG9zYWxzIHdpbGwgYmUgcHV0IGZvcndhcmQgaW4gdGhlIFF1ZWVuXHUyMDE5cyBTcGVlY2guIEFnYWluLCB0aGlzIGRvZXMgbm90IGNvbnN0aXR1dGUgb2ZmaWNpYWwgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGZvcnRoY29taW5nIGxlZ2lzbGF0aXZlIHByb2dyYW1tZSwgcmF0aGVyIGl0IGlzIHByb3ZpZGVkIHdpdGggdGhlIGFpbSBvZiBpbmRpY2F0aW5nIHRoZSBwb2xpY3kgaW50ZW50aW9ucyBvZiBwYXJ0aWVzIHByaW9yIHRvIHRoZSBnZW5lcmFsIGVsZWN0aW9uLlxuIFxuVGhlIEdvdmVybm1lbnQgYW5ub3VuY2VkIG9uIDE3IEp1bmUgMjAxNyB0aGF0IHRoZSBmb3J0aGNvbWluZyBwYXJsaWFtZW50YXJ5IHNlc3Npb24gd291bGQgbGFzdCB0d28geWVhcnMgdG8gXCJnaXZlIE1QcyBlbm91Z2ggdGltZSB0byBmdWxseSBjb25zaWRlciB0aGUgbGF3cyByZXF1aXJlZCB0byBtYWtlIEJyaXRhaW4gcmVhZHkgZm9yIEJyZXhpdFwiLiJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDYtMTlUMTQ6NTA6MTEuOTI0Mzc0KzAxOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgTG9yZHMgTGlicmFyeSBicmllZmluZyBoYXMgYmVlbiBwcmVwYXJlZCBpbiBhZHZhbmNlIG9mIHRoZSBmb3J0aGNvbWluZyBRdWVlblx1MjAxOXMgU3BlZWNoLCB3aGljaCBpcyBkdWUgdG8gdGFrZSBwbGFjZSBvbiAyMSBKdW5lIDIwMTcuIFRoZSBIb3VzZSBvZiBMb3JkcyBpcyBkdWUgdG8gZGViYXRlIHRoZSBRdWVlblx1MjAxOXMgU3BlZWNoIG92ZXIgZml2ZSBkYXlzIGJldHdlZW4gMjIgYW5kIDI5IEp1bmUgMjAxNy4gVGhpcyBicmllZmluZyBpcyBvbmUgb2YgZml2ZSBwcmVwYXJlZCBieSB0aGUgSG91c2Ugb2YgTG9yZHMgTGlicmFyeSB0byBjb3ZlciB0aGUgdGhlbWVzIG9mIGVhY2ggZGF5IG9mIGRlYmF0ZS4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIkxMTi0yMDE3LTAwMjUifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzM0NjcxMyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkxvcmRzIExpYnJhcnkgbm90ZXMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJRdWVlbidzIFNwZWVjaCAyMDE3IERheSAzOiBIb21lIEFmZmFpcnMsIENvbW11bml0aWVzIGFuZCBMb2NhbCBHb3Zlcm5tZW50LCBKdXN0aWNlLCBDb25zdGl0dXRpb25hbCBBZmZhaXJzIGFuZCBEZXZvbHZlZCBBZmZhaXJzIiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTUzMiIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkNvbnN0aXR1dGlvbiJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTUzNyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkNvdXJ0cyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTU0MSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkNyaW1pbmFsIGxhdyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTU1MiIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkRldm9sdXRpb24ifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2MjgiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTY2NiIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkxvY2FsIGdvdmVybm1lbnQifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2ODMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJOYXRpb25hbCBBc3NlbWJseSBmb3IgV2FsZXMifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2OTEiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJOb3J0aGVybiBJcmVsYW5kIEFzc2VtYmx5In0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NzEyIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiUG9saWNlIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NzIwIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiUHJpc29ucyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTcyMyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlB1YmxpYyBhZG1pbmlzdHJhdGlvbiJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTc0MyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlNjb3R0aXNoIFBhcmxpYW1lbnQifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU3NjciLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJUZXJyb3Jpc20ifQogICAgICB9CiAgICAgIF0sICJ0eXBlIiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3NjaGVtYS9wYXJsI1Jlc2VhcmNoQnJpZWZpbmcifQogICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9yZXNvdXJjZXMvNzMwODIxIiwgImFic3RyYWN0IiA6IHsiX3ZhbHVlIiA6ICJUaGUgQ29uc2VydmF0aXZlIFBhcnR5IHdvbiB0aGUgbGFyZ2VzdCBudW1iZXIgb2Ygc2VhdHMgYXQgdGhlIDIwMTcgZ2VuZXJhbCBlbGVjdGlvbiwgYnV0IGRpZCBub3Qgc2VjdXJlIGFuIG92ZXJhbGwgbWFqb3JpdHkgaW4gdGhlIEhvdXNlIG9mIENvbW1vbnMuIEF0IHRoZSB0aW1lIG9mIHdyaXRpbmcsIHRoZSBDb25zZXJ2YXRpdmUgUGFydHkgYW5kIHRoZSBEZW1vY3JhdGljIFVuaW9uaXN0IFBhcnR5IHdlcmUgaW4gbmVnb3RpYXRpb25zIHJlZ2FyZGluZyBhIHBvdGVudGlhbCBjb2FsaXRpb24gb3IgY29uZmlkZW5jZSBhbmQgc3VwcGx5IGFycmFuZ2VtZW50LiBBbnkgYWdyZWVtZW50IGJldHdlZW4gdGhlIHBhcnRpZXMgd2lsbCBoYXZlIGltcGxpY2F0aW9ucyBmb3Igd2hpY2ggcHJvcG9zYWxzIHRoZSBHb3Zlcm5tZW50IHdpbGwgYnJpbmcgZm9yd2FyZC4gSG93ZXZlciwgaW4gbGlldSBvZiBhbnkgYWdyZWVtZW50LCB0aGUgQ29uc2VydmF0aXZlcyBtYXkgc2VlayB0byBnb3Zlcm4gd2l0aG91dCBhIG1ham9yaXR5LCB3aGljaCBhZ2FpbiB3aWxsIGFmZmVjdCB0aGUgY29udGVudHMgb2YgdGhlIFF1ZWVuXHUyMDE5cyBTcGVlY2guIFRoZSBMYWJvdXIgUGFydHkgaGFzIHNhaWQgaXQgd2lsbCB0YWJsZSBhbiBhbWVuZG1lbnQsIHNldHRpbmcgb3V0IGl0cyBvd24gcHJvZ3JhbW1lIGZvciBnb3Zlcm5tZW50LlxuIFxuSW4gdGhpcyBjb250ZXh0LCB0aGlzIGJyaWVmaW5nIHNldHMgb3V0IGNvbW1pdG1lbnRzIGluIHRoZSBDb25zZXJ2YXRpdmUgUGFydHkgbWFuaWZlc3RvIGZvciBlYWNoIHBvbGljeSBhcmVhIHRvIGJlIGRlYmF0ZWQsIHRvZ2V0aGVyIHdpdGggcmVsZXZhbnQgcG9saWN5IGFuZCBsZWdpc2xhdGl2ZSBwcm9wb3NhbHMgbWFkZSBieSB0aGUgcHJldmlvdXMgQ29uc2VydmF0aXZlIEdvdmVybm1lbnQuIEl0IGRvZXMgbm90IGNvbnN0aXR1dGUgb2ZmaWNpYWwgaW5mb3JtYXRpb24gYWJvdXQgdGhlIEdvdmVybm1lbnRcdTIwMTlzIGludGVudGlvbnMgb3IgcHJvdmlkZSBhIGNvbXBsZXRlIGxpc3Qgb2YgYmlsbHMgdG8gYmUgYW5ub3VuY2VkLiBUaGlzIGJyaWVmaW5nIGFsc28gaGlnaGxpZ2h0cyBzZWN0aW9ucyBvZiB0aGUgRGVtb2NyYXRpYyBVbmlvbmlzdCBQYXJ0eSBtYW5pZmVzdG8sIGFuZCBjb21tZW50cyBvciBtYXRlcmlhbCBmcm9tIG9wcG9zaXRpb24gcGFydGllcywgd2hpY2ggbWF5IGJlIGhlbHBmdWwgaW4gZXN0YWJsaXNoaW5nIHdoaWNoIENvbnNlcnZhdGl2ZSBwcm9wb3NhbHMgd2lsbCBiZSBwdXQgZm9yd2FyZCBpbiB0aGUgUXVlZW5cdTIwMTlzIFNwZWVjaC4gQWdhaW4sIHRoaXMgZG9lcyBub3QgY29uc3RpdHV0ZSBvZmZpY2lhbCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgZm9ydGhjb21pbmcgbGVnaXNsYXRpdmUgcHJvZ3JhbW1lLCByYXRoZXIgaXQgaXMgcHJvdmlkZWQgd2l0aCB0aGUgYWltIG9mIGluZGljYXRpbmcgdGhlIHBvbGljeSBpbnRlbnRpb25zIG9mIHBhcnRpZXMgcHJpb3IgdG8gdGhlIGdlbmVyYWwgZWxlY3Rpb24uXG4gXG5UaGUgR292ZXJubWVudCBhbm5vdW5jZWQgb24gMTcgSnVuZSAyMDE3IHRoYXQgdGhlIGZvcnRoY29taW5nIHBhcmxpYW1lbnRhcnkgc2Vzc2lvbiB3b3VsZCBsYXN0IHR3byB5ZWFycyB0byBcImdpdmUgTVBzIGVub3VnaCB0aW1lIHRvIGZ1bGx5IGNvbnNpZGVyIHRoZSBsYXdzIHJlcXVpcmVkIHRvIG1ha2UgQnJpdGFpbiByZWFkeSBmb3IgQnJleGl0XCIuIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wNi0xOVQxNDo0OToyNi4zNDQwMjkyKzAxOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgTG9yZHMgTGlicmFyeSBicmllZmluZyBoYXMgYmVlbiBwcmVwYXJlZCBpbiBhZHZhbmNlIG9mIHRoZSBmb3J0aGNvbWluZyBRdWVlblx1MjAxOXMgU3BlZWNoLCB3aGljaCBpcyBkdWUgdG8gdGFrZSBwbGFjZSBvbiAyMSBKdW5lIDIwMTcuIFRoZSBIb3VzZSBvZiBMb3JkcyBpcyBkdWUgdG8gZGViYXRlIHRoZSBRdWVlblx1MjAxOXMgU3BlZWNoIG92ZXIgZml2ZSBkYXlzIGJldHdlZW4gMjIgYW5kIDI5IEp1bmUgMjAxNy4gVGhpcyBicmllZmluZyBpcyBvbmUgb2YgZml2ZSBwcmVwYXJlZCBieSB0aGUgSG91c2Ugb2YgTG9yZHMgTGlicmFyeSB0byBjb3ZlciB0aGUgdGhlbWVzIG9mIGVhY2ggZGF5IG9mIGRlYmF0ZS4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIkxMTi0yMDE3LTAwMjQifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzM0NjcxMyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkxvcmRzIExpYnJhcnkgbm90ZXMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJRdWVlbidzIFNwZWVjaCAyMDE3IERheSAyOiBCdXNpbmVzcywgRWNvbm9taWMgQWZmYWlycywgVHJhbnNwb3J0LCBFbmVyZ3ksIEVudmlyb25tZW50IGFuZCBBZ3JpY3VsdHVyZSIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU0ODEiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJBZ3JpY3VsdHVyZSJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTUwMSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkF2aWF0aW9uIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTA5IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQnVzZXMifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU1MTAiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJCdXNpbmVzcyBzdXBwb3J0In0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTIzIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQ2xpbWF0ZSBjaGFuZ2UifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU1MzAiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJDb21wYW5pZXMifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU1MzYiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJDb3VudHJ5c2lkZSJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTU2MCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkVjb25vbWljIHBvbGljeSJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTU2MSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkVjb25vbWljIHNpdHVhdGlvbiJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTU3OCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkVuZXJneSJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTU4MSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkVudmlyb25tZW50YWwgcHJvdGVjdGlvbiJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTcyOCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlJhaWx3YXlzIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NzM4IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiUm9hZHMifQogICAgICB9CiAgICAgIF0sICJ0eXBlIiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3NjaGVtYS9wYXJsI1Jlc2VhcmNoQnJpZWZpbmcifQogICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9yZXNvdXJjZXMvNzMwODIwIiwgImFic3RyYWN0IiA6IHsiX3ZhbHVlIiA6ICJUaGUgQ29uc2VydmF0aXZlIFBhcnR5IHdvbiB0aGUgbGFyZ2VzdCBudW1iZXIgb2Ygc2VhdHMgYXQgdGhlIDIwMTcgZ2VuZXJhbCBlbGVjdGlvbiwgYnV0IGRpZCBub3Qgc2VjdXJlIGFuIG92ZXJhbGwgbWFqb3JpdHkgaW4gdGhlIEhvdXNlIG9mIENvbW1vbnMuIEF0IHRoZSB0aW1lIG9mIHdyaXRpbmcsIHRoZSBDb25zZXJ2YXRpdmUgUGFydHkgYW5kIHRoZSBEZW1vY3JhdGljIFVuaW9uaXN0IFBhcnR5IHdlcmUgaW4gbmVnb3RpYXRpb25zIHJlZ2FyZGluZyBhIHBvdGVudGlhbCBjb2FsaXRpb24gb3IgY29uZmlkZW5jZSBhbmQgc3VwcGx5IGFycmFuZ2VtZW50LiBBbnkgYWdyZWVtZW50IGJldHdlZW4gdGhlIHBhcnRpZXMgd2lsbCBoYXZlIGltcGxpY2F0aW9ucyBmb3Igd2hpY2ggcHJvcG9zYWxzIHRoZSBHb3Zlcm5tZW50IHdpbGwgYnJpbmcgZm9yd2FyZC4gSG93ZXZlciwgaW4gbGlldSBvZiBhbnkgYWdyZWVtZW50LCB0aGUgQ29uc2VydmF0aXZlcyBtYXkgc2VlayB0byBnb3Zlcm4gd2l0aG91dCBhIG1ham9yaXR5LCB3aGljaCBhZ2FpbiB3aWxsIGFmZmVjdCB0aGUgY29udGVudHMgb2YgdGhlIFF1ZWVuXHUyMDE5cyBTcGVlY2guIFRoZSBMYWJvdXIgUGFydHkgaGFzIHNhaWQgaXQgd2lsbCB0YWJsZSBhbiBhbWVuZG1lbnQsIHNldHRpbmcgb3V0IGl0cyBvd24gcHJvZ3JhbW1lIGZvciBnb3Zlcm5tZW50LlxuIFxuSW4gdGhpcyBjb250ZXh0LCB0aGlzIGJyaWVmaW5nIHNldHMgb3V0IGNvbW1pdG1lbnRzIGluIHRoZSBDb25zZXJ2YXRpdmUgUGFydHkgbWFuaWZlc3RvIGZvciBlYWNoIHBvbGljeSBhcmVhIHRvIGJlIGRlYmF0ZWQsIHRvZ2V0aGVyIHdpdGggcmVsZXZhbnQgcG9saWN5IGFuZCBsZWdpc2xhdGl2ZSBwcm9wb3NhbHMgbWFkZSBieSB0aGUgcHJldmlvdXMgQ29uc2VydmF0aXZlIEdvdmVybm1lbnQuIEl0IGRvZXMgbm90IGNvbnN0aXR1dGUgb2ZmaWNpYWwgaW5mb3JtYXRpb24gYWJvdXQgdGhlIEdvdmVybm1lbnRcdTIwMTlzIGludGVudGlvbnMgb3IgcHJvdmlkZSBhIGNvbXBsZXRlIGxpc3Qgb2YgYmlsbHMgdG8gYmUgYW5ub3VuY2VkLiBUaGlzIGJyaWVmaW5nIGFsc28gaGlnaGxpZ2h0cyBzZWN0aW9ucyBvZiB0aGUgRGVtb2NyYXRpYyBVbmlvbmlzdCBQYXJ0eSBtYW5pZmVzdG8sIGFuZCBjb21tZW50cyBvciBtYXRlcmlhbCBmcm9tIG9wcG9zaXRpb24gcGFydGllcywgd2hpY2ggbWF5IGJlIGhlbHBmdWwgaW4gZXN0YWJsaXNoaW5nIHdoaWNoIENvbnNlcnZhdGl2ZSBwcm9wb3NhbHMgd2lsbCBiZSBwdXQgZm9yd2FyZCBpbiB0aGUgUXVlZW5cdTIwMTlzIFNwZWVjaC4gQWdhaW4sIHRoaXMgZG9lcyBub3QgY29uc3RpdHV0ZSBvZmZpY2lhbCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgZm9ydGhjb21pbmcgbGVnaXNsYXRpdmUgcHJvZ3JhbW1lLCByYXRoZXIgaXQgaXMgcHJvdmlkZWQgd2l0aCB0aGUgYWltIG9mIGluZGljYXRpbmcgdGhlIHBvbGljeSBpbnRlbnRpb25zIG9mIHBhcnRpZXMgcHJpb3IgdG8gdGhlIGdlbmVyYWwgZWxlY3Rpb24uIFxuIFxuVGhlIEdvdmVybm1lbnQgYW5ub3VuY2VkIG9uIDE3IEp1bmUgMjAxNyB0aGF0IHRoZSBmb3J0aGNvbWluZyBwYXJsaWFtZW50YXJ5IHNlc3Npb24gd291bGQgbGFzdCB0d28geWVhcnMgdG8gXCJnaXZlIE1QcyBlbm91Z2ggdGltZSB0byBmdWxseSBjb25zaWRlciB0aGUgbGF3cyByZXF1aXJlZCB0byBtYWtlIEJyaXRhaW4gcmVhZHkgZm9yIEJyZXhpdFwiLiJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDYtMTlUMTQ6NDg6NDEuMjA1MTc2MyswMTowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIExvcmRzIExpYnJhcnkgYnJpZWZpbmcgaGFzIGJlZW4gcHJlcGFyZWQgaW4gYWR2YW5jZSBvZiB0aGUgZm9ydGhjb21pbmcgUXVlZW5cdTIwMTlzIFNwZWVjaCwgd2hpY2ggaXMgZHVlIHRvIHRha2UgcGxhY2Ugb24gMjEgSnVuZSAyMDE3LiBUaGUgSG91c2Ugb2YgTG9yZHMgaXMgZHVlIHRvIGRlYmF0ZSB0aGUgUXVlZW5cdTIwMTlzIFNwZWVjaCBvdmVyIGZpdmUgZGF5cyBiZXR3ZWVuIDIyIGFuZCAyOSBKdW5lIDIwMTcuIFRoaXMgYnJpZWZpbmcgaXMgb25lIG9mIGZpdmUgcHJlcGFyZWQgYnkgdGhlIEhvdXNlIG9mIExvcmRzIExpYnJhcnkgdG8gY292ZXIgdGhlIHRoZW1lcyBvZiBlYWNoIGRheSBvZiBkZWJhdGUuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMTE4tMjAxNy0wMDIzIn0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8zNDY3MTMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBMaWJyYXJ5IG5vdGVzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiUXVlZW4ncyBTcGVlY2ggMjAxNyBEYXkgMTogRm9yZWlnbiBBZmZhaXJzLCBEZWZlbmNlLCBUcmFkZSBhbmQgSW50ZXJuYXRpb25hbCBEZXZlbG9wbWVudCIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU0OTIiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJBcm1lZCBmb3JjZXMifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU1NTEiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJEZWZlbmNlIHBvbGljeSJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTY0NiIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkludGVybmF0aW9uYWwgZGV2ZWxvcG1lbnQifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2NTEiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJJbnRlcm5hdGlvbmFsIHRyYWRlIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1Njc3IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTWlkZGxlIEVhc3QifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2ODciLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJOQVRPIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzczMDgwMiIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiVGhlIFVuaXRlZCBLaW5nZG9tLCBhcyBwYXJ0IG9mIGl0cyBjb250cmlidXRpb25zIHRvIGludGVybmF0aW9uYWwgZWZmb3J0cywgaW50cm9kdWNlZCBpdHMgb3duIGRvbWVzdGljIGxlZ2lzbGF0aW9uIHRvIHRhY2tsZSBjbGltYXRlIGNoYW5nZSBpbiBOb3ZlbWJlciAyMDA4LiBUaGUgQ2xpbWF0ZSBDaGFuZ2UgQWN0IDIwMDggc2Vla3MgdG8gcmVkdWNlIGdyZWVuaG91c2UgZ2FzIGVtaXNzaW9ucyB0aHJvdWdoIGEgbG9uZy10ZXJtIHRhcmdldGVkIGFuZCBcdTIwMWNlY29ub21pY2FsbHkgY3JlZGlibGUgc3RyYXRlZ3lcdTIwMWQuIEl0IGFpbXMgdG8gcmVkdWNlIGdyZWVuaG91c2UgZ2FzIGVtaXNzaW9ucyBieSA4MCBwZXJjZW50IGJlbG93IHRoZSAxOTkwIGxldmVsIGJ5IDIwNTAuIFRoZSBsb25nLXRlcm0gdGFyZ2V0IGlzIHRyYW5zbGF0ZWQgaW50byBmaXZlLXllYXIgY2FyYm9uIGJ1ZGdldHMsIHdoaWNoIHJlc3RyaWN0IHRoZSBhbW91bnQgb2YgZ3JlZW5ob3VzZSBnYXNlcyB0aGUgVUsgY2FuIGxlZ2FsbHkgZW1pdCBpbiBhIGdpdmVuIGZpdmUteWVhciBwZXJpb2QuIFRoZSBjYXJib24gYnVkZ2V0cyBsZWdpc2xhdGVkIHRvIGRhdGUgaGF2ZSBiZWVuIG1hZGUgaW4gY29udGV4dCBvZiB0aGUgVUsgYXMgYSBtZW1iZXIgb2YgdGhlIEV1cm9wZWFuIFVuaW9uIGFuZCBtdXN0IGNvbnRpbnVlIHRvIGJlIG1ldCwgdW5sZXNzIHJldmlzZWQgdG8gc2F5IG90aGVyd2lzZSwgYWZ0ZXIgdGhlIFVLIGhhcyBsZWZ0IHRoZSBFVS4gVUsgZ3JlZW5ob3VzZSBnYXMgZW1pc3Npb25zIGhhdmUgZmFsbGVuIGJ5IDM4IHBlcmNlbnQgc2luY2UgMTk5MCwgYnV0IHRoZSBDb21taXR0ZWUgb24gQ2xpbWF0ZSBDaGFuZ2UgaGFzIGlkZW50aWZpZWQgYSBwb2xpY3kgZ2FwIHRvIG1lZXQgdGhlIGxhdGVzdCBjYXJib24gYnVkZ2V0LCBzdGF0aW5nIHRoYXQgY3VycmVudCBwb2xpY2llcyBhcmUgbGlrZWx5IHRvIGRlbGl2ZXIgYXQgYmVzdCBhcm91bmQgaGFsZiBvZiB0aGUgcmVxdWlyZWQgZW1pc3Npb25zIHJlZHVjdGlvbiBmcm9tIDIwMTVcdTIwMTMyMDMwLsKgXG4gXG5BY3Rpb24gdG8gbWl0aWdhdGUgY2xpbWF0ZSBjaGFuZ2UgaXMgY29vcmRpbmF0ZWQgZXh0ZW5zaXZlbHkgYXQgYSBnbG9iYWwgbGV2ZWwuIFRoZSBFVSBoYXMgbGVnaXNsYXRlZCBvbiBhIHJhbmdlIG9mIGNsaW1hdGUgY2hhbmdlIGlzc3VlcywgaW5jbHVkaW5nIGN1dHMgaW4gZ3JlZW5ob3VzZSBnYXMgZW1pc3Npb25zIGFuZCBpbXByb3ZlbWVudHMgaW4gZW5lcmd5IGVmZmljaWVuY3kgdGhyb3VnaCB0aGUgMjAyMCBhbmQgYWRkaXRpb25hbCAyMDMwIGNsaW1hdGUgYW5kIGVuZXJneSBmcmFtZXdvcmsuIEl0IGlzIGFyZ3VlZCB0aGF0IGEgbnVtYmVyIG9mIHRoZXNlIGRpcmVjdGl2ZXMgaGF2ZSBzaWduaWZpY2FudGx5IGNvbnRyaWJ1dGVkIHRvIGVtaXNzaW9ucyByZWR1Y3Rpb24gaW4gdGhlIFVLLsKgXG4gXG5PbiAzMCBNYXJjaCAyMDE3LCB0aGUgR3JlYXQgUmVwZWFsIEJpbGwgd2hpdGUgcGFwZXIsIFx1MjAxOExlZ2lzbGF0aW5nIGZvciB0aGUgVUtcdTIwMTlzIFdpdGhkcmF3YWwgZnJvbSB0aGUgRVVcdTIwMTksIHdhcyBwdWJsaXNoZWQgd2hpY2ggc2V0IG91dCB0aGUgR292ZXJubWVudFx1MjAxOXMgaW50ZW50aW9ucyBmb3IgZW5zdXJpbmcgYSBmdW5jdGlvbmluZyBzdGF0dXRlIGJvb2sgb25jZSB0aGUgVUsgaGFzIGxlZnQgdGhlwqBFVS4gSXQgc3RhdGVzIHRoYXQgdGhlIHdob2xlIGJvZHkgb2YgZXhpc3RpbmcgRVUgZW52aXJvbm1lbnRhbCBsYXcgd2lsbCBjb250aW51ZSB0byBoYXZlIGVmZmVjdCBpbiB0aGUgVUssIGJ1dCBkb2VzIG5vdCBleHBsaWNpdGx5IG1lbnRpb24gRVUgY2xpbWF0ZSBjaGFuZ2UgbGF3LlxuIFxuVGhpcyBIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5IGJyaWVmaW5nIG9mZmVycyBhbiBvdmVydmlldyBvZiBkb21lc3RpYyBVSyBjbGltYXRlIGNoYW5nZSBsZWdpc2xhdGlvbiBhbmQgaGlnaGxpZ2h0cyBhIHNlbGVjdGlvbiBvZiBFdXJvcGVhbiBsZWdpc2xhdGlvbiByZWxhdGluZyB0byBjbGltYXRlIGNoYW5nZSBhbmQgaG93IGl0IGhhcyBiZWVuIGltcGxlbWVudGVkIGluIHRoZSBVSy4gVGhpcyBicmllZmluZyBhbHNvIGRpc2N1c3NlcyB0aGUgcG90ZW50aWFsIGltcGxpY2F0aW9ucyBvZiBsZWF2aW5nIHRoZSBFVSBvbiB0aGUgdGFyZ2V0cyBzZXQgaW50byBVSyBsYXcsIHdpdGggYWRkaXRpb25hbCBpbmZvcm1hdGlvbiBvbiBncmVlbmhvdXNlIGdhcyBlbWlzc2lvbnMgZnJvbSBFVSBjb3VudHJpZXMgYW5kIG9uIHRoZWlyIGNsaW1hdGUgY2hhbmdlIGRvbWVzdGljIGxlZ2lzbGF0aW9uLlxuIFxuwqAifQogICAgICAsICJkYXRlIiA6IHsiX3ZhbHVlIiA6ICIyMDE3LTA2LTE1VDEyOjIwOjE1LjU1NDczNyswMTowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIEhvdXNlIG9mIExvcmRzIExpYnJhcnkgYnJpZWZpbmcgcHJvdmlkZXMgYW4gb3ZlcnZpZXcgb2YgYSBzZWxlY3Rpb24gb2YgRXVyb3BlYW4gbGVnaXNsYXRpb24gd2hpY2ggcmVsYXRlcyB0byBjbGltYXRlIGNoYW5nZSwgYW5kIG91dGxpbmVzIGhvdyBpdCBoYXMgYmVlbiBpbXBsZW1lbnRlZCBpbiB0aGUgVUsuIFRoZSBicmllZmluZyBkaXNjdXNzZXMgdGhlIHBvdGVudGlhbCBpbXBsaWNhdGlvbnMgb2YgbGVhdmluZyB0aGUgRVUgb24gdGFyZ2V0cyBzZXQgaW50byBVSyBsYXcgYW5kIGJyaWVmbHkgc3RhdGVzIHRoZSBVS1x1MjAxOXMgaW50ZXJuYXRpb25hbCBjb21taXRtZW50cyB0byByZWR1Y2luZyBncmVlbmhvdXNlIGdhcyBlbWlzc2lvbnMuIEl0IGFsc28gcHJvdmlkZXMgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiBvbiBncmVlbmhvdXNlIGdhcyBlbWlzc2lvbnMgZnJvbSBFVSBjb3VudHJpZXMgYW5kIHRoZWlyIGNsaW1hdGUgY2hhbmdlIGRvbWVzdGljIGxlZ2lzbGF0aW9uLiJdLCAiaWRlbnRpZmllciIgOiB7Il92YWx1ZSIgOiAiTExOLTIwMTctMDAyMiJ9CiAgICAgICwgInB1Ymxpc2hlciIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgICwgInNlY3Rpb24iIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgXSwgInN1YlR5cGUiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMzQ2NzEzIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTG9yZHMgTGlicmFyeSBub3RlcyJ9CiAgICAgIH0KICAgICAgLCAidGl0bGUiIDogIkxlYXZpbmcgdGhlIEV1cm9wZWFuIFVuaW9uOiBVSyBDbGltYXRlIENoYW5nZSBQb2xpY3kiLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTIzIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQ2xpbWF0ZSBjaGFuZ2UifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU1OTEiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJFVSBsYXcgYW5kIHRyZWF0aWVzIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NzM2IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiUmVuZXdhYmxlIGVuZXJneSJ9CiAgICAgIH0KICAgICAgXSwgInR5cGUiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvc2NoZW1hL3BhcmwjUmVzZWFyY2hCcmllZmluZyJ9CiAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Jlc291cmNlcy82NTAyNDkiLCAiYWJzdHJhY3QiIDogeyJfdmFsdWUiIDogIlRoZSBCaWxsIHdhcyBpbnRyb2R1Y2VkIGluIHRoZSBIb3VzZSBvZiBMb3JkcyBvbiAxOSBNYXkgMjAxNiwgaXQgcGFzc2VkIGFsbCBpdHMgUGFybGlhbWVudGFyeSBzdGFnZXMgYW5kIHJlY2VpdmVkIFJveWFsIEFzc2VudCBvbiAyNyBBcHJpbCAyMDE3LlxuIFxuVGhlIEFjdCBsYXJnZWx5IGV4dGVuZHMgdG8gRW5nbGFuZCBhbmQgV2FsZXMgYnV0IGFwcGxpZXMgb25seSBpbiBFbmdsYW5kLiBIb3dldmVyLCBvbmUgcHJvdmlzaW9uIGFsc28gZXh0ZW5kcyB0byBTY290bGFuZC4gVGhlIG1haW4gY2hhbmdlcyBpbiB0aGUgQWN0IGRvIG5vdCBhZmZlY3QgTG9uZG9uLlxuIFxuVGhlIEFjdCBoYXMgYmVlbiBhIGxvbmcgdGltZSBjb21pbmcuIEluIHRoZSBtaWQtMTk4MHMgdGhlIENvbnNlcnZhdGl2ZSBHb3Zlcm5tZW50IGRlcmVndWxhdGVkIHRoZSBidXMgaW5kdXN0cnkgYWNyb3NzIEdyZWF0IEJyaXRhaW4sIGV4Y2VwdCBpbiBMb25kb24uIEZyb20gYWxtb3N0IHRoZSBtb21lbnQgZGVyZWd1bGF0aW9uIHdhcyBpbnRyb2R1Y2VkIGluIE9jdG9iZXIgMTk4NiB0aGVyZSBoYXZlIGJlZW4gY2FsbHMgdG8gcmVyZWd1bGF0ZSBpdCwgcGFydGljdWxhcmx5IGZyb20gdGhlIGxvY2FsIGF1dGhvcml0aWVzIGFuZCBQYXNzZW5nZXIgVHJhbnNwb3J0IEV4ZWN1dGl2ZXMgaW4gdGhlIG1ldHJvcG9saXRhbiBhcmVhcyBvdXRzaWRlIExvbmRvbi5cbiBcblRoZXNlIGNhbGxzIGhhdmUgYmVlbiBiYXNlZCBvbiBjb25jZXJucyBhYm91dCB0aGUgZGVjbGluZSBpbiBwYXNzZW5nZXIgbnVtYmVyczsgcmVxdWlyZW1lbnRzIGZvciBsb2NhbCBhdXRob3JpdGllcyB0byBzdGVwIGluIGFuZCBzdWJzaWRpc2UgXHUyMDE4c29jaWFsbHkgbmVjZXNzYXJ5XHUyMDE5IHNlcnZpY2VzIHdoaWNoIGFyZSBjb21tZXJjaWFsbHkgdW52aWFibGU7IHVuY2VydGFpbnR5IGFib3V0IHNlcnZpY2VzIGFuZCB0aW1ldGFibGVzOyBhbmQgYSBsYWNrIG9mIGNvb3JkaW5hdGlvbiBwYXJ0aWN1bGFybHkgYXMgcmVnYXJkcyBmYXJlcy5cbiBcblRoZSBwcml2YXRlIGJ1cyBpbmR1c3RyeSBoYXMgZGVmZW5kZWQgaXRzIHJlY29yZCwgYXJndWluZyB0aGF0IHNpbmNlIGRlcmVndWxhdGlvbiB0aGVyZSBoYXMgYmVlbiBtYXNzaXZlIGludmVzdG1lbnQgYW5kIG1vZGVybmlzYXRpb24gYW5kIHRoYXQgaXQgaGFzIHN1Y2Nlc3NmdWxseSBuYXZpZ2F0ZWQgY2hhbmdlcyBpbiBwYXNzZW5nZXIgZXhwZWN0YXRpb25zIGJhc2VkIG9uIGFjY2Vzc2liaWxpdHksIHRoZSBlbnZpcm9ubWVudCBhbmQgdGVjaG5vbG9neS5cbiBcblRoZSBMYWJvdXIgR292ZXJubWVudCBpbnRyb2R1Y2VkIGEgdHlwZSBvZiByZXJlZ3VsYXRpb24gaW4gMjAwMCBpbiB0aGUgZm9ybSBvZiBhIFF1YWxpdHkgQ29udHJhY3QgU2NoZW1lIChRQ1MpLiBIb3dldmVyLCBubyBhcmVhIGhhcyBldmVyIGludHJvZHVjZWQgc3VjaCBhIHNjaGVtZSwgbGFyZ2VseSBkdWUgdG8gY29uY2VybnMgYWJvdXQgdGhlIGNvbXBsZXhpdHkgb2YgdGhlIHByb2Nlc3MgYW5kIGEgbGFjayBvZiBwcm90ZWN0aW9uIGZyb20gbGVnYWwgY2hhbGxlbmdlIG9uIHRoZSBwYXJ0IG9mIGluY3VtYmVudCBwcml2YXRlIGJ1cyBvcGVyYXRvcnMuIFRoZSBjbG9zZXN0IGFueW9uZSBoYXMgY29tZSB0byBpbnRyb2R1Y2luZyBhIFFDUyBpcyB0aGUgTm9ydGggRWFzdCwgd2hvc2UgcGxhbnMgZXZlbnR1YWxseSBmZWxsIGJ5IHRoZSB3YXlzaWRlIGxhdGUgaW4gMjAxNS5cbiBcblNpbmNlIDIwMTAgdGhlIENvbnNlcnZhdGl2ZXMgaW4gZ292ZXJubWVudCwgZmlyc3QgaW4gQ29hbGl0aW9uIHdpdGggdGhlIExpYmVyYWwgRGVtb2NyYXRzIGFuZCBzaW5jZSAyMDE1IGFzIGEgbWFqb3JpdHkgZ292ZXJubWVudCBvbiB0aGVpciBvd24sIGhhdmUgYmVlbiBtb3Zpbmcgc2xvd2x5IHRvd2FyZHMgc29tZSBzb3J0IG9mIHJlcmVndWxhdGlvbiBmb3IgdGhvc2UgcGFydHMgb2YgdGhlIGNvdW50cnkgdGhhdCB3YW50IGl0IGFuZCB3aGljaCBtZWV0IGNlcnRhaW4gcmVxdWlyZW1lbnRzIChpLmUuIGEgY29tYmluZWQgYXV0aG9yaXR5IHdpdGggYW4gZWxlY3RlZCBtYXlvcikuIFRoaXMgc2lnbmlmaWNhbnQgcG9saWN5IGNoYW5nZSBoYXMgbGFyZ2VseSBiZWVuIGRyaXZlbiBieSB0aGUgXHUyMDE4ZGV2b2x1dGlvbiBhZ2VuZGFcdTIwMTkgZm9yIEVuZ2xhbmQuXG4gXG5UaGUgQWN0IGlzIGVzc2VudGlhbGx5IGFuIGVuYWJsaW5nIEFjdCwgZXh0ZW5kaW5nIHRoZSBhYmlsaXR5IG9mIGxvY2FsIHRyYW5zcG9ydCBhdXRob3JpdGllcyB0byBpbnRyb2R1Y2UgZnJhbmNoaXNpbmcgb3IgYSBuZXcgcGFydG5lcnNoaXAgYXJyYW5nZW1lbnQgY2FsbGVkIGFuIGVuaGFuY2VkIHBhcnRuZXJzaGlwLiBJdCBhbHNvIG1ha2VzIGFtZW5kbWVudHMgdG8gUXVhbGl0eSBQYXJ0bmVyc2hpcHMgYW5kIHJlbmFtZXMgdGhlbSBBZHZhbmNlZCBRdWFsaXR5IFBhcnRuZXJzaGlwcyBpbiBFbmdsYW5kOyBhaW1zIHRvIG1ha2UgaXQgZWFzaWVyIHRvIGludHJvZHVjZSBtdWx0aS1vcGVyYXRvciB0aWNrZXRpbmcgYW5kIGltcHJvdmVtZW50cyB0byBlbmhhbmNlIHBhc3NlbmdlciBhY2Nlc3NpYmlsaXR5IGFuZCBpbmZvcm1hdGlvbi5cbiBcblRoZSBtYWluIGNvbmNlcm5zIHRoYXQgd2VyZSByYWlzZWQgYWJvdXQgdGhlIEFjdCBkdXJpbmcgaXRzIHBhc3NhZ2UgdGhyb3VnaCBQYXJsaWFtZW50IHdlcmUgdGhhdCB0aGUgYmFyIHRvIGltcGxlbWVudCBmcmFuY2hpc2luZyBtYXkgc3RpbGwgYmUgdG9vIGhpZ2ggYW5kIHRoYXQgdGhlIENvbXBldGl0aW9uIGFuZCBNYXJrZXRzIEF1dGhvcml0eSBtYXkgYmUgYWJsZSB0byBxdWFzaCwgd2F0ZXItZG93biBvciBkZWxheSBmcmFuY2hpc2luZzsgdGhhdCB0aGUgR292ZXJubWVudCBkb2VzIG5vdCBpbnRlbmQgdG8gbWFrZSBmcmFuY2hpc2luZyBpbW1lZGlhdGVseSBhdmFpbGFibGUgdG8gYWxsIGFyZWFzOyBhbmQgdGhhdCBsb2NhbCBhdXRob3JpdGllcyB3b3VsZCBiZSBwcmV2ZW50ZWQgZnJvbSBmb3JtaW5nIG5ldyBtdW5pY2lwYWwgYnVzIGNvbXBhbmllcy5cbiBcbkEgbnVtYmVyIG9mIGFtZW5kbWVudHMgd2VyZSBhZ3JlZWQgaW4gdGhlIEhvdXNlIG9mIExvcmRzIGFuZCBvdmVydHVybmVkIGJ5IHRoZSBDb21tb25zOyB0aGVzZSBpbmNsdWRlZCB0aGUgcmVtb3ZhbCBvZiBhdXRvbWF0aWMgZnJhbmNoaXNpbmcgcG93ZXJzIHRvIGFsbCBsb2NhbCBhdXRob3JpdGllcyBpbiBFbmdsYW5kIGFuZCB0aGUgcmVpbnRyb2R1Y3Rpb24gb2YgYSBiYW4gb24gdGhlIGZvcm1hdGlvbiBvZiBuZXcgbXVuaWNpcGFsIGJ1cyBjb21wYW5pZXMuXG4gXG5JbiBpdHMgcmVwb3J0IG9mIDI1IE5vdmVtYmVyIDIwMTYgdGhlIFRyYW5zcG9ydCBTZWxlY3QgQ29tbWl0dGVlIGdlbmVyYWxseSB3ZWxjb21lZCB0aGUgQWN0LCB0aG91Z2ggaXQgc3VwcG9ydGVkIG1hbnkgb2YgdGhlIGNoYW5nZXMgbWFkZSBieSB0aGUgTG9yZHMgYW5kIGxhdGVyIG92ZXJ0dXJuZWQgaW4gdGhlIENvbW1vbnMuIEl0IGFsc28gY3JpdGljaXNlZCB0aGUgR292ZXJubWVudCBmb3Igbm90IGJyaW5naW5nIGZvcndhcmRzIGRyYWZ0IHNlY29uZGFyeSBsZWdpc2xhdGlvbiBhbmQgZ3VpZGFuY2UgaW4gdGltZSBmb3IgdGhlIENvbW1pdHRlZSB0byBzY3J1dGluaXNlIGl0LiBUaGUgR292ZXJubWVudCBwdWJsaXNoZWQgZHJhZnQgcmVndWxhdGlvbnMgYW5kIGd1aWRhbmNlIG9uIDggRmVicnVhcnkgMjAxNy5cbiBcbk9uIDQgTWF5IDIwMTcgc2l4IHJlZ2lvbnMgb2YgRW5nbGFuZCBoZWxkIGVsZWN0aW9ucyBmb3IgbmV3bHkgY3JlYXRlZCBjb21iaW5lZCBhdXRob3JpdHkgbWF5b3JzIChUZWVzIFZhbGxleTsgR3JlYXRlciBNYW5jaGVzdGVyOyBMaXZlcnBvb2wgQ2l0eSBSZWdpb247IFdlc3QgTWlkbGFuZHM7IENhbWJyaWRnZXNoaXJlICYgUGV0ZXJib3JvdWdoIGFuZCB0aGUgV2VzdCBvZiBFbmdsYW5kKS4gVGhlc2UgbWF5b3JzIHdpbGwgaGF2ZSBhdXRvbWF0aWMgYWNjZXNzIHRvIHRoZSBidXMgZnJhbmNoaXNpbmcgcG93ZXJzIGNvbnRhaW5lZCBpbiB0aGUgQWN0IGZyb20gMjcgSnVuZSAyMDE3LiBJdCByZW1haW5zIHRvIGJlIHNlZW4gd2hvIHdpbGwgdGFrZSB0aGVtIHVwLCBob3cgYW5kIHdoZW4uXG4gXG5GdXJ0aGVyIGluZm9ybWF0aW9uIG9uIGJ1cyBwb2xpY3kgY2FuIGJlIGZvdW5kIG9uIHRoZSBidXMgcG9saWN5IHBhZ2Ugb2YgdGhlIFBhcmxpYW1lbnQgd2Vic2l0ZS4ifQogICAgICAsICJkYXRlIiA6IHsiX3ZhbHVlIiA6ICIyMDE3LTA2LTEyVDE3OjEyOjUxLjIwNjU3NjYrMDE6MDAiLCAiX2RhdGF0eXBlIiA6ICJkYXRlVGltZSJ9CiAgICAgICwgImRlc2NyaXB0aW9uIiA6IFsiVGhpcyBwYXBlciBleHBsYWlucyB0aGUgcG9saWN5IGJhY2tncm91bmQgdG8gYW5kIGNvbnRlbnRzIGFuZCBwdXJwb3NlIG9mIHRoZSBCdXMgU2VydmljZXMgQWN0IDIwMTcuIEl0IHdpbGwgYmUgdXBkYXRlZCBhcyB0aGUgQWN0IGlzIGJyb3VnaHQgaW50byBmb3JjZSBhbmQgaW1wbGVtZW50ZWQgb3ZlciBjb21pbmcgeWVhcnMuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJDQlAtNzU0NSJ9CiAgICAgICwgInB1Ymxpc2hlciIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI2NyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIENvbW1vbnMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMTY4NDkiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJCdXNpbmVzcyBhbmQgVHJhbnNwb3J0IFNlY3Rpb24ifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzQxNDAzMyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkNvbW1vbnMgQnJpZWZpbmcgcGFwZXJzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiQnVzIFNlcnZpY2VzIEFjdCAyMDE3IiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTUwOSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkJ1c2VzIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjY2IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTG9jYWwgZ292ZXJubWVudCJ9CiAgICAgIH0KICAgICAgXSwgInR5cGUiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvc2NoZW1hL3BhcmwjUmVzZWFyY2hCcmllZmluZyJ9CiAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Jlc291cmNlcy83MzAwNDIiLCAiYWJzdHJhY3QiIDogeyJfdmFsdWUiIDogIlRoZSBmaXJzdCBzcGVlY2ggbWFkZSBieSBhIE1lbWJlciBvZiB0aGUgSG91c2Ugb2YgTG9yZHMgaXMga25vd24gYXMgYSBtYWlkZW4gc3BlZWNoLiBUaGlzIExpYnJhcnnCoGJyaWVmaW5nIGluY2x1ZGVzIHRoZSBmdWxsIHRleHQgb2YgYSBzZWxlY3Rpb24gb2YgcmVjZW50IG1haWRlbiBzcGVlY2hlcywgbWFkZSBieSBhIGNyb3NzLXNlY3Rpb24gb2YgTWVtYmVycyBmcm9tIGRpZmZlcmVudCBwYXJ0aWVzIGFuZCBhZmZpbGlhdGlvbnMsIHRvIGlsbHVzdHJhdGUgdGhlIHJhbmdlIG9mIHN0eWxlcyBhbmQgc3ViamVjdHMgY292ZXJlZCBieSBuZXcgTWVtYmVycyBpbiB0aGVpciBmaXJzdCBjb250cmlidXRpb24gdG8gdGhlIHByb2NlZWRpbmdzIG9mIHRoZSBIb3VzZSBvZiBMb3Jkcy4gSXQgYWxzbyBpbmNsdWRlcyBhIGxpc3Qgb2YgYWxsIE1lbWJlcnNcdTIwMTkgbWFpZGVuIHNwZWVjaGVzIG1hZGUgaW4gdGhlIEhvdXNlIG9mIExvcmRzIGR1cmluZyB0aGUgY291cnNlIG9mIHRoZSBsYXN0IHBhcmxpYW1lbnQuXG4gXG5UaGUgSG91c2Ugb2YgTG9yZHMgUmVmb3JtIEFjdCAyMDE0IGVuYWJsZWQgTWVtYmVycyB0byByZXRpcmUgZnJvbSB0aGUgSG91c2Ugb2YgTG9yZHMuIEl0IHdhcyBhZ3JlZWQgdGhhdCBNZW1iZXJzIHNob3VsZCBiZSBnaXZlbiB0aGUgb3Bwb3J0dW5pdHkgdG8gbWFrZSBhIHZhbGVkaWN0b3J5IHNwZWVjaCB0byBtYXJrIHRoZWlyIHJldGlyZW1lbnQuIER1cmluZyB0aGUgMjAxNS0yMDE3IHBhcmxpYW1lbnQgbmluZSBzdWNoIHNwZWVjaGVzIHdlcmUgbWFkZSBhbmQgdGhlIGZ1bGwgdGV4dCBvZiB0aHJlZSBhcmUgaW5jbHVkZWQgaW4gdGhlIGJyaWVmaW5nIGFzIGV4YW1wbGVzLiJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDYtMTJUMTE6MjI6MjEuNTY5NTY2NCswMTowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIEhvdXNlIG9mIExvcmRzIExpYnJhcnkgYnJpZWZpbmcgY292ZXJzIHRoZSBtYWlkZW4gYW5kIHZhbGVkaWN0b3J5IHNwZWVjaGVzIG1hZGUgZHVyaW5nIHRoZSBjb3Vyc2Ugb2YgdGhlIDIwMTUtMjAxNyBwYXJsaWFtZW50LiBUaGUgZmlyc3QgYW5kIGxhc3Qgc3BlZWNoZXMgbWFkZSBieSBhIE1lbWJlciBvZiB0aGUgSG91c2Ugb2YgTG9yZHMgYXJlIHNpZ25pZmljYW50IG9jY2FzaW9ucyBhbmQsIGJ5IHRyYWRpdGlvbiwgYXJlIG1hcmtlZCB3aXRoIHJlc3BlY3QgYnkgdGhlIEhvdXNlLiJdLCAiaWRlbnRpZmllciIgOiB7Il92YWx1ZSIgOiAiTExOLTIwMTctMDAyMSJ9CiAgICAgICwgInB1Ymxpc2hlciIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgICwgInNlY3Rpb24iIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgXSwgInN1YlR5cGUiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMzQ2NzEzIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTG9yZHMgTGlicmFyeSBub3RlcyJ9CiAgICAgIH0KICAgICAgLCAidGl0bGUiIDogIkhvdXNlIG9mIExvcmRzOiBNYWlkZW4gYW5kIFZhbGVkaWN0b3J5IFNwZWVjaGVzLCAyMDE1LTIwMTciLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjI4IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2NzUiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJNZW1iZXJzIG9mIHRoZSBMb3JkcyJ9CiAgICAgIH0KICAgICAgXSwgInR5cGUiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvc2NoZW1hL3BhcmwjUmVzZWFyY2hCcmllZmluZyJ9CiAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Jlc291cmNlcy8zNDE3NTYiLCAiYWJzdHJhY3QiIDogeyJfdmFsdWUiIDogIldoYXQgaXMgYSBtYWlkZW4gc3BlZWNoP1xuIFxuVGhlIGZpcnN0IHRpbWUgYSBuZXdseSBlbGVjdGVkwqBNUCBzcGVha3MgaW4gdGhlIENoYW1iZXIgb2YgdGhlIEhvdXNlIG9mIENvbW1vbnMgaXMga25vd24gYXMgYSBtYWlkZW4gc3BlZWNoLiBCeSB0cmFkaXRpb24sIGEgbmV3IE1QIGlzIGNhbGxlZCBhaGVhZCBvZiBvdGhlciBNUHMgd2hvIG1heSBoYXZlIGluZGljYXRlZCB0aGVpciB3aXNoIHRvIHNwZWFrIGluIHRoZSBzYW1lIGRlYmF0ZS4gQSBtYWlkZW4gc3BlZWNoIGlzIHVzdWFsbHkgdW5jb250cm92ZXJzaWFsLCBmYWlybHkgYnJpZWYgYW5kIGluY2x1ZGVzIGEgdHJpYnV0ZSB0byB0aGUgTVAncyBwcmVkZWNlc3NvciBpbiB0aGUgc2VhdCwgaXJyZXNwZWN0aXZlIG9mIHBhcnR5LCBhbmQgZmF2b3VyYWJsZSByZW1hcmtzIGFib3V0IHRoZSBjb25zdGl0dWVuY3kuIEl0IGlzIGFsc28gYSB0cmFkaXRpb24gdGhhdCBhIG1haWRlbiBzcGVlY2ggaXMgaGVhcmQgd2l0aG91dCBpbnRlcnJ1cHRpb24gYW5kIGZvciBhbnkgc3BlZWNoZXMgdGhhdCBtYXkgZm9sbG93IHRvIHByYWlzZSB0aGUgbmV3IE1lbWJlcidzIGZpcnN0IGNvbnRyaWJ1dGlvbi5cbiBcbk1haWRlbiBzcGVlY2hlcyBpbiB0aGUgMjAxNSBQYXJsaWFtZW50XG4gXG5UaGlzwqBmdWxsIHJlcG9ydMKgcHJvdmlkZXMgSGFuc2FyZCByZWZlcmVuY2VzICh3aXRoIGxpbmtzIHRvIEhhbnNhcmQsIHRoZSBvZmZpY2lhbCByZXBvcnQgb2YgdGhlIEhvdXNlIG9mIENvbW1vbnMpIGZvciBtYWlkZW4gc3BlZWNoZXMgYnkgYWxsIE1lbWJlcnMgbmV3bHkgZWxlY3RlZCBpbiB0aGUgMjAxNSBQYXJsaWFtZW50LiBJdCBpbmNsdWRlcyBkZXRhaWxzIG9mIHRoZSBNUCdzIGNvbnN0aXR1ZW5jeSBhbmQgcGFydHkuXG4gXG4xNzcgbmV3IE1QcyB3ZXJlIHJldHVybmVkIGF0IHRoZSAyMDE1IEdlbmVyYWwgRWxlY3Rpb24gd2l0aCBhIGZ1cnRoZXIgMTAgcmV0dXJuZWQgYXQgYnktZWxlY3Rpb25zIGR1cmluZyB0aGUgY291cnNlIG9mIHRoZSBQYXJsaWFtZW50LiBUaGUgb25lIFNpbm4gRmVpbiBNUCBlbGVjdGVkIGF0IHRoZSAyMDE1IEdlbmVyYWwgRWxlY3Rpb24gZGlkIG5vdCBtYWtlIGEgbWFpZGVuIHNwZWVjaCBhcyBoZSBkaWQgbm90IHRha2UgdGhlIG9hdGggb3IgbWFrZSBhbiBhZmZpcm1hdGlvbiBhbmQgaXMgdGhlcmVmb3JlIGRpc3F1YWxpZmllZCBmcm9tIHRha2luZyBwYXJ0IGluIHByb2NlZWRpbmdzLiBTZWUgdGhlIENvbW1vbnMgTGlicmFyeSBicmllZmluZyBvbiB0aGUgUGFybGlhbWVudGFyeSBPYXRoIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuIFxuTWFpZGVuIHNwZWVjaGVzIHNpbmNlIDE5MThcbiBcblRoZSBFeGNlbCBzcHJlYWRzaGVldCwgdXBsb2FkZWQgYXMgYSBzdXBwb3J0aW5nIGRvY3VtZW50IGJlbG93LMKgbGlzdHMgbWFpZGVuIHNwZWVjaGVzIHNpbmNlIDE5MTggaW4gc2VwYXJhdGUgd29ya3NoZWV0czpcbiBcbiAxOTE4LSAxOTQ1IDE5NDUgLSAxOTc5IDE5NzkgLSAyMDE1IDIwMTUgLSBwcmVzZW50IFxuIFxuTGlua3MgdG/CoHNwZWVjaGVzIGluIEhhbnNhcmQgaGF2ZSBiZWVuIGFkZGVkIHdoZXJlIGF2YWlsYWJsZS5cbiBcbkVsZWN0aW9uIHJlc3VsdHNcbiBcbkZ1cnRoZXIgaW5mb3JtYXRpb24gb24gcGFybGlhbWVudGFyeSBlbGVjdGlvbnMgYW5kIGJ5LWVsZWN0aW9ucyBvbiB0aGUgZWxlY3Rpb25zIHBhZ2Ugb2YgdGhlIFBhcmxpYW1lbnQgd2Vic2l0ZS5cbiBcbkZlZWRiYWNrXG4gXG5QbGVhc2Ugc2VuZCBhbnkgY29tbWVudHMgb3IgY29ycmVjdGlvbnMgdG86IFBhcmxpYW1lbnRhcnkgSW5mb3JtYXRpb24gTGlzdHMgRWRpdG9yLCBQYXJsaWFtZW50IGFuZCBDb25zdGl0dXRpb24gQ2VudHJlLCBIb3VzZSBvZiBDb21tb25zLCBMb25kb24gU1cxQSAwQUEuIFN1Z2dlc3Rpb25zIGZvciBuZXcgbGlzdHMgd2VsY29tZWQuXG4gXG7CoFxuIFxuwqBcbiBcbsKgIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wNi0wMlQxNjo1MzoxNS45NTY4NTYrMDE6MDAiLCAiX2RhdGF0eXBlIiA6ICJkYXRlVGltZSJ9CiAgICAgICwgImRlc2NyaXB0aW9uIiA6IFsiMTg2IG1haWRlbiBzcGVlY2hlcyB3ZXJlIG1hZGUgYnkgbmV3bHkgZWxlY3RlZCBNUHMgaW4gdGhlIDIwMTUgUGFybGlhbWVudC4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIlNOMDQ1ODgifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyNjciLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBDb21tb25zIExpYnJhcnkifQogICAgICB9CiAgICAgICwgInNlY3Rpb24iIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzYxMDU1IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiUGFybGlhbWVudCBhbmQgQ29uc3RpdHV0aW9uIENlbnRyZSJ9CiAgICAgIH0KICAgICAgXSwgInN1YlR5cGUiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvNDE0MDMzIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQ29tbW9ucyBCcmllZmluZyBwYXBlcnMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJNYWlkZW4gU3BlZWNoZXMgaW4gdGhlIEhvdXNlIG9mIENvbW1vbnMgc2luY2UgMTkxOCIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2MjciLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBDb21tb25zIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1Njc0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTWVtYmVycyBvZiBQYXJsaWFtZW50In0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzcyNTc0MCIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiR2licmFsdGFyIGlzIGEgQnJpdGlzaCBPdmVyc2VhcyBUZXJyaXRvcnkgbG9jYXRlZCBpbiB0aGUgc291dGhlcm4gcGFydCBvZiB0aGUgSWJlcmlhbiBQZW5pbnN1bGEuIEluIDIwMTIgaXQgaGFkIGEgdXN1YWxseS1yZXNpZGVudCBwb3B1bGF0aW9uIG9mIDMyLDE5NCwgYW5kIG1vc3QgR2licmFsdGFyaWFucyBhcmUgYmlsaW5ndWFsIGluIEVuZ2xpc2ggYW5kIFNwYW5pc2guIEdpYnJhbHRhcmlhbnMgd2VyZSBncmFudGVkIGZ1bGwgQnJpdGlzaCBjaXRpemVuc2hpcCB1bmRlciB0aGUgQnJpdGlzaCBOYXRpb25hbGl0eSBBY3QgMTk4MS4gR2licmFsdGFyIGlzIG5vdCBhIG1lbWJlciBvZiB0aGUgQ29tbW9ud2VhbHRoLCBhbHRob3VnaCBpdCB3YXMgZ3JhbnRlZCBBc3NvY2lhdGUgTWVtYmVyc2hpcCBvZiB0aGUgQ29tbW9ud2VhbHRoIEZvdW5kYXRpb24gaW4gMjAxNC4gR2licmFsdGFyIGlzIHBhcnQgb2YgdGhlIEV1cm9wZWFuIFVuaW9uLCBoYXZpbmcgam9pbmVkIHdpdGggdGhlIFVuaXRlZCBLaW5nZG9tIGluIDE5NzMsIGFsdGhvdWdoIGl0IGlzIG5vdCBwYXJ0IG9mIHRoZSBFVSBjdXN0b21zIHVuaW9uIG9yIGNvbW1vbiBhZ3JpY3VsdHVyYWwgcG9saWN5LiBJbiB0aGUgMjAxNiBFVSByZWZlcmVuZHVtLCA5NiBwZXJjZW50IG9mIHZvdGVycyBpbiBHaWJyYWx0YXJcdTIwMTMxOSwzMDBcdTIwMTN2b3RlZCB0byBSZW1haW4sIHRoZSBoaWdoZXN0IHByb3BvcnRpb24gb2YgYW55IGVsZWN0b3JhbCBkaXN0cmljdC4gRm91ciBwZXJjZW50LCBvciA4MjMsIHZvdGVkIHRvIExlYXZlLlxuIFxuU2luY2UgdGhlIEVVIHJlZmVyZW5kdW0sIHRoZSBpc3N1ZSBvZiBHaWJyYWx0YXJcdTIwMTlzIHNvdmVyZWlnbnR5IGhhcyBhc3N1bWVkIGEgcmVuZXdlZCBwcm9taW5lbmNlLiBPbiAzMSBNYXJjaCAyMDE3LCB0aGUgRXVyb3BlYW4gQ291bmNpbCByZWxlYXNlZCBpdHMgZHJhZnQgQnJleGl0IG5lZ290aWF0aW5nIGd1aWRlbGluZXMgdG8gbWVtYmVyIHN0YXRlcywgaW4gd2hpY2ggR2licmFsdGFyIGlzIHNwZWNpZmljYWxseSBtZW50aW9uZWQgaW4gcGFyYWdyYXBoIDIyOlxuIFxuIEFmdGVyIHRoZSBVbml0ZWQgS2luZ2RvbSBsZWF2ZXMgdGhlIFVuaW9uLCBubyBhZ3JlZW1lbnQgYmV0d2VlbiB0aGUgRVUgYW5kIHRoZSBVbml0ZWQgS2luZ2RvbSBtYXkgYXBwbHkgdG8gdGhlIHRlcnJpdG9yeSBvZiBHaWJyYWx0YXIgd2l0aG91dCB0aGUgYWdyZWVtZW50IGJldHdlZW4gdGhlIEtpbmdkb20gb2YgU3BhaW4gYW5kIHRoZSBVbml0ZWQgS2luZ2RvbS4gXG4gXG5BY2NvcmRpbmcgdG8gc29tZSBjb21tZW50YXRvcnMsIHRoaXMgbWF5IG1lYW4gYW55IEJyZXhpdCBkZWFsIHdpbGwgbm90IGFwcGx5IGF1dG9tYXRpY2FsbHkgdG8gR2licmFsdGFyLCBhbmQgZ2l2ZSBTcGFpbiB2ZXRvIHBvd2VyIG92ZXIgdGhlIGluY2x1c2lvbiBvZiBHaWJyYWx0YXIgaW4gYW55IEJyZXhpdCBkZWFsIHdpdGhvdXQgYW4gYWRkaXRpb25hbCBBbmdsby1TcGFuaXNoIGJpbGF0ZXJhbCBkZWFsIGNvbmNlcm5pbmcgdGhlIHRlcnJpdG9yeS4gVGhlIEdvdmVybm1lbnQgb2YgR2licmFsdGFyIGhhcyByZWFjdGVkIHRvIHRoaXMgY2xhdXNlIGJ5IHN0YXRpbmcgdGhhdCB3aGlsc3QgaXQgaW50ZW5kZWQgdG8gY29udGludWUgYXMgcGxhbm5lZCwgXHUyMDFjR2licmFsdGFyIGhhcyBzaGFtZWZ1bGx5IGJlZW4gc2luZ2xlZCBvdXQgW1x1MjAyNl0gZm9yIHVuZmF2b3VyYWJsZSB0cmVhdG1lbnQgYnkgdGhlIENvdW5jaWwsIGF0IHRoZSBiZWhlc3Qgb2YgU3BhaW5cdTIwMWQuIE90aGVyIGNvbW1lbnRhdG9ycyBub3RlZCB0aGlzIGluY2x1c2lvbiBtYXkgaGF2ZSBsaXR0bGUgaW1wb3J0YW5jZSwgYXMgYWxsIEVVIGdvdmVybm1lbnRzIGhhdmUgdGhlIHBvd2VyIHRvIHZldG8gYW55IGFncmVlbWVudCB3aXRoIHRoZSBVSywgeWV0IGl0IHNob3dlZCBjbGVhciBFVSBwb2xpdGljYWwgbG95YWx0eSB0byBTcGFpbiwgYW5kIGEgc2VuaW9yIEVVIG9mZmljaWFsIHNhaWQgXHUyMDFjdGhlIFVuaW9uIHdpbGwgc3RpY2sgdXAgZm9yIGl0cyBtZW1iZXJzLCBhbmQgdGhhdCBtZWFucyBTcGFpbiBub3dcdTIwMWQuIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wNS0wMlQxNzoyMDoxMC43ODQzNTQ0KzAxOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgSG91c2Ugb2YgTG9yZHMgTGlicmFyeSBicmllZmluZyBwcm92aWRlcyBiYWNrZ3JvdW5kIG9uIHRoZSBnb3Zlcm5tZW50LCBlY29ub215IGFuZCBzb2NpZXR5IG9mIEdpYnJhbHRhciwgaXRzIGhpc3RvcmljYWwgc3RhdHVzLCBhbmQgaW5mb3JtYXRpb24gb24gcmVjZW50IGRlYmF0ZXMgY29uY2VybmluZyBpdHMgc292ZXJlaWdudHkgZm9sbG93aW5nIHRoZSByZXN1bHQgb2YgdGhlIDIwMTYgRVUgcmVmZXJlbmR1bS4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIkxJRi0yMDE3LTAwNDEifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzQxNDA0MSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkxvcmRzIEluIEZvY3VzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiTGVhdmluZyB0aGUgRXVyb3BlYW4gVW5pb246IFN0YXR1cyBvZiBHaWJyYWx0YXIiLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTYxIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiRWNvbm9taWMgc2l0dWF0aW9uIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTg4IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiRVUgZXh0ZXJuYWwgcmVsYXRpb25zIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTkxIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiRVUgbGF3IGFuZCB0cmVhdGllcyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTU5MyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkV1cm9wZSJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTU5NSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkV1cm9wZWFuIENvdW5jaWwifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2NDciLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJJbnRlcm5hdGlvbmFsIGVjb25vbWljIHJlbGF0aW9ucyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTY1MCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkludGVybmF0aW9uYWwgcG9saXRpY3MgYW5kIGdvdmVybm1lbnQifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2NTEiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJJbnRlcm5hdGlvbmFsIHRyYWRlIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NzAxIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiT3ZlcnNlYXMgdGVycml0b3JpZXMifQogICAgICB9CiAgICAgIF0sICJ0eXBlIiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3NjaGVtYS9wYXJsI1Jlc2VhcmNoQnJpZWZpbmcifQogICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9yZXNvdXJjZXMvMzQyMTEzIiwgImFic3RyYWN0IiA6IHsiX3ZhbHVlIiA6ICJUaGlzIE5vdGUgbGlzdHMgR292ZXJubWVudCBiaWxscyBzaW5jZSAxOTc5IHdob3NlIG1haW4gQ29tbW9ucyBzdGFnZXMgaGF2ZSBiZWVuIHBhc3NlZCB3aXRoaW4gb25lIGRheS4gTm90IGFsbCBvZiB0aGVzZSBiaWxscyB3ZXJlIHNpbWlsYXJseSBmYXN0LXRyYWNrZWQgdGhyb3VnaCB0aGUgTG9yZHMuIEluIHRoZSBjYXNlIG9mIHRoZSBEYW5nZXJvdXMgRG9ncyBCaWxsIDE5OTAtOTEsIHRoZSBHb3Zlcm5tZW50IHdhbnRlZCB0aGUgYmlsbCBvbiB0aGUgc3RhdHV0ZSBib29rIGJlZm9yZSB0aGUgbG9uZyBwYXJsaWFtZW50YXJ5IHJlY2Vzcy4gQW4gZXhwZWRpdGVkIHBhc3NhZ2UgdGhyb3VnaCB0aGUgQ29tbW9ucyBhbGxvd2VkIHRpbWUgZm9yIGEgbm9ybWFsIHBhc3NhZ2UgdGhyb3VnaCB0aGUgTG9yZHMgd2l0aCBSb3lhbCBBc3NlbnQgYmVpbmcgZ3JhbnRlZCBiZWZvcmUgdGhlIEhvdXNlIHJvc2UgZm9yIHRoZSBzdW1tZXIgcmVjZXNzLlxuIFxuVGhlc2UgYW5kIG90aGVyIGlzc3VlcyBhcmUgZXhhbWluZWQgaW4gYSByZXBvcnQgZnJvbSB0aGUgSG91c2Ugb2YgTG9yZHMgU2VsZWN0IENvbW1pdHRlZSBvbiB0aGUgQ29uc3RpdHV0aW9uIFx1MjAxMyBGYXN0LXRyYWNrIGxlZ2lzbGF0aW9uOiBjb25zdGl0dXRpb25hbCBpbXBsaWNhdGlvbnMgYW5kIHNhZmVndWFyZHMgW0hMIDExNiAyMDA4LTA5XS4gVGhlIHJlcG9ydCBzZXRzIG91dCB0aGUgZm9sbG93aW5nIGp1c3RpZmljYXRpb25zIHdoaWNoIGhhdmUgYmVlbiB1c2VkIGZvciBmYXN0LXRyYWNraW5nIGxlZ2lzbGF0aW9uOsKgXG4gXG4gTm9ydGhlcm4gSXJlbGFuZCBwZWFjZSBwcm9jZXNzIGFuZCBkZXZvbHV0aW9uIHNldHRsZW1lbnQgKHRoZSBzaW5nbGUgbGFyZ2VzdCBjYXRlZ29yeSBpbiB0ZXJtcyBvZiBudW1iZXJzIG9mIEJpbGxzKSBUbyByZW1lZHkgYW4gYW5vbWFseSwgb3ZlcnNpZ2h0LCBlcnJvciBvciB1bmNlcnRhaW50eSB0aGF0IGhhcyBjb21lIHRvIGxpZ2h0IGluIGxlZ2lzbGF0aW9uOyBUbyByZXNwb25kIHRvIHRoZSBlZmZlY3RzIG9mIGEgY291cnQganVkZ2VtZW50IFRvIGVuc3VyZSB0aGF0IGxlZ2lzbGF0aW9uIGlzIGluIGZvcmNlIGluIHRpbWUgZm9yIGEgZm9ydGhjb21pbmcgZXZlbnQ7IFRvIGRlYWwgd2l0aCBlY29ub21pYyBjcmlzaXMgVG8gY2hhbmdlIGEgcHVibGljIGF1dGhvcml0eVx1MjAxOXMgYm9ycm93aW5nIG9yIGxlbmRpbmcgbGltaXQgb3Igb3RoZXIgZnVuZGluZyBpc3N1ZXM7IFRvIGRlYWwgd2l0aCBhIGNyaXNpcyBpbiBwcmlzb25zIGFzIGEgcmVzdWx0IG9mIGluZHVzdHJpYWwgYWN0aW9uIFRvIHJlc3BvbmQgdG8gaW50ZXJuYXRpb25hbCBhZ3JlZW1lbnRzIFRvIGltcGxlbWVudCBUcmVhc3VyeSBhbm5vdW5jZW1lbnQgaW4gdGhlIEJ1ZGdldCBvciBhdXR1bW4gc3RhdGVtZW50OyBUbyByZXNwb25kIHRvIHB1YmxpYyBjb25jZXJucyBDb3VudGVyLXRlcnJvcmlzbSByZWxhdGVkIFxuIFxuQXBwZW5kaXggNSBvZiB0aGUgcmVwb3J0IGxpc3RzIGFsbCBleHBlZGl0ZWQgYmlsbHMgMTk3OS0yMDA5IHdpdGggYSBicmllZiBzdW1tYXJ5IG9mIHRoZSBqdXN0aWZpY2F0aW9uIGdpdmVuLiJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDUtMDJUMTY6NTY6NDEuNjQyMzUxNiswMTowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJBIGxpc3Qgb2YgR292ZXJubWVudCBCaWxscyBzaW5jZSAxOTc5IHdob3NlIG1haW4gQ29tbW9ucyBzdGFnZXMgaGF2ZSBiZWVuIHBhc3NlZCB3aXRoaW4gb25lIGRheSJdLCAiaWRlbnRpZmllciIgOiB7Il92YWx1ZSIgOiAiU04wNDk3NCJ9CiAgICAgICwgInB1Ymxpc2hlciIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI2NyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIENvbW1vbnMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvNjEwNTUiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJQYXJsaWFtZW50IGFuZCBDb25zdGl0dXRpb24gQ2VudHJlIn0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy80MTQwMzMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJDb21tb25zIEJyaWVmaW5nIHBhcGVycyJ9CiAgICAgIH0KICAgICAgLCAidGl0bGUiIDogIkV4cGVkaXRlZCBsZWdpc2xhdGlvbjogR292ZXJubWVudCBCaWxscyByZWNlaXZpbmcgdGhlaXIgU2Vjb25kIGFuZCBUaGlyZCBSZWFkaW5nIG9uIHRoZSBzYW1lIGRheSBpbiB0aGUgSG91c2Ugb2YgQ29tbW9ucyIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2NTkiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMZWdpc2xhdGl2ZSBwcm9jZXNzIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NzA1IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiUGFybGlhbWVudGFyeSBwcm9jZWR1cmUifQogICAgICB9CiAgICAgIF0sICJ0eXBlIiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3NjaGVtYS9wYXJsI1Jlc2VhcmNoQnJpZWZpbmcifQogICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9yZXNvdXJjZXMvNjg5MzcyIiwgImFic3RyYWN0IiA6IHsiX3ZhbHVlIiA6ICJUaGUgTG9jYWwgR292ZXJubWVudCBGaW5hbmNlIEJpbGwgMjAxNi0xNyByZWNlaXZlZCBpdHMgU2Vjb25kIFJlYWRpbmcgaW4gdGhlIEhvdXNlIG9mIENvbW1vbnMgb24gMjMgSmFudWFyeSAyMDE3LiBJdCB3YXMgYXBwcm92ZWQgd2l0aG91dCBhIGRpdmlzaW9uLiBUaGUgUHVibGljIEJpbGwgQ29tbWl0dGVlIGhlYXJkIGV2aWRlbmNlIGZyb20gd2l0bmVzc2VzIGF0IGl0cyBmaXJzdCB0d28gc2Vzc2lvbnMgb24gMzEgSmFudWFyeSAyMDE3LiBJdCB0aGVuIHNhdCBvbiAyIEZlYnJ1YXJ5LCA3IEZlYnJ1YXJ5LCA5IEZlYnJ1YXJ5IGFuZCAyMSBGZWJydWFyeS4gVGhlIEJpbGwgY29tcGxldGVkIGl0cyBDb21taXR0ZWUgU3RhZ2UgaW4gdGhlIEhvdXNlIG9mIENvbW1vbnMgb24gMjEgRmVicnVhcnkgMjAxNy5cbiBcbkR1ZSB0byB0aGUgR2VuZXJhbCBFbGVjdGlvbiB0byBiZSBoZWxkIG9uIDggSnVuZSAyMDE3LCB0aGUgQmlsbCB3aWxsIG1ha2Ugbm8gZnVydGhlciBwcm9ncmVzcy4gSXQgd291bGQgbmVlZCB0byBiZSByZWludHJvZHVjZWQgZm9sbG93aW5nIHRoZSBHZW5lcmFsIEVsZWN0aW9uLiBUaGUgSG91c2Ugb2YgQ29tbW9ucyBhcHByb3ZlZCBhIGNhcnJ5LW92ZXIgbW90aW9uIGZvciB0aGUgQmlsbCBvbiAyMyBKYW51YXJ5IDIwMTcuIFRoaXMgd291bGQgaGF2ZSBwZXJtaXR0ZWQgdGhlIEJpbGwgdG8gcmVzdW1lIGluIHRoZSAyMDE3LTE4IFBhcmxpYW1lbnRhcnkgc2Vzc2lvbiwgYnV0IGl0IGRvZXMgbm90IGFwcGx5IHdoZW4gUGFybGlhbWVudCBpcyBkaXNzb2x2ZWQgYW5kIGEgR2VuZXJhbCBFbGVjdGlvbiBoZWxkLlxuIFxuMTAwJSByYXRlIHJldGVudGlvbiBcdTIwMTMgdGhlIHN1YmplY3QtbWF0dGVyIG9mIHBhcnQgMSBvZiB0aGUgQmlsbCBcdTIwMTMgd2FzIGV4cGVjdGVkIHRvIGJlZ2luIGluIHRoZSAyMDE5LTIwIGZpbmFuY2lhbCB5ZWFyLiBNaW5pc3RlcnMgaGF2ZSBpbmRpY2F0ZWQgdGhhdCB0aGlzIGRlYWRsaW5lIGlzIHVubGlrZWx5IHRvIGJlIG1ldCBkdWUgdG8gdGhlIEJpbGwgZmFsbGluZyBpbiBhZHZhbmNlIG9mIHRoZSBHZW5lcmFsIEVsZWN0aW9uLsKgU2ltaWxhcmx5LCBHb3Zlcm5tZW50IHBsYW5uaW5nIGRvY3VtZW50YXRpb24gdG8gZGF0ZSBoYXMgaW5kaWNhdGVkIHRoYXQgdGhlIEJpbGwgd2FzIGV4cGVjdGVkIHRvIHBhc3MgdGhyb3VnaCBQYXJsaWFtZW50IGluIGxhdGUgMjAxNywgYnV0IHRoaXMgZGVhZGxpbmUgdG9vIGlzIHN1YmplY3QgdG8gZGV2ZWxvcG1lbnRzIGFmdGVyIHRoZSBHZW5lcmFsIEVsZWN0aW9uLiBUaGlzIHdpbGwgYWxzbyBhZmZlY3QgdGhlIG90aGVyIG1lYXN1cmVzIGluIHRoZSBCaWxsLCBpbmNsdWRpbmcgaW5mcmFzdHJ1Y3R1cmUgc3VwcGxlbWVudHMgZm9yIG1ldHJvLW1heW9ycyBhbmQgbmV3IGJ1c2luZXNzIHJhdGUgcmVsaWVmcy7CoFxuIFxuVGhlIEdvdmVybm1lbnQgaGFzIG5vdCBwdWJsaXNoZWQgYW4gaW1wYWN0IGFzc2Vzc21lbnQgZm9yIHRoZSBCaWxsLiBIb3dldmVyLCBpdCBoYXMgcHVibGlzaGVkIGEgbnVtYmVyIG9mIGZhY3RzaGVldHMgb24gdGhlIGluZGl2aWR1YWwgcG9saWN5IGVsZW1lbnRzIG9mIHRoZSBCaWxsLiBJdCBoYXMgYWxzbyBwdWJsaXNoZWQgS2VlbGluZyBzY2hlZHVsZXMuXG4gXG5PbiAxNSBGZWJydWFyeSAyMDE3IHRoZSBHb3Zlcm5tZW50IGhhcyBwdWJsaXNoZWQgYW4gaW5pdGlhbCByZXNwb25zZSB0byB0aGUgSnVseSAyMDE2IGNvbnN1bHRhdGlvbiBTZWxmLXN1ZmZpY2llbnQgbG9jYWwgZ292ZXJubWVudDogcHJvcG9zYWxzIGZvciAxMDAlIGJ1c2luZXNzIHJhdGUgcmV0ZW50aW9uLiBUaGlzIGNvbnNpc3RlZCBvZiBhIHN1bW1hcnkgb2YgcmVzcG9uc2VzIGFuZCByZXNwb25zZSB0byBjb25zdWx0YXRpb24gYW5kIGEgZnVydGhlciBjb25zdWx0YXRpb24uIFRoZSBCaWxsIHByb3ZpZGVzIHBvd2VycyAoYW1vbmdzdCBvdGhlciB0aGluZ3MpIHRvIGludHJvZHVjZSAxMDAlIGJ1c2luZXNzIHJhdGUgcmV0ZW50aW9uIGZvciBsb2NhbCBnb3Zlcm5tZW50LlxuIFxuQSBmdXJ0aGVyIGNvbnN1bHRhdGlvbiBvbiBuZWVkcyBhc3Nlc3NtZW50IGlzIHRvIGJlIHB1Ymxpc2hlZCBpbiBzdW1tZXIgMjAxOCwgd2l0aCBmaW5hbCBkZWNpc2lvbnMgb24gdGhlIHNoYXBlIG9mIHRoZSAxMDAlIHJhdGUgcmV0ZW50aW9uIHN5c3RlbSBhbmQgbmVlZHMgYXNzZXNzbWVudCBleHBlY3RlZCBpbiBhdXR1bW4gMjAxOC4gVGhlIGFzcGVjdHMgb2YgdGhlIG5ldyBzeXN0ZW0gdGhhdCB3aWxsIGNyaXRpY2FsbHkgaW5mbHVlbmNlIG91dGNvbWVzIGZvciBsb2NhbCBhdXRob3JpdGllcyBcdTIwMTMgc3VjaCBhcyB0aGUgcm9sZSBvZiBuZWVkcyBhc3Nlc3NtZW50LCBob3cgb2Z0ZW4gXHUyMDE4cmVzZXRzXHUyMDE5IGFyZSB0byB0YWtlIHBsYWNlLCBhbmQgaG93IHJhdGUgcmV2ZW51ZSBpcyBkaXZpZGVkIGluIHR3by10aWVyIGFyZWFzIC0gYXJlIG5vdCBmb3VuZCBvbiB0aGUgZmFjZSBvZiB0aGUgQmlsbCBhbmQgYXJlIHRoZSBzdWJqZWN0IG9mIHRoZSBvbmdvaW5nIGNvbnN1bHRhdGlvbiBwcm9jZXNzLiBUaGVzZSBhcmUgZGlzY3Vzc2VkIGZ1cnRoZXIgaW4gc2VjdGlvbiAyIG9mIHRoZSBMaWJyYXJ5IGJyaWVmaW5nIFJldmlld2luZyBhbmQgcmVmb3JtaW5nIGJ1c2luZXNzIHJhdGVzLlxuIFxuwqBcbiBcbsKgIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wNC0yOFQwOTo0NzozNS4xOTY1MzQ3KzAxOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgYnJpZWZpbmcgcGFwZXIgbW9uaXRvcnMgdGhlIHByb2dyZXNzIHRocm91Z2ggUGFybGlhbWVudCBvZiB0aGUgTG9jYWwgR292ZXJubWVudCBGaW5hbmNlIEJpbGwgMjAxNi0xNy4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIkNCUC03ODk5In0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1MjY3IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgQ29tbW9ucyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy82MTA1NSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlBhcmxpYW1lbnQgYW5kIENvbnN0aXR1dGlvbiBDZW50cmUifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzQxNDAzMyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkNvbW1vbnMgQnJpZWZpbmcgcGFwZXJzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiTG9jYWwgR292ZXJubWVudCBGaW5hbmNlIEJpbGwgMjAxNi0xNzogcHJvZ3Jlc3Mgb2YgdGhlIEJpbGwiLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjY2IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTG9jYWwgZ292ZXJubWVudCJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTc2NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlRheGF0aW9uIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzcyNDY5MiIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiSW4gc28gZG9pbmcsIHRoZSBicmllZmluZyBjaGFydHMgdGhlIHByaW5jaXBhbCBkZXZlbG9wbWVudHMgYWZmZWN0aW5nIHRoZSBIb3VzZSBvdmVyIHRoZSBjb3Vyc2Ugb2YgaXRzIGhpc3RvcnkgYW5kIGhpZ2hsaWdodHMgdGhlIG1haW4gY2hhbmdlcyBhbmQgbGVnaXNsYXRpb24gcGFzc2VkLiBTaW5jZSB0aGUgMTl0aCBjZW50dXJ5IGEgbnVtYmVyIG9mIEFjdHMgb2YgUGFybGlhbWVudCBoYXZlIGhhZCBhIG5vdGV3b3J0aHkgZWZmZWN0IG9uIHRoZSByb2xlLCBwb3dlcnMgYW5kIG1lbWJlcnNoaXAgb2YgdGhlIEhvdXNlIG9mIExvcmRzLiBUaGVzZSBpbmNsdWRlOlxuIFxuIEFwcGVsbGF0ZSBKdXJpc2RpY3Rpb24gQWN0IDE4NzYgUGFybGlhbWVudCBBY3QgMTkxMSBhbmQgMTk0OSBMaWZlIFBlZXJhZ2VzIEFjdCAxOTU4IFBlZXJhZ2UgQWN0IDE5NjMgSG91c2Ugb2YgTG9yZHMgQWN0IDE5OTkgSG91c2Ugb2YgTG9yZHMgUmVmb3JtIEFjdCAyMDE0IEhvdXNlIG9mIExvcmRzIChFeHB1bHNpb24gYW5kIFN1c3BlbnNpb24pIEFjdCAyMDE1IFxuIFxuVGhpcyBicmllZmluZyBpZGVudGlmaWVzIG90aGVyIHByb3Bvc2FscyBtYWRlIHRoYXQgaGF2ZSBzb3VnaHQgdG8gcmVmb3JtIHRoZSBIb3VzZSwgZWl0aGVyIGluIHJlZ2FyZCB0byBpdHMgcm9sZSwgcG93ZXJzIGFuZC9vciBtZW1iZXJzaGlwLiBTaWduaWZpY2FudCByZWZvcm0gcHJvcG9zYWxzIG92ZXIgdGhlIGxhc3QgMTAwIHllYXJzLCBpbmNsdWRpbmcgdGhvc2Ugc3BvbnNvcmVkIGJ5IHRoZSBHb3Zlcm5tZW50IG9mIHRoZSBkYXksIGhhdmUgaW5jbHVkZWQ6wqBcbiBcbiBCcnljZSBDb21taXNzaW9uIDE5MTggUGFybGlhbWVudCAoTm8gMikgQmlsbCAxOTY4XHUyMDEzNjkgV2FrZWhhbSBDb21taXNzaW9uIDIwMDAgSG91c2Ugb2YgTG9yZHMgUmVmb3JtIEJpbGwgMjAxMlx1MjAxMzEzIFN0cmF0aGNseWRlIFJldmlldyAoMjAxNSkgXG4gXG5UaGlzIHVwZGF0ZWQgYnJpZWZpbmcgYWxzbyBzdW1tYXJpc2VzIHRoZSBwcm9wb3NhbHMgZm9yIHJlZm9ybSBkZWJhdGVkIGR1cmluZyB0aGUgMjAxNVx1MjAxMzE3IHBhcmxpYW1lbnQuXG4gXG7CoCJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDQtMjdUMTc6NDc6MDcuNjQ0NzMxKzAxOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgSG91c2Ugb2YgTG9yZHMgTGlicmFyeSBicmllZmluZyBwcm92aWRlcyBhIHNob3J0IGludHJvZHVjdGlvbiB0byB0aGUgaGlzdG9yeSBvZiB0aGUgSG91c2Ugb2YgTG9yZHMuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMTE4tMjAxNy0wMDIwIn0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8zNDY3MTMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBMaWJyYXJ5IG5vdGVzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiSGlzdG9yeSBvZiB0aGUgSG91c2Ugb2YgTG9yZHM6IEEgU2hvcnQgSW50cm9kdWN0aW9uIiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTYyOCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzcyNDA1NyIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiRmFrZSBuZXdzIGlzIG5vdCBhIG5ldyB0ZXJtLiBJbiB0aGUgMjB0aCBDZW50dXJ5LCBpdHMgcG9wdWxhcml0eSBpbiB0aGUgcHJpbnRlZCBtZWRpYSByb3NlIGZyb20gdGhlIGVuZCBvZiB0aGUgRmlyc3QgV29ybGQgV2FyIHRvIGEgcGVhayBpbiAxOTQwXHUyMDE0Y29pbmNpZGluZyB3aXRoIHRoZSBvbnNldCBvZiB0aGUgU2Vjb25kIFdvcmxkIFdhci4gQWNhZGVtaWMgS2FsZXYgTGVldGFydSwgd3JpdGluZyBpbiBGb3JiZXMgbWFnYXppbmUsIHN1Z2dlc3RlZCB0aGF0IHRoaXMgcmVmbGVjdGVkIFx1MjAxY3RoZSByaXNlIG9mIHByb3BhZ2FuZGEgcmVzZWFyY2ggYW5kIHRoZSBpbXBhY3QgdGhhdCBmYWxzZSBpbmZvcm1hdGlvbiBjb3VsZCBoYXZlIG9uIHNvY2lldGllc1x1MjAxZCBhdCB0aGF0IHRpbWUuIFRoZSBjdXJyZW50IHJlc3VyZ2VuY2Ugb2YgdGhlIHRlcm0gYmVnYW4gc29vbiBhZnRlciB0aGUgVVMgcHJlc2lkZW50aWFsIGVsZWN0aW9uIG9uIDggTm92ZW1iZXIgMjAxNiwgd2hlbiBzcGVjdWxhdGlvbiBiZWdhbiB0aGF0IGZhbHNlIG5ld3Mgc3RvcmllcyBjb25jZXJuaW5nIHRoZSB0d28gbWFpbiBjYW5kaWRhdGVzIGNvdWxkIGhhdmUgaGFkIGFuIGltcGFjdCBvbiB0aGUgb3V0Y29tZSBvZiB0aGUgZWxlY3Rpb24uXG4gXG5UaGUgc3RvcmllcyBpbiBxdWVzdGlvbiBpbmNsdWRlZFx1MjAxNGFtb25nIG1hbnkgb3RoZXJzXHUyMDE0Y2xhaW1zIHRoYXQgUG9wZSBGcmFuY2lzIGVuZG9yc2VkIERvbmFsZCBUcnVtcCBmb3IgdGhlIHByZXNpZGVuY3ksIHRoYXQgSGlsbGFyeSBDbGludG9uXHUyMDE5cyBjYW1wYWlnbiB0ZWFtIHdlcmUgaW52b2x2ZWQgaW4gYSBzYXRhbmljIGN1bHQsIGFuZCwganVzdCBhZnRlciB0aGUgZWxlY3Rpb24sIHRoYXQgVHJ1bXAgc3VwcG9ydGVycyB3ZXJlIGVuZ2FnaW5nIGluIHJhY2lzdCBjaGFudHMgYXQgYW4gZWxlY3Rpb24gdmljdG9yeSBwYXJ0eS4gQW4gYW5hbHlzaXMgYnkgQnV6emZlZWQgaGFzIGNsYWltZWQgdGhhdCwgXHUyMDFjaW4gdGhlIGZpbmFsIHRocmVlIG1vbnRocyBvZiB0aGUgVVMgcHJlc2lkZW50aWFsIGNhbXBhaWduLCB0aGUgdG9wLXBlcmZvcm1pbmcgZmFrZSBlbGVjdGlvbiBuZXdzIHN0b3JpZXMgb24gRmFjZWJvb2sgZ2VuZXJhdGVkIG1vcmUgW3JlYWRlcl0gZW5nYWdlbWVudCB0aGFuIHRoZSB0b3Agc3RvcmllcyBmcm9tIG1ham9yIG5ld3Mgb3V0bGV0cyBzdWNoIGFzIHRoZcKgTmV3IFlvcmsgVGltZXMswqBXYXNoaW5ndG9uIFBvc3QswqBIdWZmaW5ndG9uIFBvc3QsIE5CQyBOZXdzIGFuZCBvdGhlcnNcdTIwMWQuXG4gXG5IdW50IEFsbGNvdHQgYW5kIE1hdHRoZXcgR2VudHprb3csIHJlc2VhcmNoZXJzIGF0IFN0YW5mb3JkIFVuaXZlcnNpdHkgaW4gQ2FsaWZvcm5pYSwgaGF2ZSBkZWZpbmVkIGZha2UgbmV3cyBhcyBcdTIwMWNuZXdzIGFydGljbGVzIHRoYXQgYXJlIGludGVudGlvbmFsbHkgYW5kIHZlcmlmaWFibHkgZmFsc2VcdTIwMWRcdTIwMTRwYXJ0aWN1bGFybHkgd2l0aCBwb2xpdGljYWwgaW1wbGljYXRpb25zLCBhbmQgZXNwZWNpYWxseSB0aG9zZSB0aGF0IGdhaW4gXHUyMDFjZW5vcm1vdXMgdHJhY3Rpb25cdTIwMWQgaW4gdGhlIHBvcHVsYXIgaW1hZ2luYXRpb24uIEl0IGlzIHJlbGF0ZWQsIHRob3VnaCBub3QgaWRlbnRpY2FsLCB0byB0aGUgY29uY2VwdCBvZiBcdTIwMWNwb3N0LXRydXRoXHUyMDFkLCB3aGljaCwgYXMgT3hmb3JkIERpY3Rpb25hcmllcyBXb3JkIG9mIHRoZSBZZWFyIDIwMTYsIGhhcyBiZWVuIGRlZmluZWQgYXMgYSBzaXR1YXRpb24gd2hlcmUgXHUyMDFjb2JqZWN0aXZlIGZhY3RzIGFyZSBsZXNzIGluZmx1ZW50aWFsIGluIHNoYXBpbmcgcHVibGljIG9waW5pb24gdGhhbiBhcHBlYWxzIHRvIGVtb3Rpb24gYW5kIHBlcnNvbmFsIGJlbGllZlx1MjAxZC4ifQogICAgICAsICJkYXRlIiA6IHsiX3ZhbHVlIiA6ICIyMDE3LTA0LTI1VDE2OjU1OjU0LjA1NzcyMzQrMDE6MDAiLCAiX2RhdGF0eXBlIiA6ICJkYXRlVGltZSJ9CiAgICAgICwgImRlc2NyaXB0aW9uIiA6IFsiVGhpcyBIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5IGJyaWVmaW5nIHByb3ZpZGVzIGluZm9ybWF0aW9uIG9uIFx1MjAxY2Zha2UgbmV3c1x1MjAxZC4gVGhlIHRlcm0gXHUyMDFjZmFrZSBuZXdzXHUyMDFkIGhhcyBiZWNvbWUgaW5jcmVhc2luZ2x5IHByb21pbmVudCBpbiByZWNlbnQgbW9udGhzLiBSZXNlYXJjaGVycyBoYXZlIHJlcG9ydGVkIGEgc2hhcnAgZ3Jvd3RoIGluIGl0cyB1c2UgaW4gdGhlIG1lZGlhIHNpbmNlIE5vdmVtYmVyIDIwMTYsIGFmdGVyIGJlaW5nIGxhcmdlbHkgaW4gYWJleWFuY2UgZm9yIG1hbnkgeWVhcnMuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMSUYtMjAxNy0wMDQwIn0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy80MTQwNDEiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBJbiBGb2N1cyJ9CiAgICAgIH0KICAgICAgLCAidGl0bGUiIDogIkZha2UgTmV3cyIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU1MDciLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJCcm9hZGNhc3RpbmcifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2NzEiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJNZWRpYSJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTcxOSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlByZXNzIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzcyNDA1NiIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiSW4gcmVjZW50IHllYXJzLCB3aXRoIHRoZSByaXNlIGluIHJlZnVnZWVzIGFuZCBtaWdyYW50cyBhdHRlbXB0aW5nIHRvIHJlYWNoIEV1cm9wZSwgdGhlIHByb2ZpbGUgb2YgRnJvbnRleCBhbmQgdGhlIGRlbWFuZHMgcGxhY2VkIG9uIGl0IGhhdmUgaW5jcmVhc2VkLiBEdXJpbmcgdGhpcyBwZXJpb2QsIHdoaWxlIHRoZSBVSyBoYXMgbm90IGJlZW4gYSBmdWxsIG1lbWJlciwgaXQgaGFzIGJlZW4gcmVwcmVzZW50ZWQgb24gaXRzIG1hbmFnZW1lbnQgYm9hcmQsIGFuZCBpdHMgaW52b2x2ZW1lbnQgaW4gRnJvbnRleCBvcGVyYXRpb25zIGhhcyBpbmNyZWFzZWQuIFdpdGggdGhlIFVLIG5vdyBsZWF2aW5nIHRoZSBFVSwgYnV0IGV4cHJlc3NpbmcgaW4gaXRzIEFydGljbGUgNTAgbm90aWZpY2F0aW9uIGEgZGVzaXJlIHRvIG1haW50YWluIGV4aXN0aW5nIGFycmFuZ2VtZW50cyBmb3Igc2VjdXJpdHkgYW5kIGJvcmRlciBjb29wZXJhdGlvbiwgdGhlIFVLXHUyMDE5cyByZWxhdGlvbnNoaXAgd2l0aCBGcm9udGV4IG1heSBuZWVkIHRvIGJlIHJlLWV4YW1pbmVkLiJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDQtMjVUMTY6NDk6MTAuODM2NjUzMiswMTowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIEhvdXNlIG9mIExvcmRzIExpYnJhcnkgYnJpZWZpbmcgcHJvdmlkZXMgaW5mb3JtYXRpb24gb24gRnJvbnRleCBhbmQgVUsgYm9yZGVyIHNlY3VyaXR5IGNvb3BlcmF0aW9uIHdpdGhpbiBFdXJvcGUuIFRoZSBFdXJvcGVhbiBCb3JkZXIgYW5kIENvYXN0IEd1YXJkIEFnZW5jeSwgY29tbW9ubHkga25vd24gYXMgRnJvbnRleCwgaXMgdGhlIGJvZHkgcmVzcG9uc2libGUgZm9yIGNvb3JkaW5hdGluZyBhbmQgaW1wcm92aW5nIHRoZSBib3JkZXIgc2VjdXJpdHkgb2YgdGhlIFNjaGVuZ2VuIGFyZWEuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMSUYtMjAxNy0wMDM5In0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy80MTQwNDEiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBJbiBGb2N1cyJ9CiAgICAgIH0KICAgICAgLCAidGl0bGUiIDogIkxlYXZpbmcgdGhlIEV1cm9wZWFuIFVuaW9uOiBGcm9udGV4IGFuZCBVSyBCb3JkZXIgU2VjdXJpdHkgQ29vcGVyYXRpb24gV2l0aGluIEV1cm9wZSIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU1ODgiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJFVSBleHRlcm5hbCByZWxhdGlvbnMifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU1OTMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJFdXJvcGUifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2NDkiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJJbnRlcm5hdGlvbmFsIG9yZ2FuaXNhdGlvbnMifQogICAgICB9CiAgICAgIF0sICJ0eXBlIiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3NjaGVtYS9wYXJsI1Jlc2VhcmNoQnJpZWZpbmcifQogICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9yZXNvdXJjZXMvNzI0MDU1IiwgImFic3RyYWN0IiA6IHsiX3ZhbHVlIiA6ICJGb3IgZWFjaCBvZiB0aGUgZ2VuZXJhbCBlbGVjdGlvbnMgYmV0d2VlbiAxOTU5IGFuZCAyMDE1LCBkaXNzb2x1dGlvbiBob25vdXJzIGxpc3RzIHdlcmUgcHVibGlzaGVkLCB3aGljaCBpbiBlYWNoIGNhc2UgY29udGFpbmVkIG5vbWluYXRpb25zIGZvciBuZXcgcGVlcmFnZXMuIFRoZSB0aW1pbmcgYW5kIG5hdHVyZSBvZiB0aGVzZSBsaXN0cyBoYXMgdmFyaWVkLCB3aXRoIHNvbWUgYmVpbmcgaXNzdWVkIHByaW9yIHRvIGVsZWN0aW9ucyB0YWtpbmcgcGxhY2UgYW5kIHNvbWUgZ2VuZXJhbCBlbGVjdGlvbnMgcmVzdWx0aW5nIGluIG11bHRpcGxlIGxpc3RzLiBJbiB0b3RhbCwgMzA5IHBlZXJzIGhhdmUgYmVlbiBjcmVhdGVkIGluIHRoaXMgbWFubmVyICgzMDEgbGlmZSBwZWVycyBhbmQgOCBuZXcgaGVyZWRpdGFyeSBwZWVyYWdlcykuIEhvd2V2ZXIsIHNvbWUgb2YgdGhlc2UgbGlzdHMgbWF5IGFsc28gaGF2ZSBpbmNsdWRlZCBwZWVycyBub21pbmF0ZWQgYXMgYSByZXN1bHQgb2YgYW4gb3V0Z29pbmcgcHJpbWUgbWluaXN0ZXJcdTIwMTlzIHJlc2lnbmF0aW9uIGhvbm91cnMuIFRoZXNlIGFyZSBub3QgYWx3YXlzIGVhc3kgdG8gZGlzYWdncmVnYXRlLCB1bmxlc3MgZXhwbGljaXRseSBoaWdobGlnaHRlZCBpbiB0aGUgYW5ub3VuY2VtZW50cy7CoFxuIFxuVGhpcyBMaWJyYXJ5IGJyaWVmaW5nIGxpc3RzIHRoZSBudW1iZXIgb2YgcGVlcmFnZXMgY3JlYXRlZCB0aHJvdWdoIGRpc3NvbHV0aW9uIGxpc3RzIGF0IGVhY2ggZ2VuZXJhbCBlbGVjdGlvbiBzaW5jZSAxOTU5LCBhbG9uZ3NpZGUgZGF0ZXMgb2YgdGhlIGFubm91bmNlbWVudHMgYW5kIGRldGFpbHMgb2YgdGhlIHByaW1lIG1pbmlzdGVycyBpbiBvZmZpY2UgYmVmb3JlIGFuZCBhZnRlciBlYWNoIGVsZWN0aW9uLiJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDQtMjVUMTU6NDI6MTguNTUyODQ1KzAxOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgSG91c2Ugb2YgTG9yZHMgTGlicmFyeSBicmllZmluZyBwcm92aWRlcyBpbmZvcm1hdGlvbiBvbiBwZWVyYWdlIGNyZWF0aW9ucyBhbm5vdW5jZWQgdGhyb3VnaCBkaXNzb2x1dGlvbiBsaXN0cyBhdCBlYWNoIGdlbmVyYWwgZWxlY3Rpb24gc2luY2UgMTk1OC4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIkxJRi0yMDE3LTAwMzgifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzQxNDA0MSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkxvcmRzIEluIEZvY3VzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiRGlzc29sdXRpb24gSG9ub3VyczogUGVlcmFnZSBDcmVhdGlvbnMgMTk1OS0yMDE1IiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTYyOCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1Njc1IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTWVtYmVycyBvZiB0aGUgTG9yZHMifQogICAgICB9CiAgICAgIF0sICJ0eXBlIiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3NjaGVtYS9wYXJsI1Jlc2VhcmNoQnJpZWZpbmcifQogICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9yZXNvdXJjZXMvNzIzNTg5IiwgImFic3RyYWN0IiA6IHsiX3ZhbHVlIiA6ICJUaGUgRGlnaXRhbCBFY29ub215IEJpbGwgd2FzIHB1Ymxpc2hlZCBpbiBKdWx5IDIwMTYgYW5kIGNvbnNpZGVyZWQgYnkgdGhlIENvbW1vbnMgaW4gQXV0dW1uIDIwMTYsIGNvbXBsZXRpbmcgQ29tbW9ucyBzdGFnZXMgb24gMjggTm92ZW1iZXIgMjAxNi4gSXQgd2FzIGludHJvZHVjZWQgaW50byB0aGUgSG91c2Ugb2YgTG9yZHMgb24gMjkgTm92ZW1iZXIsIGFuZCB0aGlyZCByZWFkaW5nIHRvb2sgcGxhY2Ugb24gNSBBcHJpbCAyMDE3LlxuIFxuVGhlIEJpbGwgY29udGFpbnMgYSBsYXJnZSBudW1iZXIgb2YgYW1lbmRtZW50cy4gVGhlIG1ham9yaXR5IG51bWJlciBvZiB0aGVzZSBhbWVuZG1lbnRzIHJlbGF0ZSB0byB0aGUgZGF0YSBzaGFyaW5nIHByb3Bvc2FscyBpbiB0aGUgQmlsbCBhbmQgaGF2ZSBiZWVuIHB1dCBmb3J3YXJkIGJ5IHRoZSBHb3Zlcm5tZW50LiBJdCBkb2VzIGhvd2V2ZXIgaW50cm9kdWNlIGEgbnVtYmVyIG9mIG5ldyBtZWFzdXJlcyBhcm91bmQgdGVsZXZpc2lvbiwgc2Vjb25kYXJ5IHRpY2tldGluZywgbW9iaWxlIHBob25lIHVzZSBpbiBkcnVnIGRlYWxpbmcsIGUtYm9vayBsZW5kaW5nLCBJbmZvcm1hdGlvbiBDb21taXNzaW9uZXIgY2hhcmdlcyBhbmQgbWFuYWdpbmcgdGhlIHBlbnNpb24gbGlhYmlsaXRpZXMgb2YgQlQvT3BlbnJlYWNoLlxuIFxuQW4gb3V0bGluZSBvZiB0aGUgQmlsbCBhbmQgaXRzIHB1cnBvc2UgaXMgZ2l2ZW4gaW4gdGhlIExpYnJhcnlcdTIwMTlzIHBhcGVyIHByZXBhcmVkIGZvciBzZWNvbmQgcmVhZGluZzogQ29tbW9ucyBMaWJyYXJ5IGFuYWx5c2lzIG9mIHRoZSBEaWdpdGFsIEVjb25vbXkgQmlsbCAoU2VwdGVtYmVyIDIwMTYpLlxuIFxuVGhlIGtleSBhbWVuZG1lbnRzIG1hZGUgdG8gdGhlIEJpbGwgaW4gdGhlIExvcmRzIGFyZTpcbiBcbiBPcHBvc2l0aW9uIGFtZW5kbWVudHMgcHV0dGluZyBtb3JlIGRldGFpbCBpbiBwcmltYXJ5IGxlZ2lzbGF0aW9uIG9uIGNvbnRlbnRzIG9mIHRoZSBmdXR1cmUgb3JkZXIgZm9yIHRoZSBVbml2ZXJzYWwgU2VydmljZSBPYmxpZ2F0aW9uIChVU08pOyBPcHBvc2l0aW9uIGFtZW5kbWVudHMgYXJvdW5kIG1vYmlsZSBwaG9uZSBiaWxsIGxpbWl0cyBhbmQgc3dpdGNoaW5nOyBDaGFuZ2VzIHRvIHRoZSBkZWZpbml0aW9uIG9mIHBvcm5vZ3JhcGhpYyBtYXRlcmlhbCB0byBiZSBjb3ZlcmVkIGJ5IHRoZSBhZ2UgdmVyaWZpY2F0aW9uIGNvbnRyb2xzIGFuZCBvdGhlciBhbWVuZG1lbnRzIG9uIHRoZSB3YXkgYWdlIHZlcmlmaWNhdGlvbiB3b3VsZCB3b3JrIChHb3Zlcm5tZW50IGFtZW5kbWVudHMpOyBPcHBvc2l0aW9uIGFtZW5kbWVudHMgd2VyZSBhZGRlZCBvbiBhIGNvZGUgb2YgcHJhY3RpY2UgZm9yIHNvY2lhbCBtZWRpYTsgR292ZXJubWVudCBhbWVuZG1lbnRzIHdlcmUgbWFkZSB0byB0aGUgZGF0YSBzaGFyaW5nIGVsZW1lbnRzIG9mIHRoZSBCaWxsIChhbmQgdGhlc2UgYXJlIHRoZSBtYWpvcml0eSBvZiBhbWVuZG1lbnRzIG92ZXJhbGwpOyBBbWVuZG1lbnRzIHdpdGggcmVnYXJkIHRvIGEgQkJDIExpY2VuY2UgRmVlIENvbW1pc3Npb24sIHRoZSBwcm92aXNpb24gb2YgY2hpbGRyZW5cdTIwMTlzIFRWLCBlLWJvb2sgbGVuZGluZywgYWNjZXNzaWJpbGl0eSBvZiBvbi1kZW1hbmQgdGVsZXZpc2lvbiwgZWxlY3Ryb25pYyBwcm9ncmFtbWluZyBndWlkZXMsIGNvbmRpdGlvbnMgYXJvdW5kIHRlbGV2aXNpbmcgZXZlbnRzIG9mIG5hdGlvbmFsIGludGVyZXN0OyBHb3Zlcm5tZW50IGFtZW5kbWVudHMgdG8gcHJvdmlkZSBhIHBvd2VyIHRvIGludHJvZHVjZSBhbiBvZmZlbmNlIHRvIHVzZSBib3RzIHRvIHB1cmNoYXNlIHRpY2tldHMgZm9yIHJlY3JlYXRpb25hbCwgc3BvcnRpbmcgb3IgY3VsdHVyYWwgZXZlbnRzIGluIGV4Y2VzcyBvZiB0aGUgbWF4aW11bSBhbGxvd2VkOyBHb3Zlcm5tZW50IGFtZW5kbWVudHMgdGhhdCB3b3VsZCBhbGxvdyB0aGUgYmxvY2tpbmcgb2YgbW9iaWxlIHBob25lcyB1c2VkIGZvciBkcnVnIGRlYWxpbmc7IEdvdmVybm1lbnQgYW1lbmRtZW50cyB0byBkZWFsIHdpdGggcGVuc2lvbiBsaWFiaWxpdGllcyByZWxhdGluZyB0byBCVC9PcGVucmVhY2ggc3RydWN0dXJhbCBjaGFuZ2VzLCBhbmQgYXJvdW5kIEluZm9ybWF0aW9uIENvbW1pc3Npb25lciBjaGFyZ2VzLiBcbiBcbk9yaWdpbmFsbHksIHRoZSBCaWxsIGV4dGVuZGVkIHRvIHRoZSB3aG9sZSBvZiB0aGUgVUsgd2l0aCB0d28gZXhjZXB0aW9uczogc2hhcmluZyBkYXRhIGluIHJlbGF0aW9uIHRvIGNpdmlsIHJlZ2lzdHJhdGlvbiBkb2VzIG5vdCBhcHBseSBpbiBTY290bGFuZCBhbmQgTm9ydGhlcm4gSXJlbGFuZCwgd2hpbGUgdGhlIHByb3Zpc2lvbnMgZm9yIHNoYXJpbmcgZW5lcmd5IHN1cHBsaWVyIGRhdGEgZG8gbm90IGFwcGx5IGluIE5vcnRoZXJuIElyZWxhbmQuIE5ldyBkYXRhIHNoYXJpbmcgcHJvdmlzaW9ucyBwcm9wb3NlZCBpbiB0aGUgYW1lbmRtZW50cyByZWxhdGluZyB0byB3YXRlciBwb3ZlcnR5IG9ubHkgYXBwbHkgdG8gRW5nbGFuZCBhbmQgV2FsZXMuXG4gXG5BIGxpc3Qgb2YgTG9yZHMgYW1lbmRtZW50cyB0byBiZSBjb25zaWRlcmVkIGlzIGF2YWlsYWJsZSBhbG9uZyB3aXRoIGV4cGxhbmF0b3J5IG5vdGVzLiBBbWVuZG1lbnRzIDI0OSB0byAyNTIgY3JlYXRlIGEgY2hhcmdpbmcgcG93ZXIgaW4gcmVsYXRpb24gdG8gdGhlIEluZm9ybWF0aW9uIENvbW1pc3Npb25lciBzbyB3aWxsIGJlIHN1YmplY3QgdG8gYSB3YXlzIGFuZCBtZWFucyByZXNvbHV0aW9uLiJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDQtMjRUMTQ6MzM6NDEuMjc5NDE4NyswMTowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJMb3JkcyBhbWVuZG1lbnRzIHRvIHRoZSBEaWdpdGFsIEVjb25vbXkgQmlsbCB3aWxsIGJlIGNvbnNpZGVyZWQgYnkgdGhlIEhvdXNlIG9mIENvbW1vbnMgb24gMjYgQXByaWwgMjAxNy4gVGhlcmUgYXJlIDI4OSBhbWVuZG1lbnRzLCBhbmQgdGhpcyBwYXBlciBvdXRsaW5lcyB0aGUga2V5IGNoYW5nZXMgcHV0IGZvcndhcmQuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJDQlAtNzk1MyJ9CiAgICAgICwgInB1Ymxpc2hlciIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI2NyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIENvbW1vbnMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUwMzYiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb21lIEFmZmFpcnMgU2VjdGlvbiJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy82NzcxNiIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlNjaWVuY2UgYW5kIEVudmlyb25tZW50IFNlY3Rpb24ifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzQxNDAzMyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkNvbW1vbnMgQnJpZWZpbmcgcGFwZXJzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiRGlnaXRhbCBFY29ub215IEJpbGw6IExvcmRzIEFtZW5kbWVudHMiLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTA3IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQnJvYWRjYXN0aW5nIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTU2IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiRHJ1Z3MgY3JpbWVzIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjUyIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSW50ZXJuZXQgYW5kIGN5YmVyY3JpbWUifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2NjEiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMaWJyYXJpZXMifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU3NjYiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJUZWxlY29tbXVuaWNhdGlvbnMifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU3NzMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJVdGlsaXRpZXMifQogICAgICB9CiAgICAgIF0sICJ0eXBlIiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3NjaGVtYS9wYXJsI1Jlc2VhcmNoQnJpZWZpbmcifQogICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9yZXNvdXJjZXMvNzIyNzQxIiwgImFic3RyYWN0IiA6IHsiX3ZhbHVlIiA6ICJUaGUgTm9ydGhlcm4gSXJlbGFuZCAoTWluaXN0ZXJpYWwgQXBwb2ludG1lbnRzIGFuZCBSZWdpb25hbCBSYXRlcykgQmlsbCAyMDE2LTE3LCBCaWxsIDE3MSwgc2Vla3MgdG8gZG8gdHdvIHRoaW5nczpcbiBcbiBpdCBleHRlbmRzIHRoZSB0aW1lIHBlcmlvZCBmb3IgdGhlIGNyZWF0aW9uIG9mIGFuIEV4ZWN1dGl2ZSBhZnRlciB0aGUgbW9zdCByZWNlbnQgQXNzZW1ibHkgZWxlY3Rpb24sIGFuZCBpdCBzZXRzIGEgcmVnaW9uYWwgcmF0ZSBmb3IgZG9tZXN0aWMgYW5kIG5vbi1kb21lc3RpYyByYXRlcyBpbiBOb3J0aGVybiBJcmVsYW5kLiBcbiBcbldoYXQgaXMgdGhlIEJpbGwgZm9yP1xuIFxuVGhlIEJpbGwgaXMgYSByZXNwb25zZSB0byBldmVudHMgdGhhdCBoYXZlIHVuZm9sZGVkIGluIHRoZSBOb3J0aGVybiBJcmVsYW5kIEFzc2VtYmx5IGluIHRoZSBmaXJzdCBwYXJ0IG9mIDIwMTcuXG4gXG5UaGUgRXhlY3V0aXZlIGNvbGxhcHNlZCB3aGVuIE1hcnRpbiBNY0d1aW5uZXNzIHJlc2lnbmVkIGFzIGRlcHV0eSBGaXJzdCBNaW5pc3RlciwgbWFpbmx5IGluIHByb3Rlc3QgYXQgdGhlIHJvbGUgb2YgdGhlIEZpcnN0IE1pbmlzdGVyLCBBcmxlbmUgRm9zdGVyLCBpbiBhIGNvbnRyb3ZlcnNpYWwgZW5lcmd5IHN1YnNpZHkgc2NoZW1lLCBhbiBleHRyYW9yZGluYXJ5IGVsZWN0aW9uIHdhcyBjYWxsZWQsIGFuZCB0aGUgcGFydGllcyBmYWlsZWQgdG8gYWdyZWUgb24gYSBuZXcgRXhlY3V0aXZlIHdpdGhpbiB0aGUgc3RhdHV0b3J5IHRpbWUgbGltaXQgKHRoaXMgaXMgZXhwbGFpbmVkIGluIFNlY3Rpb24gMikuXG4gXG5SYXRoZXIgdGhhbiBjYWxsIGFub3RoZXIgZWxlY3Rpb24gaW1tZWRpYXRlbHksIHRoZSBTZWNyZXRhcnkgb2YgU3RhdGUgZm9yIE5vcnRoZXJuIElyZWxhbmQsIEphbWVzIEJyb2tlbnNoaXJlLCBsZWZ0IGEgcGF1c2UgZm9yIGZ1cnRoZXIgbmVnb3RpYXRpb25zIGFpbWVkIGF0IGJyaW5naW5nIHRoZSB0d28gbGFyZ2VzdCBwYXJ0aWVzLCB0aGUgRGVtb2NyYXRpYyBVbmlvbmlzdCBQYXJ0eSAoRFVQKSBhbmQgU2lubiBGw6lpbiwgdG8gYW4gYWdyZWVtZW50LlxuIFxuVW5kZXIgZXhpc3RpbmcgbGVnaXNsYXRpb24gaXQgaXMgbm90IHBvc3NpYmxlIGZvciBhbiBFeGVjdXRpdmUgdG8gYmUgZm9ybWVkIG9uIHRoZSBiYXNpcyBvZiB0aGUgTWFyY2ggMjAxNyBlbGVjdGlvbiwgZXZlbiBpZiBhbiBhZ3JlZW1lbnQgd2VyZSByZWFjaGVkLiBBIG5ldyBlbGVjdGlvbiB3b3VsZCBiZSBuZWVkZWQsIG9yIGEgY2hhbmdlIHRvIHRoZSBOb3J0aGVybiBJcmVsYW5kIEFjdCAxOTk4LiBUaGUgQmlsbCB0aGVyZWZvcmUgcHJvdmlkZXMgZm9yIHRoZSBwb3NzaWJpbGl0eSB0aGF0IHRoZSBvbmdvaW5nIG5lZ290aWF0aW9ucyBiZWFyIGZydWl0LCBieSBjaGFuZ2luZyB0aGUgZWZmZWN0IG9mIHRoZSAxOTk4IEFjdCBpbiB0aGlzIGluc3RhbmNlIHRvIHByb3ZpZGUgaW50ZXJpbSBhcnJhbmdlbWVudHMuXG4gXG5XaXRob3V0IGFuIEV4ZWN1dGl2ZSB0byBzZXQgdGhlIHJlZ2lvbmFsIHJhdGUsIHJhdGUgYmlsbHMgY2Fubm90IGJlIGlzc3VlZCBhbmQgcmV2ZW51ZSBjYW5ub3QgYmUgY29sbGVjdGVkLiBUaGUgQmlsbCBhZGRyZXNzZXMgdGhpcyBieSBzZXR0aW5nIGEgcmVnaW9uYWwgcmF0ZSBpdHNlbGYuXG4gXG5UaGUgR292ZXJubWVudCBjYXN0cyB0aGUgQmlsbCBhcyBhIHByYWN0aWNhbCBtZWFzdXJlIGFsbG93aW5nIGEgbmV3IEV4ZWN1dGl2ZSB0byBiZSBmb3JtZWQgYW5kIGFsbG93aW5nIHJhdGVzIHRvIGJlIGNvbGxlY3RlZC4gQXQgdGhlIHNhbWUgdGltZSwgdGhlIFNlY3JldGFyeSBvZiBTdGF0ZSBpcyB1bmRlciBhIHN0YXR1dG9yeSBvYmxpZ2F0aW9uIHRvIG5hbWUgYSBkYXRlIGZvciBhbm90aGVyIGVsZWN0aW9uLiBUaGVyZSBpcyBubyB0aW1lIGxpbWl0IGluIHRoZSBOb3J0aGVybiBJcmVsYW5kIEFjdCAxOTk4IHdpdGhpbiB3aGljaCBoZSBoYXMgdG8gZG8gdGhpcy4gR2VycnkgQWRhbXMsIFByZXNpZGVudCBvZiBTaW5uIEbDqWluLCBoYXMgY2FsbGVkIG9uIHRoZSBJcmlzaCBHb3Zlcm5tZW50IHRvIGFwcGx5IHByZXNzdXJlIGZvciBhIG5ldyBBc3NlbWJseSBlbGVjdGlvbiB0byBiZSBoZWxkIGlmIHRoZSBjdXJyZW50IHRhbGtzIGRvIG5vdCBsZWFkIHRvIGFuIEV4ZWN1dGl2ZSBiZWluZyBmb3JtZWQuXG4gXG5XaGF0IGRvZXMgaXQgY29udGFpbj9cbiBcblRoZSB0ZXh0IG9mIHRoZSBCaWxsIGlzIGF2YWlsYWJsZSBvbiB0aGUgQmlsbHMgYmVmb3JlIFBhcmxpYW1lbnQgd2VicGFnZSwgYXMgYXJlIHRoZSBFeHBsYW5hdG9yeSBOb3Rlcy5cbiBcblRoZSBCaWxsIGhhcyB0aHJlZSBjbGF1c2VzIGFuZCBubyBzY2hlZHVsZXMuXG4gXG5DbGF1c2UgMSBleHRlbmRzIHRoZSBwZXJpb2QgZHVyaW5nIHdoaWNoIGFuIEV4ZWN1dGl2ZSBjYW4gYmUgZm9ybWVkIGFmdGVyIHRoZSBBc3NlbWJseSBlbGVjdGlvbiBvbiAyIE1hcmNoIDIwMTcuIFRoaXMgcGVyaW9kIGlzIGN1cnJlbnRseSAxNCBkYXlzIGFmdGVyIHRoZSBmaXJzdCBtZWV0aW5nIG9mIHRoZSBBc3NlbWJseSAoaXRzZWxmIDggZGF5cyBhZnRlciB0aGUgZWxlY3Rpb24pLiBVbmRlciB0aGUgQmlsbCBpdCB3aWxsIGJlIDEwOCBkYXlzLlxuIFxuVGhlIGV4aXN0aW5nIHN0YXR1dG9yeSBwZXJpb2QgZXhwaXJlZCBvbiAyNyBNYXJjaCAyMDE3OiBpdCB3aWxsIG5vdyBiZSBleHRlbmRlZCB0byAyOSBKdW5lIDIwMTcuIFRoaXMgcHJvdmlzaW9uIGhhcyByZXRyb3NwZWN0aXZlIGVmZmVjdC5cbiBcbkNsYXVzZSAyIHNldHMgYSByZWdpb25hbCByYXRlIGZvciB0aGUgY29taW5nIGZpbmFuY2lhbCB5ZWFyLCBhbGxvd2luZyByYXRlIGJpbGxzIHRvIGJlIGlzc3VlZCwgYW5kIHRodXMgcHJvdmlkaW5nIG9uZ29pbmcgZmluYW5jZSB0byBsb2NhbCBnb3Zlcm5tZW50IGFuZCB0byB0aGUgRXhlY3V0aXZlLlxuIFxuQ2xhdXNlIDMgY292ZXJzIGV4dGVudCwgY29tbWVuY2VtZW50IGFuZCB0aGUgc2hvcnQgdGl0bGUuIFRoZSBCaWxsIGV4dGVuZHMgb25seSB0byBOb3J0aGVybiBJcmVsYW5kIGFuZCB3aWxsIGNvbWUgaW50byBmb3JjZSBvbiB0aGUgZGF5IGl0IGlzIHBhc3NlZC5cbiBcbkZhc3QtdHJhY2tpbmdcbiBcblRoZSBCaWxsIGhhZCBpdHMgRmlyc3QgUmVhZGluZyBvbiAyMCBBcHJpbCAyMDE3IGFuZCB3aWxsIGhhdmUgaXRzIHJlbWFpbmluZyBzdGFnZXMgaW4gdGhlIEhvdXNlIG9mIENvbW1vbnMgb24gMjQgQXByaWwgMjAxNy5cbiBcblRoZSBHb3Zlcm5tZW50IGp1c3RpZmllcyB0aGlzIG9uIHRoZSBiYXNpcyB0aGF0IHB1YmxpYyByZXZlbnVlcyBtdXN0IGJlIHNhZmVndWFyZGVkLCBhbmQgcmF0ZXBheWVycyBwYXlpbmcgYnkgaW5zdGFsbWVudCB3aWxsIGhhdmUgdG8gcGF5IGZld2VyIGJ1dCBsYXJnZXIgaW5zdGFsbWVudHMgaWYgcmF0ZXMgYXJlIGZ1cnRoZXIgZGVsYXllZC4gQWxzbywgYW55IGFncmVlbWVudCBiZXR3ZWVuIHRoZSBwYXJ0aWVzIHRvIGZvcm0gYW4gRXhlY3V0aXZlIHdvdWxkIGhhdmUgdG8gd2FpdCB1bnRpbCBhZnRlciB0aGUgVUsgZ2VuZXJhbCBlbGVjdGlvbiBmb3IgbGVnaXNsYXRpb24gdG8gYWxsb3cgaXQgdG8gY29tZSBpbnRvIGJlaW5nLlxuIFxuwqBcbiBcbsKgXG4gXG7CoCJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDQtMjFUMTc6Mjk6NTYuNjMxNDc4OCswMTowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGUgTm9ydGhlcm4gSXJlbGFuZCAoTWluaXN0ZXJpYWwgQXBwb2ludG1lbnRzIGFuZCBSZWdpb25hbCBSYXRlcykgQmlsbCAyMDE2LTE3IGFsbG93cyBhIGxvbmdlciBwZXJpb2QsIGxhc3RpbmcgdW50aWwgMjkgSnVuZSAyMDE3LCBmb3IgYW4gRXhlY3V0aXZlIHRvIGJlIGZvcm1lZCwgYW5kIHNldHMgYSByZWdpb25hbCByYXRlIHRvIGFsbG93IHJhdGVzIGJpbGxzIHRvIGJlIGlzc3VlZC4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIkNCUC03OTE2In0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1MjY3IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgQ29tbW9ucyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy82MTA1NSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlBhcmxpYW1lbnQgYW5kIENvbnN0aXR1dGlvbiBDZW50cmUifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzQxNDAzMyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkNvbW1vbnMgQnJpZWZpbmcgcGFwZXJzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiTm9ydGhlcm4gSXJlbGFuZCAoTWluaXN0ZXJpYWwgQXBwb2ludG1lbnRzIGFuZCBSZWdpb25hbCBSYXRlcykgQmlsbCAyMDE2LTE3IiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTU1MiIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkRldm9sdXRpb24ifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU1NjYiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJFbGVjdGlvbiByZXN1bHRzIDogVUsifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU1NjciLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJFbGVjdGlvbnMifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2OTEiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJOb3J0aGVybiBJcmVsYW5kIEFzc2VtYmx5In0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzcyMzA4NyIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiUHVibGljIGJpbGxzIGNhbm5vdCBiZSBjYXJyaWVkIG92ZXIgZnJvbSBvbmUgcGFybGlhbWVudCB0byB0aGUgbmV4dCBpbiB0aGUgc2FtZSB3YXkgdGhhdCB0aGV5IGNhbiBiZSBjYXJyaWVkIG92ZXIgZnJvbSBvbmUgc2Vzc2lvbiB0byB0aGUgbmV4dCB3aXRoaW4gdGhlIGxpZmV0aW1lIG9mIGEgcGFybGlhbWVudC4gVGhlIHBlcmlvZCBvZiB0aGUgbGFzdCBmZXcgZGF5cyBvZiBhIHBhcmxpYW1lbnQsIGR1cmluZyB3aGljaCB1bmZpbmlzaGVkIGJ1c2luZXNzIG11c3QgYmUgYWdyZWVkIGJ5IGJvdGggSG91c2VzIG9yIGxvc3QgYXQgZGlzc29sdXRpb24sIGlzIGtub3duIGFzIFx1MjAxOHdhc2gtdXBcdTIwMTkuIER1cmluZyB0aGlzIHBlcmlvZCwgYmVjYXVzZSB0aGVyZSBpcyBub3QgZW5vdWdoIHRpbWUgdG8gY29tcGxldGUgcGFybGlhbWVudGFyeSBjb25zaWRlcmF0aW9uIGluIHRoZSB1c3VhbCB3YXksIHRoZSBHb3Zlcm5tZW50IGlzIHJlbGlhbnQgb24gdGhlIGNvb3BlcmF0aW9uIG9mIHRoZSBPcHBvc2l0aW9uIHRvIHNlY3VyZSBpdHMgbGVnaXNsYXRpb24uIFRoZSBHb3Zlcm5tZW50IGFuZCB0aGUgT3Bwb3NpdGlvbiByZWFjaCBhZ3JlZW1lbnRzIG9uIHRoZSBiaWxsc1x1MjAxNG9yIHBhcnRzIG9mIGJpbGxzXHUyMDE0dGhhdCBzaG91bGQgYmUgaHVycmllZCB0aHJvdWdoIHRoZWlyIHJlbWFpbmluZyBwYXJsaWFtZW50YXJ5IHN0YWdlcyB0byByZWFjaCB0aGUgc3RhdHV0ZSBib29rIGJlZm9yZSBkaXNzb2x1dGlvbi4gU29tZXRpbWVzIHRoZSBHb3Zlcm5tZW50IGlzIHdpbGxpbmcgdG8gZHJvcCBjZXJ0YWluIGJpbGxzLCBvciBjZXJ0YWluIHByb3Zpc2lvbnMsIHRvIHNlY3VyZSB0aGUgcGFzc2FnZSBvZiBvdGhlcnMuIFNvbWV0aW1lcyBwYXJsaWFtZW50YXJ5IHRpbWUgaXMgYWxzbyBwcm92aWRlZCBkdXJpbmcgdGhlIHdhc2gtdXAgZm9yIHByaXZhdGUgbWVtYmVyXHUyMDE5cyBiaWxscy7CoFxuIFxuRm9sbG93aW5nIHRoZSBIb3VzZSBvZiBDb21tb25zXHUyMDE5IHZvdGUgb24gMTkgQXByaWwgMjAxNyBieSA1MjIgdm90ZXMgdG8gMTMgaW4gZmF2b3VyIG9mIHRoZSBQcmltZSBNaW5pc3Rlclx1MjAxOXMgbW90aW9uIHRoYXQgdGhlcmUgc2hvdWxkIGJlIGFuIGVhcmx5IGdlbmVyYWwgZWxlY3Rpb24sIFBhcmxpYW1lbnQgaXMgbm93IGluIGEgd2FzaC11cCBwZXJpb2QuIFBhcmxpYW1lbnQgbXVzdCBiZSBkaXNzb2x2ZWQgMjUgZGF5cyBiZWZvcmUgdGhlIHByb3Bvc2VkIGRhdGUgb2YgdGhlIGdlbmVyYWwgZWxlY3Rpb24sIG1lYW5pbmcgdGhhdCBmb3IgdGhlIGVsZWN0aW9uIHRvIHRha2UgcGxhY2Ugb24gOCBKdW5lIDIwMTcsIFBhcmxpYW1lbnQgd2lsbCBiZSBkaXNzb2x2ZWQgYXQgb25lIG1pbnV0ZSBwYXN0IG1pZG5pZ2h0IG9uIDMgTWF5IDIwMTcuIEFsbCBvdXRzdGFuZGluZyBwdWJsaWMgYmlsbHMgbXVzdCBiZSBkZWFsdCB3aXRoIGJlZm9yZSB0aGVuIChvciBiZWZvcmUgcHJvcm9nYXRpb24gaWYgdGhhdCB0YWtlcyBwbGFjZSBlYXJsaWVyIHRoYW4gZGlzc29sdXRpb24pIG9yIHRoZXkgd2lsbCBmYWxsIGF0IGRpc3NvbHV0aW9uLlxuIFxuVGhpcyBMb3JkcyBMaWJyYXJ5IGJyaWVmaW5nIHByb3ZpZGVzIGJhY2tncm91bmQgaW5mb3JtYXRpb24gb24gd2hhdCBoYXBwZW5lZCBkdXJpbmcgdGhlIHdhc2gtdXAgcGVyaW9kcyBiZWZvcmUgdGhlIDE5ODcsIDE5OTIsIDE5OTcsIDIwMDUsIDIwMTAgYW5kIDIwMTUgZWxlY3Rpb25zLiAoQSBtb3JlIGRldGFpbGVkIGFuYWx5c2lzIG9mIHRoZSAxOTg3XHUyMDEzMjAxMCBwZXJpb2QsIHByaW9yIHRvIHRoZSBwYXNzYWdlIG9mIHRoZSBGaXhlZC1UZXJtIFBhcmxpYW1lbnRzIEFjdCAyMDExLCBpcyBhdmFpbGFibGUgaW4gdGhlIGpvaW50IEhvdXNlIG9mIExvcmRzIGFuZCBIb3VzZSBvZiBDb21tb25zIExpYnJhcnkgbm90ZSBvbiBXYXNoLXVwIDIwMTAgXG4gXG5JdCBhbHNvIGdpdmVzIGRldGFpbHMgb2YgYmlsbHMgdG8gYmUgZGVhbHQgd2l0aCBpbiB0aGUgMjAxNyB3YXNoLXVwLCBpbmNsdWRpbmc6XG4gXG4gR292ZXJubWVudCBiaWxscyB0aGF0IGFyZSBzdGlsbCBiZWZvcmUgUGFybGlhbWVudCwgdGhlIHN0YWdlIHRoZXkgaGFkIHJlYWNoZWQgYXMgYXQgMjEgQXByaWwgMjAxNywgYW5kIHRoZSBsYXRlc3Qgc2NoZWR1bGUgZm9yIGNvbXBsZXRpbmcgdGhlaXIgcmVtYWluaW5nIHBhcmxpYW1lbnRhcnkgc3RhZ2VzLiBQcml2YXRlIG1lbWJlclx1MjAxOXMgYmlsbHMgd2hpY2ggaGF2ZSBjb21wbGV0ZWQgdGhlaXIgcGFzc2FnZSB0aHJvdWdoIHRoZSBIb3VzZSBpbiB3aGljaCB0aGV5IHdlcmUgZmlyc3QgaW50cm9kdWNlZCBhbmQgYXJlIGN1cnJlbnRseSBiZWZvcmUgdGhlIG90aGVyIEhvdXNlOyBhbmQgQmlsbHMgd2hpY2ggaGF2ZSBjb21wbGV0ZWQgdGhlaXIgcGFzc2FnZSB0aHJvdWdoIGJvdGggSG91c2VzIGFuZCBhcmUgY3VycmVudGx5IGF3YWl0aW5nIHJveWFsIGFzc2VudC4ifQogICAgICAsICJkYXRlIiA6IHsiX3ZhbHVlIiA6ICIyMDE3LTA0LTIxVDE3OjA0OjMzLjY0MTE4NDMrMDE6MDAiLCAiX2RhdGF0eXBlIiA6ICJkYXRlVGltZSJ9CiAgICAgICwgImRlc2NyaXB0aW9uIiA6IFsiVGhpcyBIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5IGJyaWVmaW5nIHByb3ZpZGVzIGluZm9ybWF0aW9uIGFib3V0IHdoYXQgaGFwcGVucyB0byBwdWJsaWMgYmlsbHMgYmVmb3JlIHRoZSBkaXNzb2x1dGlvbiBvZiBQYXJsaWFtZW50IGluIHRoZSBwZXJpb2Qga25vd24gYXMgXHUyMDE4d2FzaC11cFx1MjAxOS4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIkxJRi0yMDE3LTAwMzcifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzQxNDA0MSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkxvcmRzIEluIEZvY3VzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiV2FzaC11cDogV2hhdCBIYXBwZW5zIHRvIEJpbGxzIGJlZm9yZSBQYXJsaWFtZW50IGlzIERpc3NvbHZlZCIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU1NjciLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJFbGVjdGlvbnMifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2NTkiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMZWdpc2xhdGl2ZSBwcm9jZXNzIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NzA1IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiUGFybGlhbWVudGFyeSBwcm9jZWR1cmUifQogICAgICB9CiAgICAgIF0sICJ0eXBlIiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3NjaGVtYS9wYXJsI1Jlc2VhcmNoQnJpZWZpbmcifQogICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9yZXNvdXJjZXMvNzE4MTIyIiwgImFic3RyYWN0IiA6IHsiX3ZhbHVlIiA6ICJPbiAxMyBNYXJjaCAyMDE3LCBOaWNvbGEgU3R1cmdlb24sIHRoZSBGaXJzdCBNaW5pc3RlciBvZiBTY290bGFuZCwgY29uZmlybWVkIHRoYXQgc2hlIHdvdWxkIGFzayB0aGUgU2NvdHRpc2ggUGFybGlhbWVudCBmb3IgcGVybWlzc2lvbiB0byBhc2sgdGhlIFByaW1lIE1pbmlzdGVyIGZvciBhbiBhZ3JlZW1lbnQgdG8gaG9sZCBhIHNlY29uZCByZWZlcmVuZHVtIG9uIHRoZSBpc3N1ZSBvZiBTY290dGlzaCBpbmRlcGVuZGVuY2UuIEZvbGxvd2luZyB0aGlzIGFubm91bmNlbWVudCwgTXMgU3R1cmdlb24gcHV0IGZvcndhcmQgYSBtb3Rpb24gKFM1TS0wNDcxMCkgb24gdGhlIGlzc3VlIHRvIGJlIGRlYmF0ZWQgYnkgdGhlIFNjb3R0aXNoIFBhcmxpYW1lbnQuIE9uIDI4IE1hcmNoIDIwMTcsIGFuIGFtZW5kZWQgdmVyc2lvbiBvZiB0aGUgbW90aW9uIChwdXQgZm9yd2FyZCBieSB0aGUgU2NvdHRpc2ggR3JlZW4gUGFydHkpIHdhcyBhcHByb3ZlZCBieSA2OSB2b3RlcyB0byA1OSwgd2hpY2ggc3RhdGVkOlxuIFxuIFRoYXQgdGhlIFBhcmxpYW1lbnQgYWNrbm93bGVkZ2VzIHRoZSBzb3ZlcmVpZ24gcmlnaHQgb2YgdGhlIFNjb3R0aXNoIHBlb3BsZSB0byBkZXRlcm1pbmUgdGhlIGZvcm0gb2YgZ292ZXJubWVudCBiZXN0IHN1aXRlZCB0byB0aGVpciBuZWVkcyBhbmQgdGhlcmVmb3JlIG1hbmRhdGVzIHRoZSBTY290dGlzaCBHb3Zlcm5tZW50IHRvIHRha2UgZm9yd2FyZCBkaXNjdXNzaW9ucyB3aXRoIHRoZSBVSyBHb3Zlcm5tZW50IG9uIHRoZSBkZXRhaWxzIG9mIGFuIG9yZGVyIHVuZGVyIHNlY3Rpb24gMzAgb2YgdGhlIFNjb3RsYW5kIEFjdCAxOTk4IHRvIGVuc3VyZSB0aGF0IHRoZSBTY290dGlzaCBQYXJsaWFtZW50IGNhbiBsZWdpc2xhdGUgZm9yIGEgcmVmZXJlbmR1bSB0byBiZSBoZWxkIHRoYXQgd2lsbCBnaXZlIHRoZSBwZW9wbGUgb2YgU2NvdGxhbmQgYSBjaG9pY2Ugb3ZlciB0aGUgZnV0dXJlIGRpcmVjdGlvbiBhbmQgZ292ZXJuYW5jZSBvZiB0aGVpciBjb3VudHJ5IGF0IGEgdGltZSwgYW5kIHdpdGggYSBxdWVzdGlvbiBhbmQgZnJhbmNoaXNlLCBkZXRlcm1pbmVkIGJ5IHRoZSBTY290dGlzaCBQYXJsaWFtZW50LCB3aGljaCB3b3VsZCBtb3N0IGFwcHJvcHJpYXRlbHkgYmUgYmV0d2VlbiB0aGUgYXV0dW1uIG9mIDIwMTgsIHdoZW4gdGhlcmUgaXMgY2xhcml0eSBvdmVyIHRoZSBvdXRjb21lIG9mIHRoZSBCcmV4aXQgbmVnb3RpYXRpb25zLCBhbmQgYXJvdW5kIHRoZSBwb2ludCBhdCB3aGljaCB0aGUgVUsgbGVhdmVzIHRoZSBFVSBpbiBzcHJpbmcgMjAxOTsgYmVsaWV2ZXMgdGhhdCB0aGlzIGdpdmVzIHBlb3BsZSBpbiBTY290bGFuZCBhIGNob2ljZSBhdCBhIHRpbWUgd2hlbiB0aGVyZSBpcyBib3RoIHRoZSBtb3N0IGluZm9ybWF0aW9uIGFuZCBtb3N0IG9wcG9ydHVuaXR5IHRvIGFjdDsgZnVydGhlciBiZWxpZXZlcyB0aGF0IDE2IGFuZCAxNy15ZWFyLW9sZHMgYW5kIEVVIGNpdGl6ZW5zLCB3aG8gd2VyZSBleGNsdWRlZCBmcm9tIHRoZSBFVSByZWZlcmVuZHVtLCBzaG91bGQgYmUgZW50aXRsZWQgdG8gdm90ZSwgYW5kIGNvbnNpZGVycyB0aGF0IHRoaXMgcmVmZXJlbmR1bSBpcyBuZWNlc3NhcnkgZ2l2ZW4gdGhlIFByaW1lIE1pbmlzdGVyXHUyMDE5cyBkZWNpc2lvbiB0byBuZWdvdGlhdGUgYSBoYXJkIGV4aXQgZnJvbSB0aGUgRVUsIGluY2x1ZGluZyBsZWF2aW5nIHRoZSBzaW5nbGUgbWFya2V0LCB3aGljaCBjb25mbGljdHMgd2l0aCBhc3N1cmFuY2VzIGdpdmVuIGJ5IHRoZSBVSyBHb3Zlcm5tZW50IGFuZCBwcm9taW5lbnQgTGVhdmUgY2FtcGFpZ25lcnMsIGFuZCB3aGljaCB0YWtlcyBubyBhY2NvdW50IG9mIHRoZSBvdmVyd2hlbG1pbmcgUmVtYWluIHZvdGUgaW4gU2NvdGxhbmQuIFxuIFxuVGhpcyBIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5IGJyaWVmaW5nIHByb3ZpZGVzIGluZm9ybWF0aW9uIG9uIHRoZSBHb3Zlcm5tZW50IHJlc3BvbnNlIHRvIHRoaXMgYW5ub3VuY2VtZW50LCB0aGUgc2VjdGlvbiAzMCBvcmRlciBwcm9wb3NlZCBhbmQgdGhlIHByb2Nlc3MgZm9sbG93ZWQgZm9yIHRoZSAyMDE0IHJlZmVyZW5kdW0uIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wNC0wNlQxNzoxNDo0MS4wNjA5MDkyKzAxOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgSG91c2Ugb2YgTG9yZHMgTGlicmFyeSBicmllZmluZyBwcm92aWRlcyBpbmZvcm1hdGlvbiBvbiB0aGUgY2FsbCBmb3IgYSBzZWNvbmQgU2NvdHRpc2ggaW5kZXBlbmRlbmNlIHJlZmVyZW5kdW0gYW5kIHRoZSBzZWN0aW9uIDMwIG9yZGVyIHByb3Bvc2VkIGJ5IHRoZSBTY290dGlzaCBHb3Zlcm5tZW50IGFzIHRoZSBtZWFucyB0byBob2xkIG9uZS4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIkxJRi0yMDE3LTAwMzYifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzQxNDA0MSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkxvcmRzIEluIEZvY3VzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiU2NvdHRpc2ggSW5kZXBlbmRlbmNlIFJlZmVyZW5kdW0gUHJvY2VkdXJlOiBTZWN0aW9uIDMwIE9yZGVycyIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU1MzIiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJDb25zdGl0dXRpb24ifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU1NTIiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJEZXZvbHV0aW9uIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjU5IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTGVnaXNsYXRpdmUgcHJvY2VzcyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTc0MyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlNjb3R0aXNoIFBhcmxpYW1lbnQifQogICAgICB9CiAgICAgIF0sICJ0eXBlIiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3NjaGVtYS9wYXJsI1Jlc2VhcmNoQnJpZWZpbmcifQogICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9yZXNvdXJjZXMvNzE4MTExIiwgImFic3RyYWN0IiA6IHsiX3ZhbHVlIiA6ICJXb3JsZCBIZWFsdGggRGF5IGlzIG9ic2VydmVkIG9uIDcgQXByaWwgZWFjaCB5ZWFyIHRvIG1hcmsgdGhlIGFubml2ZXJzYXJ5IG9mIHRoZSBmb3VuZGluZyBvZiB0aGUgV29ybGQgSGVhbHRoIE9yZ2FuaXphdGlvbiAoV0hPKS4gSXQgaXMgYW1vbmcgYSBudW1iZXIgb2YgZ2xvYmFsIGhlYWx0aCBkYXlzIHByb21vdGVkIGJ5IHRoZSBXSE8sIHdoaWNoIHByb3ZpZGVzIGEgXHUyMDFjdW5pcXVlIG9wcG9ydHVuaXR5IHRvIG1vYmlsaXNlIGFjdGlvbiBhcm91bmQgYSBzcGVjaWZpYyBoZWFsdGggdG9waWMgb2YgY29uY2VybiB0byBwZW9wbGUgYWxsIG92ZXIgdGhlIHdvcmxkXHUyMDFkLiBUaGUgaGVhbHRoIHRoZW1lIGZvciAyMDE3IGlzIFx1MjAxOERlcHJlc3Npb246IExldFx1MjAxOXMgVGFsa1x1MjAxOS4gUHJlY2VkaW5nIHRoZSBkYXksIHRoZSBXSE8gdW5kZXJ0YWtlcyBhIHJhbmdlIG9mIHByb21vdGlvbmFsIGFjdGl2aXRpZXMsIGluY2x1ZGluZyBldmVudHMsIGFuZCBtYWtlcyBhdmFpbGFibGUgbmV3cyByZWxlYXNlcywgcmVzb3VyY2VzIGZvciBnb3Zlcm5tZW50IGFuZCBwb2xpY3ltYWtlcnMgYW5kIHRhaWxvcmVkIG1hdGVyaWFscyBmb3IgZGlmZmVyZW50IHdvcmxkIHJlZ2lvbnMuIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wNC0wNlQxNDowOTo0Ni4wODA2NzY3KzAxOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgSG91c2Ugb2YgTG9yZHMgTGlicmFyeSBicmllZmluZyBwcm92aWRlcyBpbmZvcm1hdGlvbiBvbiBXb3JsZCBIZWFsdGggRGF5LCB3aGljaCB0YWtlcyBwbGFjZSBvbiBGcmlkYXkgNyBBcHJpbC4gVGhpcyB5ZWFyXHUyMDE5cyB0aGVtZSBpcyBcdTIwMThEZXByZXNzaW9uOiBMZXRcdTIwMTlzIFRhbGtcdTIwMTkuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMSUYtMjAxNy0wMDM1In0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy80MTQwNDEiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBJbiBGb2N1cyJ9CiAgICAgIH0KICAgICAgLCAidGl0bGUiIDogIldvcmxkIEhlYWx0aCBEYXksIDcgQXByaWwgMjAxNyIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2NzYiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJNZW50YWwgaGVhbHRoIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NzcyIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiVW5pdGVkIE5hdGlvbnMifQogICAgICB9CiAgICAgIF0sICJ0eXBlIiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3NjaGVtYS9wYXJsI1Jlc2VhcmNoQnJpZWZpbmcifQogICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9yZXNvdXJjZXMvNzE3ODg4IiwgImFic3RyYWN0IiA6IHsiX3ZhbHVlIiA6ICJUaGlzIEhvdXNlIG9mIExvcmRzIExpYnJhcnkgYnJpZWZpbmcgcHJlc2VudHMgbGlzdHMgb2YgY3VycmVudCBNZW1iZXJzIG9mIHRoZSBIb3VzZSB3aG8gaGF2ZSBoZWxkIHNlbGVjdGVkIG9mZmljZXMgYW5kIHBvc2l0aW9ucyBpbiBwdWJsaWMgbGlmZS4gVGhlIG1lbWJlcnNoaXAgb2YgdGhlIEhvdXNlIGluY2x1ZGVzOlxuIFxuIEZvdXIgZm9ybWVyIEZpcnN0IFNlY3JldGFyaWVzIG9mIFN0YXRlIFR3byBmb3JtZXIgZGVwdXR5IFByaW1lIE1pbmlzdGVycyBUaHJlZSBmb3JtZXIgQ2hhbmNlbGxvcnMgb2YgdGhlIEV4Y2hlcXVlciBGb3VyIGZvcm1lciBIb21lIFNlY3JldGFyaWVzIFRocmVlIGZvcm1lciBGb3JlaWduIFNlY3JldGFyaWVzIE5pbmUgZm9ybWVyIFVLIHBvbGl0aWNhbCBwYXJ0eSBsZWFkZXJzIFRoaXJ0eS1uaW5lIGZvcm1lciBvciBjdXJyZW50IGNvdW5jaWwgbGVhZGVycyBGaXZlIGZvcm1lciBDYWJpbmV0IFNlY3JldGFyaWVzIFNpeCBmb3JtZXIgSGVhZHMgb2YgdGhlIEhvbWUgQ2l2aWwgU2VydmljZSBUaHJlZSBmb3JtZXIgUGVybWFuZW50IFNlY3JldGFyaWVzIHRvIHRoZSBUcmVhc3VyeSBGb3VyIGZvcm1lciBIZWFkcyBvZiB0aGUgRGlwbG9tYXRpYyBTZXJ2aWNlIFR3byBmb3JtZXIgRGlyZWN0b3JzLUdlbmVyYWwgb2YgdGhlIFNlY3VyaXR5IFNlcnZpY2UgKE1JNSkgU2l4IGZvcm1lciBDaGllZnMgb2YgdGhlIERlZmVuY2UgU3RhZmYgRWxldmVuIGZvcm1lciBvciBjdXJyZW50IEp1c3RpY2VzIG9mIHRoZSBTdXByZW1lIENvdXJ0IEZpZnRlZW4gZm9ybWVyIG9yIGN1cnJlbnQgdW5pdmVyc2l0eSB2aWNlLWNoYW5jZWxsb3JzIEVpZ2h0IGZvcm1lciBvciBjdXJyZW50IGFtYmFzc2Fkb3JzIEVpZ2h0IGZvcm1lciBFdXJvcGVhbiBDb21taXNzaW9uZXJzIFR3byBmb3JtZXIgU2VjcmV0YXJpZXMtR2VuZXJhbCBvZiBOQVRPIFxuIFxuVGhpcyBicmllZmluZyB1cGRhdGVzIHRoZSBIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5IGJyaWVmaW5nIEhvdXNlIG9mIExvcmRzOiBQdWJsaWMgT2ZmaWNlcyBhbmQgUG9zaXRpb25zIEhlbGQgYnkgTWVtYmVycyAoMjkgTWFyY2ggMjAxNiksIHdoaWNoIGluY2x1ZGVkIGxpc3RzIG9mIHB1YmxpYyBvZmZpY2VzIGFuZCBwb3NpdGlvbnMgaGVsZCBieSBNZW1iZXJzIG9mIHRoZSBIb3VzZSBvZiBMb3JkcyBhcyBhdCBNYXJjaCAyMDE2LiBBZGRpdGlvbnMgdG8gdGhpcyB1cGRhdGUgaW5jbHVkZSBsaXN0cyBvZiBjdXJyZW50IE1lbWJlcnMgd2hvIHNlcnZlLCBvciBoYXZlIHNlcnZlZCwgYXMgY291bmNpbCBsZWFkZXJzLCB1bml2ZXJzaXR5IHZpY2UtY2hhbmNlbGxvcnMsIE9seW1waWMvUGFyYWx5bXBpYyBhdGhsZXRlcyBvciBhbWJhc3NhZG9ycy4ifQogICAgICAsICJkYXRlIiA6IHsiX3ZhbHVlIiA6ICIyMDE3LTA0LTA1VDE4OjEwOjQ2LjQ0MDY1NDgrMDE6MDAiLCAiX2RhdGF0eXBlIiA6ICJkYXRlVGltZSJ9CiAgICAgICwgImRlc2NyaXB0aW9uIiA6IFsiVGhpcyBIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5IGJyaWVmaW5nIHByZXNlbnRzIGxpc3RzIG9mIGN1cnJlbnQgTWVtYmVycyBvZiB0aGUgSG91c2Ugd2hvIGhhdmUgaGVsZCBzZWxlY3RlZCBvZmZpY2VzIGFuZCBwb3NpdGlvbnMgaW4gcHVibGljIGxpZmUuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMTE4tMjAxNy0wMDE5In0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8zNDY3MTMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBMaWJyYXJ5IG5vdGVzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiSG91c2Ugb2YgTG9yZHM6IEJhY2tncm91bmRzIGluIFB1YmxpYyBMaWZlIiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTYyOCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1Njc1IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTWVtYmVycyBvZiB0aGUgTG9yZHMifQogICAgICB9CiAgICAgIF0sICJ0eXBlIiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3NjaGVtYS9wYXJsI1Jlc2VhcmNoQnJpZWZpbmcifQogICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9yZXNvdXJjZXMvNzE3ODgyIiwgImFic3RyYWN0IiA6IHsiX3ZhbHVlIiA6ICJFbGVjdGlvbnMgd2lsbCBiZSBoZWxkIGluIENhbWJyaWRnZXNoaXJlIGFuZCBQZXRlcmJvcm91Z2gsIEdyZWF0ZXIgTWFuY2hlc3RlciwgTGl2ZXJwb29sIENpdHkgUmVnaW9uLCBUZWVzIFZhbGxleSwgV2VzdCBNaWRsYW5kcyBhbmQgdGhlIFdlc3Qgb2YgRW5nbGFuZC4gRWFjaCBvZiB0aGVzZSByZWdpb25zIGNvbnNpc3RzIG9mIGZvcm1hbCBncm91cGluZ3Mgb2YgY291bmNpbHMga25vd24gYXMgY29tYmluZWQgYXV0aG9yaXRpZXMsIHdoaWNoIGhhdmUgYXNzdW1lZCBwb3dlcnMgZnJvbSBjZW50cmFsIGdvdmVybm1lbnQgb24gc3RyYXRlZ2ljIG1hdHRlcnMgaW5jbHVkaW5nIHRyYW5zcG9ydCwgaG91c2luZyBhbmQgcGxhbm5pbmcsIHNraWxscyBhbmQgZWNvbm9taWMgZGV2ZWxvcG1lbnQuXG4gXG5UaGUgbWF5b3JhbCBlbGVjdGlvbnMgZm9sbG93IHRoZSBhZ3JlZW1lbnQgb2YgXHUyMDE4ZGV2b2x1dGlvbiBkZWFsc1x1MjAxOSBiZXR3ZWVuIHRoZSBHb3Zlcm5tZW50IGFuZCB0aGVzZSBjb21iaW5lZCBhdXRob3JpdGllcywgYnkgd2hpY2ggbmV3IHBvd2VycyBhbmQgYnVkZ2V0cyB3b3VsZCBiZSBkZXZvbHZlZCBvbiBjb25kaXRpb24gdGhhdCBkaXJlY3RseS1lbGVjdGVkIG1heW9yYWx0aWVzIGJlIGludHJvZHVjZWQuIFRoZXNlIGF1dGhvcml0aWVzIHRoZW4gYmVjb21lIG1heW9yYWwgY29tYmluZWQgYXV0aG9yaXRpZXMuXG4gXG5UaGUgZGV2b2x1dGlvbiBkZWFscyBhZ3JlZWQgdG8gZGF0ZSBjb3ZlciBhIHJhbmdlIG9mIHBvbGljeSBhcmVhcyBhbmQgYnVkZ2V0cywgYW5kIHZhcnkgaW4gdGhlaXIgZXh0ZW50IGJldHdlZW4gY29tYmluZWQgYXV0aG9yaXRpZXMuIEdyZWF0ZXIgTWFuY2hlc3Rlciwgd2hpY2ggd2FzIHRoZSBmaXJzdCBhcmVhIHRvIGZvcm0gYSBjb21iaW5lZCBhdXRob3JpdHkgaW4gMjAxMSwgaXMgYXNzdW1pbmcgdGhlIHdpZGVzdCByYW5nZSBvZiBwb3dlcnMsIGluY2x1ZGluZyBvdmVyIGhlYWx0aCBhbmQgc29jaWFsIGNhcmUuIE90aGVyIG1heW9yYWwgY29tYmluZWQgYXV0aG9yaXRpZXMgaGF2ZSBhZ3JlZWQgZGVhbHMgaW5jb3Jwb3JhdGluZyBtb3JlIGxpbWl0ZWQgcG93ZXJzLiJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDQtMDVUMTA6NDA6MDUuNTE2MTI2OCswMTowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIEhvdXNlIG9mIExvcmRzIExpYnJhcnkgYnJpZWZpbmcgcHJvdmlkZXMgaW5mb3JtYXRpb24gb24gdGhlIGZvcnRoY29taW5nIG1heW9yYWwgZWxlY3Rpb25zIGluIHNpeCBFbmdsaXNoIHJlZ2lvbnMgYW5kIG9uIHJlY2VudCBkZXZlbG9wbWVudHMgcmVsYXRpbmcgdG8gRW5nbGlzaCBkZXZvbHV0aW9uLiJdLCAiaWRlbnRpZmllciIgOiB7Il92YWx1ZSIgOiAiTElGLTIwMTctMDAzNCJ9CiAgICAgICwgInB1Ymxpc2hlciIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgICwgInNlY3Rpb24iIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgXSwgInN1YlR5cGUiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvNDE0MDQxIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTG9yZHMgSW4gRm9jdXMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJEZXZvbHV0aW9uIGluIEVuZ2xhbmQ6IEVsZWN0aW9ucyBmb3IgUmVnaW9uYWwgTWF5b3JzIG9uIDQgTWF5IDIwMTciLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTUyIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiRGV2b2x1dGlvbiJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTU2NyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkVsZWN0aW9ucyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTY2NiIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkxvY2FsIGdvdmVybm1lbnQifQogICAgICB9CiAgICAgIF0sICJ0eXBlIiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3NjaGVtYS9wYXJsI1Jlc2VhcmNoQnJpZWZpbmcifQogICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9yZXNvdXJjZXMvNzE3MTA0IiwgImFic3RyYWN0IiA6IHsiX3ZhbHVlIiA6ICJUaGUgR3VhcmRpYW5zaGlwIChNaXNzaW5nIFBlcnNvbnMpIEJpbGwgaXMgYSBIb3VzZSBvZiBDb21tb25zIHByaXZhdGUgbWVtYmVyXHUyMDE5cyBiaWxsIGludHJvZHVjZWQgYnkgS2V2aW4gSG9sbGlucmFrZSAoQ29uc2VydmF0aXZlIE1QIGZvciBUaGlyc2sgYW5kIE1hbHRvbikuIEl0IGlzIHNwb25zb3JlZCBpbiB0aGUgSG91c2Ugb2YgTG9yZHMgYnkgQmFyb25lc3MgSGFtd2VlIChMaWJlcmFsIERlbW9jcmF0KS4gSXQgcGFzc2VkIHRocm91Z2ggYWxsIHN0YWdlcyBpbiB0aGUgSG91c2Ugb2YgQ29tbW9ucyB3aXRob3V0IGFtZW5kbWVudCBhbmQgaXMgZHVlIHRvIGhhdmUgaXRzIHNlY29uZCByZWFkaW5nIGluIHRoZSBIb3VzZSBvZiBMb3JkcyBvbiA2IEFwcmlsIDIwMTcuIEJhcm9uZXNzIEhhbXdlZSBhbHNvIGludHJvZHVjZWQgYSBNaXNzaW5nIFBlcnNvbnMgR3VhcmRpYW5zaGlwIEJpbGwgaW4gdGhlIEhvdXNlIG9mIExvcmRzIGluIHRoaXMgc2Vzc2lvbi4gSXQgcmVjZWl2ZWQgaXRzIGZpcnN0IHJlYWRpbmcgb24gMTQgSnVuZSAyMDE2LCBidXQgbWFkZSBubyBmdXJ0aGVyIHByb2dyZXNzLiBCYXJvbmVzcyBIYW13ZWUgaGFzIHdpdGhkcmF3biB0aGF0IEJpbGwgaW4gb3JkZXIgdG8gYWxsb3cgdGhlIEd1YXJkaWFuc2hpcCAoTWlzc2luZyBQZXJzb25zKSBCaWxsIHRvIHByb2NlZWQgaW4gaXRzIHBsYWNlLlxuIFxuVGhlIEJpbGwgd291bGQgZW5hYmxlIGFwcGxpY2F0aW9ucyB0byB0aGUgY291cnRzIHRvIGFwcG9pbnQgYSBndWFyZGlhbiB0byBhY3Qgb24gYmVoYWxmIG9mIGEgbWlzc2luZyBwZXJzb24gaW4gcmVzcGVjdCBvZiB0aGUgbWlzc2luZyBwZXJzb25cdTIwMTlzIHByb3BlcnR5IGFuZCBmaW5hbmNpYWwgYWZmYWlycy4gVGhlIEJpbGwgd291bGQgYWxzbyBjcmVhdGUgYSByZWdpbWUgZm9yIHN1cGVydmlzaW5nIGFuZCByZWd1bGF0aW5nIHRoZSB3YXkgdGhhdCBndWFyZGlhbnMgZXhlcmNpc2UgdGhlaXIgcG93ZXJzLiBJdCB3b3VsZCBhcHBseSB0byBFbmdsYW5kIGFuZCBXYWxlcyBvbmx5LlxuIFxuQXMgdGhlIGxhdyBzdGFuZHMsIHdoZW4gYSBwZXJzb24gZGlzYXBwZWFycyBub2JvZHkgaGFzIGxlZ2FsIGF1dGhvcml0eSB0byBwcm90ZWN0IG9yIG1hbmFnZSB0aGVpciBwcm9wZXJ0eSBvciBmaW5hbmNpYWwgYXNzZXRzIHdoaWxlIHRoZXkgYXJlIG1pc3NpbmcuIFN1Y2ggZGlzYXBwZWFyYW5jZXMgY2FuIGxlYWQgdG8gdGhlIGRpc3NpcGF0aW9uIG9mIGFzc2V0cyAoZm9yIGV4YW1wbGUsIHRocm91Z2ggZGlyZWN0IGRlYml0cyB0aGF0IGNhbm5vdCBiZSBjYW5jZWxsZWQpIGFuZCB0aGVpciBkZXRlcmlvcmF0aW9uIG9yIGxvc3MgKGZvciBleGFtcGxlLCB0aHJvdWdoIGxhY2sgb2YgbWFpbnRlbmFuY2Ugb3IgZmFpbHVyZSB0byBtZWV0IG1vcnRnYWdlIHBheW1lbnRzKS4gVGhlIHBlcnNvblx1MjAxOXMgZGlzYXBwZWFyYW5jZSBjYW4gYWxzbyBkZXByaXZlIGRlcGVuZGFudHMgb2Ygc3VwcG9ydCB0aGV5IG1heSBiZSB1c2VkIHRvIHJlY2VpdmluZyBmcm9tIHRoZSBtaXNzaW5nIHBlcnNvbiwgYW5kIGxlYXZlIHRoaXJkIHBhcnRpZXMgdW5hYmxlIHRvIGNvbmNsdWRlIG9uZ29pbmcgYnVzaW5lc3Mgd2l0aCB0aGUgbWlzc2luZyBwZXJzb24gb3IgdG8gbWFrZSBzZW5zaWJsZSBhcnJhbmdlbWVudHMgd2l0aCB0aG9zZSBsZWZ0IGJlaGluZC4gVGhlIEJpbGwgYWltcyB0byByZXNvbHZlIHRoaXMgYnkgY3JlYXRpbmcgYSBwcm9jZWR1cmUgZm9yIG9idGFpbmluZyBhdXRob3JpdHkgdG8gcHJvdGVjdCB0aGUgaW50ZXJlc3RzIG9mIHRoZSBtaXNzaW5nIHBlcnNvbi4gVGhlIE1pbmlzdHJ5IG9mIEp1c3RpY2UgZXN0aW1hdGVzIHRoYXQgaXQgaXMgbGlrZWx5IHRoZXJlIHdvdWxkIGJlIGJldHdlZW4gNTAgYW5kIDEwMCBhcHBsaWNhdGlvbnMgYSB5ZWFyIGZvciBhIGd1YXJkaWFuc2hpcCBvcmRlciwgd2l0aCB0aGUgcG9zc2liaWxpdHkgb2YgYW4gZWFybHkgc3Bpa2Ugd2hlbiB0aGUgc3lzdGVtIHdhcyBpbnRyb2R1Y2VkLCBjb3ZlcmluZyBhcHBsaWNhdGlvbnMgZm9yIGV4aXN0aW5nIGNhc2VzLlxuIFxuVGhlIEJpbGwgaXMgc3VwcG9ydGVkIGJ5IHRoZSBHb3Zlcm5tZW50LCB0aGUgTGFib3VyIFBhcnR5IGFuZCB0aGUgY2hhcml0eSBNaXNzaW5nIFBlcnNvbnMuIEl0IGhhcyBjb21lIHRvIGJlIHJlZmVycmVkIHRvIGluZm9ybWFsbHkgYXMgXHUyMDFjQ2xhdWRpYVx1MjAxOXMgTGF3XHUyMDFkIGluIHJlZmVyZW5jZSB0byBDbGF1ZGlhIExhd3JlbmNlLCBhIGNoZWYgd2hvIHdlbnQgbWlzc2luZyBpbiAyMDA5IGFuZCBoYXMgbm90IGJlZW4gc2VlbiBzaW5jZS4gS2V2aW4gSG9sbGlucmFrZSBoYXMgYmVlbiB3b3JraW5nIHdpdGggaGVyIHBhcmVudHMsIHdobyBoYXZlIGJlZW4gY2FtcGFpZ25pbmcgZm9yIGEgZ3VhcmRpYW5zaGlwIGxhdy4ifQogICAgICAsICJkYXRlIiA6IHsiX3ZhbHVlIiA6ICIyMDE3LTA0LTAzVDE3OjI4OjI2LjI0OTcwOTUrMDE6MDAiLCAiX2RhdGF0eXBlIiA6ICJkYXRlVGltZSJ9CiAgICAgICwgImRlc2NyaXB0aW9uIiA6IFsiVGhpcyBIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5IGJyaWVmaW5nIHByb3ZpZGVzIGluZm9ybWF0aW9uIGluIHN1cHBvcnQgb2YgdGhlIEhvdXNlIG9mIExvcmRzIHNlY29uZCByZWFkaW5nIG9mIHRoZSBHdWFyZGlhbnNoaXAgKE1pc3NpbmcgUGVyc29ucykgQmlsbCBzY2hlZHVsZWQgdG8gdGFrZSBwbGFjZSBvbiA2IEFwcmlsIDIwMTcuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMSUYtMjAxNy0wMDMzIn0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy80MTQwNDEiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBJbiBGb2N1cyJ9CiAgICAgIH0KICAgICAgLCAidGl0bGUiIDogIkd1YXJkaWFuc2hpcCAoTWlzc2luZyBQZXJzb25zKSBCaWxsOiBCcmllZmluZyBmb3IgTG9yZHMgU3RhZ2VzIiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTcxNyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlBvd2VycyBvZiBhdHRvcm5leSJ9CiAgICAgIH0KICAgICAgXSwgInR5cGUiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvc2NoZW1hL3BhcmwjUmVzZWFyY2hCcmllZmluZyJ9CiAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Jlc291cmNlcy83MTcxMDMiLCAiYWJzdHJhY3QiIDogeyJfdmFsdWUiIDogIlRoZcKgRmFycmllcnMgKFJlZ2lzdHJhdGlvbikgQmlsbCBpcyBhIEhvdXNlIG9mIENvbW1vbnMgcHJpdmF0ZSBtZW1iZXJcdTIwMTlzIGJpbGwgaW50cm9kdWNlZCBieSBCcnlvbiBEYXZpZXMgKENvbnNlcnZhdGl2ZSBNUCBmb3IgR293ZXIpLCBhbmQgc3BvbnNvcmVkIGluIHRoZSBIb3VzZSBvZiBMb3JkcyBieSB0aGUgRWFybCBvZsKgQ2FpdGhuZXNzIChDb25zZXJ2YXRpdmUpLiBUaGUgQmlsbCBoYXMgY29tcGxldGVkIGFsbCBzdGFnZXMgaW4gdGhlIEhvdXNlIG9mIENvbW1vbnMgYW5kIGlzIHNjaGVkdWxlZCB0byBoYXZlIGl0cyBzZWNvbmQgcmVhZGluZyBpbiB0aGUgSG91c2Ugb2YgTG9yZHMgb24gNiBBcHJpbCAyMDE3LiBUaGUgQmlsbCBpcyBiYWNrZWQgYnkgdGhlIEdvdmVybm1lbnQsIHdobyBoYXZlIGRyYWZ0ZWQgdGhlIEV4cGxhbmF0b3J5IE5vdGVzIHdoaWNoIGFjY29tcGFueSBpdC5cbiBcblRoZSBwdXJwb3NlIG9mIHRoZSBCaWxsIGlzIHRvIG1ha2UgcHJvdmlzaW9uIGFib3V0IHRoZSBjb25zdGl0dXRpb24gb2YgdGhlIEZhcnJpZXJzIFJlZ2lzdHJhdGlvbiBDb3VuY2lsIChGUkMpLCBhbmQgaXRzIGNvbW1pdHRlZXMuIFRoZSBGUkMgaXMgdGhlIHJlZ3VsYXRvcnkgYm9keSBmb3IgdGhlIGZhcnJpZXJ5IHByb2Zlc3Npb24gaW4gR3JlYXQgQnJpdGFpbi4gSXRzIHN0YXR1dG9yeSByZXNwb25zaWJpbGl0aWVzLCBhcyBwcm92aWRlZCBmb3IgYnkgdGhlIEZhcnJpZXJzIChSZWdpc3RyYXRpb24pIEFjdCAxOTc1LCBpbmNsdWRlIHRvIG1haW50YWluIGEgcmVnaXN0ZXIgb2YgZmFycmllcnM7IGRldGVybWluZSB3aG8gaXMgZWxpZ2libGUgZm9yIHJlZ2lzdHJhdGlvbjsgYW5kIHRvIHJlZ3VsYXRlIGZhcnJpZXJ5IHRyYWluaW5nLiBGdXJ0aGVyLCB0aGUgRlJDIGludmVzdGlnYXRlcyBhbmQsIHdoZXJlIG5lY2Vzc2FyeSwgZGV0ZXJtaW5lcyBkaXNjaXBsaW5hcnkgY2FzZXMgdGhyb3VnaCBpdHMgc3RhdHV0b3J5IEludmVzdGlnYXRpbmcgQ29tbWl0dGVlLCBhbmQgaXRzIERpc2NpcGxpbmFyeSBDb21taXR0ZWUuIMKgVGhlIEJpbGwgd291bGQgYWxsb3cgZm9yIHRoZSBjb25zdGl0dXRpb24gb2YgdGhlc2UgYm9kaWVzIHRvIGJlIGNoYW5nZWQgdG8gcmVmbGVjdCBkZXZlbG9wbWVudHMgc2luY2UgdGhlIDE5NzUgQWN0LCBhbmQgYWxsb3cgZm9yIGZ1dHVyZSBjaGFuZ2VzIHRvIGJlIG1hZGUgdGhyb3VnaCByZWd1bGF0aW9ucyByYXRoZXIgdGhhbiBwcmltYXJ5IGxlZ2lzbGF0aW9uLiBUaGUgQmlsbCByZWNlaXZlZCBjcm9zcy1wYXJ0eSBzdXBwb3J0IGR1cmluZyBpdHMgcGFzc2FnZSB0aHJvdWdoIHRoZSBIb3VzZSBvZiBDb21tb25zLiJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDQtMDNUMTc6MjE6MTUuODgzMTkyMiswMTowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIEhvdXNlIG9mIExvcmRzIExpYnJhcnkgYnJpZWZpbmcgcHJvdmlkZXMgaW5mb3JtYXRpb24gaW4gc3VwcG9ydCBvZiB0aGUgSG91c2Ugb2YgTG9yZHMgc2Vjb25kIHJlYWRpbmcgb2YgdGhlIEZhcnJpZXJzIChSZWdpc3RyYXRpb24pIEJpbGwgc2NoZWR1bGVkIHRvIHRha2UgcGxhY2Ugb24gNiBBcHJpbCAyMDE3LiJdLCAiaWRlbnRpZmllciIgOiB7Il92YWx1ZSIgOiAiTElGLTIwMTctMDAzMiJ9CiAgICAgICwgInB1Ymxpc2hlciIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgICwgInNlY3Rpb24iIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgXSwgInN1YlR5cGUiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvNDE0MDQxIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTG9yZHMgSW4gRm9jdXMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJGYXJyaWVycyAoUmVnaXN0cmF0aW9uKSBCaWxsOiBCcmllZmluZyBmb3IgTG9yZHMgU3RhZ2VzIiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTQ4MiIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkFncmljdWx0dXJlIGFuZCBlbnZpcm9ubWVudCJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTQ4OSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkFuaW1hbCB3ZWxmYXJlIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzcxNzEwMiIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiVGhlIE1lcmNoYW50IFNoaXBwaW5nIChIb21vc2V4dWFsIENvbmR1Y3QpIEJpbGzCoGlzIGEgSG91c2Ugb2YgQ29tbW9ucyBwcml2YXRlIG1lbWJlclx1MjAxOXMgYmlsbCBpbnRyb2R1Y2VkIGJ5IEpvaG4gR2xlbiAoQ29uc2VydmF0aXZlIE1QIGZvciBTYWxpc2J1cnkpIGFuZCBpcyBzcG9uc29yZWQgaW4gdGhlIEhvdXNlIG9mIExvcmRzIGJ5IEJhcm9uZXNzIFNjb3R0IG9mIEJ5YnJvb2sgKENvbnNlcnZhdGl2ZSkuIFRoZSBCaWxsIGhhcyBjb21wbGV0ZWQgYWxsIHN0YWdlcyBpbiB0aGUgSG91c2Ugb2YgQ29tbW9ucyBhbmQgaXMgc2NoZWR1bGVkIHRvIGhhdmUgaXRzIHNlY29uZCByZWFkaW5nIGluIHRoZSBIb3VzZSBvZiBMb3JkcyBvbiA2IEFwcmlsIDIwMTcuXG4gXG5Qcm92aXNpb25zIFxuIFxuVGhlIEJpbGwgd291bGQgcmVwZWFsIHNlY3Rpb25zIDE0Nig0KSBhbmQgMTQ3KDMpIG9mIHRoZSBDcmltaW5hbCBKdXN0aWNlIGFuZCBQdWJsaWMgT3JkZXIgQWN0IDE5OTQgd2hpY2ggbm8gbG9uZ2VyIGhhdmUgbGVnYWwgZWZmZWN0IGJ1dCByZW1haW4gaW4gc3RhdHV0ZS4gVGhlc2UgcHJvdmlzaW9ucyBvcmlnaW5hbGx5IGFsbG93ZWQgZm9yIHRoZSBkaXNtaXNzYWwgb2YgYSBtZW1iZXIgb2YgdGhlIGNyZXcgb2YgYSBtZXJjaGFudCBzaGlwIG9uIHRoZSBncm91bmRzIG9mIGhvbW9zZXh1YWwgYWN0cy4gU3VjaCBhIGRpc21pc3NhbCB3b3VsZCBub3cgYmUgaWxsZWdhbCB1bmRlciBzdWJzZXF1ZW50IGxlZ2lzbGF0aW9uLCBpbmNsdWRpbmcgdGhlIEVxdWFsaXR5IEFjdCAyMDEwLlxuIFxuUmVhc29ucyBmb3IgSW50cm9kdWNpbmcgdGhlIEJpbGwgXG4gXG5JbiB0aGUgRXhwbGFuYXRvcnkgTm90ZXMgdGhhdCBpdCBwcm9kdWNlZCBmb3IgdGhlIE1lcmNoYW50IFNoaXBwaW5nIChIb21vc2V4dWFsIENvbmR1Y3QpIEJpbGwgb24gYmVoYWxmIG9mIHRoZSBCaWxsXHUyMDE5cyBzcG9uc29yLCB0aGUgR292ZXJubWVudCBvdXRsaW5lZCB0aGUgZm9sbG93aW5nIHJlYXNvbnMgd2h5IGl0IGJlbGlldmVkIHJlcGVhbGluZyBzZWN0aW9ucyAxNDYoNCkgYW5kIDE0NygzKSBvZiB0aGUgMTk5NCBBY3Qgd2FzIG5lY2Vzc2FyeTogd2hpbGUgdGhlc2Ugc2VjdGlvbnMgaGFkIG5vIGxlZ2FsIGVmZmVjdCwgdGhleSBtaWdodCBiZSBzdGlsbCBiZSBtaXNpbnRlcnByZXRlZDsgdGhleSB3ZXJlIG5vIGxvbmdlciBjb21wYXRpYmxlIHdpdGggY3VycmVudCB2YWx1ZXM7IGFuZCB0aGVpciByZW1vdmFsIHdvdWxkIHRpZHkgdXAgdGhlIHN0YXR1dGUgYm9vay7CoCJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDQtMDNUMTc6MTE6NDMuODY4NDIyNCswMTowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIEhvdXNlIG9mIExvcmRzIExpYnJhcnkgYnJpZWZpbmcgcHJvdmlkZXMgaW5mb3JtYXRpb24gaW4gc3VwcG9ydCBvZiB0aGUgSG91c2Ugb2YgTG9yZHMgc2Vjb25kIHJlYWRpbmcgb2YgdGhlIE1lcmNoYW50IFNoaXBwaW5nIChIb21vc2V4dWFsIENvbmR1Y3QpIEJpbGwgc2NoZWR1bGVkIHRvIHRha2UgcGxhY2Ugb24gNiBBcHJpbCAyMDE3LiJdLCAiaWRlbnRpZmllciIgOiB7Il92YWx1ZSIgOiAiTElGLTIwMTctMDAzMSJ9CiAgICAgICwgInB1Ymxpc2hlciIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgICwgInNlY3Rpb24iIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgXSwgInN1YlR5cGUiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvNDE0MDQxIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTG9yZHMgSW4gRm9jdXMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJNZXJjaGFudCBTaGlwcGluZyAoSG9tb3NleHVhbCBDb25kdWN0KSBCaWxsOiBCcmllZmluZyBmb3IgTG9yZHMgU3RhZ2VzIiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTU4MiIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkVxdWFsaXR5In0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjM1IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSHVtYW4gcmlnaHRzIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NzQ4IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiU2hpcHBpbmcifQogICAgICB9CiAgICAgIF0sICJ0eXBlIiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3NjaGVtYS9wYXJsI1Jlc2VhcmNoQnJpZWZpbmcifQogICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9yZXNvdXJjZXMvNzE3MTAxIiwgImFic3RyYWN0IiA6IHsiX3ZhbHVlIiA6ICJUaGUgTG9jYWwgQXVkaXQgKFB1YmxpYyBBY2Nlc3MgdG8gRG9jdW1lbnRzKSBCaWxsIGlzIGEgSG91c2Ugb2YgQ29tbW9ucyBwcml2YXRlIG1lbWJlclx1MjAxOXMgYmlsbCBpbnRyb2R1Y2VkIGJ5IFdlbmR5IE1vcnRvbiAoQ29uc2VydmF0aXZlIE1QIGZvciBBbGRyaWRnZS1Ccm93bmhpbGxzKSBhbmQgc3BvbnNvcmVkIGluIHRoZSBIb3VzZSBvZiBMb3JkcyBieSBCYXJvbmVzcyBFYXRvbiAoQ29uc2VydmF0aXZlKS4gVGhlIEJpbGwgaGFzIGNvbXBsZXRlZCBhbGwgc3RhZ2VzIGluIHRoZSBIb3VzZSBvZiBDb21tb25zIGFuZCBpcyBzY2hlZHVsZWQgdG8gaGF2ZSBpdHMgc2Vjb25kIHJlYWRpbmcgaW4gdGhlIEhvdXNlIG9mIExvcmRzIG9uIDYgQXByaWwgMjAxNy4gVGhlIEJpbGwgaXMgYmFja2VkIGJ5IHRoZSBHb3Zlcm5tZW50LCB3aG8gaGF2ZSBkcmFmdGVkIHRoZSBFeHBsYW5hdG9yeSBOb3RlcyB3aGljaCBhY2NvbXBhbnkgaXQuXG4gXG5UaGUgQmlsbCBzZWVrcyB0byBleHRlbmQgcHVibGljIGFjY2VzcyB0byBjZXJ0YWluIGxvY2FsIGF1ZGl0IGRvY3VtZW50cyB1bmRlciBzZWN0aW9uIDI2IG9mIHRoZSBMb2NhbCBBdWRpdCBhbmQgQWNjb3VudGFiaWxpdHkgQWN0IDIwMTQuIFRoZSBMb2NhbCBBdWRpdCBhbmQgQWNjb3VudGFiaWxpdHkgQWN0IDIwMTQgZXN0YWJsaXNoZWQgbmV3IGFycmFuZ2VtZW50cyBmb3IgdGhlIGF1ZGl0IGFuZCBhY2NvdW50YWJpbGl0eSBvZiBsb2NhbCBwdWJsaWMgYm9kaWVzIChhcyBsaXN0ZWQgaW4gc2NoZWR1bGUgMiBvZiB0aGUgQWN0KS4gQXQgZWFjaCBhdWRpdCBvZiBhY2NvdW50cyBoZWxkIHVuZGVyIHRoZSBBY3QsIHNlY3Rpb24gMjYoMSkgYWxsb3dzIFx1MjAxY2FueSBwZXJzb25zIGludGVyZXN0ZWRcdTIwMWQgdG8gaW5zcGVjdCB0aGUgYWNjb3VudGluZyByZWNvcmRzIGZvciB0aGUgZmluYW5jaWFsIHllYXIuIFRoZSBCaWxsIHNlZWtzIHRvIGFtZW5kIHNlY3Rpb24gMjYoMSkgdG8gYWRkIFx1MjAxY29yIGFueSBqb3VybmFsaXN0XHUyMDFkLlxuIFxuVGhpcyBicmllZmluZyBwcm92aWRlcyBpbmZvcm1hdGlvbiBvbiB0aGUgYmFja2dyb3VuZCB0byB0aGUgQmlsbCBhbmQgYW4gb3ZlcnZpZXcgb2YgaXRzIHB1cnBvc2UuIEl0IGFsc28gcHJvdmlkZXMgYSBicmllZiBzdW1tYXJ5IG9mIGl0cyBwYXNzYWdlIHRocm91Z2ggdGhlIEhvdXNlIG9mIENvbW1vbnMuIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wNC0wM1QxNzowNjo0OS40Nzk0NjczKzAxOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgSG91c2Ugb2YgTG9yZHMgTGlicmFyeSBicmllZmluZyBwcm92aWRlcyBpbmZvcm1hdGlvbiBpbiBzdXBwb3J0IG9mIHRoZSBIb3VzZSBvZiBMb3JkcyBzZWNvbmQgcmVhZGluZyBvZiB0aGUgTG9jYWwgQXVkaXQgKFB1YmxpYyBBY2Nlc3MgdG8gRG9jdW1lbnRzKSBCaWxsIChITCBCaWxsIDExNSBvZiAyMDE2XHUyMDEzMTcpIG9uIDYgQXByaWwgMjAxNy4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIkxJRi0yMDE3LTAwMzAifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzQxNDA0MSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkxvcmRzIEluIEZvY3VzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiTG9jYWwgQXVkaXQgKFB1YmxpYyBBY2Nlc3MgdG8gRG9jdW1lbnRzKSBCaWxsOiBCcmllZmluZyBmb3IgTG9yZHMgU3RhZ2VzIiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTY2NiIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkxvY2FsIGdvdmVybm1lbnQifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU3MjMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJQdWJsaWMgYWRtaW5pc3RyYXRpb24ifQogICAgICB9CiAgICAgIF0sICJ0eXBlIiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3NjaGVtYS9wYXJsI1Jlc2VhcmNoQnJpZWZpbmcifQogICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9yZXNvdXJjZXMvNzE1OTAyIiwgImFic3RyYWN0IiA6IHsiX3ZhbHVlIiA6ICJPbiAyOSBNYXJjaCAyMDE3LCB0aGUgVUsgZm9ybWFsbHkgbm90aWZpZWQgdGhlIEV1cm9wZWFuIFVuaW9uIG9mIGl0cyBpbnRlbnRpb24gdG8gd2l0aGRyYXcgZnJvbSBpdHMgbWVtYmVyc2hpcCBieSB0cmlnZ2VyaW5nIEFydGljbGUgNTAgb2YgdGhlIFRyZWF0eSBvbiBFdXJvcGVhbiBVbmlvbi4gVW5kZXIgQXJ0aWNsZSA1MCwgdGhlIFVLIGFuZCB0aGUgRVUgd2lsbCBoYXZlIHR3byB5ZWFycyB0byBuZWdvdGlhdGUgYSB3aXRoZHJhd2FsIGFncmVlbWVudCAodW5sZXNzIHRoZXJlIGlzIGEgdW5hbmltb3VzIGRlY2lzaW9uIGJ5IHRoZSBFdXJvcGVhbiBDb3VuY2lsLCB3aXRoIHRoZSBhZ3JlZW1lbnQgb2YgdGhlIFVLLCB0byBleHRlbmQgdGhpcykuIEEgc2VwYXJhdGUgYWdyZWVtZW50IG1heSBiZSBuZWNlc3NhcnkgdG8gZXN0YWJsaXNoIGZ1dHVyZSByZWxhdGlvbnMgYmV0d2VlbiB0aGUgVUsgYW5kIHRoZSBFVS5cbiBcbkFoZWFkIG9mIHRoZXNlIG5lZ290aWF0aW9ucywgdGhpcyBMb3JkcyBMaWJyYXJ5IGJyaWVmaW5nIHByb2ZpbGVzIGVhY2ggb2YgdGhlIEVVMjcgbWVtYmVyIHN0YXRlcy4gSXQgcHJvdmlkZXMgaW5mb3JtYXRpb24gYWJvdXQgdGhlaXIgbWVtYmVyc2hpcCBvZiB0aGUgRVUsIHRoZSBzaXplIG9mIHRoZWlyIGVjb25vbWllcywgdGhlaXIgdHJhZGUgaW4gZ29vZHMgYW5kIHNlcnZpY2VzIHdpdGggdGhlIFVLIGFuZCB0aGVpciBwb3B1bGF0aW9ucywgaW5jbHVkaW5nIHRoZSBlc3RpbWF0ZWQgbnVtYmVyIG9mIGNpdGl6ZW5zIGZyb20gZWFjaCBFVSBtZW1iZXIgc3RhdGUgcmVzaWRpbmcgaW4gdGhlIFVLLCBhbmQgdGhlIG51bWJlciBvZiBVSyBjaXRpemVucyByZXNpZGluZyBpbiBlYWNoIEVVIG1lbWJlciBzdGF0ZS4gSXQgYWxzbyBwcm92aWRlcyBhIHNuYXBzaG90IG9mIHRoZSBFVTI3IG1lbWJlciBzdGF0ZXNcdTIwMTkgcGVyc3BlY3RpdmVzIG9uIHRoZSBVS1x1MjAxOXMgZGVwYXJ0dXJlIGZyb20gdGhlIEVVLCB1cCB1bnRpbCB0aGUgcG9pbnQgQXJ0aWNsZSA1MCB3YXMgaW52b2tlZCBieSB0aGUgVUsuIEl0IGRvZXMgdGhpcyBieSBzZXR0aW5nIG91dCB0aGUga2V5IHBvaW50cyBtYWRlIGFuZCBpc3N1ZXMgcmFpc2VkIGJ5IHRoZSBjdXJyZW50IGhlYWQgb2YgZ292ZXJubWVudC9zdGF0ZSAod2hlcmUgcG9zc2libGUpIGluIGVhY2ggb2YgdGhlc2UgY291bnRyaWVzLCB3aG8gaW4gaG9sZGluZyB0aGVzZSBwb3NpdGlvbnMgYXJlIGFsc28gbWVtYmVycyBvZiB0aGUgRXVyb3BlYW4gQ291bmNpbCAoaW4gc29tZSBjYXNlcyBvdGhlciByZWxldmFudCBmaWd1cmVzLCBzdWNoIGFzIGdvdmVybm1lbnQgbWluaXN0ZXJzLCBhcmUgcXVvdGVkKS4gSW4gZm9jdXNpbmcgb24gdGhlIGhlYWRzIG9mIGdvdmVybm1lbnQvc3RhdGUsIHRoZSBicmllZmluZyBkb2VzIG5vdCBpbmNsdWRlIHRoZSB2aWV3cyBvZiBvdGhlciBwb2xpdGljYWwgb3BpbmlvbnMgaW4gdGhvc2UgY291bnRyaWVzLiBDb25zZXF1ZW50bHksIHRoZSBicmllZmluZyB3aWxsIG5vdCwgdGhlcmVmb3JlLCBmdWxseSBjYXB0dXJlIHRoZSBkb21lc3RpYyBwb2xpdGljYWwgc2l0dWF0aW9uIGluIGVhY2ggb2YgdGhvc2UgY291bnRyaWVzLiBBZGRpdGlvbmFsbHksIHRoZSB2aWV3cyBleHByZXNzZWQgbWF5IG5vdCByZW1haW4gc3RhdGljIGFzIG5lZ290aWF0aW9ucyBzdGFydCBhbmQgZGV2ZWxvcC4gVGhlIGdvdmVybm1lbnRzIG9mIGluZGl2aWR1YWwgbWVtYmVyIHN0YXRlcyBtYXkgY2hhbmdlIHRoZWlyIHZpZXdzIGFuZCBwb3NpdGlvbnMsIGFuZC9vciBwZXJzb25uZWwgY2hhbmdlcyBtYXkgdGFrZSBwbGFjZSBpbiBnb3Zlcm5tZW50cyB0aGF0IGFmZmVjdCB0aGVzZSBwZXJzcGVjdGl2ZXMuIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wMy0zMVQxNDozMzo0Ny4yNTQ5MTgzKzAxOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgTG9yZHMgTGlicmFyeSBicmllZmluZyBwcm92aWRlcyBzdW1tYXJ5IHByb2ZpbGVzIG9uIGVhY2ggb2YgdGhlIEVVMjcgbWVtYmVyIHN0YXRlcy4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIkxMTi0yMDE3LTAwMTgifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzM0NjcxMyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkxvcmRzIExpYnJhcnkgbm90ZXMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJMZWF2aW5nIHRoZSBFdXJvcGVhbiBVbmlvbjogUHJvZmlsZSBvZiB0aGUgRVUyNyIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU1OTEiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJFVSBsYXcgYW5kIHRyZWF0aWVzIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTkyIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiRVUgcG9saXRpY2FsIGludGVncmF0aW9uIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzcxNDM4MiIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiQSBudW1iZXIgb2YgY29tbWVudGF0b3JzIGhhdmUgY29uc2lkZXJlZCB0aGUgcG9zc2liaWxpdHkgdGhhdCB0aGUgVUsgbWlnaHQgbGVhdmUgdGhlIEVVIHdpdGhvdXQgYSBkZWFsLiBJbiB0aGlzIHNpdHVhdGlvbiwgdGhlIFVLIHdvdWxkIHRyYWRlIHdpdGggdGhlIEVVIHVuZGVyIFdvcmxkIFRyYWRlIE9yZ2FuaXNhdGlvbiAoV1RPKSB0ZXJtcy7CoCBUaGUgV29ybGQgVHJhZGUgT3JnYW5pc2F0aW9uIGlzIGFuIGludGVybmF0aW9uYWwgb3JnYW5pc2F0aW9uIHdoaWNoIHJlZ3VsYXRlcyBpbnRlcm5hdGlvbmFsIHRyYWRlLiBJdCBzdGFydGVkIG9wZXJhdGlvbiBpbiAxOTk1IGZvbGxvd2luZyB0aGUgc2lnbmluZyBvZiB0aGUgTWFycmFrZXNoIEFncmVlbWVudCBpbiAxOTk0LiBUaGUgV1RPXHUyMDE5cyBvdmVycmlkaW5nIHB1cnBvc2UgaXMgdG8gaGVscCB0cmFkZSBmbG93IGFzIGZyZWVseSBhcyBwb3NzaWJsZS4gU3VjY2Vzc2l2ZSByb3VuZHMgb2YgaW50ZXJuYXRpb25hbCBuZWdvdGlhdGlvbnMgc2luY2UgMTk0NyBoYXZlIHNvdWdodCB0byBsaWJlcmFsaXNlIHdvcmxkIHRyYWRlLiBBdCB0aGUgdGltZSBvZiB3cml0aW5nLCB0aGUgV1RPIGhhcyAxNjQgbWVtYmVycywgYW5kIGFsdGhvdWdoIHRoZSBVSyBpcyBhbiBpbmRpdmlkdWFsIG1lbWJlciwgaXQgaXMgY3VycmVudGx5IHJlcHJlc2VudGVkIGJ5IHRoZSBFdXJvcGVhbiBDb21taXNzaW9uIGF0IHRoZSBXVE8uXG4gXG5UaGUgaW50ZXJuYXRpb25hbCB0cmFkaW5nIHN5c3RlbSBpcyB1bmRlcnBpbm5lZCBieSBhIG51bWJlciBvZiBXVE8gYWdyZWVtZW50cy4gVGhlIEdlbmVyYWwgQWdyZWVtZW50IG9uIFRhcmlmZnMgYW5kIFRyYWRlIGFuZCB0aGUgR2VuZXJhbCBBZ3JlZW1lbnQgb24gVHJhZGUgaW4gU2VydmljZXMgcmVndWxhdGUgdHJhZGUgaW4gZ29vZHMgYW5kIHNlcnZpY2VzIHJlc3BlY3RpdmVseS4gVW5kZXIgdGhlc2UgYWdyZWVtZW50cywgY291bnRyaWVzIG5lZ290aWF0ZSBsaXN0cyBvZiBtYXJrZXQgYWNjZXNzIGNvbW1pdG1lbnRzLCBrbm93biBhcyBcdTIwMThzY2hlZHVsZXNcdTIwMTkuIFRoZXNlIGNhbiB0YWtlIHRoZSBmb3JtIG9mIHRhcmlmZiBsZXZlbHMgb24gZ29vZHMgYW5kIGhvdyBtdWNoIG1hcmtldCBhY2Nlc3MgZm9yZWlnbiBwcm92aWRlcnMgb2Ygc2VydmljZXMgYXJlIGFsbG93ZWQuIEluIGFkZGl0aW9uLCB0aGUgVHJhZGUtUmVsYXRlZCBBc3BlY3RzIG9mIEludGVsbGVjdHVhbCBQcm9wZXJ0eSBSaWdodHMgc2V0cyBtaW5pbXVtIHJlZ3VsYXRvcnkgc3RhbmRhcmRzIHdpdGggcmVnYXJkIHRvIGludGVsbGVjdHVhbCBwcm9wZXJ0eS5cbiBcblRyYWRlIHVuZGVyIFdUTyBydWxlcyBvcGVyYXRlcyB1bmRlciB0aGUgbW9zdCBmYXZvdXJlZCBuYXRpb24gcHJpbmNpcGxlLiBUaGlzIG1lYW5zIHRoYXQgY291bnRyaWVzIGNhbm5vdCBub3JtYWxseSBkaXNjcmltaW5hdGUgYmV0d2VlbiB0aGVpciB0cmFkaW5nIHBhcnRuZXJzLiBGb3IgZXhhbXBsZSwgaWYgYSBjb3VudHJ5IGNob3NlIHRvIGxvd2VyIGEgdGFyaWZmIG9uIGEgZ29vZCBmb3IgYSBwYXJ0aWN1bGFyIHRyYWRpbmcgcGFydG5lciwgaXQgd291bGQgaGF2ZSB0byBkbyB0aGUgc2FtZSBmb3IgYWxsIG90aGVyIFdUTyBtZW1iZXJzLiBJbiBhZGRpdGlvbiwgdW5kZXIgV1RPIHJ1bGVzLCBhIGNvdW50cnkgbXVzdCBhbHNvIHRyZWF0IGltcG9ydGVkIGFuZCBsb2NhbGx5LXByb2R1Y2VkIGdvb2RzLCBzZXJ2aWNlcyBhbmQgaW50ZWxsZWN0dWFsIHByb3BlcnR5IGVxdWFsbHkuIEZvciBleGFtcGxlLCBhIGNvdW50cnkgY291bGQgbm90IGltcG9zZSBhIHRheCBvbiBhbiBpbXBvcnRlZCBwcm9kdWN0IGFmdGVyIGl0IGhhZCBlbnRlcmVkIHRoZSBtYXJrZXQgaWYgaXQgZGlkIG5vdCBkbyB0aGUgc2FtZSBmb3IgYSBsb2NhbGx5LXByb2R1Y2VkIHByb2R1Y3QuwqBcbiBcblRoZSBXVE8gYWxzbyBwcm92aWRlcyBhIGRpc3B1dGUgc2V0dGxlbWVudCBtZWNoYW5pc20gdG8gcmVzb2x2ZSB0cmFkZSBkaXNwdXRlcyBiZXR3ZWVuIFdUTyBtZW1iZXJzLiBJdCBoYXMgYmVlbiBkZXNjcmliZWQgYXMgdGhlIFx1MjAxY2pld2VsIGluIHRoZSBXVE9cdTIwMTlzIGNyb3duXHUyMDFkIGFuZCBzaW5jZSAxOTk1LCBvdmVyIDQwMCBkaXNwdXRlcyBoYXZlIGJlZW4gYnJvdWdodCB0byB0aGUgV1RPLiBBbiBpbmRlcGVuZGVudCBwYW5lbCBtYWtlcyBhIHJ1bGluZyBvbiBhIHRyYWRlIGRpc3B1dGUgYmFzZWQgb24gdGhlIFdUTyBhZ3JlZW1lbnRzIHRoYXQgaXMgYmluZGluZyBvbiB0aGUgV1RPIG1lbWJlcnMuXG4gXG5Db21tZW50YXRvcnMgaGF2ZSBjb25zaWRlcmVkIGhvdyB0aGUgVUsgd291bGQgdHJhZGUgd2l0aCB0aGUgRVUgdW5kZXIgV1RPIHJ1bGVzLCBpZiBpdCBsZWZ0IHRoZSBFVSB3aXRob3V0IGEgdHJhZGUgZGVhbC4gVGhlIFVLIHdvdWxkIG5lZWQgdG8gbmVnb3RpYXRlIGEgbmV3IHNldCBvZiBzY2hlZHVsZXMgYW5kIHRoZSBHb3Zlcm5tZW50IGhhcyBpbmRpY2F0ZWQgdGhhdCBpdCB3aWxsIHNlZWsgdG8gcmVwbGljYXRlIGV4aXN0aW5nIHNjaGVkdWxlcyB3aGVyZSBwb3NzaWJsZS4gU29tZSBjb21tZW50YXRvcnMgaGF2ZSBhcmd1ZWQgdGhhdCB0cmFkZSB3aXRoIHRoZSBFVSB1bmRlciBXVE8gdGVybXMgd291bGQgcHJvdmUgY29zdGx5IGZvciBidXNpbmVzc2VzIGFzIHRoZXkgd291bGQgZmFjZSBoaWdoZXIgdGFyaWZmcyBvbiBjZXJ0YWluIGdvb2RzLiBIb3dldmVyLCBvdGhlcnMgaGF2ZSBhcmd1ZWQgdGhhdCBXVE8gcnVsZXMgd291bGQgbm90IGJlIGFuIGltcGVkaW1lbnQgdG8gdHJhZGUuIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wMy0yOFQxNToxMTo1OS4yNzkwNzg3KzAxOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgTGlicmFyeSBicmllZmluZyBwcm92aWRlcyBhbiBvdmVydmlldyBvZiB0aGUgV29ybGQgVHJhZGUgT3JnYW5pc2F0aW9uLiBJdCBleGFtaW5lcyB0aGUgaGlzdG9yeSwgc3RydWN0dXJlIGFuZCBtZW1iZXJzaGlwIG9mIHRoZSBvcmdhbmlzYXRpb24uIEl0IHByb3ZpZGVzIGluZm9ybWF0aW9uIG9uIHRoZSBhZ3JlZW1lbnRzIHVuZGVycGlubmluZyB0aGUgaW50ZXJuYXRpb25hbCB0cmFkaW5nIHN5c3RlbSBhbmQgdGhlIHByaW5jaXBsZXMgdGhhdCBnb3Zlcm4gdHJhZGUgYmV0d2VlbiBtZW1iZXJzIG9mIHRoZSBXVE8uIEl0IGFsc28gY29uc2lkZXJzIGhvdyB0aGUgVUsgd291bGQgdHJhZGUgd2l0aCB0aGUgRVUgdW5kZXIgV1RPIHRlcm1zLCBpZiB0aGUgVUsgbGVmdCB0aGUgRVUgd2l0aG91dCBhIHRyYWRlIGRlYWwuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMTE4tMjAxNy0wMDE3In0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8zNDY3MTMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBMaWJyYXJ5IG5vdGVzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiTGVhdmluZyB0aGUgRXVyb3BlYW4gVW5pb246IFdvcmxkIFRyYWRlIE9yZ2FuaXNhdGlvbiIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2NDkiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJJbnRlcm5hdGlvbmFsIG9yZ2FuaXNhdGlvbnMifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2NTEiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJJbnRlcm5hdGlvbmFsIHRyYWRlIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzcxNDM0OSIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiVGhlIEhvdXNlIG9mIExvcmRzIEFjdCAxOTk5IHJlbW92ZWQgbW9zdCBoZXJlZGl0YXJ5IHBlZXJzIGZyb20gdGhlIEhvdXNlIG9mIExvcmRzLiBVbmRlciB0aGUgQWN0LCA5MCBoZXJlZGl0YXJ5IHBlZXJzIHJldGFpbmVkIHRoZWlyIHBsYWNlcywgZWxlY3RlZCBieSB0aGVpciBmZWxsb3cgcGFydHkvZ3JvdXAgY29sbGVhZ3VlcyB0byByZW1haW4gYXMgTWVtYmVycy4gU2luY2UgdGhlIHN0YXJ0IG9mIHRoZSAyMDAyXHUyMDEzMDMgc2Vzc2lvbiwgd2hlbiBvbmUgb2YgdGhlIDkwIGhlcmVkaXRhcnkgcGVlcnMgZGllcywgcmV0aXJlcyBvciBpcyBleGNsdWRlZCwgYSByZXBsYWNlbWVudCBpcyBjaG9zZW4gaW4gYSBieS1lbGVjdGlvbi4gSGVyZWRpdGFyeSBwZWVycyB3aXNoaW5nIHRvIHN0YW5kIGluIGEgYnktZWxlY3Rpb24gYXJlIGxpc3RlZCBpbiBhIHJlZ2lzdGVyIG9mIGhlcmVkaXRhcnkgcGVlcnMsIG1haW50YWluZWQgYW5kIHB1Ymxpc2hlZCBieSB0aGUgQ2xlcmsgb2YgdGhlIFBhcmxpYW1lbnRzLlxuIFxuVGhlcmUgYXJlIHR3byBkaWZmZXJlbnQgdHlwZXMgb2YgYnktZWxlY3Rpb24uIE9mIHRoZSA5MCBoZXJlZGl0YXJ5IHBlZXJzLCAxNSB3ZXJlIGVsZWN0ZWQgdG8gcHJvdmlkZSB0aGUgSG91c2Ugd2l0aCBNZW1iZXJzIGFibGUgdG8gYWN0IGFzIERlcHV0eSBTcGVha2VycyBhbmQgb3RoZXIgb2ZmaWNlLWhvbGRlcnMuIFRoZXkgYXJlIHZvdGVkIGZvciBieSB0aGUgd2hvbGUgSG91c2UuIFJlcGxhY2VtZW50cyBmb3IgdmFjYW5jaWVzIGFtb25nIHRoZSByZW1haW5pbmcgNzUgYXJlIHZvdGVkIGZvciBieSB0aGUgb3RoZXIgaGVyZWRpdGFyeSBwZWVycyBpbiBhIHBhcnRpY3VsYXIgcGFydHkgb3IgYnkgdGhlIENyb3NzYmVuY2ggaGVyZWRpdGFyeSBwZWVycy4gSW4gMTk5OSwgdGhlIDc1IHNlYXRzIHdlcmUgYWxsb2NhdGVkIHByb3BvcnRpb25hbGx5IHRvIHJlZmxlY3QgdGhlIGFmZmlsaWF0aW9ucyBvZiB0aGUgaGVyZWRpdGFyeSBwZWVycyB3aG8gc2F0IHByaW9yIHRvIHRoZSBIb3VzZSBvZiBMb3JkcyBBY3QuIENvbnNlcXVlbnRseSwgZm9yIHRoZSBwdXJwb3NlcyBvZiBieS1lbGVjdGlvbnMsIDQyIGFyZSBlbGVjdGVkIGJ5IENvbnNlcnZhdGl2ZSBoZXJlZGl0YXJ5IHBlZXJzOyB0d28gYXJlIGVsZWN0ZWQgYnkgTGFib3VyIGhlcmVkaXRhcnkgcGVlcnM7IHRocmVlIGFyZSBlbGVjdGVkIGJ5IExpYmVyYWwgRGVtb2NyYXQgaGVyZWRpdGFyeSBwZWVyczsgYW5kIDI4IGFyZSBlbGVjdGVkIGJ5IENyb3NzYmVuY2ggaGVyZWRpdGFyeSBwZWVycy5cbiBcbsKgIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wMy0yOFQxMTo0OTo1Mi41MjU3ODE2KzAxOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgSG91c2Ugb2YgTG9yZHMgTGlicmFyeSBicmllZmluZyBwcm92aWRlcyBhIGxpc3Qgb2YgaGVyZWRpdGFyeSBwZWVycycgYnktZWxlY3Rpb24gcmVzdWx0cyBzaW5jZSB0aGUgcGFzc2luZyBvZiB0aGUgSG91c2Ugb2YgTG9yZHMgQWN0IDE5OTksIGluY2x1ZGluZyBpbmZvcm1hdGlvbiBvbiB0dXJuIG91dCBhbmQgdGhlIG51bWJlciBvZiBjYW5kaWRhdGVzLiJdLCAiaWRlbnRpZmllciIgOiB7Il92YWx1ZSIgOiAiTElGLTIwMTctMDAyOSJ9CiAgICAgICwgInB1Ymxpc2hlciIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgICwgInNlY3Rpb24iIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgXSwgInN1YlR5cGUiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvNDE0MDQxIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTG9yZHMgSW4gRm9jdXMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJIZXJlZGl0YXJ5IEJ5LWVsZWN0aW9uczogUmVzdWx0cyIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2MjgiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTY3NSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIk1lbWJlcnMgb2YgdGhlIExvcmRzIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NzAzIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiUGFybGlhbWVudCJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTcwNSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlBhcmxpYW1lbnRhcnkgcHJvY2VkdXJlIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzcxMzk2MSIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiVGhlIEZhbGtsYW5kIElzbGFuZHMgYXJlIGFuIGFyY2hpcGVsYWdvIGluIHRoZSBTb3V0aCBBdGxhbnRpYyBjb21wcmlzaW5nIHR3byBtYWluIGlzbGFuZHMsIEVhc3QgYW5kIFdlc3QgRmFsa2xhbmQsIGFuZCBhcHByb3hpbWF0ZWx5IDc3NiBzbWFsbGVyIGlzbGFuZHMgYW5kIGlzbGV0cy4gVGhleSBhcmUgc2l0dWF0ZWQgMzAwIG1pbGVzIGZyb20gdGhlIHNvdXRoZXJuIGV4dHJlbWl0eSBvZiBBcmdlbnRpbmEgYW5kIDgsMDAwIG1pbGVzIGZyb20gdGhlIFVuaXRlZCBLaW5nZG9tLiBUaGUgRmFsa2xhbmRzIGFyZSBhbiBPdmVyc2VhcyBUZXJyaXRvcnkgb2YgdGhlIFVuaXRlZCBLaW5nZG9tLCBidXQgdGhleSBhcmUgYWxzbyBjbGFpbWVkIGJ5IEFyZ2VudGluYSwgd2hpY2ggY2FsbHMgdGhlbSBMYXMgTWFsdmluYXMuIFRoZSBGYWxrbGFuZCBJc2xhbmRzIGFyZSBhbiBBc3NvY2lhdGVkIFRlcnJpdG9yeSBvZiB0aGUgRXVyb3BlYW4gVW5pb24uIEluIDIwMTMsIHRoZSBGYWxrbGFuZCBJc2xhbmRzIGhlbGTCoHJlZmVyZW5kdW0gb24gd2hldGhlciBvciBub3QgdG8gbWFpbnRhaW4gdGhlIElzbGFuZHNcdTIwMTkgc3RhdHVzIGFzIGEgQnJpdGlzaCBPdmVyc2VhcyBUZXJyaXRvcnkuIFRoZSBGYWxrbGFuZHMgdm90ZWQgaW4gZmF2b3VyIG9mIHJlbWFpbmluZyBhbiBPdmVyc2VhcyBUZXJyaXRvcnkgYnkgMTUxMyB2b3RlcyB0byB0aHJlZS5cbiBcblRoZSBGYWxrbGFuZHMgV2FyIGJlZ2FuIGluIEFwcmlsIDE5ODIsIHdoZW4gQXJnZW50aW5hIGludmFkZWQgdGhlIEZhbGtsYW5kIElzbGFuZHMgYW5kIGNhcHR1cmVkIHRoZSBjYXBpdGFsIFBvcnQgU3RhbmxleS4gRm9sbG93aW5nIGZpZ2h0aW5nIGJvdGggb24gbGFuZCBhbmQgYXQgc2VhLCB0aGUgQnJpdGlzaCBmb3JjZXMgcmVnYWluZWQgY29udHJvbCBpbiBKdW5lIDE5ODIuIE5lYXJseSA2NTAgQXJnZW50aW5lIHNvbGRpZXJzIHdlcmUga2lsbGVkLMKgYW5kIG92ZXLCoDI1MCBCcml0aXNoIHNlcnZpY2UgcGVyc29ubmVsIGRpZWQuIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wMy0yN1QxNzoxNzowNC43MjAzNjQ2KzAxOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoZSBGYWxrbGFuZHMgV2FyIHRvb2sgcGxhY2UgYmV0d2VlbiBBcHJpbCBhbmQgSnVuZSAxOTgyLCBmb2xsb3dpbmcgYW4gaW52YXNpb24gb2YgdGhlIElzbGFuZHMgYnkgdGhlIEFyZ2VudGluZSBtaWxpdGFyeSBqdW50YS4gVGhpcyBicmllZmluZyBoYXMgYmVlbiBwcmVwYXJlZCB0byBtYXJrIHRoZSAzNXRoIGFubml2ZXJzYXJ5IG9mIHRoZSBGYWxrbGFuZHMgV2FyLiBJdCBwcm92aWRlcyBiYWNrZ3JvdW5kIHRvIHRoZSBCcml0aXNoIGFuZCBBcmdlbnRpbmUgR292ZXJubWVudHMnIGNsYWltIHRvIHNvdmVyZWlnbnR5IG92ZXIgdGhlIElzbGFuZHM7IGEgc3VtbWFyeSBvZiB0aGUgZXZlbnRzIG9mIHRoZSB3YXI7IGFuZCBhbiBvdmVydmlldyBvZiByZWNlbnQgcG9saXRpY2FsIGRldmVsb3BtZW50cy4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIkxJRi0yMDE3LTAwMjgifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzQxNDA0MSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkxvcmRzIEluIEZvY3VzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiRmFsa2xhbmRzIFdhcjogMzUgWWVhcnMgQW5uaXZlcnNhcnkiLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTk4IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiRmFsa2xhbmQgSXNsYW5kcyJ9CiAgICAgIH0KICAgICAgXSwgInR5cGUiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvc2NoZW1hL3BhcmwjUmVzZWFyY2hCcmllZmluZyJ9CiAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Jlc291cmNlcy83MTMyOTgiLCAiYWJzdHJhY3QiIDogeyJfdmFsdWUiIDogIk9uIDI5IE1hcmNoIDIwMTcsIHRoZSBIb3VzZSBvZiBMb3JkcyBpcyBkdWUgdG8gZGViYXRlIGEgbW90aW9uIHRhYmxlZCBieSBCYXJvbmVzcyBTbWl0aCBvZiBCYXNpbGRvbiwgTGVhZGVyIG9mIHRoZSBPcHBvc2l0aW9uLCBjYWxsaW5nIGZvciB0aGUgYXBwb2ludG1lbnQgb2YgYSBKb2ludCBDb21taXR0ZWUgb2YgYm90aCBIb3VzZXMgdG8gY29uc2lkZXIgYW5kIHJlcG9ydCBieSB0aGUgZW5kIG9mIE9jdG9iZXIgMjAxNyBvbiB0aGUgdGVybXMgYW5kIG9wdGlvbnMgZm9yIHZvdGVzIGluIFBhcmxpYW1lbnQgb24gdGhlIG91dGNvbWUgb2YgbmVnb3RpYXRpb25zIG9uIHRoZSBVS1x1MjAxOXMgd2l0aGRyYXdhbCBmcm9tIHRoZSBFVSwgaW5jbHVkaW5nIGhvdyBhbnkgc3VjaCB2b3RlcyBiZSB0YWtlbiBiZWZvcmUgYW4gYWdyZWVtZW50IGlzIGNvbnNpZGVyZWQgYnkgdGhlIEV1cm9wZWFuIFBhcmxpYW1lbnQuwqBcbiBcblNpbmNlIHRoZSBTdXByZW1lIENvdXJ0IHJ1bGVkIHRoYXQgYW4gQWN0IG9mIFBhcmxpYW1lbnQgd291bGQgYmUgcmVxdWlyZWQgdG8gYXV0aG9yaXNlIG1pbmlzdGVycyB0byB0cmlnZ2VyIEFydGljbGUgNTAgYW5kIGJlZ2luIHRoZSBwcm9jZXNzIG9mIHdpdGhkcmF3aW5nIGZyb20gdGhlIEVVLCBLZWlyIFN0YXJtZXIsIHRoZSBTaGFkb3cgU2VjcmV0YXJ5IG9mIFN0YXRlIGZvciBFeGl0aW5nIHRoZSBFdXJvcGVhbiBVbmlvbiwgaGFzIGJlZW4gY2FsbGluZyBmb3IgUGFybGlhbWVudCBhbHNvIHRvIGhhdmUgXHUyMDFjYSBtZWFuaW5nZnVsIHZvdGUgYXQgdGhlIGVuZCBvZiB0aGUgZXhlcmNpc2VcdTIwMWQuIEluIGhlciBMYW5jYXN0ZXIgSG91c2Ugc3BlZWNoIG9uIDE3IEphbnVhcnkgMjAxNywgaW4gd2hpY2ggc2hlIHNldCBvdXQgaGVyIEJyZXhpdCBuZWdvdGlhdGluZyBvYmplY3RpdmVzLCBUaGVyZXNhIE1heSBjb25maXJtZWQgdGhhdCB0aGUgR292ZXJubWVudCB3b3VsZCBcdTIwMWNwdXQgdGhlIGZpbmFsIGRlYWwgdGhhdCBpcyBhZ3JlZWQgYmV0d2VlbiB0aGUgVUsgYW5kIEVVIHRvIGEgdm90ZSBpbiBib3RoIEhvdXNlcyBvZiBQYXJsaWFtZW50LCBiZWZvcmUgaXQgY29tZXMgaW50byBmb3JjZVx1MjAxZC4gRHVyaW5nIHRoZSBDb21tb25zIGNvbW1pdHRlZSBzdGFnZSBkZWJhdGUgb24gdGhlIEV1cm9wZWFuIFVuaW9uIChOb3RpZmljYXRpb24gb2YgV2l0aGRyYXdhbCkgQWN0IDIwMTcsIERhdmlkIEpvbmVzLCBNaW5pc3RlciBvZiBTdGF0ZSBhdCB0aGUgRGVwYXJ0bWVudCBmb3IgRXhpdGluZyB0aGUgRXVyb3BlYW4gVW5pb24sIGFubm91bmNlZCBhIEdvdmVybm1lbnQgdW5kZXJ0YWtpbmcgdG8gaG9sZCBhIHBhcmxpYW1lbnRhcnkgdm90ZSBiZWZvcmUgYSB3aXRoZHJhd2FsIGRlYWwgd2FzIGZpbmFsbHkgY29uY2x1ZGVkLCBhbmQgYSB2b3RlIG9uIHRoZSBVS1x1MjAxOXMgZnV0dXJlIHJlbGF0aW9uc2hpcCB3aXRoIHRoZSBFVS5cbiBcblNldmVyYWwgYXR0ZW1wdHMgKHVsdGltYXRlbHkgdW5zdWNjZXNzZnVsKSB3ZXJlIG1hZGUgZHVyaW5nIHRoZSBwYXNzYWdlIG9mIHRoZSBBY3QgdG8gaW50cm9kdWNlIGFtZW5kbWVudHMgdG8gcHV0IGd1YXJhbnRlZXMgYWJvdXQgYSBwYXJsaWFtZW50YXJ5IHZvdGUgb24gdGhlIGZhY2Ugb2YgdGhlIEFjdC4gQXQgcmVwb3J0IHN0YWdlLCB0aGUgSG91c2Ugb2YgTG9yZHMgdm90ZWQgYnkgMzY2IHZvdGVzIHRvIDI2OFx1MjAxNGEgbWFqb3JpdHkgb2YgOTggYW5kIHRoZSBsYXJnZXN0IHZvdGUgb24gcmVjb3JkIGluIHRoZSBIb3VzZSBvZiBMb3Jkc1x1MjAxNGluIGZhdm91ciBvZiBzdWNoIGFuIGFtZW5kbWVudCwgYnV0IHRoaXMgd2FzIGxhdGVyIG92ZXJ0dXJuZWQgYnkgdGhlIEhvdXNlIG9mIENvbW1vbnMuIFRoaXMgYnJpZWZpbmcgc3VtbWFyaXNlcyB3aGF0IGhhcHBlbmVkIGR1cmluZyB0aGUgcGFzc2FnZSBvZiB0aGUgQWN0IGluIG9yZGVyIHRvIHByb3ZpZGUgdGhlIGJhY2tncm91bmQgY29udGV4dCB0byBCYXJvbmVzcyBTbWl0aFx1MjAxOXMgbW90aW9uLiJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDMtMjdUMTM6NDk6NDAuODkxMDIzNyswMTowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIEhvdXNlIG9mIExvcmRzIExpYnJhcnkgYnJpZWZpbmcgc3VtbWFyaXNlcyBzZXZlcmFsIGF0dGVtcHRzICh1bHRpbWF0ZWx5IHVuc3VjY2Vzc2Z1bCkgbWFkZSBkdXJpbmcgdGhlIHBhc3NhZ2Ugb2YgdGhlIEV1cm9wZWFuIFVuaW9uIChOb3RpZmljYXRpb24gb2YgV2l0aGRyYXdhbCkgQWN0IDIwMTcgdG8gaW50cm9kdWNlIGFtZW5kbWVudHMgdG8gcHV0IGd1YXJhbnRlZXMgaW4gdGhlIEFjdCBhYm91dCBhIHBhcmxpYW1lbnRhcnkgdm90ZSBvbiB0aGUgb3V0Y29tZSBvZiB0aGUgQnJleGl0IG5lZ290aWF0aW9ucy4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIkxJRi0yMDE3LTAwMjcifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzQxNDA0MSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkxvcmRzIEluIEZvY3VzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiRXVyb3BlYW4gVW5pb24gKE5vdGlmaWNhdGlvbiBvZiBXaXRoZHJhd2FsKSBBY3QgMjAxNyBhbmQgUGFybGlhbWVudGFyeSBBcHByb3ZhbCBvZiB0aGUgT3V0Y29tZSBvZiBCcmV4aXQgTmVnb3RpYXRpb25zIiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTUxNCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkNlbnRyYWwgZ292ZXJubWVudCJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTUzMiIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkNvbnN0aXR1dGlvbiJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTU5MCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkVVIGluc3RpdHV0aW9ucyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTU5MSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkVVIGxhdyBhbmQgdHJlYXRpZXMifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU3MDMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJQYXJsaWFtZW50In0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzY3NTM5NiIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiQmFja2dyb3VuZFxuIFxuQm9iIEJsYWNrbWFuIGRyZXcgc2Vjb25kIHBsYWNlIGluIHRoZSBQcml2YXRlIE1lbWJlcnNcdTIwMTkgQmlsbCBCYWxsb3QgYW5kIGludHJvZHVjZWQgdGhlIEhvbWVsZXNzbmVzcyBSZWR1Y3Rpb24gQmlsbCAyMDE2LTE3IG9uIDI5IEp1bmUgMjAxNiAoQmlsbCA3IG9mIDIwMTYtMTcpLsKgIFRoZSBkZWJhdGUgb24gU2Vjb25kIFJlYWRpbmcgdG9vayBwbGFjZSBvbiAyOCBPY3RvYmVyIDIwMTYuIFRoZSBCaWxsIGV4dGVuZHMgdG8gRW5nbGFuZCBhbmQgV2FsZXMgYnV0IHdpbGwgb25seSBhcHBseSBpbiBFbmdsYW5kLsKgIFRoZSBCaWxsIGFuZCBpdHMgRXhwbGFuYXRvcnkgTm90ZXMgYXJlIG9uIHRoZSBQYXJsaWFtZW50IHdlYnNpdGUuXG4gXG5GdWxsIGJhY2tncm91bmQgb24gdGhlIEJpbGwgYW5kIGl0cyBwcm92aXNpb25zIGFzIG9yaWdpbmFsbHkgcHJlc2VudGVkIGNhbiBiZSBmb3VuZCBpbiBMaWJyYXJ5IEJyaWVmaW5nIFBhcGVyIDc3MzYsIEhvbWVsZXNzbmVzcyBSZWR1Y3Rpb24gQmlsbCAyMDE2LTE3LiBUaGUgbWFpbiB0aHJ1c3Qgb2YgdGhlIEJpbGwgaXMgdG8gcmVmb2N1cyBFbmdsaXNoIGxvY2FsIGF1dGhvcml0aWVzIG9uIGVmZm9ydHMgdG8gcHJldmVudCBob21lbGVzc25lc3MuIFRoZSBHb3Zlcm5tZW50IHB1Ymxpc2hlZCBhIHNlcmllcyBvZiBwb2xpY3kgZmFjdCBzaGVldHMgb24gZWFjaCBjbGF1c2Ugb2YgdGhlIEJpbGwgYnkgd2F5IG9mIGJhY2tncm91bmQgYXMgaXQgcHJvZ3Jlc3NlZCB0aHJvdWdoIFB1YmxpYyBCaWxsIENvbW1pdHRlZS5cbiBcblRoZSBCaWxsIGhhcyBhdHRyYWN0ZWQgR292ZXJubWVudCBhbmQgY3Jvc3MtUGFydHkgc3VwcG9ydC4gSXQgd2FzIGNvbnNpZGVyZWQgZHVyaW5nIHNldmVuIHNpdHRpbmdzIG9mIHRoZSBQdWJsaWMgQmlsbCBDb21taXR0ZWUgYmV0d2VlbiAyMyBOb3ZlbWJlciAyMDE2IGFuZCAxOCBKYW51YXJ5IDIwMTcuwqBUaGUgUmVwb3J0IFN0YWdlIGFuZCBUaGlyZCBSZWFkaW5nIHRvb2sgcGxhY2Ugb24gMjcgSmFudWFyeSAyMDE3LsKgwqBUaGUgQmlsbFx1MjAxOXMgZGViYXRlIG9uIFNlY29uZCBSZWFkaW5nIGluIHRoZSBIb3VzZSBvZiBMb3JkcyB0b29rwqBwbGFjZSBvbiAyNCBGZWJydWFyeSAyMDE3LiBUaGUgQmlsbCB3YXMgY29tbWl0dGVkIHRvIGEgQ29tbWl0dGVlIG9mIHRoZSB3aG9sZSBIb3VzZSBidXQgbm8gYW1lbmRtZW50cyB3ZXJlIHNldCBkb3duIGFuZCB0aGUgT3JkZXIgb2YgQ29tbWl0bWVudCB3YXMgZGlzY2hhcmdlZCBvbiAxMCBNYXJjaCAyMDE3LiBUaGUgQmlsbCByZWNlaXZlZCBpdHMgVGhpcmQgUmVhZGluZyBpbiB0aGUgSG91c2Ugb2YgTG9yZHMgd2l0aCBubyBkZWJhdGXCoG9uIDIzIE1hcmNoIDIwMTcuXG4gXG5BbWVuZG1lbnRzIG1hZGVcbiBcbkdvdmVybm1lbnQgYW1lbmRtZW50cyB0byBjbGF1c2VzIDEgYW5kIDExIHdlcmUgYWdyZWVkIGluIFB1YmxpYyBCaWxsIENvbW1pdHRlZS4gVGhlIEdvdmVybm1lbnQgY29tbWl0dGVkIHRvIGJyaW5naW5nIGZvcndhcmQgYW1lbmRtZW50cyB0byBjbGF1c2VzIDQgYW5kIDcgb24gUmVwb3J0LiBGdXJ0aGVyIEdvdmVybm1lbnQgYW1lbmRtZW50cyB0byBjbGF1c2VzIDUsIDYsIDkgYW5kIDEyIHdlcmUgYWdyZWVkIG9uIFJlcG9ydC4gQW4gYW1lbmRlZCB2ZXJzaW9uIG9mIHRoZSBCaWxsIGhhcyBiZWVuIHB1Ymxpc2hlZDpITCBCaWxsIDk2IG9mIDIwMTYtMTdcbiBcbldoYXQgd2lsbCB0aGUgQmlsbCBkbz9cbiBcblRoZSBCaWxsIGlzIHNlZWtpbmcgdG8gYW1lbmQgUGFydCA3IG9mIHRoZSBIb3VzaW5nIEFjdCAxOTk2LiBJdHMgbWVhc3VyZXMgaW5jbHVkZTpcbiBcbiBBbiBleHRlbnNpb24gb2YgdGhlIHBlcmlvZCBkdXJpbmcgd2hpY2ggYW4gYXV0aG9yaXR5IHNob3VsZCB0cmVhdCBzb21lb25lIGFzIHRocmVhdGVuZWQgd2l0aCBob21lbGVzc25lc3MgZnJvbSAyOCB0byA1NiBkYXlzLiBDbGFyaWZpY2F0aW9uIG9mIHRoZSBhY3Rpb24gYW4gYXV0aG9yaXR5IHNob3VsZCB0YWtlIHdoZW4gc29tZW9uZSBhcHBsaWVzIGZvciBhc3Npc3RhbmNlIGhhdmluZyBiZWVuIHNlcnZlZCB3aXRoIGEgdmFsaWQgc2VjdGlvbiAyMSBub3RpY2Ugb2YgaW50ZW50aW9uIHRvIHNlZWsgcG9zc2Vzc2lvbiBmcm9tIGFuIGFzc3VyZWQgc2hvcnRob2xkIHRlbmFuY3kuIEEgbmV3IGR1dHkgdG8gcHJldmVudCBob21lbGVzc25lc3MgZm9yIGFsbCBlbGlnaWJsZSBhcHBsaWNhbnRzIHRocmVhdGVuZWQgd2l0aCBob21lbGVzc25lc3MuIEEgbmV3IGR1dHkgdG8gcmVsaWV2ZSBob21lbGVzc25lc3MgZm9yIGFsbCBlbGlnaWJsZSBob21lbGVzcyBhcHBsaWNhbnRzLiBBIG5ldyBkdXR5IG9uIHB1YmxpYyBzZXJ2aWNlcyB0byBub3RpZnkgYSBsb2NhbCBhdXRob3JpdHkgaWYgdGhleSBjb21lIGludG8gY29udGFjdCB3aXRoIHNvbWVvbmUgdGhleSB0aGluayBtYXkgYmUgaG9tZWxlc3Mgb3IgYXQgcmlzayBvZiBiZWNvbWluZyBob21lbGVzcy4gXG4gXG5GdW5kaW5nIHRoZSBuZXcgZHV0aWVzIGFuZCBhIGNvbW1pdG1lbnQgdG8gcmV2aWV3XG4gXG5UaGUgQmlsbCBjcmVhdGVzIG5ldyBkdXRpZXMgZm9yIEVuZ2xpc2ggbG9jYWwgYXV0aG9yaXRpZXMgYW5kIGEgZ29vZCBkZWFsIG9mIGRlYmF0ZSBpbiBQdWJsaWMgQmlsbCBDb21taXR0ZWUgYW5kIG9uIFJlcG9ydCBmb2N1c2VkIG9uIGhvdyBtdWNoIHRoZXNlIGR1dGllcyB3b3VsZCBjb3N0LCBhbmQgd2hldGhlciB0aGV5IHdvdWxkIGJlIGZ1bGx5IGZ1bmRlZCBieSB0aGUgR292ZXJubWVudC4gT24gMTcgSmFudWFyeSAyMDE3IHRoZSBNaW5pc3RlciwgTWFyY3VzIEpvbmVzLCBhbm5vdW5jZWQgdGhhdCBmdW5kaW5nIG9mIMKjNDggbWlsbGlvbiB3b3VsZCBiZSBwcm92aWRlZCB0byBtZWV0IHRoZSBhZGRpdGlvbmFsIGNvc3RzIGZvciBsb2NhbCBhdXRob3JpdGllcy4gQXV0aG9yaXRpZXNcdTIwMTkgcmVwcmVzZW50YXRpdmUgYm9kaWVzIGhhdmUgZ2l2ZW4gdGhpcyBhbm5vdW5jZW1lbnQgYSBcdTIwMThjYXV0aW91c1x1MjAxOSB3ZWxjb21lIGJ1dCBoYXZlIGFza2VkIHRoZSBHb3Zlcm5tZW50IHRvIGNvbW1pdCB0byBhIHJldmlldyBvZiB0aGUgQmlsbFx1MjAxOXMgaW1wYWN0IGFmdGVyIHR3byB5ZWFycyBcdTIwMWN0byBlbnN1cmUgdGhhdCBhdXRob3JpdGllcyBhcmUgZnVsbHkgZXF1aXBwZWQgYW5kIGZ1bmRlZCB0byBkZWxpdmVyIHRoZSBCaWxsXHUyMDE5cyBhbWJpdGlvbnMuXHUyMDFkXG4gXG5UaGUgR292ZXJubWVudCBhbWVuZG1lbnRzIGFncmVlZCBvbiBSZXBvcnQgd2lsbCByZXN1bHQgaW4gYWRkaXRpb25hbCBjb3N0cyBmb3IgbG9jYWwgYXV0aG9yaXRpZXMuIFRoZSBNaW5pc3RlciBhbm5vdW5jZWQgdGhhdCB0aGUgZXN0aW1hdGVkIGltcGFjdCB3b3VsZCBiZSDCozEzIG1pbGxpb24sIGJyaW5naW5nIHRvdGFsIEdvdmVybm1lbnQgbmV3IGJ1cmRlbnMgZnVuZGluZyBmb3IgYXV0aG9yaXRpZXMgdXAgdG8gwqM2MSBtaWxsaW9uLiBUaGUgTWluaXN0ZXIgYWxzbyBjb21taXR0ZWQgdG8gcmV2aWV3IHRoZSBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgbGVnaXNsYXRpb24sIFx1MjAxY2luY2x1ZGluZyBpdHMgcmVzb3VyY2luZyBhbmQgaG93IGl0IGlzIHdvcmtpbmcgaW4gcHJhY3RpY2UsIGNvbmNsdWRpbmcgbm8gbGF0ZXIgdGhhbiB0d28geWVhcnMgYWZ0ZXIgdGhlIGNvbW1lbmNlbWVudCBvZiBpdHMgc3Vic3RhbnRpdmUgY2xhdXNlcy5cdTIwMWQifQogICAgICAsICJkYXRlIiA6IHsiX3ZhbHVlIiA6ICIyMDE3LTAzLTI3VDEyOjMwOjI1LjAyNTcwNzErMDE6MDAiLCAiX2RhdGF0eXBlIiA6ICJkYXRlVGltZSJ9CiAgICAgICwgImRlc2NyaXB0aW9uIiA6IFsiVGhpcyBIb3VzZSBvZiBDb21tb25zIExpYnJhcnkgYnJpZWZpbmcgcGFwZXIgcHJvdmlkZXMgaW5mb3JtYXRpb24gb24gdGhlIEhvbWVsZXNzbmVzcyBSZWR1Y3Rpb24gQmlsbCdzIHByb2dyZXNzIHRvIGRhdGUuIFRoZSBtYWluIHRocnVzdCBvZiB0aGUgQmlsbCBpcyB0byByZWZvY3VzIEVuZ2xpc2ggbG9jYWwgYXV0aG9yaXRpZXMgb24gZWZmb3J0cyB0byBwcmV2ZW50IGhvbWVsZXNzbmVzcy4gVGhlIEJpbGwgaGFzIGNvbXBsZXRlZCBpdHMgcHJvZ3Jlc3MgdGhyb3VnaCB0aGUgSG91c2Ugb2YgQ29tbW9ucy4gVGhlIGRlYmF0ZSBvbiBTZWNvbmQgUmVhZGluZyBpbiB0aGUgSG91c2Ugb2YgTG9yZHMgdG9vayBwbGFjZSBvbiAyNCBGZWJydWFyeSAyMDE3LiAgTm8gYW1lbmRtZW50cyB3ZXJlIHRhYmxlZCBmb2xsb3dpbmcgaXRzIGNvbW1pdG1lbnQgdG8gYSBDb21taXR0ZWUgb2YgdGhlIHdob2xlIEhvdXNlLiBUaGUgQmlsbCByZWNlaXZlZCBpdHMgVGhpcmQgUmVhZGluZyBpbiB0aGUgTG9yZHMgd2l0aCBubyBkZWJhdGUgb24gMjMgTWFyY2ggMjAxNy4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIkNCUC03ODU0In0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1MjY3IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgQ29tbW9ucyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy83MDUxMCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlNvY2lhbCBQb2xpY3kgU2VjdGlvbiJ9CiAgICAgIH0KICAgICAgXSwgInN1YlR5cGUiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvNDE0MDMzIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQ29tbW9ucyBCcmllZmluZyBwYXBlcnMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJIb21lbGVzc25lc3MgUmVkdWN0aW9uIEJpbGwgMjAxNi0xNzogUHJvZ3Jlc3MgaW4gdGhlIENvbW1vbnMgYW5kIExvcmRzIiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTYyNiIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvbWVsZXNzbmVzcyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTYyOSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNpbmcifQogICAgICB9CiAgICAgIF0sICJ0eXBlIiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3NjaGVtYS9wYXJsI1Jlc2VhcmNoQnJpZWZpbmcifQogICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9yZXNvdXJjZXMvNzEzMTU5IiwgImFic3RyYWN0IiA6IHsiX3ZhbHVlIiA6ICJPbiAyOSBNYXJjaCAyMDE3LCB0aGUgSG91c2Ugb2YgTG9yZHMgaXMgZHVlIHRvIGRlYmF0ZSBhIG1vdGlvbiB0YWJsZWQgYnkgQmFyb25lc3MgSGF5dGVyIG9mIEtlbnRpc2ggVG93biwgdGhlIFNoYWRvdyBTcG9rZXNwZXJzb24gZm9yIEV4aXRpbmcgdGhlIEV1cm9wZWFuIFVuaW9uLCBjYWxsaW5nIGZvciB0aGUgR292ZXJubWVudCB0byByZXBvcnQgdG8gdGhlIEhvdXNlIGJ5IHRoZSBlbmQgb2YgdGhlIHBhcmxpYW1lbnRhcnkgc2Vzc2lvbiBvbiB0aGUgcHJvZ3Jlc3MgbWFkZSB0b3dhcmRzIGVuc3VyaW5nIHRoYXQgcXVhbGlmeWluZyBub24tVUsgRXVyb3BlYW4gRWNvbm9taWMgQXJlYSAoRUVBKSBuYXRpb25hbHMgYW5kIHRoZWlyIGZhbWlseSBtZW1iZXJzIGFyZSBhYmxlIHRvIHJldGFpbiB0aGVpciBmdW5kYW1lbnRhbCBFVS1kZXJpdmVkIHJpZ2h0cyBhZnRlciB0aGUgVUsgaGFzIGxlZnQgdGhlIEVVLlxuIFxuVGhlIEdvdmVybm1lbnQgaGFzIHN0YXRlZCB0aGF0IGl0IHdhbnRzIHRvIHNlY3VyZSB0aGUgc3RhdHVzIG9mIEVVIGNpdGl6ZW5zIHdobyBhcmUgYWxyZWFkeSBsaXZpbmcgaW4gdGhlIFVLIChlc3RpbWF0ZWQgdG8gYmUgYXJvdW5kIDIuOCBtaWxsaW9uIHBlb3BsZSkgYW5kIHRoYXQgb2YgVUsgbmF0aW9uYWxzIGluIG90aGVyIEVVIG1lbWJlciBzdGF0ZXMgKGVzdGltYXRlZCB0byBiZSBhcm91bmQgYSBtaWxsaW9uIHBlb3BsZSkgYXMgZWFybHkgYXMgaXQgY2FuIGluIHRoZSBCcmV4aXQgbmVnb3RpYXRpb24gcHJvY2Vzcy4gVGhlIEdvdmVybm1lbnQgc2Vla3MgdG8gZG8gdGhpcyBcdTIwMWN0aHJvdWdoIGEgcmVjaXByb2NhbCBkZWFsIHdpdGggb3VyIEV1cm9wZWFuIHBhcnRuZXJzXHUyMDFkLCBhbmQgaGFzIHNhaWQgdGhhdCBpdCBoYXMgXHUyMDFjbm90IHByb3ZlbiBwb3NzaWJsZVx1MjAxZCB0byByZXNvbHZlIHRoaXMgaXNzdWUgYmVmb3JlIHRoZSBzdGFydCBvZiBmb3JtYWwgQnJleGl0IG5lZ290aWF0aW9ucy4gSG93ZXZlciwgdGhlcmUgaGF2ZSBiZWVuIGNhbGxzXHUyMDE0aW5jbHVkaW5nIGZyb20gdGhlIEpvaW50IENvbW1pdHRlZSBvbiBIdW1hbiBSaWdodHMgKEpDSFIpLCB0aGUgSG91c2Ugb2YgTG9yZHMgRXVyb3BlYW4gVW5pb24gQ29tbWl0dGVlIGFuZCB0aGUgSG91c2Ugb2YgQ29tbW9ucyBDb21taXR0ZWUgb24gRXhpdGluZyB0aGUgRXVyb3BlYW4gVW5pb25cdTIwMTRmb3IgdGhlIEdvdmVybm1lbnQgdG8gbWFrZSBhIHVuaWxhdGVyYWwgZ3VhcmFudGVlIG9uIHRoZSBwb3N0LUJyZXhpdCBzdGF0dXMgb2YgRVUgbmF0aW9uYWxzIGxpdmluZyBpbiB0aGUgVUssIGJlZm9yZSBiZWdpbm5pbmcgdG8gbmVnb3RpYXRlIGEgZGVhbCB3aXRoIHRoZSBFVSBvbiB0aGUgc3RhdHVzIG9mIFVLIG5hdGlvbmFscyBsaXZpbmcgaW4gb3RoZXIgRVUgbWVtYmVyIHN0YXRlcy5cbiBcblNldmVyYWwgYXR0ZW1wdHMgKHVsdGltYXRlbHkgdW5zdWNjZXNzZnVsKSB3ZXJlIG1hZGUgZHVyaW5nIHRoZSBwYXNzYWdlIG9mIHRoZSBFdXJvcGVhbiBVbmlvbiAoTm90aWZpY2F0aW9uIG9mIFdpdGhkcmF3YWwpIEFjdCAyMDE3IHRvIGludHJvZHVjZSBhbWVuZG1lbnRzIHRvIGd1YXJhbnRlZSB0aGF0IHRoZSByaWdodHMgb2YgRVUvRUVBIGNpdGl6ZW5zIGN1cnJlbnRseSBsaXZpbmcgaW4gdGhlIFVLIHdvdWxkIGNvbnRpbnVlIGFmdGVyIEJyZXhpdC4gQXQgY29tbWl0dGVlIHN0YWdlLCB0aGUgSG91c2Ugb2YgTG9yZHMgdm90ZWQgYnkgMzU4IHZvdGVzIHRvIDI1Nlx1MjAxNGEgbWFqb3JpdHkgb2YgMTAyIGFuZCB0aGUgdGhpcmQgbGFyZ2VzdCB2b3RlIG9uIHJlY29yZCBpbiB0aGUgSG91c2Ugb2YgTG9yZHNcdTIwMTRpbiBmYXZvdXIgb2Ygc3VjaCBhbiBhbWVuZG1lbnQsIGJ1dCB0aGlzIHdhcyBsYXRlciBvdmVydHVybmVkIGJ5IHRoZSBIb3VzZSBvZiBDb21tb25zLiBUaGlzIGJyaWVmaW5nIHN1bW1hcmlzZXMgd2hhdCBoYXBwZW5lZCBkdXJpbmcgdGhlIHBhc3NhZ2Ugb2YgdGhlIEFjdCBpbiBvcmRlciB0byBwcm92aWRlIHRoZSBiYWNrZ3JvdW5kIGNvbnRleHQgdG8gQmFyb25lc3MgSGF5dGVyXHUyMDE5cyBtb3Rpb24uIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wMy0yMlQxNjoxODowOS43MjU1Njg0KzAwOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgSG91c2Ugb2YgTG9yZHMgTGlicmFyeSBicmllZmluZyBzdW1tYXJpc2VzIHNldmVyYWwgYXR0ZW1wdHMgKHVsdGltYXRlbHkgdW5zdWNjZXNzZnVsKSBtYWRlIGR1cmluZyB0aGUgcGFzc2FnZSBvZiB0aGUgRXVyb3BlYW4gVW5pb24gKE5vdGlmaWNhdGlvbiBvZiBXaXRoZHJhd2FsKSBBY3QgMjAxNyB0byBpbnRyb2R1Y2UgYW1lbmRtZW50cyB0byBndWFyYW50ZWUgdGhhdCB0aGUgcmlnaHRzIG9mIEVVL0VFQSBjaXRpemVucyBjdXJyZW50bHkgbGl2aW5nIGluIHRoZSBVSyB3b3VsZCBjb250aW51ZSBhZnRlciBCcmV4aXQuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMSUYtMjAxNy0wMDI2In0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy80MTQwNDEiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBJbiBGb2N1cyJ9CiAgICAgIH0KICAgICAgLCAidGl0bGUiIDogIkV1cm9wZWFuIFVuaW9uIChOb3RpZmljYXRpb24gb2YgV2l0aGRyYXdhbCkgQWN0IDIwMTcgYW5kIHRoZSBSaWdodHMgb2YgRVUgTmF0aW9uYWxzIiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTUwMyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkJlbmVmaXRzIGFkbWluaXN0cmF0aW9uIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTkxIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiRVUgbGF3IGFuZCB0cmVhdGllcyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTYzNSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkh1bWFuIHJpZ2h0cyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTYzNiIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkltbWlncmF0aW9uIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NzAzIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiUGFybGlhbWVudCJ9CiAgICAgIH0KICAgICAgXSwgInR5cGUiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvc2NoZW1hL3BhcmwjUmVzZWFyY2hCcmllZmluZyJ9CiAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Jlc291cmNlcy83MTI2OTQiLCAiYWJzdHJhY3QiIDogeyJfdmFsdWUiIDogIk9uIHRoZSBmaXJzdCBtZWV0aW5nIG9mIFBhcmxpYW1lbnQgYWZ0ZXIgU3RhdGUgT3BlbmluZywgdHdvIE1lbWJlcnMgb2YgdGhlIEhvdXNlIG9mIExvcmRzIG1vdmUgdGhhdCBhIGh1bWJsZSBhZGRyZXNzIGJlIHByZXNlbnRlZCB0byB0aGUgUXVlZW4gYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGFua3MgZm9yIHRoZSBcdTIwMThNb3N0IEdyYWNpb3VzIFNwZWVjaFx1MjAxOSB0aGF0IGhhZCBiZWVuIGFkZHJlc3NlZCB0byBib3RoIEhvdXNlcyBvZiBQYXJsaWFtZW50LiBUaGUgdHdvIE1lbWJlcnMgYXJlIGNob3NlbiBieSB0aGUgTGVhZGVyIG9mIHRoZSBIb3VzZSBhbmQgZWFjaCBkZWxpdmVycyBhIHNwZWVjaCB3aGljaCBieSBjdXN0b20gaXMgdW5jb250cm92ZXJzaWFsLiBDb252ZW50aW9uIGhhcyBpdCB0aGF0IHRoZSBmaXJzdCBzcGVlY2ggaXMgZGVsaXZlcmVkIGJ5IGEgbG9uZy1zdGFuZGluZyBNZW1iZXIgKGtub3duIGFzIHRoZSBcdTIwMThtb3Zlclx1MjAxOSkgYW5kIGl0IGlzIHNlY29uZGVkIGJ5IGEgbmV3ZXIgTWVtYmVyIChrbm93biBhcyB0aGUgXHUyMDE4c2Vjb25kZXJcdTIwMTkpLiBCb3RoIE1lbWJlcnMgYXJlIGdvdmVybm1lbnQgYmFja2JlbmNoZXJzLldoZW4gdGhlc2Ugc3BlZWNoZXMgaGF2ZSBjb25jbHVkZWQsIHRoZSBIb3VzZSBkZWJhdGVzIHRoZSBsZWdpc2xhdGl2ZSBwcm9ncmFtbWUgdGhhdCB3YXMgcHJlc2VudGVkIGluIHRoZSBRdWVlblx1MjAxOXMgU3BlZWNoLlRoZSBkZWJhdGVzIG9uIHRoZSBRdWVlblx1MjAxOXMgU3BlZWNoIGFyZSB0aGUgZmlyc3QgbWFpbiBpdGVtIG9mIGJ1c2luZXNzIG9mIGVhY2ggbmV3IHBhcmxpYW1lbnRhcnkgc2Vzc2lvbi4ifQogICAgICAsICJkYXRlIiA6IHsiX3ZhbHVlIiA6ICIyMDE3LTAzLTIxVDE2OjQwOjI4LjIzNzI0MDIrMDA6MDAiLCAiX2RhdGF0eXBlIiA6ICJkYXRlVGltZSJ9CiAgICAgICwgImRlc2NyaXB0aW9uIiA6IFsiVGhpcyBIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5IGJyaWVmaW5nIHByb3ZpZGVzIGEgbGlzdCBvZiB0aGUgbW92ZXIgYW5kIHNlY29uZGVyIGZvbGxvd2luZyBlYWNoIFF1ZWVuXHUyMDE5cyBTcGVlY2ggZm9yIHRoZSBwYXN0IDIwIHllYXJzLCBhbG9uZyB3aXRoIGVhY2ggTWVtYmVyXHUyMDE5cyBwYXJ0eSBhZmZpbGlhdGlvbiBhdCB0aGUgdGltZS4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIkxJRi0yMDE3LTAwMjUifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzQxNDA0MSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkxvcmRzIEluIEZvY3VzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiUXVlZW5cdTIwMTlzIFNwZWVjaDogTG9yZHMgTW92ZXJzIGFuZCBTZWNvbmRlcnMiLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjI4IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2NzUiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJNZW1iZXJzIG9mIHRoZSBMb3JkcyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTcwNSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlBhcmxpYW1lbnRhcnkgcHJvY2VkdXJlIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzcwOTE4NiIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiT24gNyBNYXJjaCAyMDE3LCB0aGUgSG91c2Ugb2YgTG9yZHMgdm90ZWQgYXQgcmVwb3J0IHN0YWdlIG9uIHRoZSBFdXJvcGVhbiBVbmlvbiAoTm90aWZpY2F0aW9uIG9mIFdpdGhkcmF3YWwpIEJpbGwgYnkgMzY2IHZvdGVzIHRvIDI2OCB0byBhZ3JlZSB0byBhbiBhbWVuZG1lbnQgbW92ZWQgYnkgTG9yZCBQYW5uaWNrIChDcm9zc2JlbmNoKS4gSW4gdG90YWwgNjM0IE1lbWJlcnMgdm90ZWQsIGFsbW9zdCA0IGluIDUgb2YgdGhvc2UgZWxpZ2libGUgdG8gZG8gc28gYXQgdGhlIHRpbWUgb2YgdGhlIHZvdGUuIFRoaXMgaXMgdGhlIGxhcmdlc3QgdG90YWwgbnVtYmVyIG9mIE1lbWJlcnMgdm90aW5nIGluIGEgc2luZ2xlIGRpdmlzaW9uIG9uIHJlY29yZC5cbiBcblRoaXMgYmVhdCB0aGUgcHJldmlvdXMgbGFyZ2VzdCB2b3RlIG9mIDYyMSByZWNvcmRlZCBvbiAxNCBKdWx5IDE5OTMuIE9uIHRoaXMgb2NjYXNpb24sIE1lbWJlcnMgdm90ZWQgYnkgNDQ1IHRvIDE3NiBhZ2FpbnN0IGFuIGFtZW5kbWVudCB0byB0aGUgRXVyb3BlYW4gQ29tbXVuaXRpZXMgKEFtZW5kbWVudCkgQmlsbCwgd2hpY2ggd291bGQgaGF2ZSByZXF1aXJlZCBhIHJlZmVyZW5kdW0gdG8gYmUgaGVsZC4gVGhlIFRpbWVzIGNhbGxlZCBpdCB0aGUgXHUyMDFjYmlnZ2VzdCB0dXJub3V0IG9mIHBlZXJzIGluIG1vZGVybiB0aW1lc1x1MjAxZC4gSW4gdGVybXMgb2YgdGhlIHByb3BvcnRpb24gb2YgTWVtYmVycyBlbGlnaWJsZSB0byB2b3RlIGF0IHRoYXQgdGltZSwgdGhpcyByZXByZXNlbnRlZCBhYm91dCB0aHJlZSBpbiBmaXZlLlxuIFxuVW50aWwgdGhpcyB5ZWFyLCB0aGUgMTk5MyB2b3RlIHdhcyB0aG91Z2h0IHRvIGhhdmUgYmVlbiB0aGUgbGFyZ2VzdCBzaW5jZSAxODMxLiBUaGlzIGhhcyBiZWVuIHdpZGVseSBhc3N1bWVkIHRvIG1lYW4gYSBsYXJnZXIgdm90ZSB0b29rIHBsYWNlIGluIDE4MzEsIHBvc3NpYmx5IG9uIHRoZSBcdTIwMThHcmVhdCBSZWZvcm0gQmlsbFx1MjAxOS4gSG93ZXZlciwgdGhlIEhvdXNlIHdhcyBub3QgbGFyZ2UgZW5vdWdoIGF0IHRoYXQgdGltZSB0byB2b3RlIGluIHN1Y2ggbnVtYmVyczogZmlndXJlcyBhdmFpbGFibGUgZm9yIDE4MzAgc3VnZ2VzdCB0aGUgSG91c2UgaGFkIDM5OSBNZW1iZXJzLiBIb3dldmVyLCBpbiByZWplY3RpbmcgdGhlIFx1MjAxOEdyZWF0IFJlZm9ybSBCaWxsXHUyMDE5IG9uIDcgT2N0b2JlciAxODMxIGEgdG90YWwgb2YgMzU3IE1lbWJlcnMgdm90ZWQuIE9uIHRoZSBiYXNpcyB0aGF0IHRoZSBIb3VzZSBoYWQgYXJvdW5kIDQwMCBNZW1iZXJzIGluIDE4MzEgdGhpcyB3b3VsZCBoYXZlIGVxdWF0ZWQgdG8gYWxtb3N0IG5pbmUgaW4gdGVuIG9mIE1lbWJlcnMgdm90aW5nIGluIHRoYXQgZGl2aXNpb24uXG4gXG5UaGUgZm9sbG93aW5nIHRhYmxlIHByb3ZpZGVzIGRldGFpbHMgb2Ygdm90ZXMgaGVsZCBzaW5jZSB0aGUgSG91c2Ugb2YgTG9yZHMgQWN0IDE5OTkgd2hlcmUgdGhlIG51bWJlciBvZiBNZW1iZXJzIHZvdGluZyB0b3RhbGxlZCBtb3JlIHRoYW4gNTAwLlxuIFxuwqBcbiBcbiBOdW1iZXIgVm90ZWQgSXNzdWUgQmlsbC9Jc3N1ZSBCaWxsIFN0YWdlIERhdGUgNjM0IEFtZW5kbWVudCByZXF1aXJpbmcgcGFybGlhbWVudGFyeSBhcHByb3ZhbCBmb3IgdGhlIG91dGNvbWUgb2YgbmVnb3RpYXRpb25zIHdpdGggdGhlIEV1cm9wZWFuIFVuaW9uIEV1cm9wZWFuIFVuaW9uIChOb3RpZmljYXRpb24gb2YgV2l0aGRyYXdhbCkgQmlsbCBSZXBvcnQgNyBNYXJjaCAyMDE3IDYxNCBBbWVuZG1lbnQgY29uY2VybmluZyBFVSBjaXRpemVuXHUyMDE5cyByaWdodCB0byByZW1haW4gRXVyb3BlYW4gVW5pb24gKE5vdGlmaWNhdGlvbiBvZiBXaXRoZHJhd2FsKSBCaWxsIENvbW1pdHRlZSAxIE1hcmNoIDIwMTcgNTkyIEFtZW5kbWVudCB0byB0aGUgbW90aW9uIHRvIHNlbmQgdGhlIEJpbGwgdG8gYSBzZWxlY3QgY29tbWl0dGVlIGZvciBjb25zaWRlcmF0aW9uIEhlYWx0aCBhbmQgU29jaWFsIENhcmUgQmlsbCBTZWNvbmQgUmVhZGluZyAxMiBPY3RvYmVyIDIwMTEgNTg0IEFtZW5kbWVudCB0byB0aGUgbW90aW9uIGRlY2xpbmluZyB0byBjb25zaWRlciB0aGUgUmVndWxhdGlvbnMgdW50aWwgdGhlIEdvdmVybm1lbnQgbGFpZCBhIHJlcG9ydCBiZWZvcmUgdGhlIEhvdXNlIFRheCBDcmVkaXRzIChJbmNvbWUgVGhyZXNob2xkcyBhbmQgRGV0ZXJtaW5hdGlvbiBvZiBSYXRlcykgKEFtZW5kbWVudCkgUmVndWxhdGlvbnMgMjAxNSBOL0EgMjYgT2N0b2JlciAyMDE1IDU3NCBBbWVuZG1lbnQgdG8gdGhlIG1vdGlvbiBkZWNsaW5pbmcgdG8gZ2l2ZSB0aGUgQmlsbCBhIHNlY29uZCByZWFkaW5nIEhlYWx0aCBhbmQgU29jaWFsIENhcmUgQmlsbCBTZWNvbmQgUmVhZGluZyAxMiBPY3RvYmVyIDIwMTEgNTYxIEFtZW5kbWVudCB0byB0aGUgbW90aW9uIGRlY2xpbmluZyB0byBjb25zaWRlciB0aGUgUmVndWxhdGlvbnMgdW50aWwgdGhlIEdvdmVybm1lbnQgaXNzdWVkIGEgY29uc3VsdGF0aW9uIGFuZCBsYWlkIGEgcmVwb3J0IGJlZm9yZSB0aGUgSG91c2UgVGF4IENyZWRpdHMgKEluY29tZSBUaHJlc2hvbGRzIGFuZCBEZXRlcm1pbmF0aW9uIG9mIFJhdGVzKSAoQW1lbmRtZW50KSBSZWd1bGF0aW9ucyAyMDE1IE4vQSAyNiBPY3RvYmVyIDIwMTUgNTYxIFRvIGFwcG9pbnQgYSBzZWxlY3QgY29tbWl0dGVlIHRvIGNvbnNpZGVyIHRoZSBpbXBhY3Qgb2YgY2xhdXNlcyAxMCBhbmQgMTEgb2YgdGhlIFRyYWRlIFVuaW9uIEJpbGwgVHJhZGUgVW5pb24gQmlsbCBOL0EgMjAgSmFudWFyeSAyMDE2IDU0NCBEZXRlbnRpb24gb2YgMTUgeWVhciBvbGRzIGluIHNlY3VyZSBjb2xsZWdlcyBDcmltaW5hbCBKdXN0aWNlIGFuZCBDb3VydHMgQmlsbCBDb21tb25zIEFtZW5kbWVudHMgOSBEZWNlbWJlciAyMDE0IDU0MSBBbWVuZG1lbnQgdG8gdGhlIG1vdGlvbiB0aGF0IHRoZSBCaWxsIGJlIG5vdCByZWFkIGEgdGhpcmQgdGltZSB1bnRpbCB0aGUgSG91c2UgaGFkIHRoZSBvcHBvcnR1bml0eSB0byBjb25zaWRlciBmdXJ0aGVyIHNwZWNpZmllZCBpbmZvcm1hdGlvbiBIZWFsdGggYW5kIFNvY2lhbCBDYXJlIEJpbGwgVGhpcmQgUmVhZGluZyAxOSBNYXJjaCAyMDEyIDUzOCBBbWVuZG1lbnQgdG8gdGhlIG1vdGlvbiBkZWNsaW5pbmcgdG8gZ2l2ZSB0aGUgQmlsbCBhIHNlY29uZCByZWFkaW5nIE1hcnJpYWdlcyAoU2FtZSBTZXggQ291cGxlcykgQmlsbCBTZWNvbmQgUmVhZGluZyA0IEp1bmUgMjAxMyA1MzIgQW1lbmRtZW50IGNvbmNlcm5pbmcgc3R1ZGVudHMgYW5kIGFjYWRlbWljIHN0YWZmIGF0IGhpZ2hlciBlZHVjYXRpb24gcHJvdmlkZXJzIEhpZ2hlciBFZHVjYXRpb24gYW5kIFJlc2VhcmNoIEJpbGwgUmVwb3J0IDEzIE1hcmNoIDIwMTcgNTMyIEFtZW5kbWVudCByZWdhcmRpbmcgdGhlIG51bWJlciBhbmQgZGlzdHJpYnV0aW9uIG9mIHNlYXRzIGluIHRoZSBIb3VzZSBvZiBDb21tb25zIFBhcmxpYW1lbnRhcnkgVm90aW5nIFN5c3RlbSBhbmQgQ29uc3RpdHVlbmNpZXMgQmlsbCBSZXBvcnQgOSBGZWJydWFyeSAyMDExIDUzMSBBbWVuZG1lbnQgdG8gZGVsYXkgdGhlIHJlcG9ydCBvZiB0aGUgQm91bmRhcnkgQ29tbWlzc2lvbiB1bnRpbCBPY3RvYmVyIDIwMTggRWxlY3RvcmFsIFJlZ2lzdHJhdGlvbiBhbmQgQWRtaW5pc3RyYXRpb24gQmlsbCBDb21taXR0ZWUgMTQgSmFudWFyeSAyMDEzIDUyOCBBbWVuZG1lbnQgdG8gYSBnb3Zlcm5tZW50IGFtZW5kbWVudCBjb25jZXJuaW5nIHB1YmxpY2l0eSBvZiBCb3VuZGFyeSBDb21taXNzaW9uIHJlcG9ydHMgUGFybGlhbWVudGFyeSBWb3RpbmcgU3lzdGVtIGFuZCBDb25zdGl0dWVuY2llcyBCaWxsIFJlcG9ydCA4IEZlYnJ1YXJ5IDIwMTEgNTI0IEFtZW5kbWVudCB0byB0aGUgbW90aW9uIHRvIGFubnVsIEVsZWN0b3JhbCBSZWdpc3RyYXRpb24gYW5kIEFkbWluaXN0cmF0aW9uIEFjdCAyMDEzIChUcmFuc2l0aW9uYWwgUHJvdmlzaW9ucykgT3JkZXLCoDIwMTUgTi9BIDI3IE9jdG9iZXIgMjAxNSA1MTMgQW1lbmRtZW50IGNvbmNlcm5pbmcgY2l2aWwgbGlhYmlsaXR5IGZvciB1bmxhd2Z1bCBpbnRlcmNlcHRpb25zIEludmVzdGlnYXRvcnkgUG93ZXJzIEJpbGwgQ29uc2lkZXJhdGlvbiBvZiBDb21tb25zIFJlYXNvbnMgYW5kIEFtZW5kbWVudHMgMiBOb3ZlbWJlciAyMDE2IDUwMyBNb3Rpb24gdG8gYW5udWwgRWxlY3RvcmFsIFJlZ2lzdHJhdGlvbiBhbmQgQWRtaW5pc3RyYXRpb24gQWN0IDIwMTMgKFRyYW5zaXRpb25hbCBQcm92aXNpb25zKSBPcmRlcsKgMjAxNSBOL0EgMjcgT2N0b2JlciAyMDE1In0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wMy0xNlQxNTowMDowNi4zNDkzOTY4KzAwOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgSG91c2Ugb2YgTG9yZHMgTGlicmFyeSBicmllZmluZyBwcm92aWRlcyBpbmZvcm1hdGlvbiBhYm91dCB0aGUgbGFyZ2VzdCB2b3RlcyB0aGF0IGhhdmUgdGFrZW4gcGxhY2UgaW4gdGhlIEhvdXNlIG9mIExvcmRzLiJdLCAiaWRlbnRpZmllciIgOiB7Il92YWx1ZSIgOiAiTElGLTIwMTctMDAyMyJ9CiAgICAgICwgInB1Ymxpc2hlciIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgICwgInNlY3Rpb24iIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgXSwgInN1YlR5cGUiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvNDE0MDQxIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTG9yZHMgSW4gRm9jdXMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJIb3VzZSBvZiBMb3JkczogTGFyZ2VzdCBWb3RlcyBSZWNvcmRlZCIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2MjgiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTcwNSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlBhcmxpYW1lbnRhcnkgcHJvY2VkdXJlIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzcxMTY1NSIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiQ3VycmVudCBEZXBsb3ltZW50XG4gXG5UaGUgTkFUTyBTZWNyZXRhcnkgR2VuZXJhbCwgSmVucyBTdG9sdGVuYmVyZywgaGFzIGRlc2NyaWJlZCB0aGUgTm9ydGggQXRsYW50aWMgVHJlYXR5IE9yZ2FuaXphdGlvbiAoTkFUTykgYXMgY3VycmVudGx5IGZhY2luZyB0aGUgZ3JlYXRlc3QgY2hhbGxlbmdlIHRvIGl0cyBzZWN1cml0eSBzaW5jZSB0aGUgQ29sZCBXYXIuIEFwcHJveGltYXRlbHkgMTgsMDAwIG1pbGl0YXJ5IHBlcnNvbm5lbCBmcm9tIG1lbWJlciBjb3VudHJpZXMgYXJlIGVuZ2FnZWQgaW4gTkFUTyBtaXNzaW9ucyBhcm91bmQgdGhlIFdvcmxkLCBpbmNsdWRpbmcgaW4gQWZnaGFuaXN0YW4sIEtvc292byBhbmQgdGhlIE1lZGl0ZXJyYW5lYW4uIEZvbGxvd2luZyB0aGUgUnVzc2lhbiBhbm5leGF0aW9uIG9mIENyaW1lYSBpbiAyMDE0LCBOQVRPIGhhcyBpbmNyZWFzZWQgaXRzIHByZXNlbmNlIGluIEVhc3Rlcm4gRXVyb3BlLCBpbmNsdWRpbmcgdGhlIGRlcGxveWVkIG9uIGEgcm90YXRpb25hbCBiYXNpcyBvZiBmb3VyIG11bHRpbmF0aW9uYWwgYmF0dGFsaW9ucyB0byB0aGUgQmFsdGljIFN0YXRlcyBhbmQgUG9sYW5kLlxuIFxuMiBQZXJjZW50IGFuZCAyMCBQZXJjZW50IFRhcmdldHNcbiBcblRoZSBVbml0ZWQgU3RhdGVzIGhhcyByZWNlbnRseSByZW5ld2VkIHByZXNzdXJlIG9uIE5BVE8gcGFydG5lcnMgdG8gbWVldCB0aGUgY29tbWl0bWVudCB0byBzcGVuZCBhYm92ZSAyIHBlcmNlbnQgb2YgdGhlaXIgZ3Jvc3MgZG9tZXN0aWMgcHJvZHVjdCBvZiBkZWZlbmNlLiBJbiAyMDE2LCBmaXZlIGNvdW50cmllcyBtZXQgdGhpcyB0YXJnZXQ6IHRoZSBVbml0ZWQgU3RhdGVzICgzLjYxIHBlcmNlbnQpOyBHcmVlY2UgKDIuMzYgcGVyY2VudCk7IEVzdG9uaWEgKDIuMTggcGVyY2VudCk7IHRoZSBVSyAoMi4xNyBwZXJjZW50KTsgYW5kIFBvbGFuZCAoMi4wMSBwZXJjZW50KS5cbiBcbk5BVE9cdTIwMTlzIHRhcmdldCBpcyBhbHNvIHRoYXQgMjAgcGVyY2VudCBvZiBkZWZlbmNlIHNwZW5kaW5nIGJ5IG1lbWJlciBjb3VudHJpZXMgZ28gdG93YXJkcyBlcXVpcG1lbnQuIEluIDIwMTYsIHRoaXMgdGFyZ2V0IHdhcyBtZXQgYnkgMTAgY291bnRyaWVzOiBMaXRodWFuaWEgKDI3LjY1IHBlcmNlbnQpOyBMdXhlbWJ1cmcgKDI3LjI0IHBlcmNlbnQpOyBQb2xhbmQgKDI1Ljc5IHBlcmNlbnQpOyBOb3J3YXkgKDI1LjA4IHBlcmNlbnQpOyB0aGUgVW5pdGVkIFN0YXRlcyAoMjUuMDMgcGVyY2VudCk7IEZyYW5jZSAoMjQuNDggcGVyY2VudCk7IHRoZSBVSyAoMjIuNTYgcGVyY2VudCk7IFR1cmtleSAoMjIuMzUgcGVyY2VudCk7IFJvbWFuaWEgKDIwLjQwIHBlcmNlbnQpIGFuZCBJdGFseSAoMjAuMjQgcGVyY2VudCkuIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wMy0xNlQxMjo1Mjo1OC44MDcwMDEyKzAwOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgSG91c2Ugb2YgTG9yZHMgTGlicmFyeSBicmllZmluZyBvdXRsaW5lcyByZWNlbnQgTkFUTyBwb2xpY3ksIGluY2x1ZGluZyB0aGUgaW5jcmVhc2UgaW4gdGhlIGRlcGxveW1lbnQgb2YgZm9yY2VzIGluIEVhc3Rlcm4gRXVyb3BlIHNpbmNlIDIwMTQuIEl0IGFsc28gc3VtbWFyaXNlcyByZWNlbnQgY29tbWVudCBvbiBOQVRPIHByZXBhcmVkbmVzcyBpbiB0aGUgZmFjZSBvZiBleHRlcm5hbCB0aHJlYXRzIGFuZCB0aGUgcmlzayBvZiBmcmFnbWVudGF0aW9uIHdpdGhpbiB0aGUgYWxsaWFuY2UuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMSUYtMjAxNy0wMDI0In0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy80MTQwNDEiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBJbiBGb2N1cyJ9CiAgICAgIH0KICAgICAgLCAidGl0bGUiIDogIk5BVE8gQWxsaWFuY2U6IFJlY2VudCBEZXZlbG9wbWVudHMiLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTUwIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiRGVmZW5jZSBleHBlbmRpdHVyZSJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTU1MSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkRlZmVuY2UgcG9saWN5In0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1Njg3IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTkFUTyJ9CiAgICAgIH0KICAgICAgXSwgInR5cGUiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvc2NoZW1hL3BhcmwjUmVzZWFyY2hCcmllZmluZyJ9CiAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Jlc291cmNlcy83MTEyMzciLCAiYWJzdHJhY3QiIDogeyJfdmFsdWUiIDogIk92ZXJ2aWV3XG4gXG5UaGUgUHJpc29ucyBhbmQgQ291cnRzIEJpbGzCoGNvdmVycyBhIG51bWJlciBvZiBwb2xpY3kgYXJlYXMgdGhhdCBmYWxsIHdpdGhpbiB0aGUgTWluaXN0cnkgb2YgSnVzdGljZVx1MjAxOXMgcmVtaXQsIGZyb20gcHJpc29ucyB0byB3aGlwbGFzaCB0byBvbmxpbmUgY3JpbWluYWwgY29udmljdGlvbnMuIFRoZSBCaWxsLCB3aGljaCBpcyBjb21wb3NlZCBvZiBzaXggcGFydHMsIGRlYWxzIHdpdGggZm91ciBkaXNjcmV0ZSBhcmVhcy7CoFxuIFxuIFBhcnQgMSBvbiBwcmlzb24gcmVmb3JtIFBhcnRzIDIgYW5kIDMgb24gcmVmb3JtaW5nIHRoZSBjb3VydCBhbmQgdHJpYnVuYWwgc3lzdGVtIFBhcnQgNCBvbiB0aGUganVkaWNpYXJ5IGFuZCB0aGUgSnVkaWNpYWwgQXBwb2ludG1lbnRzIENvbW1pc3Npb247IGFuZCBQYXJ0IDUgb24gd2hpcGxhc2guIFxuIFxuVGhlIEJpbGwgaXMgZHVlIHRvIGhhdmUgaXRzIHNlY29uZCByZWFkaW5nIG9uIDIwIE1hcmNoIDIwMTcuXG4gXG5BcyB3ZWxsIGFzIGEgbG9uZ2VyIHBhcGVyLCB3aGljaCBjb3ZlcnMgdGhlIHdob2xlIEJpbGwsIHdlIGhhdmUgc3BsaXQgdGhlIHBhcGVyIHVwIGludG8gdGhyZWUgc2VjdGlvbnMgZm9yIHRob3NlIHdobyBhcmUgb25seSBpbnRlcmVzdGVkIGluIHRob3NlIGFzcGVjdHM6XG4gXG4gUHJpc29uIHJlZm9ybSBpcyBjb3ZlcmVkIGhlcmUgQ291cnQgcmVmb3JtIGlzIGNvdmVyZWQgaGVyZSBXaGlwbGFzaCBpcyBjb3ZlcmVkIGhlcmUgXG4gXG5MaWJyYXJ5IEJyaWVmaW5nIFBhcGVyIENCUCA3ODkyOiBQcmlzb24gYW5kIENvdXJ0IFN0YXRpc3RpY3MsIEVuZ2xhbmQgYW5kIFdhbGVzIGdpdmVzIHN0YXRpc3RpY3Mgb24gdGhlIEJpbGwgdG8gYWNjb21wYW55IHRoaXMgQnJpZWZpbmcgUGFwZXIuXG4gXG5UaGUgTWluaXN0cnkgb2YgSnVzdGljZSBoYXMgcHVibGlzaGVkIEV4cGxhbmF0b3J5IE5vdGVzLiBUaGUgR292LlVLIHdlYnNpdGUgaGFzIGEgXHUyMDFjbGF0ZXN0IG5ld3NcdTIwMWQgcGFnZSwgUHJpc29ucyBhbmQgQ291cnRzIEJpbGw6IHdoYXQgaXQgbWVhbnMgZm9yIHlvdSBhbmQgYSBjb2xsZWN0aW9uIG9mIHJlbGV2YW50IGRvY3VtZW50cyBpbmNsdWRpbmcgwqBmYWN0c2hlZXRzIG9uIHRoZSBCaWxsLCBpbXBhY3QgYXNzZXNzbWVudHMgYW5kIGVxdWFsaXRpZXMgc3RhdGVtZW50cy5cbiBcblRoZSBCaWxsXHUyMDE5cyBwcm9ncmVzcyBjYW4gYmUgZm9sbG93ZWQgb24gdGhlIFByaXNvbnMgYW5kIENvdXJ0cyBCaWxsIHBhZ2Ugb2YgdGhlIFBhcmxpYW1lbnRhcnkgd2Vic2l0ZSwgd2hpY2ggYWxzbyBwcm92aWRlcyByZWxldmFudCBkb2N1bWVudHMgc3VjaCBhcyBwcm9wb3NlZCBhbWVuZG1lbnRzIGFuZCB2ZXJzaW9ucyBvZiB0aGUgQmlsbC5cbiBcbldoZXJlIGRvZXMgdGhlIEJpbGwgZXh0ZW5kIHRvP1xuIFxuTW9zdCBvZiB0aGUgQmlsbCBleHRlbmRzIHRvIEVuZ2xhbmQgYW5kIFdhbGVzIG9ubHkuIEhvd2V2ZXIsIHNvbWUgYXNwZWN0cyBvZiB0aGUgcHJpc29uIHJlZm9ybXMgYWxzbyBleHRlbmQgdG8gU2NvdGxhbmQgYW5kIE5vcnRoZXJuIElyZWxhbmQsIGJlY2F1c2UgSGVyIE1hamVzdHlcdTIwMTlzIEluc3BlY3RvcmF0ZSBvZiBQcmlzb25zIGFuZCB0aGUgUHJpc29ucyBhbmQgUHJvYmF0aW9uIE9tYnVkc21hbiBoYXZlIGZ1bmN0aW9ucyByZWxhdGluZyB0byBpbW1pZ3JhdGlvbiBkZXRlbnRpb24sIGFuZCB0aGlzIGlzIGEgcmVzZXJ2ZWQgbWF0dGVyLsKgIEluIHJlbGF0aW9uIHRvIGNvdXJ0IHJlZm9ybSwgUGFydHMgMiBhbmQgMyBvZiB0aGUgQmlsbCBhcmUgcmVsZXZhbnQgdG8gU2NvdGxhbmQgYW5kIE5vcnRoZXJuIElyZWxhbmQgaW4gc28gZmFyIHRoYXQgdGhleSBtYWtlIGNoYW5nZXMgdG8gdGhlIHdheSBpbiB3aGljaCByZXNlcnZlZCB0cmlidW5hbHMgYXJlIGFkbWluaXN0ZXJlZC5cbiBcblByaXNvbiByZWZvcm1zXG4gXG5UaGUgR292ZXJubWVudFx1MjAxOXPCoHByb3Bvc2Fsc1xuIFxuUGFydCAxIG9mIHRoZSBCaWxsIGNvbmNlcm5zIHByaXNvbiByZWZvcm0uIFRoZSBHb3Zlcm5tZW50XHUyMDE5cyBOb3ZlbWJlciAyMDE2IHdoaXRlIHBhcGVyLCBQcmlzb24gU2FmZXR5IGFuZCBSZWZvcm0sIHNldCBvdXQgYSByYW5nZSBvZiBwcm9wb3NhbHMgdG8gZGVhbCB3aXRoIGluY3JlYXNpbmcgbGV2ZWxzIG9mIHZpb2xlbmNlIGFuZCBzZWxmLWhhcm0gaW4gcHJpc29ucyBhbmQgdGhlIHBlcnNpc3RlbnRseSBoaWdoIGxldmVscyBvZiByZW9mZmVuZGluZy7CoCBBIGNlbnRyYWwgcHJvcG9zYWwgd2FzIGdyZWF0ZXIgYXV0b25vbXkgZm9yIHByaXNvbiBnb3Zlcm5vcnMsIGN1cnJlbnRseSBiZWluZyBwaWxvdGVkIGluIHNpeCBcdTIwMWNyZWZvcm0gcHJpc29uc1x1MjAxZC7CoFxuIFxuV2hpY2ggb2YgdGhlIHByaXNvbiByZWZvcm1zIGFyZSBpbiB0aGUgQmlsbD9cbiBcbk1hbnkgb2YgdGhlIHByb3Bvc2VkwqByZWZvcm1zIGRvIG5vdCBuZWVkIHByaW1hcnksIG9yIGluZGVlZCBhbnksIGxlZ2lzbGF0aW9uLiBBcyBhIHJlc3VsdCwgdGhlcmUgaXMgYWN0dWFsbHkgdmVyeSBsaXR0bGUgaW4gdGhlIEJpbGwgb24gcHJpc29ucy5cbiBcbkEgbmV3IHN0YXR1dG9yeSBwdXJwb3NlXG4gXG5DbGF1c2UgMSBzZXRzIG91dCBhIG5ldyBzdGF0dXRvcnkgcHVycG9zZSBmb3IgcHJpc29ucyBwcm9taXNlZCBieSB0aGUgd2hpdGUgcGFwZXIgKHNpbWlsYXIgZGVjbGFyYXRvcnkgcHJvdmlzaW9ucyBleGlzdCBpbiBsZWdpc2xhdGlvbiBmb3IgcHJvYmF0aW9uIGFuZCB5b3V0aCBqdXN0aWNlKSBhbmQgYW1lbmRzIHRoZSBTZWNyZXRhcnkgb2YgU3RhdGVcdTIwMTlzIGR1dGllcyB0byBpbmNsdWRlIHJlcG9ydGluZyBvbiB0aGUgZXh0ZW50IHRvIHdoaWNoIHByaXNvbnMgYXJlIGFjaGlldmluZyB0aGF0IHB1cnBvc2UuXG4gXG5JbnNwZWN0aW9uIGFuZCBvdmVyc2lnaHRcbiBcbkNsYXVzZSAyIG1ha2VzIHNvbWUgY2hhbmdlcyB0byB0aGUgbGF3IGdvdmVybmluZyBIZXIgTWFqZXN0eVx1MjAxOXMgSW5zcGVjdG9yYXRlIG9mIFByaXNvbnMsIGFuZCBwcm92aWRlcyBpbnNwZWN0b3JzIHdpdGggc29tZSBhZGRpdGlvbmFsIHBvd2Vycy4gQ2xhdXNlcyA0LTIwIHdvdWxkIHB1dCB0aGUgUHJpc29ucyBhbmQgUHJvYmF0aW9uIE9tYnVkc21hbiBvbiBhIHN0YXR1dG9yeSBmb290aW5nLsKgIFRoZXJlIHdlcmUgYXR0ZW1wdHMgdG8gZG8gdGhpcyBpbiAyMDA0IGFuZCAyMDA4LCBidXQgdGhlc2Ugd2VyZSBhYmFuZG9uZWQuwqBcbiBcblByaXNvbiBzZWN1cml0eSBcdTIwMTMgbW9iaWxlIHBob25lcyBhbmQgZHJ1Z3NcbiBcblRoZSBwcm92aXNpb25zIG9uIHByaXNvbiBzZWN1cml0eSBpbiBjaGFwdGVyIDMgb2YgUGFydCAxIGJ1aWxkIG9uIHJlY2VudCBsZWdpc2xhdGlvbiB0byBoZWxwIGRlYWwgd2l0aCB0d28gbWFqb3IgY2hhbGxlbmdlcyB0byBwcmlzb24gc2VjdXJpdHk6IGlsbGljaXQgbW9iaWxlIHBob25lcyBhbmQgcHN5Y2hvYWN0aXZlIHN1YnN0YW5jZXMuIEEgMjAxMiBBY3QgYWxyZWFkeSBhbGxvd3MgcHJpc29uIGdvdmVybm9ycyB0byBpbnRlcmZlcmUgd2l0aCB3aXJlbGVzcyB0ZWxlZ3JhcGh5IGluIHByaXNvbnMgaW4gb3JkZXIgZWl0aGVyIHRvIGJsb2NrIG1vYmlsZSBwaG9uZXMgb3IgZGV0ZWN0IHRoZWlyIHVzZS4gQ2xhdXNlwqAyMSB3b3VsZCBhbGxvdyB0aGUgU2VjcmV0YXJ5IG9mIFN0YXRlIHRvIGF1dGhvcmlzZSB0ZWxlY29tcyBhbmQgaW50ZXJuZXQgc2VydmljZSBwcm92aWRlcnMgdG8gZG8gdGhpcy4gTGVnaXNsYXRpb24gaW4gMjAxNSBhbmQgMjAxNiB3YXMgYnJvdWdodCBpbiB0byBkZWFsIHdpdGggTmV3IFBzeWNob2FjdGl2ZSBTdWJzdGFuY2VzIChOUFNzKSwgaW5jbHVkaW5nIGludHJvZHVjaW5nIGEgbmV3IG9mZmVuY2Ugb2YgcG9zc2Vzc2lvbiBpbiBhIGN1c3RvZGlhbCBzZXR0aW5nLiBDbGF1c2UgMjIgd291bGQgYWxsb3cgZm9yIHByaXNvbmVycyB0byBiZSB0ZXN0ZWQgZm9yIE5QU3Mgd2l0aG91dCBlYWNoIGluZGl2aWR1YWwgc3Vic3RhbmNlIG5lZWRpbmcgdG8gYmUgc3BlY2lmaWVkIHNlcGFyYXRlbHkuXG4gXG5Db3VydCByZWZvcm1cbiBcblBhcnRzIDIgYW5kIDMgb2YgdGhlIFByaXNvbiBhbmQgQ291cnRzIEJpbGwgd2lsbCBtYWtlIHNpZ25pZmljYW50IGNoYW5nZXMgdG8gdGhlIGNvdXJ0cyBhbmQgdHJpYnVuYWxzIHN5c3RlbSBpbiBFbmdsYW5kIGFuZCBXYWxlcy4gVGhlIHByb3Zpc2lvbnMgaW5jbHVkZXMgcmVmb3JtcyB0byB0aGUgY3JpbWluYWwgY291cnRzLCBjaXZpbCBjb3VydHMsIHRoZSBmYW1pbHkgY291cnRzIGFuZCB0cmlidW5hbHMgaW4gRW5nbGFuZCBhbmQgV2FsZXMuXG4gXG5XaGF0IGlzIGRyaXZpbmcgdGhlc2UgcmVmb3Jtcz8gXG4gXG7CoFRoZSBwcm92aXNpb25zIGluIFBhcnRzIDIgYW5kIDMgcHJlZG9taW5hbnRseSByZWxhdGUgdG8gSGVyIE1hamVzdHlcdTIwMTlzIENvdXJ0IGFuZCBUcmlidW5hbFx1MjAxOXMgKEhNQ1RTKSBSZWZvcm0gUHJvZ3JhbW1lLCB3aGljaCB3YXMgbGF1bmNoZWQgaW4gTWFyY2ggMjAxNC5bMV0gVGhlIHByb2dyYW1tZSwgYW5kIHRoaXMgQmlsbCwgYWltIHRvIG1vZGVybmlzZSB0aGUganVzdGljZSBzeXN0ZW0gYW5kIGltcHJvdmUgYWNjZXNzIHRvIGp1c3RpY2UsIHRocm91Z2ggYSBzZXJpZXMgb2YgcmVmb3JtcyBkZXNpZ25lZCB0byBpbnRlZ3JhdGUgdGVjaG5vbG9neSBhbmQgZW5oYW5jZSBlZmZpY2llbmN5LiBUaGUgYWltcyBhbmQgcHJpbmNpcGxlcyBvZiB0aGUgcHJvZ3JhbW1lIHdlcmUgc2V0IG91dCBpbiBhIGpvaW50IHN0YXRlbWVudCBieSB0aGUgTG9yZCBDaGFuY2VsbG9yLCB0aGUgTG9yZCBDaGllZiBKdXN0aWNlIGFuZCB0aGUgU2VuaW9yIFByZXNpZGVudCBvZiBUcmlidW5hbHMsIHRpdGxlZCBUcmFuc2Zvcm1pbmcgT3VyIEp1c3RpY2UgU3lzdGVtLCB3aGljaCB3YXMgcHVibGlzaGVkIGluIFNlcHRlbWJlciAyMDE2LlxuIFxuSG93IHdpbGwgdGhlIGNyaW1pbmFsIGp1c3RpY2Ugc3lzdGVtIGJlIGNoYW5nZWQ/IFxuIFxuVGhlIHByb3Bvc2VkIHJlZm9ybXMgdG8gdGhlIGNyaW1pbmFsIGNvdXJ0cyBmb2N1cyBvbiBleHBhbmRlZCB1c2Ugb2YgdGVjaG5vbG9neSwgaW4gcGFydGljdWxhciBieSBwcm92aWRpbmcgZm9yIG1vcmUgaGVhcmluZ3MgYW5kIGRlY2lzaW9ucyB0byBiZSBjb25kdWN0ZWQgaW4gd3JpdGluZyAoaW5jbHVkaW5nIGVsZWN0cm9uaWNhbGx5KSBvciB2aXJ0dWFsbHkgdmlhIGF1ZGlvIGFuZCB2aWRlbyBsaW5rcy7CoCBUaGUgcHJvcG9zYWxzIHRoYXQgaGF2ZSBhdHRyYWN0ZWQgbW9zdCBjb21tZW50IGFyZSB0aG9zZSB0byBlbmFibGUgXHUyMDFjZnVsbHkgdmlydHVhbFx1MjAxZCBjb3VydCBoZWFyaW5ncywgYW5kIHRob3NlIHRvIGludHJvZHVjZSBhIG5ldyBhdXRvbWF0ZWQgb25saW5lIGNvbnZpY3Rpb24gcHJvY2VkdXJlIGZvciBjZXJ0YWluIGxvdy1sZXZlbCBub24taW1wcmlzb25hYmxlIG9mZmVuY2VzLlxuIFxuSG93IHdpbGwgdGhlIGJpbGwgcmVmb3JtIHRoZSBjaXZpbCBqdXN0aWNlIHN5c3RlbT8gXG4gXG5QYXJ0IDIgb2YgdGhlIEJpbGwgYWxzbyBwcm92aWRlcyB0aGUgbGVnYWwgZm91bmRhdGlvbnMgZm9yIHRoZSBpbnRyb2R1Y3Rpb24gb2YgbmV3IG9ubGluZSBwcm9jZWR1cmVzIGFuZCBvbmxpbmUgZGlzcHV0ZSByZXNvbHV0aW9uIChPRFIpIGZvciB0aGUgY2l2aWwgY291cnRzLCBmYW1pbHkgY291cnRzIGFuZCB0cmlidW5hbHMuIFRoZSBjbGF1c2VzIGVuYWJsZSB0aGUgY3JlYXRpb24gb2YgYSBuZXcgb25saW5lIGNvdXJ0IHRoYXQgY291bGQgZGVhbCB3aXRoIGxvdyB2YWx1ZSBtb25leSBjbGFpbXMgYmVsb3cgwqMyNSwwMDAsIGFzIHdhcyByZWNvbW1lbmRlZCBieSBMb3JkIEp1c3RpY2UgQnJpZ2dzXHUyMDE5IENpdmlsIENvdXJ0cyBTdHJ1Y3R1cmUgUmV2aWV3LiBUaGUgY2xhdXNlcyB3b3VsZCBhbGxvdyBuZXcgb25saW5lIHByb2NlZHVyZXMgdG8gYXBwbHkgdG8gZXhpc3RpbmcgY2l2aWwgY291cnRzLCBmYW1pbHkgY291cnRzIGFuZCB0cmlidW5hbHMuwqAgVGhlIEdvdmVybm1lbnRcdTIwMTlzIFRyYW5zZm9ybWluZyBvdXIganVzdGljZSBzeXN0ZW0gcGFwZXIgaW5kaWNhdGVzIHRoYXQgdGhlIFNvY2lhbCBTZWN1cml0eSBhbmQgQ2hpbGQgU3VwcG9ydCBUcmlidW5hbCBpcyBnb2luZyB0byBiZSBvbmUgb2YgZmlyc3QgXHUyMDFjdG8gYmUgbW92ZWQgZW50aXJlbHkgb25saW5lLCB3aXRoIGFuIGVuZC10by1lbmQgZGlnaXRhbCBwcm9jZXNzIHRoYXQgd2lsbCBiZSBmYXN0ZXIgYW5kIGVhc2llciB0byB1c2UgZm9yIHBlb3BsZSB0aGF0IHVzZSBpdFx1MjAxZC7CoFxuIFxuSnVkaWNpYXJ5IGFuZCB0aGUgSnVkaWNpYWwgQXBwb2ludG1lbnRzIENvbW1pc3Npb25cbiBcblBhcnQgNCBvZiB0aGUgQmlsbCBjb25jZXJucyBqdWRpY2lhbCB0ZXJtcyBhbmQgY29uZGl0aW9ucywgYW5kIHRoZSByb2xlIG9mIHRoZSBKdWRpY2lhbCBBcHBvaW50bWVudHMgQ29tbWlzc2lvbi4gVGhlIGZvcm1lciBwcm92aXNpb25zIG9mIHRoZSBCaWxsIGxhcmdlbHkgZm9sbG93IGZyb20gdGhlIE1pbmlzdHJ5IG9mIEp1c3RpY2VcdTIwMTlzIGNvbnN1bHRhdGlvbiBvbiBNb2Rlcm5pc2luZyBKdWRpY2lhbCBUZXJtcyBhbmQgQ29uZGl0aW9ucywgd2hpbGUgdGhlIGxhdHRlciBmb2xsb3cgZnJvbSBjZXJ0YWluIHJlY29tbWVuZGF0aW9ucyBpbiB0aGUgVHJpZW5uaWFsIFJldmlldyBvZiB0aGUgSnVkaWNpYWwgQXBwb2ludG1lbnRzIENvbW1pc3Npb24uIFRoZXJlIGFyZSBhbHNvIG1pbm9yIGNoYW5nZXMgdG8gdGhlIGxhdyBvbiBkZXBsb3ltZW50IG9mIGp1ZGdlcyBhbmQgdGhlIHJlbXVuZXJhdGlvbiBvZiBFbXBsb3ltZW50IFRyaWJ1bmFsIG1lbWJlcnMuXG4gXG5XaGF0XHUyMDE5cyBoYXBwZW5pbmcgdG8gYXBwb2ludG1lbnRzIGZvciBzZW5pb3IganVkZ2VzP1xuIFxuQXQgcHJlc2VudCwgc29tZSBsZWFkZXJzaGlwIHJvbGVzIGFyZSBoZWxkIG9uIGEgZml4ZWQgdGVybSBiYXNpcyB3aGVyZWFzIG90aGVycyBhcmUgbm90LiBNYW55IGxlYWRlcnNoaXAganVkZ2UgcG9zaXRpb25zIGFyZSBub24tc3RhdHV0b3J5LCBhbmQgdGh1cyBjYW4gYWxyZWFkeSBiZSBoZWxkIG9uIGEgZml4ZWQtdGVybSBiYXNpcyB3aXRob3V0IHRoZSBuZWVkIGZvciBsZWdpc2xhdGlvbi4gQ2xhdXNlIDU2IGFtZW5kcyB0aGUgbGF3IHRvIGFsbG93IHRoZSByZW1haW5pbmcgc3RhdHV0b3J5IGp1ZGljaWFsIGxlYWRlcnNoaXAgcG9zaXRpb25zIHRvIGJlIGhlbGQgb24gYSBmaXhlZC10ZXJtIGJhc2lzLCBpbiBsaW5lIHdpdGggdGhlIGNvbmNsdXNpb25zIG9mIHRoZSBNaW5pc3RyeSBvZiBKdXN0aWNlXHUyMDE5cyBjb25zdWx0YXRpb24uIFRoZSBHb3Zlcm5tZW50IGNsYWltIHRoYXQgdGhpcyB3aWxsIGNyZWF0ZSBhIGNsZWFyZXIgY2FyZWVyIHBhdGggYW5kIGltcHJvdmUgZGl2ZXJzaXR5IGluIHRoZSBqdWRpY2lhcnkuIFRoZSBCaWxsIGRvZXMgbm90IHNwZWNpZnkgaG93IGxvbmcgdGhlIHRlcm0gd2lsbCBiZSBmb3IgYW55IHN1Y2ggYXBwb2ludG1lbnRzLCBhcyB0aGlzIGlzIGxlZnQgdG8gdGhlIExvcmQgQ2hhbmNlbGxvciB0byBkZWNpZGUgZm9sbG93aW5nIGNvbnN1bHRhdGlvbiB3aXRoIHRoZSBqdWRpY2lhcnkuIFByb3Bvc2FscyB0byBhcHBvaW50IGFsbCBmZWUtcGFpZCBqdWRnZXMgb24gZml4ZWQtdGVybSBhcHBvaW50bWVudHMgd2VyZSBpbmNsdWRlZCBpbiB0aGUgY29uc3VsdGF0aW9uIGJ1dCBhcmUgbm90IGJlaW5nIHRha2VuIGZvcndhcmQgaW4gdGhlIEJpbGwuXG4gXG5XaGF0IGFib3V0IHRoZSBKdWRpY2lhbCBBcHBvaW50bWVudHMgQ29tbWlzc2lvbiBpcyBjaGFuZ2luZz9cbiBcbkNsYXVzZSA2MCBhbWVuZHMgdGhlIGxhdyB0byBhbGxvdyB0aGUgTG9yZCBDaGFuY2VsbG9yIHRvIGRpcmVjdCB0aGUgSnVkaWNpYWwgQXBwb2ludG1lbnRzIENvbW1pc3Npb24gKEpBQykgdG8gcHJvdmlkZSBpdHMgYWR2aWNlIG9uIGFwcG9pbnRtZW50cyBib3RoIHdpdGhpbiBhbmQgd2l0aG91dCB0aGUgVW5pdGVkIEtpbmdkb20sIGV2ZW4gd2hlcmUgdGhvc2UgYXBwb2ludG1lbnRzIGFyZSBub24tanVkaWNpYWwgaW4gbmF0dXJlLiBUaGUgSkFDIGlzIGFsc28gZW1wb3dlcmVkIHRvIHNldCB1cCBhIGNoYXJnaW5nIG1vZGVsIHRvIHJlY291cCB0aGUgY29zdHMgb2YgcHJvdmlkaW5nIHRoaXMgYWR2aWNlLiBUaGlzIGlzIGZvbGxvd2luZyBhIHJlY29tbWVuZGF0aW9uIGluIHRoZSBUcmllbm5pYWwgUmV2aWV3IHRoYXQgdGhlc2UgZHV0aWVzIHdlcmUgZm9ybWFsaXNlZCwgYXMgdGhleSB3ZXJlIGFscmVhZHkgYmVpbmcgc291Z2h0IG91dCBkdWUgdG8gdGhlIEpBQ1x1MjAxOXMgZXhwZXJ0aXNlIGluIHRoZSByZWFsbSBvZiBhcHBvaW50bWVudHMuXG4gXG5XaGlwbGFzaFxuIFxuQmFja2dyb3VuZFxuIFxuQWdhaW5zdCBhIGJhY2tncm91bmQgb2YgcmlzaW5nIG1vdG9yIGluc3VyYW5jZSBwcmVtaXVtcyBhbmQgdGhlIHBlcmNlcHRpb24gKG5vdCB1bml2ZXJzYWxseSBhY2NlcHRlZCkgb2YgdGhlIGV4aXN0ZW5jZSBvZiBhIFx1MjAxY2NvbXBlbnNhdGlvbiBjdWx0dXJlXHUyMDFkLCB0aGVyZSBoYXMgYmVlbiBhIGZvY3VzIG9uIHRoZSBpbmNpZGVuY2Ugb2YgcGVyc29uYWwgaW5qdXJ5IGNsYWltcyBmb3Igd2hpcGxhc2ggaW5qdXJpZXMsIGluc3VyYW5jZSBmcmF1ZCBtb3JlIGdlbmVyYWxseSwgYW5kIHRoZSBleHRlbnQgdG8gd2hpY2ggdGhpcyBoYXMgYWZmZWN0ZWQgdGhlIGNvc3Qgb2YgbW90b3IgaW5zdXJhbmNlLlxuIFxuVGhlIEdvdmVybm1lbnQgcmVtYWlucyBjb25jZXJuZWQgYWJvdXQgdGhlIG51bWJlciBhbmQgY29zdCBvZiB3aGlwbGFzaCBjbGFpbXMgYW5kIGhhcyBjb25zdWx0ZWQgb24gd2F5cyB0byBhZGRyZXNzIHRoZSBpc3N1ZS4gSXQgbm93IGludGVuZHMgdG8gcHJvY2VlZCB3aXRoIGEgcmFuZ2Ugb2YgcmVmb3JtcyBhaW1lZCBhdCBjYXBwaW5nIHdoaXBsYXNoIGNvbXBlbnNhdGlvbiBwYXltZW50cyBhbmQgYmFubmluZyBzZXR0bGVtZW50IG9mIGNsYWltcyB3aXRob3V0IG1lZGljYWwgZXZpZGVuY2UuXG4gXG5UaGUgQmlsbDogUGFydCA1XG4gXG5QYXJ0IDUgb2YgdGhlIEJpbGwgZGVhbHMgd2l0aCB3aGlwbGFzaCwgaW5jbHVkaW5nIHRoZSBkZWZpbml0aW9uIG9mIHdoaXBsYXNoOyBkYW1hZ2VzIGZvciB3aGlwbGFzaCBpbmp1cmllczsgYW4gdXBsaWZ0LCBpbiBleGNlcHRpb25hbCBjaXJjdW1zdGFuY2VzLCB0byB0aGUgYW1vdW50IG9mIGRhbWFnZXM7IGJhbm5pbmcgc2V0dGxlbWVudCBvZiBjbGFpbXMgYmVmb3JlIG1lZGljYWwgcmVwb3J0OyBhbmQgcmVndWxhdGlvbiBvZiB0aGUgYmFuIG9uIHByZS1tZWRpY2FsIHNldHRsZW1lbnQuIE11Y2ggb2YgdGhlIGRldGFpbCB3b3VsZCBiZSBpbmNsdWRlZCBpbiBzZWNvbmRhcnkgbGVnaXNsYXRpb24sIHdoaWNoLCBpbiBtYW55IGNhc2VzLCB3b3VsZCBiZSBzdWJqZWN0IHRvIHRoZSBhZmZpcm1hdGl2ZSByZXNvbHV0aW9uIHByb2NlZHVyZS5cbiBcblJlYWN0aW9uIHRvIHRoZSBCaWxsXG4gXG5JbiBnZW5lcmFsLCBsYXd5ZXJzXHUyMDE5IGdyb3VwcywgaW5jbHVkaW5nIHRoZSBMYXcgU29jaWV0eSBhbmQgdGhlIEFzc29jaWF0aW9uIG9mIFBlcnNvbmFsIEluanVyeSBMYXd5ZXJzLCBhcmUgYW1vbmcgdGhvc2Ugd2hvIGhhdmUgcmFpc2VkIGNvbmNlcm5zIGFib3V0IHRoZSBHb3Zlcm5tZW50XHUyMDE5cyBwcm9wb3NhbHMsIHdoaWxlIHRoZSBBc3NvY2lhdGlvbiBvZiBCcml0aXNoIEluc3VyZXJzIGhhcyB3ZWxjb21lZCB0aGVtLlxuIFxuVGhlIEdvdmVybm1lbnQgY29uc2lkZXJzIHRoYXQgdGhlIHJlZm9ybXMgd291bGQgbGVhZCB0byBzYXZpbmdzIG9mIGFib3V0IMKjMWJuIGFuZCBleHBlY3RzIHRoaXMgdG8gYmUgcGFzc2VkIG9uIHRvIG1vdG9yaXN0cywgcmVzdWx0aW5nIGluIGFuIGF2ZXJhZ2Ugc2F2aW5nIHBlciBtb3RvciBpbnN1cmFuY2UgcHJlbWl1bSBvZiDCozQwLiBPdGhlcnMgZGlzYWdyZWUgdGhhdCB0aGUgc2F2aW5ncyB3aWxsIGJlIHBhc3NlZCBvbiBhbmQgYWxzbyBjb25zaWRlciBpdCB1bmZhaXIgdGhhdCB0aGUgcmVmb3JtcyB3b3VsZCByZWR1Y2UgdGhlIGNvbXBlbnNhdGlvbiBwYXlhYmxlIHRvIGdlbnVpbmUgY2xhaW1hbnRzLCBhbmQgbGVhdmUgdmljdGltcyB0byBjb25kdWN0IGNsYWltcyB3aXRob3V0IGxlZ2FsIGFkdmljZS7CoCBUaGVyZSBpcyBhbHNvIGRpc2FncmVlbWVudCBhYm91dCB3aGV0aGVyIHRoZSBudW1iZXIgYW5kIGNvc3Qgb2Ygd2hpcGxhc2ggY2xhaW1zIGhhcyBpbmNyZWFzZWQuXG4gXG5GdXJ0aGVyIHJlYWRpbmdcbiBcbkJhY2tncm91bmQgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHdoaXBsYXNoIHByb3Zpc2lvbnMgaXMgcHJvdmlkZWQgaW4gTGlicmFyeSBicmllZmluZyBwYXBlciwgU21hbGwgY2xhaW1zIGZvciBwZXJzb25hbCBpbmp1cmllcyBpbmNsdWRpbmcgd2hpcGxhc2guIEluZm9ybWF0aW9uIGFib3V0IGZhY3RvcnMgaW5mbHVlbmNpbmcgdGhlIGNvc3Qgb2YgbW90b3IgaW5zdXJhbmNlIHByZW1pdW1zLCBhbmQgd2hhdCBHb3Zlcm5tZW50IGFuZCB0aGUgaW5kdXN0cnkgaGF2ZSBkb25lIHRvIHRyeSBhbmQgcmVkdWNlIGNvc3RzLCBpcyBwcm92aWRlZCBpbiBMaWJyYXJ5IGJyaWVmaW5nIHBhcGVyLCBNb3RvciBjYXIgaW5zdXJhbmNlLlxuIFxuwqBcbiBcbsKgXG4gXG7CoCJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDMtMTZUMDk6NDY6MDkuODcyMzI0MSswMDowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGUgUHJpc29ucyBhbmQgQ291cnRzIEJpbGwgMjAxNi0xNyBoYXMgaXRzIHNlY29uZCByZWFkaW5nIG9uIDIwIE1hcmNoIDIwMTcuICBUaGlzIEJyaWVmaW5nIFBhcGVyIHByb3ZpZGVzIHJlbGV2YW50IGluZm9ybWF0aW9uIGFuZCBhbmFseXNpcywgaW5jbHVkaW5nIGNvbW1lbnRhcnkgZnJvbSBvdGhlciBvcmdhbmlzYXRpb25zLiJdLCAiaWRlbnRpZmllciIgOiB7Il92YWx1ZSIgOiAiQ0JQLTc5MDcifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyNjciLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBDb21tb25zIExpYnJhcnkifQogICAgICB9CiAgICAgICwgInNlY3Rpb24iIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1MDM2IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG9tZSBBZmZhaXJzIFNlY3Rpb24ifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzQxNDAzMyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkNvbW1vbnMgQnJpZWZpbmcgcGFwZXJzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiQ29tbW9ucyBMaWJyYXJ5IEFuYWx5c2lzOiBUaGUgUHJpc29ucyBhbmQgQ291cnRzIEJpbGwiLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTIwIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQ2l2aWwgbGF3In0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTQxIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQ3JpbWluYWwgbGF3In0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NzEwIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiUGVyc29uYWwgaW5qdXJ5In0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NzIwIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiUHJpc29ucyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTc1MSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlNtYWxsIGNsYWltcyJ9CiAgICAgIH0KICAgICAgXSwgInR5cGUiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvc2NoZW1hL3BhcmwjUmVzZWFyY2hCcmllZmluZyJ9CiAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Jlc291cmNlcy83MTEyMzAiLCAiYWJzdHJhY3QiIDogeyJfdmFsdWUiIDogIlRoZSByZWxhdGl2ZSBzaXplIG9mIHRoZSBwb2xpdGljYWwgcGFydGllcyBpbiB0aGUgSG91c2Ugb2YgTG9yZHMgaGFzIGJlZW4gYSBzdWJqZWN0IG9mIGludGVyZXN0IGZvciBtYW55IHllYXJzLiBUaGUgaW1wbGVtZW50YXRpb24gb2YgdGhlIEhvdXNlIG9mIExvcmRzIEFjdCAxOTk5IHJlbW92ZWQgdGhlIG1ham9yaXR5IG9mIGhlcmVkaXRhcnkgcGVlcnMgZnJvbSB0aGUgSG91c2UgYW5kIHJlcHJlc2VudGVkIGEgbWFqb3IgY2hhbmdlIGluIGl0cyBjb21wb3NpdGlvbi4gVGhlIG92ZXJhbGwgc2l6ZSBvZiB0aGUgSG91c2Ugb2YgTG9yZHMgKGFzIGRlZmluZWQgYXMgdGhvc2UgTWVtYmVycyBlbGlnaWJsZSB0byBzaXQpIGhhcyByaXNlbiBmcm9tIDY5MCwgZm9sbG93aW5nIHJlZm9ybSBpbiAxOTk5XHUyMDEzMjAwMCwgdG8gODA3IGF0IHRoZSBlbmQgb2YgdGhlIDIwMTVcdTIwMTMxNiBzZXNzaW9uLiBEdXJpbmcgdGhpcyB0aW1lIG5vIG9uZSBwYXJ0eSBvciBncm91cCBoYXMgaGVsZCBhIG1ham9yaXR5LiBOZXZlcnRoZWxlc3MsIHRoZSByZWxhdGl2ZSBzaXplcyBvZiB0aGUgcGFydGllcyBhbmQgZ3JvdXBzIGhhcyBjaGFuZ2VkIG92ZXIgdGltZSB3aXRoIHRoZSBhcHBvaW50bWVudHMgbWFkZSB0byB0aGUgSG91c2UgYnkgc3VjY2Vzc2l2ZSBQcmltZSBNaW5pc3RlcnMuwqBcbiBcbk1lbWJlcnNoaXAgZGF0YSBpbiB0aGUgSG91c2Ugb2YgTG9yZHMgaXMgYXZhaWxhYmxlIHNpbmNlIHRoZSAxOTg0XHUyMDEzODUgc2Vzc2lvbi4gQXMgYSBwZXJjZW50YWdlIG9mIHRoZSB3aG9sZSBIb3VzZSwgdGhlIENvbnNlcnZhdGl2ZSBQYXJ0eSBoYXMgYmVlbiB0aGUgbGFyZ2VzdCBwYXJ0eSBncm91cCBzaW5jZSB0aGUgMjAxM1x1MjAxMzE0IHNlc3Npb24gKGN1cnJlbnRseSAzMC42IHBlcmNlbnQpLiBJbiBjb250cmFzdCwgdGhlIExhYm91ciBQYXJ0eSBjdXJyZW50bHkgY29uc3RpdHV0ZXMgMjYuMSBwZXJjZW50IG9mIHRoZSBIb3VzZSwgNCBwZXJjZW50YWdlIHBvaW50cyBsb3dlciB0aGFuIHRoZWlyIHBlYWsgb2YgMzAuMSBwZXJjZW50IGluIHRoZSAyMDA4XHUyMDEzMDkgc2Vzc2lvbi4gVGhlIExpYmVyYWwgRGVtb2NyYXRzIGFyZSBjdXJyZW50bHkgYXQgdGhlaXIgaGlnaGVzdCBwZXJjZW50YWdlIG9mIHRoZSB3aG9sZSBIb3VzZSBzaW5jZSAxOTg0XHUyMDEzODUsIGF0IDEzLjUgcGVyY2VudCwgd2hpbHN0IHRoZSBDcm9zc2JlbmNoZXJzIGFyZSBhdCB0aGVpciBsb3dlc3QsIGF0IDIxLjcgcGVyY2VudC4gSW4gdGVybXMgb2YgZGl2aXNpb24gcGFydGljaXBhdGlvbiwgdGhlIGF2ZXJhZ2UgbnVtYmVyIG9mIE1lbWJlcnMgdm90aW5nIHBlciBkaXZpc2lvbiB3YXMgMzY1IGluIHRoZSAyMDE1XHUyMDEzMTYgc2Vzc2lvbi4gVGhlIEdvdmVybm1lbnQgd2FzIGRlZmVhdGVkIGluIDUzLjEgcGVyY2VudCBvZiBkaXZpc2lvbnMgaW4gMjAxNVx1MjAxMzE2LCB0aGUgaGlnaGVzdCBwZXJjZW50YWdlIHNpbmNlIDIwMDRcdTIwMTMwNSwgYW5kIHRoZSBzZWNvbmQgaGlnaGVzdCBzaW5jZSAxOTg0XHUyMDEzODUuIFRoaXMgTG9yZHMgTGlicmFyeSBicmllZmluZyB3aWxsIGJlIHVwZGF0ZWQgZm9sbG93aW5nIHRoZSBlbmQgb2YgZWFjaCBwYXJsaWFtZW50YXJ5IHNlc3Npb24uIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wMy0xNVQxMjo0NzozOS40MTAwOTQyKzAwOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgSG91c2Ugb2YgTG9yZHMgTGlicmFyeSBicmllZmluZyBwcmVzZW50cyBzdGF0aXN0aWNzIG9uIHRoZSByZWxhdGl2ZSBzaXplIG9mIHRoZSB0aHJlZSBsYXJnZXN0IHBvbGl0aWNhbCBwYXJ0aWVzIGFuZCB0aGUgcG9saXRpY2FsbHkgdW5hbGlnbmVkIGdyb3VwcyBpbiB0aGUgSG91c2Ugb2YgTG9yZHMuIEl0IGFsc28gcHJlc2VudHMgc2VsZWN0IHN0YXRpc3RpY3Mgb24gdm90aW5nIGJlaGF2aW91ciBpbiB0aGUgSG91c2UuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMTE4tMjAxNy0wMDE2In0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8zNDY3MTMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBMaWJyYXJ5IG5vdGVzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiSG91c2Ugb2YgTG9yZHM6IFBhcnR5IGFuZCBHcm91cCBTdHJlbmd0aHMgYW5kIFZvdGluZyIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2MjgiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyJ9CiAgICAgIH0KICAgICAgXSwgInR5cGUiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvc2NoZW1hL3BhcmwjUmVzZWFyY2hCcmllZmluZyJ9CiAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Jlc291cmNlcy83MTA3MzgiLCAiYWJzdHJhY3QiIDogeyJfdmFsdWUiIDogIlRoZSBGYXJyaWVyXHUyMDE5cyAoUmVnaXN0cmF0aW9uKSBCaWxsIDIwMTYtMjAxNyBpcyBhIFByaXZhdGUgTWVtYmVycycgKEJhbGxvdCkgQmlsbCBpbnRyb2R1Y2VkIGJ5IEJ5cm9uIERhdmllcyBNUC4gSXQgaXMgYSBCaWxsIFx1MjAxY3RvIG1ha2UgcHJvdmlzaW9uIGFib3V0IHRoZSBjb25zdGl0dXRpb24gb2YgdGhlIEZhcnJpZXJzIFJlZ2lzdHJhdGlvbiBDb3VuY2lsIGFuZCBpdHMgY29tbWl0dGVlcy5cdTIwMWQgVGhlIEJpbGwgaXMgZHVlIHRvIGhhdmUgaXRzIHJlcG9ydCBzdGFnZSBhbmQgdGhpcmQgcmVhZGluZyBpbiB0aGUgQ29tbW9ucyBvbiBGcmlkYXkgMjQgTWFyY2ggMjAxNy5cbiBcblRoZSBCaWxsIGNvbXBsZXRlZCBpdHMgY29tbWl0dGVlIHN0YWdlIG9uIFR1ZXNkYXkgNyBNYXJjaCAyMDE3LiBJdCBoYWQgaXRzIHNlY29uZCByZWFkaW5nIG9uIEZyaWRheSAyNyBKYW51YXJ5IDIwMTcuIEl0IHdhcyBwcmVzZW50ZWQgdG8gUGFybGlhbWVudCBmb3IgZmlyc3QgcmVhZGluZyBvbsKgMjkgSnVuZSAyMDE2wqB0aHJvdWdoIHRoZSBCYWxsb3QgcHJvY2VkdXJlLlxuIFxuVGhlIEJpbGwgZXh0ZW5kcyB0byBFbmdsYW5kIGFuZCBXYWxlcyBhbmQgU2NvdGxhbmQuXG4gXG5CYWNrZ3JvdW5kOiBSZWd1bGF0aW9uIG9mIHRoZSBmYXJyaWVyeSBwcm9mZXNzaW9uXG4gXG5UaGUgRmFycmllcnMgKFJlZ2lzdHJhdGlvbikgQWN0IDE5NzVcbiBcblRoZSBleHBsYW5hdG9yeSBub3RlcyB0byB0aGUgQmlsbCBzZXQgb3V0IHRoZSBjdXJyZW50IHJlZ3VsYXRvcnkgZnJhbWV3b3JrIGZvciB0aGUgZmFycmllcnkgcHJvZmVzc2lvbiBhcyBmb2xsb3dzOlxuIFxuIFx1MjAxY1RoZSBGYXJyaWVycyBSZWdpc3RyYXRpb24gQ291bmNpbCAoRlJDKSBpcyB0aGUgcmVndWxhdG9yeSBib2R5IGZvciB0aGUgZmFycmllcnkgcHJvZmVzc2lvbiBpbiBHcmVhdCBCcml0YWluLiBJdCBoYXMgc3RhdHV0b3J5IHJlc3BvbnNpYmlsaXRpZXMgYXMgc2V0IG91dCBpbiB0aGUgRmFycmllcnMgKFJlZ2lzdHJhdGlvbikgQWN0IDE5NzUgKEZSQSkgdG8gbWFpbnRhaW4gYSByZWdpc3RlciBvZiBmYXJyaWVycywgZGV0ZXJtaW5pbmcgd2hvIGlzIGVsaWdpYmxlIGZvciByZWdpc3RyYXRpb24gYW5kIHRvIHJlZ3VsYXRlIGZhcnJpZXJ5IHRyYWluaW5nLiBUaGUgRlJDIGludmVzdGlnYXRlcyBhbmQsIHdoZXJlIG5lY2Vzc2FyeSwgZGV0ZXJtaW5lcyBkaXNjaXBsaW5hcnkgY2FzZXMgdGhyb3VnaCB0aGUgc3RhdHV0b3J5IEludmVzdGlnYXRpbmcgQ29tbWl0dGVlIGFuZCBEaXNjaXBsaW5hcnkgQ29tbWl0dGVlLiBJbiBjb21tb24gd2l0aCBvdGhlciBzdGF0dXRvcnkgcmVndWxhdG9yeSBib2RpZXMgaXRzIHByaW1hcnkgZnVuY3Rpb24gaXMgdG8gcHJvdGVjdCBhbmQgbWFpbnRhaW4gdGhlIHB1YmxpYyBpbnRlcmVzdDsgaW4gZG9pbmcgc28gdGhpcyBhbHNvIHNlcnZlcyB0byBhY3QgaW4gdGhlIGludGVyZXN0cyBvZiBhbmltYWwgd2VsZmFyZS5cdTIwMWQgXG4gXG5ERUZSQSBjb25zdWx0YXRpb24gdG8gcmVmb3JtIG9mIHRoZSBGYXJyaWVycyBSZWdpc3RyYXRpb24gQ291bmNpbCAoRlJDKVxuIFxuSW4gTm92ZW1iZXIgMjAxMywgREVGUkEgY29uc3VsdGVkIHN0YWtlaG9sZGVycyBzZWVraW5nIHZpZXdzIG9uIHByb3Bvc2FscyBmb3IgcmVmb3JtaW5nIHRoZSBnb3Zlcm5hbmNlLCBzdHJ1Y3R1cmUgYW5kIG9wZXJhdGlvbiBvZiB0aGUgRmFycmllcnMgUmVnaXN0cmF0aW9uIENvdW5jaWwgKEZSQykuIFRoZSBjb25zdWx0YXRpb24gZG9jdW1lbnQgZXhwbGFpbmVkIHRoYXQgXHUyMDFjc3VjaCByZWZvcm1zIHdvdWxkIGluY2x1ZGUgY2VydGFpbiBhbWVuZG1lbnRzIHRvIHRoZSBGYXJyaWVycyAoUmVnaXN0cmF0aW9uKSBBY3QgMTk3NSAoRlJBKVx1MjAxZC5cbiBcbkluIGl0cyBzdW1tYXJ5IG9mIGNvbnN1bHRhdGlvbiByZXNwb25zZXMsIERFRlJBIHN0YXRlZCB0aGF0IGl0IGludGVuZGVkIHRvIGdvIGZvcndhcmQgd2l0aCBwcm9wb3NlZCBhbWVuZG1lbnRzIHRvIHJlZm9ybSB0aGUgRmFycmllcnMgKFJlZ2lzdHJhdGlvbikgQWN0IDE5NzUgd2l0aCByZXNwZWN0IHRvIHRoZSBjb25zdGl0dXRpb24gb2YgdGhlIENvdW5jaWwgYW5kIHRoZSBjb25zdGl0dXRpb24gb2YgdGhlIEludmVzdGlnYXRpbmcgYW5kIERpc2NpcGxpbmFyeSBDb21taXR0ZWVzLiBJdCB3ZW50IG9uIHRvIHNheSB0aGF0IGl0IGludGVuZGVkIHRvIHByZXBhcmUgYSBkcmFmdCBCaWxsIHRvIG1ha2UgdGhlIGFtZW5kbWVudHMuIEhvd2V2ZXIsIHRoZSBDb2FsaXRpb24gR292ZXJubWVudCBkaWQgbm90IGZpbmQgc3BhY2UgaW4gdGhlaXIgbGVnaXNsYXRpdmUgcHJvZ3JhbW1lIGZvciB0aGUgZHJhZnQgQmlsbCBpbiB0aGUgMjAxMC0xNSBwYXJsaWFtZW50LlxuIFxuUHJpdmF0ZSBNZW1iZXJzXHUyMDE5IEJpbGwgYmFsbG90LCBNYXkgMjAxNlxuIFxuRm9sbG93aW5nIHRoZSBiYWxsb3QgZm9yIFByaXZhdGUgTWVtYmVyc1x1MjAxOSBCaWxscyBoZWxkIG9uIDI2IE1heSAyMDE2LCBCeXJvbiBEYXZpZXMgTVAgXHUyMDE4cGlja2VkIHVwXHUyMDE5IHRoZSBkcmFmdCBiaWxsIGFuZCBwcmVzZW50ZWQgaXQgZm9yIGZpcnN0IHJlYWRpbmcgb24gMjkgSnVuZSAyMDE2LlxuIFxuT24gMiBEZWNlbWJlciAyMDE2LCB0aGUgRlJDIHdlYnNpdGUgYW5ub3VuY2VkIHRoYXQgaXRzIGNoYWlybWFuIGhhZCBhY2NlcHRlZCBhbiBpbnZpdGF0aW9uIHRvIHNwZWFrIHdpdGggRGVmcmEgTWluaXN0ZXIsIEdlb3JnZSBFdXN0aWNlIG9uIDE2IERlY2VtYmVyIDIwMTYuwqBBdCB0aGlzIG1lZXRpbmcsIHRoZSBGUkMgQ2hhaXJtYW4gVG9ueSBDaGFybHdvb2QgYW5kIERFRlJBIE1pbmlzdGVyIEdlb3JnZSBFdXN0aWNlIGRpc2N1c3NlZCB0aGUgQmlsbCBhaGVhZCBvZiBpdHMgc2Vjb25kIHJlYWRpbmcuIMKgQWNjb3JkaW5nIHRvIHRoZSBGUkMgcHJlc3MgcmVsZWFzZSwgdGhlIE1pbmlzdGVyIGFuZCBDaGFpcm1hbiBkaXNjdXNzZWQgdGhlIGRldmVsb3BtZW50IG9mIHRoZSBkcmFmdCBCaWxsLCBhbmQgbm90ZWQgcHJlZmVyZW5jZXMgYW5kIGlkZWFzIG9mZmVyZWQgZHVyaW5nIHRoZSBjb25zdWx0YXRpb24uXG4gXG5XaGF0IGRvZXMgdGhlIEJpbGwgZG8/XG4gXG5DbGF1c2UgMSBvZiB0aGUgQmlsbCBpbnRyb2R1Y2VzIHRoZSBzY2hlZHVsZSwgd2hpY2ggYW1lbmRzIHRoZSBGYXJyaWVycyAoUmVnaXN0cmF0aW9uKSBBY3QgMTk3NSBhbmQgbWFrZXMgY2hhbmdlcyB0byB0aGUgY29uc3RpdHV0aW9uIG9mIHRoZSBGYXJyaWVycyBSZWdpc3RyYXRpb24gQ291bmNpbCBhbmQgaXRzIGNvbW1pdHRlZXM6IHRoZSBpbnZlc3RpZ2F0aW5nIGNvbW1pdHRlZSBhbmQgdGhlIGRpc2NpcGxpbmFyeSBjb21taXR0ZWUuIENsYXVzZSAyIG9mIHRoZSBCaWxsIGdpdmVzIHRoZSBTZWNyZXRhcnkgb2YgU3RhdGUgcG93ZXJzIHRvIGNoYW5nZSB0aGUgY29uc3RpdHV0aW9uIG9mIHRoZSBDb3VuY2lsIGFuZCBpdHMgY29tbWl0dGVlcyBieSByZWd1bGF0aW9ucy4gQ2xhdXNlIDMgZGVmaW5lcyB0aGUgdGVycml0b3JpYWwgZXh0ZW50IGFuZCBjb21tZW5jZW1lbnQgb2YgdGhlIEJpbGxcdTIwMTRFbmdsYW5kIGFuZCBXYWxlcyBhbmQgU2NvdGxhbmQuXG4gXG5UaGUgU2NoZWR1bGUgaGFzIHRocmVlIHBhcnRzLCB3aGljaCByZXBsYWNlIHRoZSByZXNwZWN0aXZlIHNlY3Rpb25zIGluIHRoZSBvcmlnaW5hbCBBY3QgZGVhbGluZyB3aXRoIHRoZSBjb25zdGl0dXRpb24gb2YgdGhlIGNvdW5jaWwsIHRoZSBjb25zdGl0dXRpb24gb2YgdGhlIGludmVzdGlnYXRpbmcgY29tbWl0dGVlLCBhbmQgdGhlIGNvbnN0aXR1dGlvbiBvZiB0aGUgZGlzY2lwbGluYXJ5IGNvbW1pdHRlZS5cbiBcblBhcnQgMSBvZiB0aGUgc2NoZWR1bGUgZGVhbHMgd2l0aCB0aGUgY29uc3RpdHV0aW9uIG9mIHRoZSBjb3VuY2lsLiBUaGUgQmlsbCByZXRhaW5zIHRoZSBleGlzdGluZyBudW1iZXIgb2YgbWVtYmVycyAoMTYpLCBidXQgbWFrZXMgc29tZSBjaGFuZ2VzIHRvIHRoZWlyIG1ha2UtdXAgYXMgZm9sbG93czpcbiBcbiBGb3VyIHByYWN0aXNpbmcgZmFycmllcnMgd2lsbCBiZSBlbGVjdGVkOyBUd28gZmFycmllcnMgd2lsbCBiZSBhcHBvaW50ZWQgYnkgdGhlIEJyaXRpc2ggRmFycmllcnMgYW5kIEJsYWNrc21pdGhzIEFzc29jaWF0aW9uOyBUaHJlZSBtZW1iZXJzIHdpbGwgYmUgYXBwb2ludGVkIGJ5IHRoZSBXb3JzaGlwZnVsIENvbXBhbnkgb2YgRmFycmllcnMgKGJ1dCB0aGVyZSB3aWxsIGJlIGEgbmV3IHJlcXVpcmVtZW50IHRoYXQgYXQgbGVhc3Qgb25lIG11c3QgYmUgYSBwcmFjdGlzaW5nIGZhcnJpZXIpOyBUaGVyZSB3aWxsIGJlIHR3byB2ZXRlcmluYXJ5IHN1cmdlb25zIGFwcG9pbnRlZCBieSB0aGUgUm95YWwgQ29sbGVnZSBvZiBWZXRlcmluYXJ5IFN1cmdlb25zOyBhbmQgRml2ZSBsYXkgcmVwcmVzZW50YXRpdmVzIHdpbGwgYmUgYXBwb2ludGVkIGJ5IHZhcmlvdXMgaW50ZXJlc3RlZCBib2RpZXMsIChlLmcuIHRoZSBSU1BDQSBhbmQgdGhlIEJyaXRpc2ggSG9yc2VyYWNpbmcgQXV0aG9yaXR5KS4gXG4gXG5UaGUgQmlsbCBhbHNvIGludHJvZHVjZXMgYSBmaXhlZCBmb3VyLXllYXIgdGVybSBvZiBvZmZpY2UgZm9yIGFsbCBtZW1iZXJzLCBzdGlwdWxhdGVzIHRoYXQgYSBtZW1iZXIgbWF5IHNlcnZlIG9uIHRoZSBjb3VuY2lsIG9ubHkgdHdpY2UgYW5kIGludHJvZHVjZXMgZml0bmVzcy10by1zZXJ2ZSBjb25kaXRpb25zLlxuIFxuUGFydHMgMiBhbmQgMyBvZiB0aGUgc2NoZWR1bGUgbWFrZSBjaGFuZ2VzIHRvIHRoZSBjb25zdGl0dXRpb24gb2YgdGhlIGludmVzdGlnYXRpbmcgYW5kIGRpc2NpcGxpbmFyeSBjb21taXR0ZWVzLlxuIFxuRGViYXRlIGFuZCBhbWVuZG1lbnRzIHRvIHRoZSBCaWxsXG4gXG5UaGVyZSBoYXZlIGJlZW4gbm8gdGFibGVkIGFtZW5kbWVudHMgdG8gdGhlIEJpbGwgYXQgYW55IHN0YWdlLCBhbmQgdGhlcmUgaXMgd2lkZXNwcmVhZCBzdXBwb3J0IGZvciB0aGlzIEJpbGwgYWNyb3NzIHRoZSBIb3VzZS4gU2hhZG93IERFRlJBIE1pbmlzdGVyIE1hcnkgR2xpbmRvbiBleHByZXNzZWQgaGVyIHN1cHBvcnQgZm9yIHRoZSBCaWxsIGF0IGNvbW1pdHRlZSBzdGFnZSwgc3RhdGluZzpcbiBcbiBcdTIwMWNXZSBzdXBwb3J0IHRoZSBCaWxsLCBhcyBpdCBpbnRyb2R1Y2VzIGEgZ3JlYXRlciBsZXZlbCBvZiBmYWlybmVzcyBhbmQgdHJhbnNwYXJlbmN5IHRvIHRoZSBGUkMgYW5kIGl0cyBjb21taXR0ZWVzIHRoYXQgd2lsbCB1bmRlcnBpbiBpdHMgcHJvZ3Jlc3MgYXMgYSBtb2Rlcm4gYW5kIHByb2Zlc3Npb25hbCByZWd1bGF0b3IgZm9yIGl0cyBtZW1iZXJzLCBhbmQgZm9yIHRob3NlIHdobyByZWx5IG9uIHRoZSBpbmR1c3RyeSB3ZWxsIGludG8gdGhlIGZ1dHVyZS5cdTIwMWQgXG4gXG5UaGUgR292ZXJubWVudCBoYXMgc3RhdGVkIHRoYXQgdGhlIEJpbGwgXHUyMDFjZW5qb3lzIGZ1bGwgR292ZXJubWVudCBzdXBwb3J0XHUyMDFkLiBJbiBhZGRpdGlvbiwgREVGUkEgd2FzIHJlc3BvbnNpYmxlIGZvciBkcmFmdGluZyB0aGUgZXhwbGFuYXRvcnkgbm90ZXMgdG8gdGhlIEJpbGwgKHdpdGggdGhlIGNvbnNlbnQgb2YgQnlyb24gRGF2aWVzLCB0aGUgTWVtYmVyXHUyMDEwaW5cdTIwMTBDaGFyZ2Ugb2YgdGhlIEJpbGwpLlxuIFxuUmVsYXRlZCBkb2N1bWVudHNcbiBcbkV4cGxhbmF0b3J5IE5vdGVzIHRvIHRoZSBCaWxsICgyMyBKYW51YXJ5IDIwMTcpLiBQcmVwYXJlZCBieSBERUZSQSB3aXRoIHRoZSBjb25zZW50IG9mIHRoZSBTcG9uc29yaW5nIE1lbWJlciBCeXJvbiBEYXZpZXMgTVAuXG4gXG5UaGUgQmlsbCwgYXMgaW50cm9kdWNlZCAoMjAgSmFudWFyeSAyMDE3KVxuIFxuUHVibGljIEJpbGwgQ29tbWl0dGVlIFByb2NlZWRpbmdzICg3IE1hcmNoIDIwMTcpIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wMy0xNFQxMjoyNzowOS43NTk0MjIxKzAwOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgQ29tbW9ucyBMaWJyYXJ5IGJyaWVmaW5nIHByb3ZpZGVzIGJhY2tncm91bmQgdG8gdGhlIEZhcnJpZXJcdTIwMTlzIChSZWdpc3RyYXRpb24pIEJpbGwgMjAxNi0yMDE3LiBUaGlzIGlzIGEgUHJpdmF0ZSBNZW1iZXJzIEJpbGwgaW50cm9kdWNlZCBieSBCeXJvbiBEYXZpZXMgTVAgd2hpY2ggaGFzIHN1cHBvcnQgZnJvbSB0aGUgR292ZXJubWVudC4gVGhpcyBwYWdlIGRldGFpbHMgdGhlIGJhY2tncm91bmQgYW5kIGFpbXMgb2YgdGhlIEJpbGwuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJDQlAtNzkyNCJ9CiAgICAgICwgInB1Ymxpc2hlciIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI2NyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIENvbW1vbnMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvNjc3MTYiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJTY2llbmNlIGFuZCBFbnZpcm9ubWVudCBTZWN0aW9uIn0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy80MTQwMzMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJDb21tb25zIEJyaWVmaW5nIHBhcGVycyJ9CiAgICAgIH0KICAgICAgLCAidGl0bGUiIDogIkZhcnJpZXJcdTIwMTlzIChSZWdpc3RyYXRpb24pIEJpbGwgMjAxNi0yMDE3IiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTQ4OSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkFuaW1hbCB3ZWxmYXJlIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NDkwIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQW5pbWFscyJ9CiAgICAgIH0KICAgICAgXSwgInR5cGUiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvc2NoZW1hL3BhcmwjUmVzZWFyY2hCcmllZmluZyJ9CiAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Jlc291cmNlcy83MTAyNjgiLCAiYWJzdHJhY3QiIDogeyJfdmFsdWUiIDogIk9uIDEyIEp1bmUgMjAxNCwgdGhlIEhvdXNlIG9mIExvcmRzIEV4dHJhZGl0aW9uIExhdyBDb21taXR0ZWUgd2FzIGFwcG9pbnRlZMKgdG8gY29uc2lkZXIgYW5kIHJlcG9ydCBvbiB0aGUgbGF3IGFuZCBwcmFjdGljZSByZWxhdGluZyB0byBleHRyYWRpdGlvbiwgaW4gcGFydGljdWxhciB0aGUgRXh0cmFkaXRpb24gQWN0IDIwMDMuIFRoZSBDb21taXR0ZWUgcHVibGlzaGVkIHR3byByZXBvcnRzLiBPbiAxMCBOb3ZlbWJlciAyMDE0LCB0aGUgQ29tbWl0dGVlIHB1Ymxpc2hlZCBhIHNob3J0IHJlcG9ydCwgVGhlIEV1cm9wZWFuIEFycmVzdCBXYXJyYW50IE9wdC1JbiwgYW5kLCBvbiAxMCBNYXJjaCAyMDE1LCBwdWJsaXNoZWQgaXRzIG1haW4gcmVwb3J0IEV4dHJhZGl0aW9uOiBMYXcgYW5kIFByYWN0aWNlLiBUaGUgR292ZXJubWVudCBwdWJsaXNoZWQgaXRzIHJlc3BvbnNlIHRvIHRoZSByZXBvcnRzIG9uIDIwIEp1bHkgMjAxNSwgd2hpY2ggd2VyZSB0aGVuIGRlYmF0ZWQgaW4gdGhlIEhvdXNlIG9mIExvcmRzIG9uIDE2IFNlcHRlbWJlciAyMDE1LlxuIFxuV2l0aCByZWdhcmQgdG8gdGhlIGZpcnN0IHJlcG9ydCBvbiB0aGUgRXVyb3BlYW4gQXJyZXN0IFdhcnJhbnQgKEVBVyksIHRoZSBDb21taXR0ZWUgc3RhdGVkIHRoYXQgaXRzIGludGVudGlvbiB3YXMgdG8gaW5mb3JtIGRlYmF0ZSBpbiBib3RoIEhvdXNlcyBhaGVhZCBvZiB0aGUgdm90ZSBpbiB0aGUgSG91c2Ugb2YgQ29tbW9ucyBvbiAxOSBOb3ZlbWJlciAyMDE0IG9uIHdoZXRoZXIgdGhlIFVLIHNob3VsZCByZS1qb2luIHRoZSBFQVcuIFRoZSByZXBvcnQgbWFkZSBhIG51bWJlciBvZiBjb25jbHVzaW9ucyB3aXRoIHJlZ2FyZHMgdG8gdGhlIEVBVy4gVGhlIENvbW1pdHRlZSBub3RlZCB0aGF0IGRlc3BpdGUgZmxhd3MgaW4gdGhlIEVBVywgc3VjaCBhcyBtaXNjYXJyaWFnZXMgb2YganVzdGljZSwgdGhlIG1ham9yaXR5IG9mIGl0cyBtZW1iZXJzIHRob3VnaHQgdGhhdCB0aGUgVUsgc2hvdWxkIG9wdCBiYWNrIGludG8gdGhlIEVBVy4gVGhlIENvbW1pdHRlZSBhbHNvIHJlY29tbWVuZGVkIHRoYXQgZnVydGhlciB3b3JrIGJ5IHRoZSBHb3Zlcm5tZW50IHNob3VsZCBiZSB1bmRlcnRha2VuIGluIG9yZGVyIHRvIGltcHJvdmUgdGhlIGV4dHJhZGl0aW9uIHN5c3RlbS5cbiBcbkluIGl0cyBtYWluIHJlcG9ydCwgdGhlIENvbW1pdHRlZSBjb25jbHVkZWQgdGhhdCB0aG91Z2ggdGhlcmUgd2VyZSBhc3BlY3RzIG9mIHRoZSBsYXcgYW5kIHByYWN0aWNlIHdoaWNoIHdlcmUgXHUyMDFjb2YgY29uY2Vyblx1MjAxZCwgdGhlcmUgd2FzIFx1MjAxY25vIHN5c3RlbWljIHByb2JsZW0gd2l0aCB0aGUgVUtcdTIwMTlzIGV4dHJhZGl0aW9uIHJlZ2ltZVx1MjAxZC4gVGhlIHJlcG9ydCBtYWRlIGEgbnVtYmVyIG9mIGNvbmNsdXNpb25zIGFuZCByZWNvbW1lbmRhdGlvbnMgb24gdmFyaW91cyBhc3BlY3RzIG9mIHRoZSBleHRyYWRpdGlvbiBzeXN0ZW0uIEZvciBleGFtcGxlLCB0aGUgQ29tbWl0dGVlIGFyZ3VlZCB0aGF0IHRoZSBzeXN0ZW0gb2Ygc2Vla2luZyBhc3N1cmFuY2VzIGZyb20gY291bnRyaWVzIGluIG9yZGVyIHRvIHByb3RlY3QgdGhlIGh1bWFuIHJpZ2h0cyBvZiBhbiBpbmRpdmlkdWFsIHNvdWdodCBmb3IgZXh0cmFkaXRpb24gZGlkIG5vdCBwcm92aWRlIFx1MjAxY3N1ZmZpY2llbnQgY29uZmlkZW5jZSB0aGF0IHRoZSBVSyBpcyBtZWV0aW5nIGl0cyBodW1hbiByaWdodHMgb2JsaWdhdGlvbnNcdTIwMWQuIFRoZSBDb21taXR0ZWUgYWxzbyBjb25zaWRlcmVkIHRoZSBpc3N1ZSBsZWdhbCBhaWQgaW4gZXh0cmFkaXRpb24gY2FzZXMuIEl0IGFyZ3VlZCB0aGF0IGxlZ2FsIGFpZCBzaG91bGQgbm90IGJlIG1lYW5zLXRlc3RlZCBhbmQgc2hvdWxkIGJlIGF3YXJkZWQgYXV0b21hdGljYWxseS4gSW4gYWRkaXRpb24sIHRoZSBDb21taXR0ZWUgaGVhcmQgZXZpZGVuY2Ugb24gY29uZGl0aW9ucyB3aXRoaW4gc29tZSBhcmVhcyBvZiB0aGUgVVMganVzdGljZSBzeXN0ZW0uIEl0IHJlY29tbWVuZGVkIHRoYXQgdGhlIEdvdmVybm1lbnQgbWFrZSByZXByZXNlbnRhdGlvbnMgdG8gdGhlIFVTIG9uIHRoZSB0cmVhdG1lbnQgb2YgaW5kaXZpZHVhbHMgZXh0cmFkaXRlZCBmcm9tIHRoZSBVSywgYW5kIGZvcm1hbGlzZSB0aGVzZSBkaXNjdXNzaW9ucyBpbiBhIG1lbW9yYW5kdW0gb2YgdW5kZXJzdGFuZGluZy7CoCJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDMtMTNUMTc6NDA6NTAuNzQzNjI1NSswMDowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIEhvdXNlIG9mIExvcmRzIExpYnJhcnkgYnJpZWZpbmcgcHJvdmlkZXMgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHdvcmsgb2YgdGhlIEhvdXNlIG9mIExvcmRzIEV4dHJhZGl0aW9uIExhdyBDb21taXR0ZWU7IGl0cyB0d28gcmVwb3J0cyAoJ1RoZSBFdXJvcGVhbiBBcnJlc3QgV2FycmFudCBPcHQtSW4nIGFuZCAnRXh0cmFkaXRpb246IExhdyBhbmQgUHJhY3RpY2UnKTsgaXRzIGNvbmNsdXNpb25zIGFuZCByZWNvbW1lbmRhdGlvbnM7IHRoZSBnb3Zlcm5tZW50XHUyMDE5cyByZXNwb25zZXM7IGFuZCBhIHN1bW1hcnkgb2YgdGhlIGRlYmF0ZXMgaGVsZCBvbiB0aGUgdHdvIHJlcG9ydHMgaW4gdGhlIEhvdXNlIG9mIExvcmRzLiJdLCAiaWRlbnRpZmllciIgOiB7Il92YWx1ZSIgOiAiTExOLTIwMTctMDAxNSJ9CiAgICAgICwgInB1Ymxpc2hlciIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgICwgInNlY3Rpb24iIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgXSwgInN1YlR5cGUiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMzQ2NzEzIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTG9yZHMgTGlicmFyeSBub3RlcyJ9CiAgICAgIH0KICAgICAgLCAidGl0bGUiIDogIldvcmsgb2YgdGhlIEFkIEhvYyBDb21taXR0ZWVzIGluIDIwMTRcdTIwMTMxNTogSG91c2Ugb2YgTG9yZHMgRXh0cmFkaXRpb24gTGF3IENvbW1pdHRlZSIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU0NzYiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJBZG1pbmlzdHJhdGlvbiBvZiBqdXN0aWNlIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjM1IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSHVtYW4gcmlnaHRzIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjQ4IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSW50ZXJuYXRpb25hbCBsYXcifQogICAgICB9CiAgICAgIF0sICJ0eXBlIiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3NjaGVtYS9wYXJsI1Jlc2VhcmNoQnJpZWZpbmcifQogICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9yZXNvdXJjZXMvNzEwMjY3IiwgImFic3RyYWN0IiA6IHsiX3ZhbHVlIiA6ICJPbiAxMiBKdW5lIDIwMTQsIEhvdXNlIG9mIExvcmRzIERpZ2l0YWwgU2tpbGxzIENvbW1pdHRlZSB3YXMgYXBwb2ludGVkIHdpdGggdGhlIHJlbWl0IG9mIGNvbnNpZGVyaW5nIFx1MjAxY2luZm9ybWF0aW9uIGFuZCBjb21tdW5pY2F0aW9ucyB0ZWNobm9sb2d5LCBjb21wZXRpdGl2ZW5lc3MgYW5kIHNraWxscyBpbiB0aGUgVW5pdGVkIEtpbmdkb21cdTIwMWQuIEZvbGxvd2luZyBpdHMgaW5xdWlyeSwgdGhlIENvbW1pdHRlZSBwdWJsaXNoZWQgYSByZXBvcnQsIE1ha2Ugb3IgQnJlYWs6IFRoZSBVS1x1MjAxOXMgRGlnaXRhbCBGdXR1cmUsIG9uIDE3IEZlYnJ1YXJ5IDIwMTUuXG4gXG5NYWtlIG9yIEJyZWFrIFBvaW50XG4gXG5SZXZpZXdpbmcgdGhlIGV2aWRlbmNlIG9uIHRoZSBVS1x1MjAxOXMgZGlnaXRhbCBlY29ub215LCB0aGUgQ29tbWl0dGVlIGNvbmNsdWRlZCB0aGF0IHRoZXJlIHdhcyBhIHJpc2sgdGhhdCB0aGUgVUsgbWlnaHQgYmUgbGVmdCBiZWhpbmQgaW4gdGhlIGdsb2JhbCBza2lsbHMgbWFya2V0IGlmIGl0IGRpZCBub3QgcHJvdmlkZSB0aGUgcmlnaHQgY29uZGl0aW9ucyB0byBlbmFibGUgZGlnaXRhbCBidXNpbmVzc2VzIHRvIGZsb3VyaXNoIGluIHRoZSBVSy4gSXQgYXJndWVkIHRoYXQgdGhlIFVLIHdhcyBhdCBhIFx1MjAxY21ha2Ugb3IgYnJlYWtcdTIwMWQgcG9pbnQgaW4gdGltZSwgd2hlbiBpdCBuZWVkZWQgdG8gZW5zdXJlIHRoYXQgaXQgY291bGQgY29udGludWUgdG8gY29tcGV0ZSB3aXRoIG90aGVyIGNvdW50cmllcyBhcm91bmQgdGhlIHdvcmxkLiBLZXkgdG8gdGhpcyB3YXMgdGhlIFVLIGhhdmluZyB0aGUgcmlnaHQgc2tpbGxzIGFuZCBpbmZyYXN0cnVjdHVyZSB0byBrZWVwIHBhY2Ugd2l0aCB0aGUgcmVxdWlyZW1lbnRzIG9mIGNoYW5naW5nIGRpZ2l0YWwgdGVjaG5vbG9neS5cbiBcblByaW5jaXBhbCBSZWNvbW1lbmRhdGlvbjogTmV3IERpZ2l0YWwgQWdlbmRhXG4gXG5UaGUgQ29tbWl0dGVlXHUyMDE5cyBwcmluY2lwYWwgcmVjb21tZW5kYXRpb24gd2FzIHRoYXQgdGhlIEdvdmVybm1lbnQgc2hvdWxkIHByb2R1Y2UgYSBuZXcgZGlnaXRhbCBhZ2VuZGEuIFRoZSBDb21taXR0ZWUgZGVzY3JpYmVkIHRoZSBwdXJwb3NlIG9mIHN1Y2ggYW4gYWdlbmRhIGFzIHRvIGVuYWJsZSB0aGUgR292ZXJubWVudCB0byBiZXR0ZXIgY29vcmRpbmF0ZSBib3RoIGl0cyBvd24gaW5pdGlhdGl2ZXMgYW5kIGluaXRpYXRpdmVzIG91dHNpZGUgb2YgZ292ZXJubWVudC4gVGhlIENvbW1pdHRlZSByZWNvbW1lbmRlZCB0aGF0IHRoZXJlIHNob3VsZCBiZSBhIGNhYmluZXQgbWluaXN0ZXIgd2l0aCByZXNwb25zaWJpbGl0eSBmb3IgaW1wbGVtZW50aW5nIHRoaXMgYWdlbmRhLCBsb2NhdGVkIGluIHRoZSBDYWJpbmV0IE9mZmljZSwgd2hvIHdvdWxkIHJlcG9ydCBhbm51YWxseSB0byBQYXJsaWFtZW50IG9uIHByb2dyZXNzIG1hZGUuIFRoZSBDb21taXR0ZWUgYWxzbyByZWNvbW1lbmRlZCB0aGF0IFBhcmxpYW1lbnQgc2hvdWxkIGVzdGFibGlzaCB0aGUgYmVzdCBtZWFucyBvZiBtYWludGFpbmluZyBvdmVyc2lnaHQgb2YgdGhlIHByb2dyZXNzIG9mIHRoZSBkaWdpdGFsIGFnZW5kYS5cbiBcblRoZSBDb21taXR0ZWVcdTIwMTlzIHJlcG9ydCBpbmNsdWRlZCBpdHMgb3duIGlsbHVzdHJhdGl2ZSBkaWdpdGFsIGFnZW5kYSwgc3VibWl0dGVkIGZvciB0aGUgR292ZXJubWVudFx1MjAxOXMgY29uc2lkZXJhdGlvbi4gVGhpcyBpbmNsdWRlZCB0aGUgZm9sbG93aW5nIG9iamVjdGl2ZXM6XG4gXG4gVGhhdCBwZW9wbGUgaW4gdGhlIFVLIHNob3VsZCBiZSBhYmxlIGFjY2VzcyB0byBkaWdpdGFsIHRlY2hub2xvZ2llcy4gVGhhdCB0aGUgcG9wdWxhdGlvbiBhcyBhIHdob2xlIHNob3VsZCBoYXZlIHRoZSBhcHByb3ByaWF0ZSBsZXZlbHMgb2YgZGlnaXRhbCBza2lsbHMuIFRoYXQgZGlnaXRhbCB0ZWFjaGluZyBpbiBzY2hvb2xzLCB1bml2ZXJzaXRpZXMgYW5kIGZ1cnRoZXIgZWR1Y2F0aW9uIHNob3VsZCBtZWV0IHRoZSByZXF1aXJlbWVudHMgb2YgdGhlIG1vZGVybiBpbmR1c3RyeS4gXG4gXG5Hb3Zlcm5tZW50XHUyMDE5cyBEaWdpdGFsIFN0cmF0ZWd5XG4gXG5UaGUgR292ZXJubWVudCBwdWJsaXNoZWQgaXRzIG93biBEaWdpdGFsIFN0cmF0ZWd5IG9uIDEgTWFyY2ggMjAxNy4gVGhpcyBpbmNsdWRlZCBhIGNvbW1pdG1lbnQgdG8gY29tcGxldGUgdGhlIHJvbGwtb3V0IG9mIDRHIG1vYmlsZSBjb3ZlcmFnZSBhbmQgc3VwZXJmYXN0IGJyb2FkYmFuZCBieSAyMDIwIGFuZCBpbXBsZW1lbnQgYSBVbml2ZXJzYWwgU2VydmljZSBPYmxpZ2F0aW9uLiBUaGUgR292ZXJubWVudCBhbHNvIHNhaWQgdGhhdCBpdCB3b3VsZCBlbnN1cmUgdGhhdCBhZHVsdHMgaW4gRW5nbGFuZCB3aG8gbGFja2VkIGRpZ2l0YWwgc2tpbGxzIHdvdWxkIGJlIGFibGUgdG8gYWNjZXNzIGJhc2ljIGRpZ2l0YWwgc2tpbGxzIHRyYWluaW5nIGZvciBmcmVlLiJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDMtMTNUMTc6NDA6MDAuMzM2MzgyMSswMDowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIExvcmRzIExpYnJhcnkgYnJpZWZpbmcgcHJvdmlkZXMgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHdvcmsgb2YgdGhlIEhvdXNlIG9mIExvcmRzIERpZ2l0YWwgU2tpbGxzIENvbW1pdHRlZTsgaXRzIGNvbmNsdXNpb25zIGFuZCByZWNvbW1lbmRhdGlvbnM7IHRoZSBnb3Zlcm5tZW50XHUyMDE5cyByZXNwb25zZTsgYW5kIGEgc3VtbWFyeSBvZiB0aGUgZGViYXRlIGhlbGQgaW4gdGhlIEhvdXNlIG9mIExvcmRzLiJdLCAiaWRlbnRpZmllciIgOiB7Il92YWx1ZSIgOiAiTExOLTIwMTctMDAxNCJ9CiAgICAgICwgInB1Ymxpc2hlciIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgICwgInNlY3Rpb24iIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgXSwgInN1YlR5cGUiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMzQ2NzEzIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTG9yZHMgTGlicmFyeSBub3RlcyJ9CiAgICAgIH0KICAgICAgLCAidGl0bGUiIDogIldvcmsgb2YgdGhlIEFkIEhvYyBDb21taXR0ZWVzIGluIDIwMTRcdTIwMTMxNTogSG91c2Ugb2YgTG9yZHMgRGlnaXRhbCBTa2lsbHMgQ29tbWl0dGVlIiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTU2MCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkVjb25vbWljIHBvbGljeSJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTYxNCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkZ1cnRoZXIgZWR1Y2F0aW9uIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjQwIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSW5kdXN0cnkifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2NDEiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJJbmZvcm1hdGlvbiB0ZWNobm9sb2d5In0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjUyIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSW50ZXJuZXQgYW5kIGN5YmVyY3JpbWUifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU3NDAiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJTY2hvb2xzIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NzY5IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiVHJhaW5pbmcifQogICAgICB9CiAgICAgIF0sICJ0eXBlIiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3NjaGVtYS9wYXJsI1Jlc2VhcmNoQnJpZWZpbmcifQogICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9yZXNvdXJjZXMvNzEwMjY2IiwgImFic3RyYWN0IiA6IHsiX3ZhbHVlIiA6ICJPbiAxMiBKdW5lIDIwMTQsIHRoZSBIb3VzZSBvZiBMb3Jkc8KgQWZmb3JkYWJsZSBDaGlsZGNhcmUgQ29tbWl0dGVlIHdhcyBhcHBvaW50ZWQgdG8gY29uc2lkZXIgaXNzdWVzIHJlbGF0aW5nIHRvIGFmZm9yZGFibGUgY2hpbGRjYXJlLCBhbmQgdG8gbWFrZSByZWNvbW1lbmRhdGlvbnMuIFRoZSBDb21taXR0ZWUgbG9va2VkIGluIGRlcHRoIGF0IGEgcmFuZ2Ugb2YgaXNzdWVzLCBpbmNsdWRpbmcgZ292ZXJubWVudCBmdW5kaW5nIGZvciBjaGlsZGNhcmUuIEF0IHRoZSB0aW1lIG9mIHRoZSBDb21taXR0ZWVcdTIwMTlzIHJlcG9ydCwgdGhlIENvYWxpdGlvbiBHb3Zlcm5tZW50IHdhcyBpbnZlc3RpbmcgwqM1LjIgYmlsbGlvbiBhbm51YWxseSBpbiBlYXJseSBlZHVjYXRpb24gYW5kIGNoaWxkY2FyZS4gVGhhdCBmaWd1cmUgd2FzIHNldCB0byByaXNlIHRvIMKjNi40IGJpbGxpb24gaW4gdGhlIDIwMTVcdTIwMTMyMCBQYXJsaWFtZW50IGFuZCwgdG8gZGF0ZSwgdGhlIGN1cnJlbnQgQ29uc2VydmF0aXZlIEdvdmVybm1lbnQgaGFzIG1haW50YWluZWQgdGhpcyBjb21taXRtZW50LiBUaGUgc3RhdGVkIGFpbXMgb2YgdGhpcyBpbnZlc3RtZW50IGluIGNoaWxkY2FyZSB3ZXJlLCBhbmQgYnJvYWRseSByZW1haW46IHRvIHByb21vdGUgY2hpbGQgZGV2ZWxvcG1lbnQgZm9yIGFsbCBjaGlsZHJlbjsgdG8gbmFycm93IHRoZSBnYXAgaW4gYXR0YWlubWVudCBiZXR3ZWVuIHRoZSBtb3N0IGRpc2FkdmFudGFnZWQgY2hpbGRyZW4gYW5kIHRoZWlyIFx1MjAxY2JldHRlciBvZmZcdTIwMWQgcGVlcnM7IGFuZCB0byBlbmFibGUgcGFyZW50cyB0byB3b3JrLlRoZSBDb21taXR0ZWVcdTIwMTlzIHJlcG9ydCBpbnZlc3RpZ2F0ZWQgd2hldGhlciB2YWx1ZSBmb3IgbW9uZXkgd2FzIGJlaW5nIGRlbGl2ZXJlZCBieSBjaGlsZGNhcmUgcG9saWN5IHdoZW4gYXNzZXNzZWQgYWdhaW5zdCB0aGVzZSBhaW1zIGFuZCBmb2N1c2VkIG9uIDAgdG8gZml2ZSB5ZWFyLW9sZHMuIEl0IGFsc28gY29uc2lkZXJlZCB0aGUgaW1wYWN0IG9mIGNoaWxkY2FyZSBjb3N0cyBvbiBwYXJlbnRhbCBlbXBsb3ltZW50IHJhdGVzIGFuZCB3b3JrIGNob2ljZXMuXG4gXG5UaGUgQ29tbWl0dGVlIHB1Ymxpc2hlZCBpdHMgcmVwb3J0IG9uIDI0IEZlYnJ1YXJ5IDIwMTUsIHByaW9yIHRvIHRoZSAyMDE1IGdlbmVyYWwgZWxlY3Rpb24uIEluIGEgc3VtbWFyeSBvZiBpdHMgZmluZGluZ3MsIHRoZSBDb21taXR0ZWUgdXJnZWQgXHUyMDFjdGhyZWUgbWFpbiBhY3Rpb25zIHRoZSBuZXcgR292ZXJubWVudCBtdXN0IHRha2UgaW4gb3JkZXIgdG8gZ2V0IHRoZSBiZXN0IHZhbHVlIGZvciBpdHMgaW52ZXN0bWVudFx1MjAxZC4gVGhlc2Ugd2VyZSB0bzpcbiBcbiBSZXByaW9yaXRpc2Ugc3BlbmRpbmcgaW4gZWFybHkgZWR1Y2F0aW9uIGFuZCBjaGlsZGNhcmUgdG8gZm9jdXMgb24gZGlzYWR2YW50YWdlZCBjaGlsZHJlblx1MjAxNGJldHRlciB2YWx1ZSBmb3IgbW9uZXkgd2lsbCBiZSBhY2hpZXZlZCBieSB0YXJnZXRpbmcgdGhvc2UgbW9zdCBsaWtlbHkgdG8gYmVuZWZpdDsgRW5zdXJlIHRoYXQgZGlzYWR2YW50YWdlZCB0d28geWVhci1vbGRzIGFjY2VzcyB0aGVpciBmcmVlIGVhcmx5IGVkdWNhdGlvbiBpbiBzZXR0aW5ncyByYXRlZCBnb29kIG9yIG91dHN0YW5kaW5nIGJ5IE9mc3RlZCBubyBsYXRlciB0aGFuIDIwMjA7IGFuZCBBZGRyZXNzIHRoZSB1bmRlci1mdW5kaW5nIG9mIGZyZWUgZWFybHkgZWR1Y2F0aW9uIHBsYWNlcyBpbiB0aGUgUHVibGljLCBWb2x1bnRhcnkgYW5kIEluZGVwZW5kZW50IChQVkkpIHNlY3Rvci4gXG4gXG5DaGlsZGNhcmUgcG9saWN5IGlzIGEgZGV2b2x2ZWQgbWF0dGVyIGluIFNjb3RsYW5kLCBXYWxlcyBhbmQgTm9ydGhlcm4gSXJlbGFuZCwgYW5kIHRoZSByZXBvcnQgZmluZGluZ3MgdGhlcmVmb3JlIGNvbmNlcm5lZCBFbmdsYW5kIG9ubHkuIER1ZSB0byB0aGUgYnJlYWR0aCBhbmQgY29tcGxleGl0eSBvZiBjaGlsZGNhcmUgaXNzdWVzIHRvdWNoZWQgdXBvbiBpbiB0aGUgQ29tbWl0dGVlIHJlcG9ydCwgdGhpcyBMb3JkcyBMaWJyYXJ5IGJyaWVmaW5nIGFkZHJlc3NlcyBvbmx5IGEgc2VsZWN0aW9uIG9mIHRoZW0uIEl0IGxvb2tzIGluIHBhcnRpY3VsYXIgYXQ6IHRoZSBHb3Zlcm5tZW50XHUyMDE5cyBjaGlsZGNhcmUgcG9saWN5IHN0cmFuZHM7IHRoZSBlYXJseSB5ZWFycyBwdXBpbCBwcmVtaXVtIChpbXBsZW1lbnRlZCBpbiBBcHJpbCAyMDE1IGZvciBkaXNhZHZhbnRhZ2VkIHRocmVlIGFuZCBmb3VyIHllYXJzLW9sZHMpOyB0aGUgZnJlZSBlYXJseSBlZHVjYXRpb24gZW50aXRsZW1lbnQgKGZvciBhbGwgdGhyZWUgYW5kIGZvdXIgeWVhci1vbGRzIGFuZCBmb3Igc29tZSBkaXNhZHZhbnRhZ2VkIHR3byB5ZWFycy1vbGRzKSBhbmQgdGhlIGFkZGl0aW9uYWwgMTUgaG91ciBmcmVlIGVudGl0bGVtZW50IG9mIGNoaWxkY2FyZSwgYW5ub3VuY2VkIGluIDIwMTYuIFRoZSBicmllZmluZyBmb2N1c2VzIG1haW5seSBvbiBpc3N1ZXMgcmFpc2VkIHN1cnJvdW5kaW5nIHRoZSBmdW5kaW5nIGFuZCBxdWFsaXR5IG9mIHByb3Zpc2lvbi4gSXQgZG9lcyBub3QgcHJvdmlkZSBkZXRhaWxlZCBpbmZvcm1hdGlvbiBvbiB0aGUgcHJvdmlzaW9ucyBvZiBVbml2ZXJzYWwgQ3JlZGl0ICh3aGljaCB0aGUgY2hpbGRjYXJlIGVsZW1lbnQgb2Ygd29ya2luZyB0YXggY3JlZGl0cyBpcyB0cmFuc2l0aW9uaW5nIHRvKSwgb3Igb24gdGhlIG5ldyB0YXggZnJlZSBjaGlsZGNhcmUgc2NoZW1lIHRvIGJlIHJvbGxlZC1vdXQgaW4gMjAxNywgb3Igb24gcHJvdmlzaW9ucyBzcGVjaWZpY2FsbHkgdGFyZ2V0ZWQgdG93YXJkcyB0aG9zZSB3aXRoIGRpc2FiaWxpdGllcy4ifQogICAgICAsICJkYXRlIiA6IHsiX3ZhbHVlIiA6ICIyMDE3LTAzLTEzVDE3OjM5OjE3LjI3MTkwNjIrMDA6MDAiLCAiX2RhdGF0eXBlIiA6ICJkYXRlVGltZSJ9CiAgICAgICwgImRlc2NyaXB0aW9uIiA6IFsiVGhpcyBMb3JkcyBMaWJyYXJ5IGJyaWVmaW5nIHByb3ZpZGVzIGluZm9ybWF0aW9uIGFib3V0IHRoZSB3b3JrIG9mIHRoZSBIb3VzZSBvZiBMb3JkcyBBZmZvcmRhYmxlIENoaWxkY2FyZSBDb21taXR0ZWU7IGl0cyBjb25jbHVzaW9ucyBhbmQgcmVjb21tZW5kYXRpb25zOyB0aGUgZ292ZXJubWVudFx1MjAxOXMgcmVzcG9uc2U7IGFuZCBnaXZlcyBhbiB1cGRhdGUgb24gZGV2ZWxvcG1lbnRzIHNpbmNlIHRoZSBnb3Zlcm5tZW50IHJlc3BvbnNlIHRvIHRoZSBDb21taXR0ZWVcdTIwMTlzIHJlcG9ydC4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIkxMTi0yMDE3LTAwMTMifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzM0NjcxMyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkxvcmRzIExpYnJhcnkgbm90ZXMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJXb3JrIG9mIHRoZSBBZCBIb2MgQ29tbWl0dGVlcyBpbiAyMDE0XHUyMDEzMTU6IEhvdXNlIG9mIExvcmRzIEFmZm9yZGFibGUgQ2hpbGRjYXJlIENvbW1pdHRlZSIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU1MTYiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJDaGlsZCBjYXJlIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NzE4IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiUHJlLXNjaG9vbCBlZHVjYXRpb24ifQogICAgICB9CiAgICAgIF0sICJ0eXBlIiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3NjaGVtYS9wYXJsI1Jlc2VhcmNoQnJpZWZpbmcifQogICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9yZXNvdXJjZXMvNzEwMjUxIiwgImFic3RyYWN0IiA6IHsiX3ZhbHVlIiA6ICJJbiByZWxhdGlvbiB0byBwZWFjZSBhbmQgc2VjdXJpdHksIG1hbnkgY29tbWVudGF0b3JzIGhhdmUgc3BlY3VsYXRlZCBhcyB0byB0aGUgaW1wYWN0IHRoYXQgbGVhdmluZyB0aGUgRVUgY291bGQgaGF2ZSBvbiB0aGUgZnV0dXJlIG9mIHBlYWNlIGFuZCBzZWN1cml0eSBpbiBOb3J0aGVybiBJcmVsYW5kLiBGb3Igc29tZSwgdGhlIGltcGxpY2F0aW9ucyBpbmNsdWRlIGEgZGFuZ2VyIG9mIHRoZSBwZWFjZSBwcm9jZXNzIHVucmF2ZWxsaW5nLCB0aGUgY2Vzc2F0aW9uIG9mIGNyb3NzLWJvcmRlciBwZWFjZSBwcm9ncmFtbWVzIGFuZCBhIHJldHVybiB0byB0aGUgXHUyMDE4aGFyZFx1MjAxOSBib3JkZXIgdGhhdCBmZWF0dXJlZCBzbyBwcm9taW5lbnRseSBkdXJpbmcgdGhlIFRyb3VibGVzLiBUaGlzIGluY2x1ZGVzIGZvcm1lciBEZXB1dHkgRmlyc3QgTWluaXN0ZXIgb2YgTm9ydGhlcm4gSXJlbGFuZCwgTWFydGluIE1jR3Vpbm5lc3MsIHdobyBoYXMgd2FybmVkIHRoYXQgbGVhdmluZyB0aGUgRXVyb3BlYW4gVW5pb24gY291bGQgXHUyMDFjdW5kZXJtaW5lIGFsbC1JcmVsYW5kIGJvZGllcyBhbmQgY28tb3BlcmF0aW9uIGNyZWF0ZWQgYnkgdGhlIHBlYWNlIHByb2Nlc3MgYW5kIGl0IHdpbGwgaGFyZGVuIHBhcnRpdGlvbi4gSXQgd2lsbCBoYXZlIGNvbnNlcXVlbmNlcyBmb3IgaHVtYW4gcmlnaHRzIGxlZ2lzbGF0aW9uIHdoaWNoLCBhZ2FpbiwgaXMgc3BlY2lmaWNhbGx5IHJlZmVycmVkIHRvIGluIHRoZSBCZWxmYXN0IGFuZCBzdWJzZXF1ZW50IGFncmVlbWVudHNcdTIwMWQuIEluIGFkZGl0aW9uLCBkdXJpbmcgdGhlIHBhc3NhZ2Ugb2YgdGhlIEV1cm9wZWFuIFVuaW9uIChOb3RpZmljYXRpb24gb2YgV2l0aGRyYXdhbCkgQmlsbCBpbiBib3RoIEhvdXNlcywgY29uY2VybnMgd2VyZSByYWlzZWQgcmVnYXJkaW5nIHRoZSBpbXBhY3QgdGhhdCBsZWF2aW5nIHRoZSBFVSB3b3VsZCBoYXZlIG9uIHRoZSBwZWFjZSBwcm9jZXNzLiBUaGlzIGluY2x1ZGVkIGEgbnVtYmVyIG9mIGFtZW5kbWVudHMgdGhhdCBzb3VnaHQgdG8gdGFrZSBhY2NvdW50IG9mIHRoZSBHb29kIEZyaWRheSBBZ3JlZW1lbnQgd2hlbiB0cmlnZ2VyaW5nIEFydGljbGUgNTAgYW5kIGVuc3VyaW5nIHRoYXQgYm9yZGVycyBiZXR3ZWVuIHRoZSBVSyBhbmQgSXJlbGFuZCByZW1haW5lZCBvcGVuIG9uY2UgdGhlIFVLIGZvcm1hbGx5IHdpdGhkcmF3cyBmcm9tIHRoZSBFVS7CoEluIGNvbnRyYXN0LCBvdGhlcnMgaGF2ZSBzdWdnZXN0ZWQgdGhhdCB0aGVyZSB3aWxsIGJlIGxpdHRsZSBvciBubyBpbXBhY3Qgb24gdGhlIHBlYWNlIHByb2Nlc3MsIHN1Y2ggYXMgdGhlIFVLIFByaW1lIE1pbmlzdGVyLCBUaGVyZXNhIE1heSwgYW5kIGZvcm1lciBGaXJzdCBNaW5pc3RlciBvZiBOb3J0aGVybiBJcmVsYW5kLCBBcmxlbmUgRm9zdGVyLCB3aG8gaGF2ZSBib3RoIHN0YXRlZCBvbiBtdWx0aXBsZSBvY2Nhc2lvbnMgdGhhdCB0aGV5IGRpZCBub3Qgd2FudCB0byBzZWUgYSBcdTIwMWNyZXR1cm4gdG8gdGhlIGJvcmRlciBvZiB0aGUgcGFzdFx1MjAxZCwgcmVtaW5pc2NlbnQgb2YgdGhlIGJvcmRlciBhcnJhbmdlbWVudHMgZHVyaW5nIHRoZSBUcm91Ymxlcy5cbiBcbkluIHRlcm1zIG9mIHRyYWRlLCBzaG91bGQgdGhlIFVLIHdpdGhkcmF3IGZyb20gdGhlIEVVLCBpdCBjb3VsZCBwb3NzaWJseSBpbXBhY3Qgb24gYmlsYXRlcmFsIHRyYWRlIHJlbGF0aW9ucyBiZXR3ZWVuIHRoZSBVSyBhbmQgSXJlbGFuZC4gQXMgb2YgMjAxNSwgdGhlIHZhbHVlIG9mIHRyYWRlIGluIGV4cG9ydHMgdG8gSXJlbGFuZCBmcm9tIHRoZSBVSyB3YXMgwqMxNS4xIGJpbGxpb24sIHdoaWxzdCB0aGUgdmFsdWUgb2YgdHJhZGUgaW4gaW1wb3J0cyBmcm9tIElyZWxhbmQgdG8gdGhlIFVLIHdhcyDCozExLjIgYmlsbGlvbi4gVGhlIEVjb25vbWljIGFuZCBTb2NpYWwgUmVzZWFyY2ggSW5zdGl0dXRlIHRoaW5rIHRhbmsgXHUyMDFjc3VnZ2VzdCB0aGF0IGEgQnJleGl0IGlzIGxpa2VseSB0byBzaWduaWZpY2FudGx5IHJlZHVjZSBiaWxhdGVyYWwgdHJhZGUgZmxvd3MgYmV0d2VlbiBJcmVsYW5kIGFuZCB0aGUgVUtcdTIwMWQgYW5kIHRoYXQgXHUyMDFjdGhlIGltcGFjdCBjb3VsZCBiZSAyMCBwZXJjZW50IG9yIG1vcmVcdTIwMWQuIE90aGVycywgc3VjaCBhcyBBcmxlbmUgRm9zdGVyLCBoYXZlIGFyZ3VlZCBhZ2FpbnN0IHRoZSBVSyBzdGF5aW5nIGluIHRoZSBFVSBmb3IgdGhlIHNha2Ugb2YgZXhpc3RpbmcgdHJhZGUgYWdyZWVtZW50cy4gV3JpdGluZyBhbiBhcnRpY2xlIGZvciB0aGUgR3VhcmRpYW4sIEZvc3RlciBjb250ZW5kZWQgdGhhdCBcdTIwMWN0aGVyZSBpcyBubyBldmlkZW5jZSB0byBzdXBwb3J0IHRoZSBjYXNlIHRoYXQgZWl0aGVyIFNjb3RsYW5kIG9yIE5vcnRoZXJuIElyZWxhbmQgc2hvdWxkIHN0YXkgaW4gdGhlIEVVIFx1MjAxOGZvciB0aGUgc2FrZSBvZlx1MjAxOSB0cmFkZSB3aXRoIHRoZSByZXN0IG9mIHRoZSBFVVx1MjAxZC4ifQogICAgICAsICJkYXRlIiA6IHsiX3ZhbHVlIiA6ICIyMDE3LTAzLTEzVDEwOjU2OjU2LjgyNTgxNzIrMDA6MDAiLCAiX2RhdGF0eXBlIiA6ICJkYXRlVGltZSJ9CiAgICAgICwgImRlc2NyaXB0aW9uIiA6IFsiRm9yIHRoZSBVSywgdGhlIGRlY2lzaW9uIHRvIGxlYXZlIHRoZSBFVSBjb3VsZCBoYXZlIGEgc2lnbmlmaWNhbnQgaW1wYWN0LCBwYXJ0aWN1bGFybHkgb24gaXRzIHJlbGF0aW9uc2hpcCB3aXRoIElyZWxhbmQuIFRoaXMgaW5jbHVkZXMgb24gcGVhY2UgYW5kIHNlY3VyaXR5LCB3aGljaCBlbmNvbXBhc3NlcyB0aGUgcGVhY2UgcHJvY2VzcyBmb2xsb3dpbmcgdGhlIDMwLXllYXIgY29uZmxpY3QgaW4gTm9ydGhlcm4gSXJlbGFuZCwga25vd24gYXMgXHUyMDE4dGhlIFRyb3VibGVzXHUyMDE5LCBib3JkZXIgY29udHJvbHMgYW5kIHRoZSBDb21tb24gVHJhdmVsIEFyZWE7IGFuZCB0cmFkZSwgcGFydGljdWxhcmx5IHRoZSBiaWxhdGVyYWwgdHJhZGUgcmVsYXRpb25zaGlwIGJldHdlZW4gVUsgYW5kIElyZWxhbmQuIFRoaXMgYnJpZWZpbmcgZXhhbWluZXMgdGhlIGltcGxpY2F0aW9ucyBvZiB0aGUgVUtcdTIwMTlzIGRlY2lzaW9uIHRvIGxlYXZlIHRoZSBFVSBvbiBpdHMgcmVsYXRpb25zaGlwIHdpdGggSXJlbGFuZCwgcGFydGljdWxhcmx5LCBpbiByZWdhcmRzIHRvIHBlYWNlLCBzZWN1cml0eSBhbmQgdHJhZGUuIEluIGFkZGl0aW9uIHRvIGNvdmVyaW5nIHRoZSBhZm9yZW1lbnRpb25lZCBpc3N1ZXMgaW4gY2xvc2VyIGRldGFpbCwgdGhpcyBicmllZmluZyBhbHNvIGV4YW1pbmVzIHRoZSBjdXJyZW50IHNpdHVhdGlvbiBpbiBib3RoIHRoZSBVSyBhbmQgSXJlbGFuZCwgYW5kIGRpc2N1c3NlcyB0aGUgcG90ZW50aWFsIGltcGxpY2F0aW9ucyBvZiB0aGUgVUsgbGVhdmluZyB0aGUgRVUsIGRyYXdpbmcgdXBvbiBjb21tZW50YXJ5IGZyb20gVUsgYW5kIElyaXNoIGhlYWRzIG9mIGdvdmVybm1lbnRzLCBwb2xpdGljYWwgcGFydGllcywgdGhpbmsgdGFua3MgYW5kIG9yZ2FuaXNhdGlvbnMuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMTE4tMjAxNy0wMDEyIn0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8zNDY3MTMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBMaWJyYXJ5IG5vdGVzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiTGVhdmluZyB0aGUgRXVyb3BlYW4gVW5pb246IFRoZSBVSyBhbmQgSXJlbGFuZCIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU1OTMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJFdXJvcGUifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2NTEiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJJbnRlcm5hdGlvbmFsIHRyYWRlIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzY1NjU5MCIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiV2VuZHkgTW9ydG9uIHByZXNlbnRlZCB0aGXCoENyb3duIFRlbmFuY2llcyBCaWxswqBvbiA0IEp1bHkgMjAxNi4gVGhlIGRlYmF0ZSBvbiBTZWNvbmQgUmVhZGluZyB3YXMgaW5pdGlhbGx5IHNjaGVkdWxlZCB0byB0YWtlIHBsYWNlIG9uIDE2IERlY2VtYmVyIDIwMTYuIFRoZSBCaWxsIHBhc3NlZCBpdHMgU2Vjb25kIFJlYWRpbmcgd2l0aG91dMKgZGViYXRlIG9uIDMgRmVicnVhcnkgMjAxNy4gSXQgd2FzIGNvbnNpZGVyZWQgaW7CoFB1YmxpYyBCaWxsIENvbW1pdHRlZSBvbiAxIE1hcmNoIDIwMTcuIFRoZSBCaWxsIHdhcyBub3QgYW1lbmRlZCBpbiBDb21taXR0ZWUuIFJlcG9ydCBhbmQgVGhpcmQgUmVhZGluZyBhcmUgc2NoZWR1bGVkIHRvIHRha2UgcGxhY2Ugb24gMTIgTWF5wqAyMDE3LlxuIFxuUHVycG9zZSBvZiB0aGUgQmlsbFxuIFxuVGhlIEJpbGwgaXMgc2Vla2luZyB0byBicmluZyBtb3N0IENyb3duIHRlbmFuY2llcyBjcmVhdGVkIGFmdGVyIGl0IGNvbWVzIGludG8gZm9yY2Ugd2l0aGluIHRoZSBhc3N1cmVkIHRlbmFuY3kgcmVnaW1lIGdvdmVybmVkIGJ5IHRoZSBIb3VzaW5nIEFjdCAxOTg4LiBJdCBpcyBmZWx0IHRoYXQgdGhpcyByZWdpbWUgd2lsbCBvZmZlciBzdWZmaWNpZW50IGZsZXhpYmlsaXR5IHRvwqBnb3Zlcm5tZW50IGRlcGFydG1lbnRzwqB3aGlsZSBhdCB0aGUgc2FtZSB0aW1lIGltcHJvdmluZyB0aGUgc3RhdHV0b3J5IHByb3RlY3Rpb24gb2ZmZXJlZCB0byBDcm93biB0ZW5hbnRzLiBDcm93biB0ZW5hbnRzIGFyZSBnZW5lcmFsbHkgdGVuYW50cyBvZiB0aGUgU2VjcmV0YXJ5IG9mIFN0YXRlIG9yIGdvdmVybm1lbnQgZGVwYXJ0bWVudHMuIFNvbWUgZXhjbHVzaW9ucyBmcm9tIHRoZSAxOTg4IEFjdCB3aWxsIHJlbWFpbiBpbiBwbGFjZS5cbiBcblByaW9yIGNvbnN1bHRhdGlvblxuIFxuVGhlIENvYWxpdGlvbiBHb3Zlcm5tZW50IGFubm91bmNlZCBpdHMgaW50ZW50aW9uIHRvIGxlZ2lzbGF0ZSBpbiB0aGlzIGFyZWEgaW4gSnVseSAyMDEzIGJ1dCBjb25zdWx0YXRpb24gb24gdGhlIHByb3Bvc2FscyBkaWQgbm90IHRha2UgcGxhY2UgdW50aWwgSnVseSAyMDE1OiBHaXZpbmcgQ3Jvd24gVGVuYW50cyBHcmVhdGVyIFByb3RlY3Rpb24uIEEgc3VtbWFyeSBvZiByZXNwb25zZXMgdG8gdGhpcyBjb25zdWx0YXRpb24gcHJvY2VzcyBoYXMgbm90IHlldCBiZWVuIHB1Ymxpc2hlZCBcdTIwMTMgdGhlIHByb3Bvc2FscyBhcHBlYXIgdG8gYmUgcmVsYXRpdmVseSB1bmNvbnRyb3ZlcnNpYWwuXG4gXG5UaGUgQmlsbCByZXBsaWNhdGVzwqBwcm92aXNpb25zIGluIGEgUHJpdmF0ZSBNZW1iZXJcdTIwMTlzIEJpbGwgaW50cm9kdWNlZCBieSBNYXJrIFBhd3NleSBkdXJpbmcgdGhlIDIwMTUtMTYgcGFybGlhbWVudGFyeSBzZXNzaW9uOiBDcm93biBUZW5hbmNpZXMgQmlsbCAyMDE1LTE2LiBUaGlzIEJpbGwgZGlkIG5vdCBwcm9ncmVzcyBiZXlvbmQgaXRzIEZpcnN0IFJlYWRpbmcgZGVzcGl0ZSBhdHRyYWN0aW5nIEdvdmVybm1lbnQgc3VwcG9ydC5cbiBcblRoZSBCaWxsIGV4dGVuZHMgdG8gRW5nbGFuZCBhbmQgV2FsZXMuXG4gXG7CoCJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDMtMTBUMTU6NDg6MTEuMTUzNDk0MSswMDowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIENvbW1vbnMgTGlicmFyeSBicmllZmluZyBwYXBlciBwcm92aWRlcyBiYWNrZ3JvdW5kIGluZm9ybWF0aW9uIG9uIGEgUHJpdmF0ZSBNZW1iZXIncyBCaWxsIHdoaWNoIGlzIHNlZWtpbmcgdG8gYnJpbmcgbW9zdCBDcm93biB0ZW5hbmNpZXMgd2l0aGluIHRoZSBhc3N1cmVkIHRlbmFuY3kgcmVnaW1lICB1bmRlciB0aGUgSG91c2luZyBBY3QgMTk4OC4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIkNCUC03ODMxIn0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1MjY3IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgQ29tbW9ucyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy83MDUxMCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlNvY2lhbCBQb2xpY3kgU2VjdGlvbiJ9CiAgICAgIH0KICAgICAgXSwgInN1YlR5cGUiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvNDE0MDMzIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQ29tbW9ucyBCcmllZmluZyBwYXBlcnMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJDcm93biBUZW5hbmNpZXMgQmlsbCBbQmlsbCAzMiBvZiAyMDE2LTE3XSIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2MjkiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzaW5nIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NzIyIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiUHJpdmF0ZSByZW50ZWQgaG91c2luZyJ9CiAgICAgIH0KICAgICAgXSwgInR5cGUiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvc2NoZW1hL3BhcmwjUmVzZWFyY2hCcmllZmluZyJ9CiAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Jlc291cmNlcy82Njk2NzgiLCAiYWJzdHJhY3QiIDogeyJfdmFsdWUiIDogIlRoZSBOYXRpb25hbCBDaXRpemVuIFNlcnZpY2VcbiBcblRoZSBOYXRpb25hbCBDaXRpemVuIFNlcnZpY2UgKE5DUykgY29uc2lzdHMgb2YgY291cnNlcyBmb3IgeW91bmcgcGVvcGxlIGluIEVuZ2xhbmQgYW5kIE5vcnRoZXJuIElyZWxhbmQsIG1vc3RseSBhZ2VkIDE2IGFuZCAxNy4gVGhlIGNvdXJzZXMgdGFrZSBwbGFjZSBkdXJpbmcgc2Nob29sIGhvbGlkYXlzIGFuZCBpbnZvbHZlIGEgbWl4dHVyZSBvZiBhY3Rpdml0aWVzIC0gYWR2ZW50dXJlcywgbGlmZSBza2lsbHMgYW5kIHNvY2lhbCBhY3Rpb24gLSB0byBlbmNvdXJhZ2UgeW91bmcgcGVvcGxlIHRvIGVuZ2FnZSB3aXRoIHRoZWlyIGNvbW11bml0eSBhbmQgZGV2ZWxvcCBmb3IgdGhlIGZ1dHVyZS4gVGhlIE5DUyBpcyBjdXJyZW50bHkgYWRtaW5pc3RlcmVkIGJ5IHRoZSBOQ1MgVHJ1c3QsIGEgY29tbXVuaXR5IGludGVyZXN0IGNvbXBhbnkuXG4gXG5UaGXCoE5hdGlvbmFsIENpdGl6ZW4gU2VydmljZSBCaWxsIFtITF0gMjAxNi0xN1xuIFxuVGhlIE5hdGlvbmFsIENpdGl6ZW4gU2VydmljZSBCaWxsIFtITF0gMjAxNi0xNyB3YXMgaW50cm9kdWNlZCBpbiB0aGUgSG91c2Ugb2YgQ29tbW9ucyBvbiAxNCBEZWNlbWJlciAyMDE2LsKgXG4gXG5UaGUgQmlsbCBoYWQgaXRzIHNlY29uZCByZWFkaW5nIG9uIDE2IEphbnVhcnkgMjAxNyB3aGVyZSBpdCByZWNlaXZlZCBjcm9zcy1wYXJ0eSBzdXBwb3J0LiBJdCB3YXMgY29uc2lkZXJlZCBpbiBQdWJsaWMgQmlsbCBDb21taXR0ZWUgb24gMjTCoEphbnVhcnkgMjAxNyB3aGVyZSBhIG51bWJlciBvZiBkcmFmdGluZyBhbmQgdGVjaG5pY2FsIGFtZW5kbWVudHMgd2VyZSBtb3ZlZCBieSB0aGUgR292ZXJubWVudC5cbiBcblRoZSBCaWxsIHdpbGwgaGF2ZSBpdHMgcmVtYWluaW5nIHN0YWdlcyBpbiB0aGUgSG91c2Ugb2YgQ29tbW9ucyBvbiAxNcKgTWFyY2jCoDIwMTcuXG4gXG5UaGUgQmlsbCwgaW4gY29tYmluYXRpb24gd2l0aCBhIFJveWFsIENoYXJ0ZXIsIHdvdWxkIHBsYWNlIHRoZSBOQ1Mgb24gYSBwZXJtYW5lbnQgc3RhdHV0b3J5IGZvb3RpbmcuIFRoZSBCaWxsXHUyMDE5cyBFeHBsYW5hdG9yeSBOb3RlcyBzdGF0ZSB0aGF0IHRoZSBCaWxsOlxuIFxuIEluY29ycG9yYXRlcyB0aGUgbmV3IE5DUyBUcnVzdCBhcyBhIENoYXJ0ZXIgYm9keSBhbmQgY3JlYXRlcyBhIGxlZ2lzbGF0aXZlIG1lY2hhbmlzbSB0byB0cmFuc2ZlciB0aGUgYnVzaW5lc3Mgb2YgdGhlIENvbXBhbnkgdG8gdGhlIG5ldyBUcnVzdC4gVGhpcyBjcmVhdGVzIGEgbGVnaXNsYXRpdmUgZnJhbWV3b3JrIGZvciB0aGUgTkNTLCB3aXRoIHRoZSBhaW0gb2YgbWFraW5nIGl0IGEgbmF0aW9uYWwgaW5zdGl0dXRpb24gd2hpbGUgcHJlc2VydmluZyBpdHMgaW5kZXBlbmRlbnQgZXRob3M7IEFpbXMgdG8gc2VjdXJlIHRoYXQgdGhlIGFkbWluaXN0cmF0aXZlIGFuZCBmdW5kaW5nIGFycmFuZ2VtZW50cyBmb3IgdGhlIE5DUyBUcnVzdCBhcmUgYXBwcm9wcmlhdGUgZm9yIHRoZSBpbmNyZWFzZWQgbGV2ZWwgb2YgcHVibGljIGZ1bmRzIHRoZSBUcnVzdCB3aWxsIG1hbmFnZSwgd2l0aCBwcm9wZXIgYWNjb3VudGFiaWxpdHkgdG8gZ292ZXJubWVudCBhbmQgUGFybGlhbWVudDsgYW5kIEFpbXMgdG8gaW1wb3NlIG9uIHRoZSBOQ1MgVHJ1c3QgYW4gYXBwcm9wcmlhdGUgbGV2ZWwgb2YgZ292ZXJubWVudCBjb250cm9sIGZvciBhIGJvZHkgaW4gcmVjZWlwdCBvZiBwdWJsaWMgZnVuZHMgXG4gXG5JbiBhZGRpdGlvbiwgdGhlIEJpbGwgd291bGQgZW5hYmxlIEhNUkMgdG8gc2VuZCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgVHJ1c3QgYW5kIGl0cyB3b3JrIHRvIHlvdW5nIHBlb3BsZSB3aG8gYXJlIGVsaWdpYmxlIGZvciBOQ1MgYW5kIGludml0ZSB0aGVtIHRvIHRha2UgcGFydC5cbiBcblRoZSBCaWxsIGFuZCBFeHBsYW5hdG9yeSBOb3RlcyBhcmUgYXZhaWxhYmxlIGZyb20gdGhlIEJpbGwgcGFnZXMgb24gdGhlIHBhcmxpYW1lbnRhcnkgd2Vic2l0ZS4gQSBkcmFmdCBSb3lhbCBDaGFydGVyIGZvciB0aGUgTmF0aW9uYWwgQ2l0aXplbiBTZXJ2aWNlIFRydXN0IChDbSA5MzkzLCBKYW51YXJ5IDIwMTcpIGlzIGFsc28gYXZhaWxhYmxlLlxuIFxuVGhlIEJpbGwgd291bGQgZXh0ZW5kIHRvIEVuZ2xhbmQgYW5kIFdhbGVzIGJ1dCB3b3VsZCBvbmx5IGFwcGx5IHRvIEVuZ2xhbmQuIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wMy0xMFQxNTo0NzozMC4zNTY5NDgxKzAwOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgQ29tbW9ucyBMaWJyYXJ5IEJyaWVmaW5nIFBhcGVyIGhhcyBiZWVuIHByZXBhcmVkIGZvciB0aGUgcmVtYWluaW5nIHN0YWdlcyBvZiB0aGUgTmF0aW9uYWwgQ2l0aXplbiBTZXJ2aWNlIEJpbGwgW0hMXSAyMDE2LTE3IG9uIDE1IE1hcmNoIDIwMTcuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJDQlAtNzg1MyJ9CiAgICAgICwgInB1Ymxpc2hlciIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI2NyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIENvbW1vbnMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUwMzYiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb21lIEFmZmFpcnMgU2VjdGlvbiJ9CiAgICAgIH0KICAgICAgXSwgInN1YlR5cGUiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvNDE0MDMzIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQ29tbW9ucyBCcmllZmluZyBwYXBlcnMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJDb21tb25zIExpYnJhcnkgQW5hbHlzaXMgb2YgdGhlIE5hdGlvbmFsIENpdGl6ZW4gU2VydmljZSBCaWxsIFtITF0gMjAxNi0xNyIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU3NzYiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJWb2x1bnRhcnkgb3JnYW5pc2F0aW9ucyJ9CiAgICAgIH0KICAgICAgXSwgInR5cGUiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvc2NoZW1hL3BhcmwjUmVzZWFyY2hCcmllZmluZyJ9CiAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Jlc291cmNlcy82NzgyOTYiLCAiYWJzdHJhY3QiIDogeyJfdmFsdWUiIDogIk9uIDcgTWFyY2ggMjAxNywgdGhlIEhvdXNlIG9mIExvcmRzIGNvbnNpZGVyZWQgdGhlIEV1cm9wZWFuIFVuaW9uIChOb3RpZmljYXRpb24gb2YgV2l0aGRyYXdhbCkgQmlsbCBhdCB0aGlyZCByZWFkaW5nLiBMb3JkIE5ld2J5LCB0aGUgTGVhZGVyIG9mIHRoZSBMaWJlcmFsIERlbW9jcmF0cyBpbiB0aGUgSG91c2Ugb2YgTG9yZHMsIG1vdmVkIHRoZSBmb2xsb3dpbmcgYW1lbmRtZW50IHRvIHRoZSBtb3Rpb24gXHUyMDFjdGhhdCB0aGlzIGJpbGwgZG8gbm93IHBhc3NcdTIwMWQ6XG4gXG4gTGVhdmUgb3V0IGZyb20gXHUyMDFjdGhhdFx1MjAxZCB0byB0aGUgZW5kIGFuZCBpbnNlcnQgXHUyMDFjdGhpcyBIb3VzZSBkZWNsaW5lcyB0byBhbGxvdyB0aGUgYmlsbCB0byBwYXNzLCBiZWNhdXNlIHRoZSBiaWxsIGRvZXMgbm90IHByb3ZpZGUgYSBtZWNoYW5pc20gZm9yIHRoZSBwZW9wbGUgb2YgdGhlIFVuaXRlZCBLaW5nZG9tIHRvIGhhdmUgYSB2b3RlLCBwcmlvciB0byB0aGUgVW5pdGVkIEtpbmdkb21cdTIwMTlzIGRlcGFydHVyZSBmcm9tIHRoZSBFdXJvcGVhbiBVbmlvbiwgb24gdGhlIHRlcm1zIG9mIHRoZSBuZXcgcmVsYXRpb25zaGlwIGJldHdlZW4gdGhlIFVuaXRlZCBLaW5nZG9tIGFuZCB0aGUgRXVyb3BlYW4gVW5pb24uIFxuIFxuRm9sbG93aW5nIGEgZGViYXRlLCB0aGUgYW1lbmRtZW50IHdhcyBkZWZlYXRlZCBieSAzNDAgdm90ZXMgdG8gOTUuIFBhcmFncmFwaCA4LjE1MiBvZiB0aGUgQ29tcGFuaW9uIHRvIHRoZSBTdGFuZGluZyBPcmRlcnMgcHJvdmlkZXMgZnVsbCBkZXRhaWxzIG9mIHRoZSBcdTIwMThwYXNzaW5nXHUyMDE5IHByb2NlZHVyZSwgaW4gcGFydGljdWxhciBob3cgTWVtYmVycyBjYW4gb3Bwb3NlIHRoZSBtb3Rpb24gb3IgcHV0IGRvd24gYW1lbmRtZW50cyB0byBpdDpcbiBcbiBUaGUgbW90aW9uIFx1MjAxY3RoYXQgdGhpcyBiaWxsIGRvIG5vdyBwYXNzXHUyMDFkIGlzIG1vdmVkIGltbWVkaWF0ZWx5IGFmdGVyIHRoaXJkIHJlYWRpbmcgaGFzIGJlZW4gYWdyZWVkIHRvIG9yLCBpZiBhbWVuZG1lbnRzIGhhdmUgYmVlbiB0YWJsZWQsIGFzIHNvb24gYXMgdGhlIGxhc3QgYW1lbmRtZW50IGhhcyBiZWVuIGRpc3Bvc2VkIG9mLiBUaGUgbW90aW9uIGlzIHVzdWFsbHkgbW92ZWQgZm9ybWFsbHkuIEl0IG1heSBiZSBvcHBvc2VkLCBhbmQgcmVhc29uZWQgb3IgZGVsYXlpbmcgYW1lbmRtZW50cywgb2Ygd2hpY2ggbm90aWNlIG11c3QgYmUgZ2l2ZW4sIG1heSBiZSBtb3ZlZCB0byBpdCwgYnV0IGluIG90aGVyIGNpcmN1bXN0YW5jZXMgdGhlcmUgaXMgbm9ybWFsbHkgbm8gc3Vic3RhbnRpdmUgZGViYXRlLiBBbnkgcmVtYXJrcyBzaG91bGQgYmUgYnJpZWYgYW5kIHNob3VsZCBub3Qgc2VlayB0byByZW9wZW4gZGViYXRlcyBhdCBwcmV2aW91cyBzdGFnZXMgb2YgdGhlIGJpbGwuIFxuIFxuVGhpcyBicmllZmluZyBzZXRzIG91dCBzb21lIGZ1cnRoZXIgZXhhbXBsZXMgb2Ygd2hlcmUgc3VjaCBhbWVuZG1lbnRzIGhhdmUgYmVlbiB0YWJsZWQgYW5kL29yIG1vdmVkLiBJdCBkb2VzIG5vdCBjb25zdGl0dXRlIHByb2NlZHVyYWwgYWR2aWNlLiBNZW1iZXJzIHJlcXVpcmluZyBzdWNoIGFkdmljZSBzaG91bGQgY29uc3VsdCB0aGUgTGVnaXNsYXRpb24gT2ZmaWNlXHUyMDE5cyBBIEd1aWRlIHRvIFB1YmxpYyBCaWxscyBpbiB0aGUgSG91c2Ugb2YgTG9yZHMgKE1heSAyMDE1KSBhbmQgY29udGFjdCB0aGUgTGVnaXNsYXRpb24gT2ZmaWNlIHdpdGggYW55IGZ1cnRoZXIgZW5xdWlyaWVzLlxuIFxuwqBcbiBcbsKgIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wMy0wOFQxNDoyODozMS4yNzUzMDcxKzAwOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgTG9yZHMgTGlicmFyeSBicmllZmluZyBwcm92aWRlcyBleGFtcGxlcyBpbiB0aGUgSG91c2Ugb2YgTG9yZHMgb2Ygd2hlcmUgYW4gYW1lbmRtZW50IHRvIHRoZSBtb3Rpb24gXHUyMDFjdGhhdCB0aGlzIGJpbGwgZG8gbm93IHBhc3NcdTIwMWQgaGFzIGJlZW4gdGFibGVkIGFuZC9vciBtb3ZlZC4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIkxJRi0yMDE3LTAwMDYifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzQxNDA0MSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkxvcmRzIEluIEZvY3VzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiTG9yZHMgUHVibGljIEJpbGwgU3RhZ2VzOiBcIlRoYXQgVGhpcyBCaWxsIERvIE5vdyBQYXNzXCIiLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjI4IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU3MDUiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJQYXJsaWFtZW50YXJ5IHByb2NlZHVyZSJ9CiAgICAgIH0KICAgICAgXSwgInR5cGUiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvc2NoZW1hL3BhcmwjUmVzZWFyY2hCcmllZmluZyJ9CiAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Jlc291cmNlcy83MDg3NzQiLCAiYWJzdHJhY3QiIDogeyJfdmFsdWUiIDogIlRoaXMgcGFwZXIgcHJvdmlkZXMgYmFja2dyb3VuZCBzdGF0aXN0aWNzIG9uIHByaXNvbnMgYW5kIGNvdXJ0cyBpbiBFbmdsYW5kIGFuZCBXYWxlcyBhaGVhZCBvZiB0aGUgU2Vjb25kIFJlYWRpbmcgb2YgdGhlIFByaXNvbnMgYW5kIENvdXJ0cyBCaWxsIDIwMTYtMTcuXG4gXG5Db21tb25zIExpYnJhcnkgQnJpZWZpbmcgUGFwZXIgU04wNDMzNDogUHJpc29uIFBvcHVsYXRpb24gU3RhdGlzdGljcyAoY3VycmVudGx5IGJlaW5nIHVwZGF0ZWQpIGV4cGxvcmVzIHByaXNvbiBwb3B1bGF0aW9uIGRhdGEgZm9yIEVuZ2xhbmQgYW5kIFdhbGVzIGluIG1vcmUgZGVwdGggYW5kIGluY2x1ZGVzIGRhdGEgZm9yIHRoZSByZXN0IG9mIHRoZSBVSy5cbiBcblByaXNvbiBQb3B1bGF0aW9uXG4gXG5BcyBhdCAzMSBEZWNlbWJlciAyMDE2OlxuIFxuIFRoZSB0b3RhbCBwcmlzb24gcG9wdWxhdGlvbiB3YXMgODQsMzA3LiBUaGUgbW9zdCBmcmVxdWVudCBsZW5ndGggb2Ygc2VudGVuY2UgYmVpbmcgc2VydmVkIHdhcyB0eXBpY2FsbHkgYSBzZW50ZW5jZSBvdmVyIDQgeWVhcnMuIFZpb2xlbmNlIGFnYWluc3QgdGhlIHBlcnNvbiAoVkFUUCkgb2ZmZW5jZXMgYWNjb3VudGVkIGZvciB0aGUgaGlnaGVzdCBwcm9wb3J0aW9uIG9mIHByaXNvbmVycy4gU2V4dWFsLCB0aGVmdCBhbmQgZHJ1ZyBvZmZlbmNlcyBlYWNoIGFjY291bnRlZCBmb3IgYXBwcm94aW1hdGVseSAxNSUgb2YgdGhlIHJlYXNvbiBvZmZlbmRlcnMgd2VyZSBpbiBwcmlzb24uIFRoZXJlIHdlcmUganVzdCB1bmRlciAxMCwwMDAgZm9yZWlnbiBuYXRpb25hbHMgd2l0aGluIHRoZSBwcmlzb24gcG9wdWxhdGlvbi4gVGhvc2Ugb3JpZ2luYXRpbmcgZnJvbSB0aGUgRXVyb3BlYW4gVW5pb24gKGV4Y2x1ZGluZyB0aGUgVUspIGFjY291bnRlZCBmb3IgNDMlIG9mIGFsbCBmb3JlaWduIG5hdGlvbmFscyBpbiBwcmlzb24gYW5kIGp1c3QgdW5kZXIgNSUgb2YgdGhlIHRvdGFsIHByaXNvbiBwb3B1bGF0aW9uLiA2OSUgKDgwKSBvZiBwcmlzb24gZXN0YWJsaXNobWVudHMgd2VyZSBvdmVyY3Jvd2RlZC4gXG4gXG7CoFxuIFxuUHJpc29uIFNhZmV0eVxuIFxuSW4gdGhlIDEyIG1vbnRocyB0byBTZXB0ZW1iZXIgMjAxNjpcbiBcbiBUaGVyZSB3ZXJlIGp1c3Qgb3ZlciAyNSwwMDAgcHJpc29uZXIgYXNzYXVsdCBpbmNpZGVudHMgd2l0aGluIHByaXNvbnMsIGEgMzElIGluY3JlYXNlIHRoZSBmaWd1cmUgdG8gU2VwdGVtYmVyIDIwMTUuIFRoZXJlIHdlcmUgNiw0MzAgYXNzYXVsdHMgb24gcHJpc29uIHN0YWZmLCA3NjEgb2Ygd2hpY2ggd2VyZSBzZXJpb3VzLiBUaGlzIHdhcyBhbiA4MiUgcmlzZSBvbiB0aGUgbnVtYmVyIG9mIGFzc2F1bHRzIG9uIHByaXNvbiBzdGFmZiBpbiAyMDA2IGFuZCB3YXMgYSA0MCUgaW5jcmVhc2UgZnJvbSAyMDE1LiBUaGVyZSB3ZXJlIG92ZXIgMzcsNzUwIHNlbGYtaGFybSBpbmNpZGVudHMuIFRoaXMgd2FzIGFuIGluY3JlYXNlIG9mIDYxJSBjb21wYXJlZCB0byBTZXB0ZW1iZXIgMjAwNiBhbmQgYW4gaW5jcmVhc2Ugb2YgMjMlIGNvbXBhcmVkIHRvIDIwMTUuIEluIHRoZSAxMiBtb250aHMgdG8gRGVjZW1iZXIgMjAxNiB0aGVyZSB3ZXJlIDM1NCBkZWF0aHMgb2YgcHJpc29uZXJzIGluIGN1c3RvZHkuIEFyb3VuZCA1NSUgb2YgdGhlIGRlYXRocyB3ZXJlIHRocm91Z2ggbmF0dXJhbCBjYXVzZXMsIDM0JSB3ZXJlIHNlbGYtaW5mbGljdGVkLCAxMCUgd2VyZSBjbGFzc2VkIGFzIG90aGVyIChpbmNsdWRpbmcgdGhvc2UgYXdhaXRpbmcgZm9yIGZ1cnRoZXIgaW5mb3JtYXRpb24gb24gY2F1c2Ugb2YgZGVhdGgpIGFuZCAxJSB3ZXJlIHRoZSByZXN1bHQgb2YgaG9taWNpZGUuIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wMy0wN1QxNjoxMTozNC42MjcyMTg5KzAwOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgcGFwZXIgcHJvdmlkZXMgYmFja2dyb3VuZCBzdGF0aXN0aWNzIG9uIHByaXNvbnMgYW5kIGNvdXJ0cyBpbiBFbmdsYW5kIGFuZCBXYWxlcyBhaGVhZCBvZiB0aGUgU2Vjb25kIFJlYWRpbmcgb2YgdGhlIFByaXNvbnMgYW5kIENvdXJ0cyBCaWxsIDIwMTYtMTcuXG5cbkNvbW1vbnMgTGlicmFyeSBCcmllZmluZyBQYXBlciBTTjA0MzM0OiBQcmlzb24gUG9wdWxhdGlvbiBTdGF0aXN0aWNzIChjdXJyZW50bHkgYmVpbmcgdXBkYXRlZCkgZXhwbG9yZXMgcHJpc29uIHBvcHVsYXRpb24gZGF0YSBmb3IgRW5nbGFuZCBhbmQgV2FsZXMgaW4gbW9yZSBkZXB0aCBhbmQgaW5jbHVkZXMgZGF0YSBmb3IgdGhlIHJlc3Qgb2YgdGhlIFVLLiJdLCAiaWRlbnRpZmllciIgOiB7Il92YWx1ZSIgOiAiQ0JQLTc4OTIifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyNjciLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBDb21tb25zIExpYnJhcnkifQogICAgICB9CiAgICAgICwgInNlY3Rpb24iIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzcwNDU5IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiU29jaWFsIGFuZCBHZW5lcmFsIFN0YXRpc3RpY3MgU2VjdGlvbiJ9CiAgICAgIH0KICAgICAgXSwgInN1YlR5cGUiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvNDE0MDMzIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQ29tbW9ucyBCcmllZmluZyBwYXBlcnMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJQcmlzb25zIGFuZCBDb3VydHMgU3RhdGlzdGljcywgRW5nbGFuZCBhbmQgV2FsZXMiLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTM3IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQ291cnRzIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NzIwIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiUHJpc29ucyJ9CiAgICAgIH0KICAgICAgXSwgInR5cGUiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvc2NoZW1hL3BhcmwjUmVzZWFyY2hCcmllZmluZyJ9CiAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Jlc291cmNlcy83MDg3NjgiLCAiYWJzdHJhY3QiIDogeyJfdmFsdWUiIDogIlRoZSBQcmV2ZW50aW5nIGFuZCBDb21iYXRpbmcgVmlvbGVuY2UgQWdhaW5zdCBXb21lbiBhbmQgRG9tZXN0aWMgVmlvbGVuY2UgKFJhdGlmaWNhdGlvbiBvZiBDb252ZW50aW9uKSBCaWxsIGlzIGEgSG91c2Ugb2YgQ29tbW9ucyBwcml2YXRlIG1lbWJlclx1MjAxOXMgYmlsbCBpbnRyb2R1Y2VkIGJ5IEVpbGlkaCBXaGl0ZWZvcmQgKFNOUCBNUCBmb3IgQmFuZmYgYW5kIEJ1Y2hhbikgYW5kwqBpcyBzcG9uc29yZWQgaW4gdGhlIEhvdXNlIG9mIExvcmRzIGJ5IEJhcm9uZXNzIEdhbGUgKExhYm91cikuIFRoZcKgQmlsbCBoYXMgY29tcGxldGVkIGFsbCBzdGFnZXMgaW4gdGhlIEhvdXNlIG9mIENvbW1vbnMgYW5kIGlzIHNjaGVkdWxlZCB0byBoYXZlIGl0cyBzZWNvbmQgcmVhZGluZyBpbiB0aGUgSG91c2Ugb2YgTG9yZHMgb24gMTAgTWFyY2ggMjAxNy5cbiBcblRoZSBCaWxsIHNlZWtzIHRvIGVuY291cmFnZSB0aGUgR292ZXJubWVudCB0byByYXRpZnkgdGhlIENvdW5jaWwgb2YgRXVyb3BlIENvbnZlbnRpb24gb24gUHJldmVudGluZyBhbmQgQ29tYmF0aW5nIFZpb2xlbmNlIEFnYWluc3QgV29tZW4gYW5kIERvbWVzdGljIFZpb2xlbmNlIChyZWZlcnJlZCB0byBhcyB0aGUgSXN0YW5idWwgQ29udmVudGlvbilbaWldLCB3aGljaCB0aGUgVUsgc2lnbmVkIG9uIDggSnVuZSAyMDEyIGJ1dCBoYXMgeWV0IHRvIHJhdGlmeS4gVGhlIEJpbGwgbWFrZXMgYSBudW1iZXIgb2YgcHJvdmlzaW9ucyBpbiB0aGlzIHJlZ2FyZC4gSXQgd291bGQgcmVxdWlyZSB0aGUgU2VjcmV0YXJ5IG9mIFN0YXRlIHRvIGxheSBhIHJlcG9ydCBiZWZvcmUgZWFjaCBIb3VzZSBzZXR0aW5nIG91dCB0aGUgc3RlcHMgcmVxdWlyZWQgdG8gZW5hYmxlIHRoZSBVSyB0byByYXRpZnkgdGhlIENvbnZlbnRpb24sIGFuZCB0aGUgdGltZXNjYWxlIHdpdGhpbiB3aGljaCB0aGlzIGlzIGV4cGVjdGVkIHRvIGhhcHBlbi4gVGhlIHJlcG9ydCB3b3VsZCBoYXZlIHRvIGJlIGxhaWQgYXMgc29vbiBhcyByZWFzb25hYmx5IHByYWN0aWNhYmxlIGFmdGVyIHRoZSBBY3QgY2FtZSBpbnRvIGZvcmNlLiBDbGF1c2UgdHdvIHdvdWxkIHJlcXVpcmUgdGhlIFNlY3JldGFyeSBvZiBTdGF0ZSB0byBsYXkgYSByZXBvcnQgYmVmb3JlIGJvdGggSG91c2VzIGVhY2ggeWVhciB1bnRpbCByYXRpZmljYXRpb24sIHNldHRpbmcgb3V0IGFueSBjaGFuZ2VzIHRvIHRoZSB0aW1lc2NhbGUgY29udGFpbmVkIGluIHByZXZpb3VzIHJlcG9ydHM7IGFkbWluaXN0cmF0aXZlIG1lYXN1cmVzIHRha2VuIGJ5IHRoZSBnb3Zlcm5tZW50IHRvIGVuYWJsZSB0aGUgVUsgdG8gcmF0aWZ5IHRoZSBDb252ZW50aW9uOyBsZWdpc2xhdGl2ZSBwcm9wb3NhbHMgYnJvdWdodCBmb3J3YXJkIHRvIGVuYWJsZSB0byBVSyB0byByYXRpZnk7IGFuZCBtZWFzdXJlcyB0byBiZSB0YWtlbiBhbmQgbGVnaXNsYXRpb24gcmVxdWlyZWQgdG8gZW5hYmxlIHRoZSBVSyB0byByYXRpZnkgdGhlIENvbnZlbnRpb24uXG4gXG5UaGUgQmlsbCB3b3VsZCByZXF1aXJlIHRoZSBmaXJzdCBhbm51YWwgcmVwb3J0IHRvIGJlIGxhaWQgbm8gbGF0ZXIgdGhhbiAxIE5vdmVtYmVyIDIwMTcuIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wMy0wN1QxNDozNDoxMS42MzYyNDQ3KzAwOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgSG91c2Ugb2YgTG9yZHMgTGlicmFyeSBicmllZmluZyBwcm92aWRlcyBpbmZvcm1hdGlvbiBvbiB0aGUgUHJldmVudGluZyBhbmQgQ29tYmF0aW5nIFZpb2xlbmNlIEFnYWluc3QgV29tZW4gYW5kIERvbWVzdGljIFZpb2xlbmNlIChSYXRpZmljYXRpb24gb2YgQ29udmVudGlvbikgQmlsbCBhaGVhZCBvZiBpdHMgc2NoZWR1bGVkIHNlY29uZCByZWFkaW5nIGluIHRoZSBIb3VzZSBvZiBMb3JkcyBvbiAxMCBNYXJjaCAyMDE3LiJdLCAiaWRlbnRpZmllciIgOiB7Il92YWx1ZSIgOiAiTElGLTIwMTctMDAyMiJ9CiAgICAgICwgInB1Ymxpc2hlciIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgICwgInNlY3Rpb24iIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgXSwgInN1YlR5cGUiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvNDE0MDQxIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTG9yZHMgSW4gRm9jdXMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJQcmV2ZW50aW5nIGFuZCBDb21iYXRpbmcgVmlvbGVuY2UgQWdhaW5zdCBXb21lbiBhbmQgRG9tZXN0aWMgVmlvbGVuY2UgKFJhdGlmaWNhdGlvbiBvZiBDb252ZW50aW9uKSBCaWxsOiBCcmllZmluZyBmb3IgTG9yZHMgU3RhZ2VzIiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTUzOCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkNyaW1lIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTQwIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQ3JpbWVzIG9mIHZpb2xlbmNlIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjM1IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSHVtYW4gcmlnaHRzIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjQ4IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSW50ZXJuYXRpb25hbCBsYXcifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2NDkiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJJbnRlcm5hdGlvbmFsIG9yZ2FuaXNhdGlvbnMifQogICAgICB9CiAgICAgIF0sICJ0eXBlIiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3NjaGVtYS9wYXJsI1Jlc2VhcmNoQnJpZWZpbmcifQogICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9yZXNvdXJjZXMvNzA4NzY3IiwgImFic3RyYWN0IiA6IHsiX3ZhbHVlIiA6ICJUaGUgUG9saXRpY2FsIFBhcnRpZXMgKEZ1bmRpbmcgYW5kIEV4cGVuZGl0dXJlKSBCaWxsIFtITF0gaXMgYSBwcml2YXRlIG1lbWJlclx1MjAxOXMgYmlsbCBpbnRyb2R1Y2VkIGJ5IExvcmQgVHlsZXIgKExpYmVyYWwgRGVtb2NyYXQpLiBUaGUgQmlsbCByZWNlaXZlZCBpdHMgZmlyc3QgcmVhZGluZyBpbiB0aGUgSG91c2Ugb2YgTG9yZHMgb24gNiBKdW5lIDIwMTYgYW5kIGlzIHNjaGVkdWxlZCB0byByZWNlaXZlIGl0cyBzZWNvbmQgcmVhZGluZyBvbiAxMCBNYXJjaCAyMDE3LlxuIFxuU2V0dGluZyBvdXQgdGhlIHB1cnBvc2Ugb2YgdGhlIEJpbGwsIExvcmQgVHlsZXIgc3RhdGVkOlxuIFxuIFRoaXMgQmlsbCBpcyBiYXNlZCBvbiB0aGUgY3Jvc3MtcGFydHkgZHJhZnQgcHVibGlzaGVkIGJ5IEFuZHJldyBUeXJpZSBNUCwgQWxhbiBXaGl0ZWhlYWQgTVAgYW5kIExvcmQgVHlsZXIgaW4gQXByaWwgMjAxMywgYW5kIHNlZWtzIHRvIGZ1bGZpbCB0aGUgb2JqZWN0aXZlcyBvZiB0aGUgcmVwb3J0IG9uIHRoaXMgc3ViamVjdCBieSB0aGUgQ29tbWl0dGVlIG9uIFN0YW5kYXJkcyBpbiBQdWJsaWMgTGlmZSBwdWJsaXNoZWQgaW4gTm92ZW1iZXIgMjAxMS4gVGhlIGN1cnJlbnQgQmlsbCB1cGRhdGVzIHRoZSBwcmV2aW91cyBwcm9wb3NhbHMgdG8gcmVmbGVjdCB0aGUgdmFyaW91cyAyMDE1IG1hbmlmZXN0b3MgY29tbWl0bWVudHMgb2YgYWxsIHRoZSBtYWluIHBhcnRpZXMgc2Vla2luZyB0byB0YWtlIHRoZSBiaWcgbW9uZXkgb3V0IG9mIEJyaXRpc2ggcG9saXRpY3MgYW5kIHRvIHJlZ3VsYXJpc2UgdGhlIGNvbnN0cmFpbnRzIG9uIGJvdGggcGFydHkgZG9uYXRpb25zIGFuZCBleHBlbmRpdHVyZS4gXG4gXG5UaGUgQmlsbCBjb21wcmlzZXMgb2YgMjggY2xhdXNlcyBhbmQgdGhyZWUgc2NoZWR1bGVzLiBJdCBhaW1zIHRvIHJlZ3VsYXRlIGJvdGggdGhlIGZ1bmRpbmcgYW5kIGV4cGVuZGl0dXJlIG9mIHBvbGl0aWNhbCBwYXJ0aWVzLiBUaGlzIGluY2x1ZGVzIG1ha2luZyBwcm92aXNpb25zIGZvciB0aGUgcGhhc2VkIGludHJvZHVjdGlvbiBvZiBhIGNhcCBvbiBkb25hdGlvbnMgdG8gcG9saXRpY2FsIHBhcnRpZXMuIFRoZSBCaWxsIGFsc28gc2Vla3MgdG8gY291bnQgbWVtYmVyc2hpcCBmZWVzIGZyb20gdHJhZGUgdW5pb25zIGFuZCBvcmdhbmlzYXRpb25zIHRvIHBvbGl0aWNhbCBwYXJ0aWVzIGFzIGluZGl2aWR1YWwgZG9uYXRpb25zIGluIHByZXNjcmliZWQgY2lyY3Vtc3RhbmNlcy4gSW4gYWRkaXRpb24sIHRoZSBCaWxsIGFpbXMgdG8gaW50cm9kdWNlIGEgbGltaXQgb24gbm9uLWVsZWN0aW9uIGV4cGVuc2VzIGluY3VycmVkIGJ5IHBvbGl0aWNhbCBwYXJ0aWVzLiBGdXJ0aGVyLCB0aGUgQmlsbCBvdXRsaW5lcyB0aGUgZnVuY3Rpb25zIG9mIHRoZSBFbGVjdG9yYWwgQ29tbWlzc2lvbiwgYW4gaW5kZXBlbmRlbnQgYm9keSB3aGljaCByZWd1bGF0ZXMgcG9saXRpY2FsIGZpbmFuY2UgaW4gdGhlIFVLLCBpbiBlbmZvcmNpbmcgdGhlIEJpbGxcdTIwMTlzIHByb3Zpc2lvbnMuIFRoZSBwcm92aXNpb25zIHdvdWxkIGFwcGx5IHRvIHRoZSB3aG9sZSBvZiB0aGUgVW5pdGVkIEtpbmdkb20uXG4gXG7CoCJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDMtMDdUMTQ6MjM6MzIuNzU0MDY0NiswMDowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIEhvdXNlIG9mIExvcmRzIExpYnJhcnkgYnJpZWZpbmcgcHJvdmlkZXMgaW5mb3JtYXRpb24gaW4gc3VwcG9ydCBvZiB0aGUgSG91c2Ugb2YgTG9yZHMgc2Vjb25kIHJlYWRpbmcgb2YgdGhlIFBvbGl0aWNhbCBQYXJ0aWVzIChGdW5kaW5nIGFuZCBFeHBlbmRpdHVyZSkgQmlsbCBbSExdIG9uIDEwIE1hcmNoIDIwMTcuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMSUYtMjAxNy0wMDIxIn0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy80MTQwNDEiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBJbiBGb2N1cyJ9CiAgICAgIH0KICAgICAgLCAidGl0bGUiIDogIlBvbGl0aWNhbCBQYXJ0aWVzIChGdW5kaW5nIGFuZCBFeHBlbmRpdHVyZSkgQmlsbCBbSExdOiBCcmllZmluZyBmb3IgTG9yZHMgU3RhZ2VzIiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTcxMyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlBvbGl0aWNhbCBwYXJ0aWVzIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzcwNzYyMCIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiVGhlIENyaW1pbmFsIEZpbmFuY2VzIEJpbGwgd2FzIGludHJvZHVjZWQgaW4gdGhlIEhvdXNlIG9mIExvcmRzIG9uIDIyIEZlYnJ1YXJ5IDIwMTcgYW5kIGlzIHNjaGVkdWxlZCB0byByZWNlaXZlIGl0cyBzZWNvbmQgcmVhZGluZyBvbiA5IE1hcmNoIDIwMTcuIEl0IGNvbXBsZXRlZCBpdHMgZmluYWwgc3RhZ2VzIGluIHRoZSBIb3VzZSBvZiBDb21tb25zIG9uIDIxIEZlYnJ1YXJ5IDIwMTcuIFRoZSBCaWxsIHdvdWxkIG1ha2UgcHJvdmlzaW9uIHRvIHRhY2tsZSBtb25leSBsYXVuZGVyaW5nIGFuZCBjb3JydXB0aW9uLCByZWNvdmVyIHRoZSBwcm9jZWVkcyBvZiBjcmltZSBhbmQgY291bnRlciB0ZXJyb3Jpc3QgZmluYW5jaW5nLiBUaGUgQmlsbCBjb25zaXN0cyBvZiBmb3VyIHBhcnRzOlxuIFxuIMKgUGFydCAxIGlzIGRpdmlkZWQgaW50byBmaXZlIGNoYXB0ZXJzIGFuZCB3b3VsZCBtYWtlIHNldmVyYWwgcHJvdmlzaW9ucyB0byBoZWxwIHRoZSBHb3Zlcm5tZW50IHRhY2tsZSBmaW5hbmNpYWwgY3JpbWVzLCBzdWNoIGFzIG1vbmV5IGxhdW5kZXJpbmcuIENoYXB0ZXIgMSB3b3VsZCBjcmVhdGUgVW5leHBsYWluZWQgV2VhbHRoIE9yZGVycyB0aGF0IHdvdWxkIHJlcXVpcmUgYW4gaW5kaXZpZHVhbCBzdXNwZWN0ZWQgb2YgaW52b2x2ZW1lbnQgaW4sIG9yIGFzc29jaWF0aW9uIHdpdGgsIHNlcmlvdXMgY3JpbWluYWxpdHkgdG8gZXhwbGFpbiB0aGUgb3JpZ2luIG9mIGFzc2V0cyB0aGF0IGFwcGVhciB0byBiZSBkaXNwcm9wb3J0aW9uYXRlIHRvIHRoZWlyIGluY29tZS4gQ2hhcHRlciAxIHdvdWxkIGFsc28gYWxsb3cgZGlzY2xvc3VyZSBvcmRlcnNcdTIwMTR3aGljaCBhcmUgY3VycmVudGx5IHVzZWQgdG8gaW52ZXN0aWdhdGUgZnJhdWRcdTIwMTR0byBiZSB1c2VkIGluIG1vbmV5IGxhdW5kZXJpbmcgaW52ZXN0aWdhdGlvbnMuIENoYXB0ZXIgMiBmb2N1c2VzIG9uIG1vbmV5IGxhdW5kZXJpbmcgYW5kIHdvdWxkIHJlZm9ybSB0aGUgU3VzcGljaW91cyBBY3Rpdml0aWVzIFJlcG9ydCByZWdpbWUuIEl0IGFsc28gc2Vla3MgdG8gaW1wcm92ZSBpbmZvcm1hdGlvbiBzaGFyaW5nIGJldHdlZW4gZW50aXRpZXMgaW4gdGhlIFx1MjAxOHJlZ3VsYXRlZCBzZWN0b3JcdTIwMTksIGZvciBleGFtcGxlIGJhbmtzLCBpbiBvcmRlciB0byBjb21iYXQgbW9uZXkgbGF1bmRlcmluZy4gQ2hhcHRlciAzIHdvdWxkIG1ha2UgcHJvdmlzaW9uIGluIHJlbGF0aW9uIHRvIGNpdmlsIHJlY292ZXJ5LiBJdCBzZWVrcyB0byBpbXByb3ZlIHNlaXp1cmUgYW5kIGZvcmZlaXR1cmUgcG93ZXJzLCB0byBhbGxvdyB0aGUgc2VpenVyZSBvZiBtb25leSBzdG9yZWQgaW4gYmFuayBhY2NvdW50cyBhbmQgaXRlbXMgb2YgcGVyc29uYWwgcHJvcGVydHksIHN1Y2ggYXMgcHJlY2lvdXMgbWV0YWxzIGFuZCBqZXdlbHMuIFRoZSBCaWxsIHdvdWxkIGFsc28gcHJvdmlkZSBmb3IgdGhlIGNpdmlsIHJlY292ZXJ5IG9mIGFzc2V0cyBiZWxvbmdpbmcgdG8gdGhvc2UgaW52b2x2ZWQgaW4gb3IgcHJvZml0aW5nIGZyb20gZ3Jvc3MgaHVtYW4gcmlnaHRzIHZpb2xhdGlvbnMuIENoYXB0ZXJzIDQgYW5kIDUgcmVsYXRlIHRvIGVuZm9yY2VtZW50IHBvd2VycyBhbmQgYSBudW1iZXIgb2YgbWlzY2VsbGFuZW91cyBwcm92aXNpb25zLiBQYXJ0IDIgd291bGQgZXh0ZW5kIHRoZSBtZWFzdXJlcyBpbiBwYXJ0IDFcdTIwMTRzdWNoIGFzIGRpc2Nsb3N1cmUgb3JkZXJzXHUyMDE0dG8gYXBwbHkgdG8gdGVycm9yaXNtIGludmVzdGlnYXRpb25zLiBJdCB3b3VsZCBhbHNvIGV4dGVuZCBwb3dlcnMgdW5kZXIgdGhlIFRlcnJvcmlzbSBBY3QgMjAwMCBhbmQgdGhlIEFudGktdGVycm9yaXNtLCBDcmltZSBhbmQgU2VjdXJpdHkgQWN0IDIwMDEgdG8gY2l2aWxpYW4gQ291bnRlciBUZXJyb3Jpc20gRmluYW5jaWFsIEludmVzdGlnYXRvcnMgZW1wbG95ZWQgYnkgdGhlIHBvbGljZS4gUGFydCAzIHdvdWxkIGNyZWF0ZSBhbiBvZmZlbmNlIG9mIGNvcnBvcmF0ZSBmYWlsdXJlIHRvIHByZXZlbnQgdGF4IGV2YXNpb24uIElmIGEgcGVyc29uIGFjdGluZyBvbiBiZWhhbGYgb2YgYSBjb21wYW55IGNyaW1pbmFsbHkgZmFjaWxpdGF0ZXMgYSB0YXggZXZhc2lvbiBvZmZlbmNlIGJ5IGFub3RoZXIgcGVyc29uLCB0aGF0IGNvbXBhbnkgd291bGQgYmUgZ3VpbHR5IG9mIHRoZSBvZmZlbmNlLCB1bmxlc3MgdGhleSBjb3VsZCBzaG93IHJlYXNvbmFibGUgbWVhc3VyZXMgd2VyZSBpbiBwbGFjZSB0byBwcmV2ZW50IHN1Y2ggYWN0aXZpdHkuIFBhcnQgNCB3b3VsZCBtYWtlIGEgbnVtYmVyIG9mIG5ldyBtaW5vciBhbmQgY29uc2VxdWVudGlhbCBhbWVuZG1lbnRzOyBmaW5hbmNpYWwgcHJvdmlzaW9uczsgYW5kIHNldCBvdXQgdGhlIHRlcnJpdG9yaWFsIGV4dGVudCBhbmQgY29tbWVuY2VtZW50IGFycmFuZ2VtZW50cyBvZiB0aGUgQmlsbFx1MjAxOXMgcHJvdmlzaW9ucy4gXG4gXG7CoCJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDMtMDNUMTY6NDA6MjIuMzk4MDgyKzAwOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgSG91c2Ugb2YgTG9yZHMgTGlicmFyeSBicmllZmluZyBwcm92aWRlcyBpbmZvcm1hdGlvbiBvbiB0aGUgQ3JpbWluYWwgRmluYW5jZXMgQmlsbCAyMDE2XHUyMDEzMTcgYWhlYWQgb2YgaXRzIHNlY29uZCByZWFkaW5nIGluIHRoZSBIb3VzZSBvZiBMb3JkcyBvbiA5IE1hcmNoIDIwMTcuIFRoZSBCaWxsIHdvdWxkIG1ha2UgcHJvdmlzaW9ucyB0byB0YWNrbGUgbW9uZXkgbGF1bmRlcmluZyBhbmQgY29ycnVwdGlvbiwgcmVjb3ZlciB0aGUgcHJvY2VlZHMgb2YgY3JpbWUsIGFuZCBjb3VudGVyIHRlcnJvcmlzdCBmaW5hbmNlLiBJdCBhbHNvIHNlZWtzIHRvIG1ha2UgcHJvdmlzaW9ucyB0byBlbmFibGUgdGhvc2Ugd2hvIHZpb2xhdGUgaHVtYW4gcmlnaHRzIHRvIGhhdmUgdGhlaXIgYXNzZXRzIGZyb3plbiBhbmQgd2lsbCBjcmVhdGUgYSBuZXcgb2ZmZW5jZSBvZiBhIGNvcnBvcmF0ZSBmYWlsdXJlIHRvIHByZXZlbnQgdGhlIGZhY2lsaXRhdGlvbiBvZiB0YXggZXZhc2lvbi4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIkxMTi0yMDE3LTAwMTEifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzM0NjcxMyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkxvcmRzIExpYnJhcnkgbm90ZXMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJDcmltaW5hbCBGaW5hbmNlcyBCaWxsOiBCcmllZmluZyBmb3IgTG9yZHMgU3RhZ2VzIiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTUzOCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkNyaW1lIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjM1IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSHVtYW4gcmlnaHRzIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NzY3IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiVGVycm9yaXNtIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzcwNzE2OCIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiSW50ZXJuYXRpb25hbCBXb21lblx1MjAxOXMgRGF5IChJV0QpLCB3aGljaCBjZWxlYnJhdGVzIHRoZSBzb2NpYWwsIGVjb25vbWljLCBjdWx0dXJhbCBhbmQgcG9saXRpY2FsIGFjaGlldmVtZW50IG9mIHdvbWVuLCBpcyBtYXJrZWQgb24gOCBNYXJjaCBlYWNoIHllYXIuIFRoZSBIb3VzZSBvZiBMb3JkcyBpcyBzY2hlZHVsZWQgdG8gaG9sZCBhIGRlYmF0ZSB0byBtYXJrIHRoZSBkYXksIGZvY3VzZWQgb24gdGhlIHJvbGUgdGhlIFVLIHBsYXlzIGluIHByb21vdGluZyBnZW5kZXIgZXF1YWxpdHkgZ2xvYmFsbHksIG9uIFRodXJzZGF5IDkgTWFyY2ggMjAxNy4gQWhlYWQgb2YgdGhlIGRlYmF0ZSwgdGhpcyBzaG9ydCBIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5IGJyaWVmaW5nIHByb3ZpZGVzIGJhY2tncm91bmQgaW5mb3JtYXRpb24gb24gSVdEOyBzdW1tYXJpc2VzIHRoZSBtb3N0IHJlY2VudCBXb3JsZCBFY29ub21pYyBGb3J1bSAoV0VGKSBHbG9iYWwgR2VuZGVyIEdhcCBJbmRleCByZXBvcnQgd2hpY2ggcmFua2VkIHRoZSBVSyB0d2VudGlldGggaW50ZXJuYXRpb25hbGx5IGZvciBnZW5kZXIgcGFyaXR5OyBwcmVzZW50cyBhIHNlbGVjdGlvbiBvZiBpbmZvcm1hdGlvbiBvbiB0aGUgc2l0dWF0aW9uIGluIHRoZSBVSyBpbiByZWxhdGlvbiB0byB0aGUgZm91ciBjcml0ZXJpYSB1c2VkIGluIHRoZSBXRUYgcmVwb3J0XHUyMDE0ZWNvbm9teSwgZWR1Y2F0aW9uLCBoZWFsdGggYW5kIHBvbGl0aWNzOyBzdW1tYXJpc2VzIHJlY2VudCBnb3Zlcm5tZW50IHN0YXRlbWVudHMgb24gaG93IHRoZSBVSyBpcyB3b3JraW5nIHRvIHByb21vdGUgZ2VuZGVyIGVxdWFsaXR5IGdsb2JhbGx5OyBhbmQgcmVjb21tZW5kcyBzb3VyY2VzIG9mIGZ1cnRoZXIgcmVhZGluZyBvbiB0aGUgc3ViamVjdCBvZiBnZW5kZXIgcGFyaXR5LCBib3RoIGluIHRoZSBVSyBhbmQgaW50ZXJuYXRpb25hbGx5LiJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDMtMDJUMTU6Mjc6MDQuMTI1Nzc3OSswMDowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIEhvdXNlIG9mIExvcmRzIExpYnJhcnkgYnJpZWZpbmcgcHJvdmlkZXMgYmFja2dyb3VuZCByZWFkaW5nIGFoZWFkIG9mIHRoZSBkZWJhdGUgdG8gbWFyayBJbnRlcm5hdGlvbmFsIFdvbWVuXHUyMDE5cyBEYXkgc2NoZWR1bGVkIHRvIHRha2UgcGxhY2Ugb24gVGh1cnNkYXkgOSBNYXJjaCAyMDE3LiJdLCAiaWRlbnRpZmllciIgOiB7Il92YWx1ZSIgOiAiTElGLTIwMTctMDAyMCJ9CiAgICAgICwgInB1Ymxpc2hlciIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgICwgInNlY3Rpb24iIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgXSwgInN1YlR5cGUiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvNDE0MDQxIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTG9yZHMgSW4gRm9jdXMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJJbnRlcm5hdGlvbmFsIFdvbWVuJ3MgRGF5IDIwMTciLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjM1IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSHVtYW4gcmlnaHRzIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NzQ2IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiU2V4IGRpc2NyaW1pbmF0aW9uIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzcwNjM3OCIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiRm9sbG93aW5nIHRoZSBDYW5hZGlhbiBTdXByZW1lIENvdXJ0XHUyMDE5cyBkZWNpc2lvbiBpbiBDYXJ0ZXIgdiBDYW5hZGEgKEF0dG9ybmV5IEdlbmVyYWwpIGluIDIwMTUsIHdoaWNoIGRlY2xhcmVkIHRoYXQgc2VjdGlvbnMgb2YgdGhlIENhbmFkaWFuIENyaW1pbmFsIENvZGUgd2VyZSBpbiB2aW9sYXRpb24gb2YgYW4gaW5kaXZpZHVhbFx1MjAxOXMgcmlnaHRzIHVuZGVyIHRoZSBDYW5hZGlhbiBDaGFydGVyIG9mIFJpZ2h0cyBhbmQgRnJlZWRvbXMsIGNoYW5nZSB0byB0aGUgQ3JpbWluYWwgQ29kZSBleGVtcHRzIGNlcnRhaW4gbWVkaWNhbCBwcmFjdGl0aW9uZXJzIGFuZCBpbmRpdmlkdWFscyBmcm9tIGN1bHBhYmxlIGhvbWljaWRlLCB0aGVyZWZvcmUgYWxsb3dpbmcgYm90aCB2b2x1bnRhcnkgZXV0aGFuYXNpYSBhbmQgYXNzaXN0ZWQgc3VpY2lkZSwgc3ViamVjdCB0byBhIG51bWJlciBvZiBjb25kaXRpb25zLiBcdTIwMThBc3Npc3RlZCBkeWluZ1x1MjAxOSBvciBcdTIwMThhc3Npc3RlZCBzdWljaWRlXHUyMDE5IGlzIHVubGF3ZnVsIGluIHRoZSBtYWpvcml0eSBvZiBVUyBzdGF0ZXMsIHNhdmUgZm9yIE9yZWdvbiwgV2FzaGluZ3RvbiwgVmVybW9udCwgQ2FsaWZvcm5pYSBhbmQgQ29sb3JhZG8sIGFsbG93IGFkdWx0IHJlc2lkZW50cyBvZiB0aGVpciBzdGF0ZSwgd2hvIGFyZSBjYXBhYmxlIG9mIHZvbHVudGFyaWx5IG1ha2luZyBkZWNpc2lvbnMgYWJvdXQgdGhlaXIgaGVhbHRoLCBhbmQgYXJlIHRlcm1pbmFsbHkgaWxsIHdpdGggYSBwcm9nbm9zaXMgb2Ygc2l4IG1vbnRocywgdG8gc2VlayBsZXRoYWwgbWVkaWNhdGlvbiBmb3Igc2VsZi1hZG1pbmlzdHJhdGlvbi4gTW9udGFuYSBwcm92aWRlcyBhIGRlZmVuY2UgZm9yIHBoeXNpY2lhbnMgb24gdGhlIGV2ZW50IHRoZXkgZmFjZSBob21pY2lkZSBjaGFuZ2VzLsKgXG4gXG5TZWN0aW9uIDIgb2YgdGhlIFN1aWNpZGUgQWN0IDE5NjEgKGFzIGFtZW5kZWQgYnkgdGhlIENvcm9uZXJzIGFuZCBKdXN0aWNlIEFjdCAyMDA5KSBpbiBFbmdsYW5kIGFuZCBXYWxlcyBtYWtlcyBpdCBjcmltaW5hbGx5IHVubGF3ZnVsIGZvciBhbiBpbmRpdmlkdWFsIHRvIHBlcmZvcm0gYW4gYWN0IGNhcGFibGUgb2YgZW5jb3VyYWdpbmcgb3IgYXNzaXN0aW5nIHRoZSBzdWljaWRlIG9yIGF0dGVtcHRlZCBzdWljaWRlIG9mIGFub3RoZXIgcGVyc29uLCB3aGVyZSB0aGF0IGluZGl2aWR1YWxcdTIwMTlzIGFjdCB3YXMgaW50ZW5kZWQgdG8gZW5jb3VyYWdlLCBhc3Npc3Qgb3IgYXR0ZW1wdCBhdCBzdWljaWRlLiBUaGVyZSBoYXZlIGJlZW4gYSBudW1iZXIgb2YgY2hhbGxlbmdlcyB0byB0aGUgU3VpY2lkZSBBY3QgMTk2MS4gSW4gMjAxNCwgdGhlIFN1cHJlbWUgQ291cnQgY29uc2lkZXJlZCB0aGUgc3RhdGUgb2YgdGhlIGxhdyBpbiB0aGUgY29udGV4dCBvZiBBcnRpY2xlIDggb2YgdGhlIEV1cm9wZWFuIENvbnZlbnRpb24gb24gSHVtYW4gUmlnaHRzLCB3aGljaCB1bHRpbWF0ZWx5IGRlZmVycmVkIHRoZSBtYXR0ZXIgdG8gUGFybGlhbWVudCBmb3IgY29uc2lkZXJhdGlvbi4gVGh1cyBmYXIsIHRoZXJlIGhhdmUgYmVlbiBhdHRlbXB0ZWQgYW1lbmRtZW50cyBhbmQgc2V2ZXJhbCBwcml2YXRlIG1lbWJlclx1MjAxOXMgYmlsbHMgaW4gcGFybGlhbWVudCB0aGF0IGhhdmUgYmVlbiB1bnN1Y2Nlc3NmdWwgaW4gY2hhbmdpbmcgdGhlIGxhdy4ifQogICAgICAsICJkYXRlIiA6IHsiX3ZhbHVlIiA6ICIyMDE3LTAzLTAxVDE1OjM4OjUxLjc0MDM2MTErMDA6MDAiLCAiX2RhdGF0eXBlIiA6ICJkYXRlVGltZSJ9CiAgICAgICwgImRlc2NyaXB0aW9uIiA6IFsiVGhpcyBIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5IGJyaWVmaW5nIHNldHMgb3V0IHRoZSBsYXcgaW4gQ2FuYWRhIGFuZCBzZWxlY3RlZCBzdGF0ZXMgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgYWhlYWQgb2YgdGhlIHF1ZXN0aW9uIGZvciBzaG9ydCBkZWJhdGUgb24gNiBNYXJjaCAyMDE3IG9uIHdoZXRoZXIgcmVjZW50IGxlZ2lzbGF0aXZlIGNoYW5nZXMgb24gYXNzaXN0ZWQgZHlpbmcgaW4gTm9ydGggQW1lcmljYSBwcm92aWRlIGFuIGFwcHJvcHJpYXRlIGJhc2lzIGZvciBsZWdpc2xhdGlvbiBpbiBFbmdsYW5kIGFuZCBXYWxlcy4gSXQgYWxzbyBwcm92aWRlcyBhbiBvdmVydmlldyBvZiB0aGUgbGF3IGFzIGl0IGN1cnJlbnRseSBzdGFuZHMgaW4gRW5nbGFuZCBhbmQgV2FsZXMsIGFzIHdlbGwgYXMgYSBicmllZiBsZWdhbCBoaXN0b3J5IG9mIHRoZSBjaGFuZ2VzIGFuZCBhdHRlbXB0cyB0byBjaGFuZ2UgaXQuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMSUYtMjAxNy0wMDE5In0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy80MTQwNDEiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBJbiBGb2N1cyJ9CiAgICAgIH0KICAgICAgLCAidGl0bGUiIDogIkFzc2lzdGVkIER5aW5nIExlZ2lzbGF0aW9uOiBOb3J0aCBBbWVyaWNhIGFuZCBFbmdsYW5kIGFuZCBXYWxlcyIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU1MzgiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJDcmltZSJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTU0MSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkNyaW1pbmFsIGxhdyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTU0NyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkRlYXRoIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NzA2IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiUGF0aWVudCByaWdodHMgYW5kIGNvbXBsYWludHMifQogICAgICB9CiAgICAgIF0sICJ0eXBlIiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3NjaGVtYS9wYXJsI1Jlc2VhcmNoQnJpZWZpbmcifQogICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9yZXNvdXJjZXMvNjkzNTk3IiwgImFic3RyYWN0IiA6IHsiX3ZhbHVlIiA6ICJUaGUgRXVyb3BlYW4gQXRvbWljIEVuZXJneSBDb21tdW5pdHkgKEV1cmF0b20pIHdhcyBlc3RhYmxpc2hlZCBhbG9uZ3NpZGUgdGhlIEV1cm9wZWFuIEVjb25vbWljIENvbW11bml0eSAoRUVDKSBpbiB0aGUgMTk1MHMuIFRoZSBVSyBiZWNhbWUgYSBtZW1iZXIgb2YgYm90aCBvbiAxIEphbnVhcnkgMTk3My4gRXVyYXRvbSBpcyBhIGRpc3RpbmN0IGxlZ2FsIGVudGl0eSBmcm9tIHRoZSBFdXJvcGVhbiBVbmlvbiwgYnV0IHRoZSB0d28gYm9kaWVzIGhhdmUgYSBzaGFyZWQgaW5zdGl0dXRpb25hbCBmcmFtZXdvcmsuXG4gXG5FdXJhdG9tIHdhcyBmb3VuZGVkIHRvIGNvbnRyaWJ1dGUgdG8gdGhlIGZvcm1hdGlvbiBhbmQgZGV2ZWxvcG1lbnQgb2YgRXVyb3BlXHUyMDE5cyBudWNsZWFyIGluZHVzdHJpZXMsIHRvIGd1YXJhbnRlZSBoaWdoIHNhZmV0eSBzdGFuZGFyZHMgYW5kIHRvIHByZXZlbnQgbnVjbGVhciBtYXRlcmlhbHMgaW50ZW5kZWQgcHJpbmNpcGFsbHkgZm9yIGNpdmlsaWFuIHVzZSBmcm9tIGJlaW5nIGRpdmVydGVkIHRvIG1pbGl0YXJ5IHVzZS4gSXQgcHJvdmlkZXMgdGhlIGJhc2lzIGZvciB0aGUgcmVndWxhdGlvbiBvZiBjaXZpbGlhbiBudWNsZWFyIGFjdGl2aXR5LCBpbXBsZW1lbnRzIGEgc3lzdGVtIG9mIHNhZmVndWFyZHMgdG8gY29udHJvbCB0aGUgdXNlIG9mIG51Y2xlYXIgbWF0ZXJpYWxzLCBjb250cm9scyB0aGUgc3VwcGx5IG9mIGZpc3NpbGUgbWF0ZXJpYWxzIHdpdGhpbiBFVSBtZW1iZXIgc3RhdGVzIGFuZCBmdW5kcyByZXNlYXJjaCBpbnRvIG51Y2xlYXIgZmlzc2lvbiBhbmQgbnVjbGVhciBmdXNpb24uIEV1cmF0b20gaGFzIHNpZ25lZCBhIG51bWJlciBvZiBpbnRlcm5hdGlvbmFsIGFncmVlbWVudHMgd2l0aCB0aGlyZCBjb3VudHJpZXMgb24gbnVjbGVhciByZXNlYXJjaCAoYm90aCBmaXNzaW9uIGFuZCBmdXNpb24pLCB0aGUgcGVhY2VmdWwgdXNlIG9mIG51Y2xlYXIgZW5lcmd5IGFuZCBudWNsZWFyIHNhZmV0eS5cbiBcblRoZSBHb3Zlcm5tZW50IGludHJvZHVjZWQgdGhlIEV1cm9wZWFuIFVuaW9uIChOb3RpZmljYXRpb24gb2YgV2l0aGRyYXdhbCkgQmlsbCBpbiB0aGUgSG91c2Ugb2YgQ29tbW9ucyBvbiAyNiBKYW51YXJ5IDIwMTcuIFRoZSBCaWxsIHdvdWxkIGdpdmUgdGhlIFByaW1lIE1pbmlzdGVyIHBvd2VyIHRvIG5vdGlmeSB0aGUgRXVyb3BlYW4gQ291bmNpbCBvZiB0aGUgVUtcdTIwMTlzIGludGVudGlvbiB0byB3aXRoZHJhdyBmcm9tIHRoZSBFdXJvcGVhbiBVbmlvbiwgdW5kZXIgdGhlIHByb2NlZHVyZSBzZXQgb3V0IGluIEFydGljbGUgNTAgb2YgdGhlIFRyZWF0eSBvbiBFdXJvcGVhbiBVbmlvbi4gVGhlIEV4cGxhbmF0b3J5IE5vdGVzIHByZXBhcmVkIGJ5IHRoZSBEZXBhcnRtZW50IGZvciBFeGl0aW5nIHRoZSBFdXJvcGVhbiBVbmlvbiBzdGF0ZSB0aGF0IHRoZSBCaWxsIGFsc28gd291bGQgYWxzbyBwcm92aWRlIGZvciB0aGUgVUsgdG8gbGVhdmUgRXVyYXRvbSwgYWx0aG91Z2ggRXVyYXRvbSBpcyBub3QgbWVudGlvbmVkIGluIHRoZSBCaWxsIGl0c2VsZi4gVGhlIEdvdmVybm1lbnRcdTIwMTlzIHBvc2l0aW9uIGlzIHRoYXQgdGhlIHdheSBpbiB3aGljaCBFdXJhdG9tIGFuZCB0aGUgRVUgYXJlIHVuaXF1ZWx5IGxlZ2FsbHkgam9pbmVkIG1lYW5zIHRoYXQgdHJpZ2dlcmluZyBBcnRpY2xlIDUwIGFsc28gZW50YWlscyBnaXZpbmcgbm90aWNlIHRvIGxlYXZlIEV1cmF0b20uIFRoaXMgaXMgZGlzcHV0ZWQgYnkgc29tZSBsYXd5ZXJzLCB3aG8gYXJndWUgdGhhdCB0aGUgbmV4dXMgYmV0d2VlbiB0aGUgVHJlYXR5IG9uIEV1cm9wZWFuIFVuaW9uIGFuZCB0aGUgRXVyYXRvbSBUcmVhdHkgY3JlYXRlcyBhIHBhcmFsbGVsIGJ1dCBzZXBhcmF0ZSBwcm9jZXNzIGZvciBsZWF2aW5nIEV1cmF0b20uXG4gXG5BbiBhbWVuZG1lbnQgdGhhdCB3b3VsZCBoYXZlIHByZXNlcnZlZCB0aGUgVUtcdTIwMTlzIG1lbWJlcnNoaXAgb2YgRXVyYXRvbSB3YXMgZGVmZWF0ZWQgYXQgdGhlIEJpbGxcdTIwMTlzIGNvbW1pdHRlZSBzdGFnZSBpbiB0aGUgSG91c2Ugb2YgQ29tbW9ucy4gU2ltaWxhciBhbWVuZG1lbnRzIGhhdmUgYmVlbiB0YWJsZWQgZm9yIHRoZSBjb21taXR0ZWUgc3RhZ2UgaW4gdGhlIEhvdXNlIG9mIExvcmRzIHdoaWNoIGlzIHNjaGVkdWxlZCB0byB0YWtlIHBsYWNlIG9uIDI3IEZlYnJ1YXJ5IGFuZCAxIE1hcmNoIDIwMTcuIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wMi0yM1QxNjoyOTo0Ny4xMzM5MDk1KzAwOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoZSBHb3Zlcm5tZW50IGhhcyBzdGF0ZWQgdGhhdCBsZWF2aW5nIHRoZSBFVSBhbHNvIG1lYW5zIGxlYXZpbmcgdGhlIEV1cm9wZWFuIEF0b21pYyBFbmVyZ3kgQ29tbXVuaXR5IChFdXJhdG9tKS4gVGhpcyBMb3JkcyBMaWJyYXJ5IGJyaWVmaW5nIGV4YW1pbmVzIHdoYXQgRXVyYXRvbSBkb2VzIGFuZCB0aGUgcG9zc2libGUgaW1wbGljYXRpb25zIG9mIGxlYXZpbmcgRXVyYXRvbSBmb3IgdGhlIGZ1dHVyZSBvZiB0aGUgbnVjbGVhciBpbmR1c3RyeSBhbmQgbnVjbGVhciByZXNlYXJjaCBpbiB0aGUgVUsuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMTE4tMjAxNy0wMDEwIn0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8zNDY3MTMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBMaWJyYXJ5IG5vdGVzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiTGVhdmluZyB0aGUgRXVyb3BlYW4gVW5pb246IEV1cmF0b20iLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTg5IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiRVUgZ3JhbnRzIGFuZCBsb2FucyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTU5MCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkVVIGluc3RpdHV0aW9ucyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTU5MSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkVVIGxhdyBhbmQgdHJlYXRpZXMifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2OTIiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJOdWNsZWFyIHBvd2VyIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NzM3IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiUmVzZWFyY2ggYW5kIGlubm92YXRpb24ifQogICAgICB9CiAgICAgIF0sICJ0eXBlIiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3NjaGVtYS9wYXJsI1Jlc2VhcmNoQnJpZWZpbmcifQogICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9yZXNvdXJjZXMvNjkyMjM3IiwgImFic3RyYWN0IiA6IHsiX3ZhbHVlIiA6ICJUaGUgQnJvYWRjYXN0aW5nIChSYWRpbyBNdWx0aXBsZXggU2VydmljZXMpIEJpbGwgaXMgYSBwcml2YXRlIG1lbWJlclx1MjAxOXMgYmlsbCBpbnRyb2R1Y2VkIGluIHRoZSBIb3VzZSBvZiBDb21tb25zIGJ5IEtldmluIEZvc3RlciAoQ29uc2VydmF0aXZlIE1QIGZvciBUb3JiYXkpIG9uIDQgSnVseSAyMDE2LiBUaGUgQmlsbCB3YXMgZHJhZnRlZCBieSB0aGUgRGVwYXJ0bWVudCBmb3IgQ3VsdHVyZSwgTWVkaWEgYW5kIFNwb3J0IChEQ01TKcKgIGFuZCBjb21wbGV0ZWQgaXRzIHN0YWdlcyBpbiB0aGUgSG91c2Ugb2YgQ29tbW9ucyB3aXRob3V0IGFtZW5kbWVudC4gVGhlIEJpbGwgaXMgc3BvbnNvcmVkIGluIHRoZSBIb3VzZSBvZiBMb3JkcyBieSBCYXJvbmVzcyBCbG9vbWZpZWxkIG9mIEhpbnRvbiBXYWxkcmlzdCAoQ29uc2VydmF0aXZlKSBhbmQgaXMgc2NoZWR1bGVkIGZvciBpdHMgc2Vjb25kIHJlYWRpbmcgb24gMjQgRmVicnVhcnkgMjAxNy5cbiBcblRoZSBCaWxsIHNlZWtzIHRvIGVuYWJsZSBjb21tdW5pdHkgcmFkaW8gc3RhdGlvbnMgaW4gdGhlIFVLIHRvIGJyb2FkY2FzdCBvbiB0aGUgRGlnaXRhbCBBdWRpbyBCcm9hZGNhc3RpbmcgKERBQikgcmFkaW8gcGxhdGZvcm0uIFRvIGVuYWJsZSB0aGlzLCB0aGUgQmlsbCB3b3VsZCBjcmVhdGUgcG93ZXJzIHRvIG1vZGlmeSB0aGUgY3VycmVudCByZWd1bGF0b3J5IGZyYW1ld29yayBmb3IgdGhlIGxpY2Vuc2luZyBvZiByYWRpbyBtdWx0aXBsZXggc2VydmljZXMsIGFuZCBwcm92aWRlIGZvciBzbWFsbC1zY2FsZSByYWRpbyBtdWx0aXBsZXggc2VydmljZXMuXG4gXG5BbGwgREFCIHJhZGlvIHNlcnZpY2VzIGluIHRoZSBVSyBhcmUgYnJvYWRjYXN0IGFzIFx1MjAxOG11bHRpcGxleGVzXHUyMDE5LiBUaGlzIGlzIHdoZXJlIHNvdW5kIHNpZ25hbHMgZnJvbSBhIG51bWJlciBvZiBpbmRpdmlkdWFsIHJhZGlvIHN0YXRpb25zIGFyZSBjb21iaW5lZCB0b2dldGhlciBhbmQgdHJhbnNtaXR0ZWQgYXMgZGlnaXRhbCBkYXRhLiBVbmxpa2UgYW5hbG9ndWUgcmFkaW8gKEZNIGFuZCBBTSksIHRoZSBEQUIgbXVsdGlwbGV4IGNhbiBiZSBicm9hZGNhc3QgZnJvbSBtYW55IGRpZmZlcmVudCB0cmFuc21pdHRlcnMgdXNpbmcgdGhlIHNhbWUgdHJhbnNtaXNzaW9uIGZyZXF1ZW5jeS4gREFCIGlzIHRoZXJlZm9yZSBhIG1vcmUgZWZmaWNpZW50IHVzZSBvZiByYWRpbyBzcGVjdHJ1bSB0aGFuIGFuYWxvZ3VlLCBhbmQgZW5hYmxlcyBtb3JlIHJhZGlvIHNlcnZpY2VzIHRvIGJlIGRlbGl2ZXJlZCB0byBsaXN0ZW5lcnMuXG4gXG5SYWRpbyBtdWx0aXBsZXggc2VydmljZXMgYXJlIGxpY2Vuc2VkIGJ5IE9mY29tIGFuZCwgY3VycmVudGx5LCB0aGUgbGljZW5jZXMgYXJlIGF3YXJkZWQgZWl0aGVyIGZvciBuYXRpb25hbCBjb3ZlcmFnZSBvciBmb3IgbG9jYWwgY291bnR5LXNpemVkIGNvdmVyYWdlLiBBY2NvcmRpbmcgdG8gT2Zjb20sIHRoZSBjb3N0cyBvZiB0aGVzZSBjYXJyaWFnZXMgYXJlIG5vdCBlY29ub21pY2FsIGZvciBzdGF0aW9ucyB3aGljaCBzZWVrIHRvIHNlcnZlIHNtYWxsZXIgdG93bnMgb3IgY29tbXVuaXRpZXMuwqAgVGhlIEJpbGwgd291bGQgZXNzZW50aWFsbHkgY3JlYXRlIGEgdGhpcmQgdGllciBpbiB0aGUgc3lzdGVtIG9mIHJhZGlvIG11bHRpcGxleGVzOiBuZXcgc21hbGwgc2NhbGUgcmFkaW8gbXVsdGlwbGV4ZXMgZm9yIHN1Yi1jb3VudHkgbGV2ZWwgdHJhbnNtaXNzaW9uIChvciB3aWRlciB0cmFuc21pc3Npb24gd2hlcmUgdGhlcmUgd2FzIG5vIGV4aXN0aW5nIGxvY2FsIG11bHRpcGxleCBsaWNlbnNlZSkuXG4gXG5UaGlzIGJyaWVmaW5nIHByb3ZpZGVzIGEgc2hvcnQgb3ZlcnZpZXcgb2YgdGhlIEJpbGwsIGl0cyBrZXkgcHJvdmlzaW9ucywgYW5kIGEgc3VtbWFyeSBvZiBpdHMgcGFzc2FnZSB0aHJvdWdoIHRoZSBIb3VzZSBvZiBDb21tb25zLiJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDItMjFUMTI6NDU6NDUuNTE0NjgyNiswMDowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIExvcmRzIExpYnJhcnkgYnJpZWZpbmcgcHJvdmlkZXMgYSBzaG9ydCBvdmVydmlldyBvZiB0aGUgQnJvYWRjYXN0aW5nIChSYWRpbyBNdWx0aXBsZXggU2VydmljZXMpIEJpbGwgKEhMIEJpbGwgOTkgb2YgMjAxNlx1MjAxMzE3KSwgaXRzIGtleSBwcm92aXNpb25zLCBhbmQgYSBzdW1tYXJ5IG9mIGl0cyBwYXNzYWdlIHRocm91Z2ggdGhlIEhvdXNlIG9mIENvbW1vbnMgaW4gYWR2YW5jZSBvZiB0aGUgQmlsbCdzIHNlY29uZCByZWFkaW5nIGluIHRoZSBIb3VzZSBvZiBMb3JkcyBvbiBGcmlkYXkgMjQgRmVicnVhcnkgMjAxNy4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIkxJRi0yMDE3LTAwMTgifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzQxNDA0MSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkxvcmRzIEluIEZvY3VzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiQnJvYWRjYXN0aW5nIChSYWRpbyBNdWx0aXBsZXggU2VydmljZXMpIEJpbGw6IEJyaWVmaW5nIGZvciBMb3JkcyBTdGFnZXMiLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTA3IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQnJvYWRjYXN0aW5nIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzY5MTQyNCIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiVGhlIFBhcmtpbmcgUGxhY2VzIChWYXJpYXRpb24gb2YgQ2hhcmdlcykgQmlsbCBpcyBhIHByaXZhdGUgbWVtYmVyJ3MgYmlsbCwgd2hpY2ggaGFzIGNvbXBsZXRlZCBhbGwgb2YgaXRzIHN0YWdlcyBpbiB0aGUgSG91c2Ugb2YgQ29tbW9ucywgYW5kIGlzIGR1ZSB0byBoYXZlIGl0cyBzZWNvbmQgcmVhZGluZyBpbiB0aGUgSG91c2Ugb2YgTG9yZHMgb24gMjQgRmVicnVhcnkgMjAxNy4gT25seSB0aHJlZSBjbGF1c2VzIGxvbmcsIHRoZSBhaW0gb2YgdGhlIEJpbGwgaXMgdG8gYWxsb3cgbG9jYWwgYXV0aG9yaXRpZXMgdG8gbW9yZSBlYXNpbHkgbG93ZXIgcGFya2luZyBjaGFyZ2VzIGluIGFyZWFzIGZvciB3aGljaCB0aGV5IGFyZSByZXNwb25zaWJsZS4gSWYgYSBsb2NhbCBhdXRob3JpdHkgd2lzaGVzIHRvIHJhaXNlIGNoYXJnZXMsIHRoZW4gdGhlIEJpbGwgd291bGQgcmVxdWlyZSB0aGF0IHRoZXkgY29uc3VsdCBpbnRlcmVzdGVkIHBhcnRpZXMuIFRoZSBCaWxsIHdvdWxkIGFwcGx5IHRvIEVuZ2xhbmQgb25seSwgYW5kIGhhcyB0aGUgc3VwcG9ydCBvZiB0aGUgR292ZXJubWVudMKgXG4gXG5VbmRlciBjdXJyZW50IGxlZ2lzbGF0aW9uLCBsb2NhbCBhdXRob3JpdGllcyBtdXN0IHVzZSB0aGUgc2FtZSBwcm9jZWR1cmUgcmVnYXJkbGVzcyBvZiB3aGV0aGVyIHRoZXkgd2FudCB0byByYWlzZSBvciBsb3dlciBwYXJraW5nIGNoYXJnZXMgYXQgYm90aCBvZmYtc3RyZWV0IGFuZCBvbi1zdHJlZXQgcGFya2luZyBwbGFjZXMgaW4gdGhlaXIgYXJlYS4gVGhpcyBpbmNsdWRlcyBwdWJsaXNoaW5nIG5vdGljZSBvZiB0aGUgdmFyaWF0aW9uIGluIGEgbmV3c3BhcGVyIGJlZm9yZSB0aGUgY2hhbmdlcyBjb21lIGludG8gZm9yY2U7IHNwZWNpZnlpbmcgYWxsIGNoYW5nZXMgYW5kIHRpbWluZyBvZiB0aG9zZSBjaGFuZ2VzOyB3aXRoIHJlZ2FyZCB0byBvZmYtc3RyZWV0IHBhcmtpbmcsIGRpc3BsYXlpbmcgYSBub3RpY2UgaW4gdGhlIHBhcmtpbmcgcGxhY2U7IGFuZCB3aXRoIHJlZ2FyZCB0byBvbi1zdHJlZXQgcGFya2luZyBkaXNwbGF5aW5nIGEgc2ltaWxhciBub3RpY2UgaW4gcHJvbWluZW50IHBvc2l0aW9ucyBhYm91dCB0aGUgcm9hZC4gVGhlIFBhcmtpbmcgUGxhY2VzIChWYXJpYXRpb24gb2YgQ2hhcmdlcykgQmlsbCB3b3VsZCBhbWVuZCBzZWN0aW9ucyAzNUMgYW5kIDQ2QSBvZiB0aGUgUm9hZCBUcmFmZmljIFJlZ3VsYXRpb24gQWN0IDE5ODQgdG8gYWxsb3cgZm9yIGEgZGlmZmVyZW50IHByb2NlZHVyZSB0byBiZSBzcGVjaWZpZWQgYnkgcmVndWxhdGlvbiwgdGhlIHB1cnBvc2Ugb2Ygd2hpY2ggd291bGQgYmUgdG8gbWFrZSBpdCBsZXNzIG9uZXJvdXMgdG8gbG93ZXIgY2hhcmdlcywgYnV0IHJlcXVpcmUgdGhhdCBhIGxvY2FsIGF1dGhvcml0eSBtdXN0IGhvbGQgYSBjb25zdWx0YXRpb24gc2hvdWxkIHRoZXkgd2lzaCB0byByYWlzZSB0aGVtLiJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDItMjBUMTQ6MjQ6NTYuMDE4NDY5NSswMDowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIEhvdXNlIG9mIExvcmRzIExpYnJhcnkgYnJpZWZpbmcgcHJvdmlkZXMgYmFja2dyb3VuZCByZWFkaW5nIGluIGFkdmFuY2Ugb2YgdGhlIHNlY29uZCByZWFkaW5nIG9mIHRoZSBQYXJraW5nIFBsYWNlcyAoVmFyaWF0aW9uIG9mIENoYXJnZXMpIEJpbGwgaW4gdGhlIEhvdXNlIG9mIExvcmRzIG9uIEZyaWRheSAyNCBGZWJydWFyeSAyMDE3LiJdLCAiaWRlbnRpZmllciIgOiB7Il92YWx1ZSIgOiAiTElGLTIwMTctMDAxNyJ9CiAgICAgICwgInB1Ymxpc2hlciIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgICwgInNlY3Rpb24iIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgXSwgInN1YlR5cGUiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvNDE0MDQxIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTG9yZHMgSW4gRm9jdXMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJQYXJraW5nIFBsYWNlcyAoVmFyaWF0aW9uIG9mIENoYXJnZXMpIEJpbGw6IEJyaWVmaW5nIGZvciBMb3JkcyBTdGFnZXMiLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjY2IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTG9jYWwgZ292ZXJubWVudCJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTczOCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlJvYWRzIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzY4OTUyMCIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiVGhlIEV1cm9wZWFuIFVuaW9uIChOb3RpZmljYXRpb24gb2YgV2l0aGRyYXdhbCkgQmlsbCB3YXMgaW50cm9kdWNlZCBpbiB0aGUgSG91c2Ugb2YgTG9yZHMgb24gOCBGZWJydWFyeSAyMDE3IGFuZCBpcyBzY2hlZHVsZWQgdG8gaGF2ZSBpdHMgc2Vjb25kIHJlYWRpbmcgb24gMjAgYW5kIDIxIEZlYnJ1YXJ5IDIwMTcuIEl0IHdvdWxkIGdpdmUgdGhlIFByaW1lIE1pbmlzdGVyIHBvd2VyIHRvIG5vdGlmeSB0aGUgRXVyb3BlYW4gQ291bmNpbCBvZiB0aGUgVUtcdTIwMTlzIGludGVudGlvbiB0byB3aXRoZHJhdyBmcm9tIHRoZSBFdXJvcGVhbiBVbmlvbiwgdW5kZXIgdGhlIHByb2NlZHVyZSBzZXQgb3V0IGluIEFydGljbGUgNTAgb2YgdGhlIFRyZWF0eSBvbiBFdXJvcGVhbiBVbmlvbi4gVGhlIEV4cGxhbmF0b3J5IE5vdGVzIHN0YXRlIHRoYXQgdGhlIEJpbGwgd291bGQgYWxzbyBwcm92aWRlIGZvciB0aGUgVUsgdG8gbGVhdmUgdGhlIEV1cm9wZWFuIEF0b21pYyBFbmVyZ3kgQ29tbXVuaXR5IChFdXJhdG9tKS4gVGhlIEdvdmVybm1lbnQgaGFzIHN0YXRlZCBpdHMgaW50ZW50aW9uIHRvIHRyaWdnZXIgQXJ0aWNsZSA1MCBiZWZvcmUgdGhlIGVuZCBvZiBNYXJjaCAyMDE3IGFuZCBpdCBoYXMgc2V0IG91dCBhIGNhc2UgZm9yIGZhc3QtdHJhY2tpbmcgdGhlIEJpbGwgdG8gbWVldCB0aGlzIHRpbWV0YWJsZS5cbiBcblRoZSBHb3Zlcm5tZW50IGhhcyBpbnRyb2R1Y2VkIHRoaXMgQmlsbCBmb2xsb3dpbmcgYSBTdXByZW1lIENvdXJ0IHJ1bGluZyB0aGF0IGFuIEFjdCBvZiBQYXJsaWFtZW50IGlzIHJlcXVpcmVkIHRvIGdpdmUgbm90aWNlIG9mIHRoZSBVS1x1MjAxOXMgZGVjaXNpb24gdG8gd2l0aGRyYXcgZnJvbSB0aGUgRXVyb3BlYW4gVW5pb24uIFRoZSBTdXByZW1lIENvdXJ0IGFsc28gY29uY2x1ZGVkIHRoYXQgdGhlIFNld2VsIENvbnZlbnRpb24gKGFjY29yZGluZyB0byB3aGljaCB0aGUgV2VzdG1pbnN0ZXIgUGFybGlhbWVudCBkb2VzIG5vdCBub3JtYWxseSBsZWdpc2xhdGUgd2l0aCByZWdhcmQgdG8gZGV2b2x2ZWQgbWF0dGVycyBleGNlcHQgd2l0aCB0aGUgYWdyZWVtZW50IG9mIHRoZSBkZXZvbHZlZCBsZWdpc2xhdHVyZSkgZG9lcyBub3QgZ2l2ZSByaXNlIHRvIGEgbGVnYWxseSBlbmZvcmNlYWJsZSBvYmxpZ2F0aW9uLiBUaGUgR292ZXJubWVudCBoYXMgc3RhdGVkIHRoYXQgdGhlIEJpbGwgZG9lcyBub3QgY29udGFpbiBhbnkgcHJvdmlzaW9uIHdoaWNoIGdpdmVzIHJpc2UgdG8gdGhlIG5lZWQgZm9yIGEgbGVnaXNsYXRpdmUgY29uc2VudCBtb3Rpb24gaW4gdGhlIGRldm9sdmVkIGxlZ2lzbGF0dXJlcy4gT24gNyBGZWJydWFyeSAyMDE3LCB0aGUgU2NvdHRpc2ggUGFybGlhbWVudCB2b3RlZCBpbiBmYXZvdXIgb2YgYSBtb3Rpb24gdGhhdCB0aGUgQmlsbCBzaG91bGQgbm90IHByb2NlZWQsIGFsdGhvdWdoIHRoaXMgaGFzIG5vIGxlZ2FsIGZvcmNlIHRvIGJsb2NrIHRoZSBCaWxsLlxuIFxuVGhpcyBicmllZmluZyBzdW1tYXJpc2VzIHRoZSBkZWJhdGVzIHRoYXQgdG9vayBwbGFjZSBvbiB0aGUgQmlsbCBpbiB0aGUgSG91c2Ugb2YgQ29tbW9ucy4gVGhlIEJpbGwgd2FzIGdpdmVuIGl0cyBzZWNvbmQgcmVhZGluZyBieSA0OTggdm90ZXMgdG8gMTE0LCBhIG1ham9yaXR5IG9mIDM4NC4gRGl2aXNpb25zIHdlcmUgaGVsZCBhdCBjb21taXR0ZWUgc3RhZ2Ugb246IGFycmFuZ2VtZW50cyBmb3IgcGFybGlhbWVudGFyeSBzY3J1dGlueSBvZiB0aGUgQnJleGl0IG5lZ290aWF0aW9uczsgdGhlIHN0YXR1cyBvZiBFVSBuYXRpb25hbHMgaW4gdGhlIFVLOyB0aGUgcm9sZSBhbmQgc3RhdHVzIG9mIHRoZSBKb2ludCBNaW5pc3RlcmlhbCBDb21taXR0ZWUgb24gRVUgTmVnb3RpYXRpb25zOyBFVSBmdW5kaW5nIGluIFdhbGVzOyBOb3J0aGVybiBJcmVsYW5kIGFuZCB0aGUgR29vZCBGcmlkYXkgQWdyZWVtZW50OyBwYXJsaWFtZW50YXJ5IHZvdGVzIHRvIGFwcHJvdmUgZGVhbHMgbmVnb3RpYXRlZCB3aXRoIHRoZSBFVTsgXHUyMDE4cmVzZXR0aW5nXHUyMDE5IHRoZSBVS1x1MjAxOXMgbWVtYmVyc2hpcCBvZiB0aGUgRVUgaWYgYSBkZWFsIHdhcyBub3QgbmVnb3RpYXRlZCB3aXRoaW4gdHdvIHllYXJzOyB0aGUgY2FzZSBmb3IgYSBkZWFsIHRvIGJlIGFwcHJvdmVkIGJ5IHRoZSBCcml0aXNoIHBlb3BsZSBpbiBhIHJlZmVyZW5kdW07IHJlcXVpcmluZyB0aGUgR292ZXJubWVudCB0byByZXBvcnQgb24gdGhlIGVjb25vbWljIGFuZCBmaW5hbmNpYWwgaW1wYWN0IG9mIEJyZXhpdDsgc2V0dGluZyBzdGF0dXRvcnkgbmVnb3RpYXRpbmcgb2JqZWN0aXZlczsgbWFpbnRhaW5pbmcgRVUgdGF4IGF2b2lkYW5jZSBhbmQgZXZhc2lvbiBtZWFzdXJlczsgdGhlIHJvbGUgb2YgR2licmFsdGFyIGluIHRoZSBCcmV4aXQgcHJvY2VzczsgYW5kIHRoZSBwcm9jZXNzIGZvciBsZWF2aW5nIEV1cmF0b20uIEFsbCBvZiB0aGUgbmV3IGNsYXVzZXMgYW5kIGFtZW5kbWVudHMgd2VyZSBkZWZlYXRlZCBhbmQgdGhlIEJpbGwgd2FzIG5vdCBhbWVuZGVkIGF0IGNvbW1pdHRlZSBzdGFnZS4gVGhlIEdvdmVybm1lbnQgZ2F2ZSBhbiB1bmRlcnRha2luZyB0aGF0IGJvdGggSG91c2VzIG9mIFBhcmxpYW1lbnQgd291bGQgYmUgZ2l2ZW4gYSB2b3RlIG9uIHRoZSB3aXRoZHJhd2FsIGFycmFuZ2VtZW50cyBhbmQgdGhlIFVLXHUyMDE5cyBmdXR1cmUgcmVsYXRpb25zaGlwIHdpdGggdGhlIEV1cm9wZWFuIFVuaW9uIGJlZm9yZSBhbnkgYWdyZWVtZW50IHdhcyBjb25jbHVkZWQsIGFuZCBpdCBleHBlY3RlZCB0byBob2xkIHRoZSB2b3RlIGJlZm9yZSB0aGUgRXVyb3BlYW4gUGFybGlhbWVudCBkZWJhdGVkIGFuZCB2b3RlZCBvbiB0aGUgZmluYWwgYWdyZWVtZW50LiBIb3dldmVyLCB0aGUgR292ZXJubWVudCBzYWlkIHRoYXQgdGhlcmUgd2FzIFx1MjAxY25vIG5lZWRcdTIwMWQgdG8gYW1lbmQgdGhlIEJpbGwgdG8gcmVmbGVjdCB0aGlzLiBLZWlyIFN0YXJtZXIgZGVzY3JpYmVkIHRoaXMgYXMgYSBcdTIwMWN2ZXJ5IGltcG9ydGFudCBjb25jZXNzaW9uXHUyMDFkLCBidXQgb3RoZXIgTVBzIHdlcmUgbGVzcyBjb252aW5jZWQgdGhhdCBpdCByZXByZXNlbnRlZCBhbiBhZHZhbmNlIG9uIHdoYXQgdGhlIEdvdmVybm1lbnQgaGFkIHByZXZpb3VzbHkgcHJvbWlzZWQuIFRoZSBCaWxsIHdhcyBnaXZlbiBpdHMgdGhpcmQgcmVhZGluZyBieSA0OTQgdm90ZXMgdG8gMTIyLCBhIG1ham9yaXR5IG9mIDM3Mi5cbiBcbsKgXG4gXG7CoCJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDItMjBUMTE6NDM6MzAuNzYxMDk4MSswMDowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIExvcmRzIExpYnJhcnkgYnJpZWZpbmcgcHJvdmlkZXMgaW5mb3JtYXRpb24gb24gdGhlIEV1cm9wZWFuIFVuaW9uIChOb3RpZmljYXRpb24gb2YgV2l0aGRyYXdhbCkgQmlsbCBhaGVhZCBvZiBpdHMgc2Vjb25kIHJlYWRpbmcgb24gMjAgYW5kIDIxIEZlYnJ1YXJ5IDIwMTcuICBUaGUgQmlsbCB3b3VsZCBnaXZlIHRoZSBQcmltZSBNaW5pc3RlciBwb3dlciB0byBub3RpZnkgdGhlIEV1cm9wZWFuIENvdW5jaWwgb2YgdGhlIFVLXHUyMDE5cyBpbnRlbnRpb24gdG8gd2l0aGRyYXcgZnJvbSB0aGUgRXVyb3BlYW4gVW5pb24sIHVuZGVyIHRoZSBwcm9jZWR1cmUgc2V0IG91dCBpbiBBcnRpY2xlIDUwIG9mIHRoZSBUcmVhdHkgb24gRXVyb3BlYW4gVW5pb24uIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMTE4tMjAxNy0wMDA5In0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8zNDY3MTMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBMaWJyYXJ5IG5vdGVzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiRXVyb3BlYW4gVW5pb24gKE5vdGlmaWNhdGlvbiBvZiBXaXRoZHJhd2FsKSBCaWxsOiBCcmllZmluZyBmb3IgTG9yZHMgU3RhZ2VzIiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTUzMiIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkNvbnN0aXR1dGlvbiJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTU5MCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkVVIGluc3RpdHV0aW9ucyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTU5MSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkVVIGxhdyBhbmQgdHJlYXRpZXMifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2MzYiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJJbW1pZ3JhdGlvbiJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTY1MSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkludGVybmF0aW9uYWwgdHJhZGUifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2NTkiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMZWdpc2xhdGl2ZSBwcm9jZXNzIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1Njc5IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTWluaXN0ZXJzIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjgzIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTmF0aW9uYWwgQXNzZW1ibHkgZm9yIFdhbGVzIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjkxIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTm9ydGhlcm4gSXJlbGFuZCBBc3NlbWJseSJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTY5MiIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIk51Y2xlYXIgcG93ZXIifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU3MDMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJQYXJsaWFtZW50In0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NzQzIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiU2NvdHRpc2ggUGFybGlhbWVudCJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTc2NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlRheGF0aW9uIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzY4OTEwMiIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiVGhlIEhvbWVsZXNzbmVzcyBSZWR1Y3Rpb24gQmlsbCBpcyBhIHByaXZhdGUgbWVtYmVyXHUyMDE5cyBiaWxsIGludHJvZHVjZWQgYnkgQm9iIEJsYWNrbWFuIChDb25zZXJ2YXRpdmUgTVAgZm9yIEhhcnJvdyBFYXN0KS4gSXQgaGFzIGNvbXBsZXRlZCBhbGwgaXRzIHN0YWdlcyBpbiB0aGUgSG91c2Ugb2YgQ29tbW9ucyBhbmQgcmVjZWl2ZWQgZmlyc3QgcmVhZGluZyBpbiB0aGUgSG91c2Ugb2YgTG9yZHMgb24gMzAgSmFudWFyeSAyMDE3LiBUaGUgQmlsbCBpcyBzY2hlZHVsZWQgdG8gaGF2ZSBpdHMgc2Vjb25kIHJlYWRpbmcgb24gMjQgRmVicnVhcnkgMjAxNy4gVGhpcyBicmllZmluZyBwcm92aWRlcyBhIHNob3J0IG92ZXJ2aWV3IG9mIHRoZSBjb250ZW50cyBvZiB0aGUgQmlsbCwgaXRzIHByb2dyZXNzIHRocm91Z2ggdGhlIEhvdXNlIG9mIENvbW1vbnMgYW5kIGV4dGVybmFsIGNvbW1lbnRhcnkuwqDCoMKgXG4gXG5UaGUgQmlsbCBhaW1zIHRvIHJlZm9jdXMgbG9jYWwgYXV0aG9yaXR5IGVmZm9ydHMgb24gdGhlIHByZXZlbnRpb24gb2YgaG9tZWxlc3NuZXNzLiBJdCBwbGFjZXMgZHV0aWVzIG9uIGxvY2FsIGhvdXNpbmcgYXV0aG9yaXRpZXMgdG8gaW50ZXJ2ZW5lIGF0IGVhcmxpZXIgc3RhZ2VzIGluIG9yZGVyIHRvIHByZXZlbnQgaG9tZWxlc3NuZXNzIGFuZCB0byB0YWtlIHJlYXNvbmFibGUgc3RlcHMgdG8gaGVscCB0aG9zZSB3aG8gYmVjb21lIGhvbWVsZXNzIHRvIHNlY3VyZSBhY2NvbW1vZGF0aW9uLiBUaGUgQmlsbCBhbHNvIHJlcXVpcmVzIGxvY2FsIGhvdXNpbmcgYXV0aG9yaXRpZXMgdG8gcHJvdmlkZSBuZXcgaG9tZWxlc3NuZXNzIHNlcnZpY2VzIHRvIHBlb3BsZSBpbiB0aGVpciBhcmVhLCBleHBhbmRpbmcgb24gdGhlIGNhdGVnb3JpZXMgb2YgcGVvcGxlIHRoZXkgYXJlIHJlcXVpcmVkIHRvIGhlbHAgZmluZCBhY2NvbW1vZGF0aW9uLlxuIFxuQWNjb3JkaW5nIHRvIHRoZSBPZmZpY2UgZm9yIE5hdGlvbmFsIFN0YXRpc3RpY3MgKE9OUyksIGxvY2FsIGF1dGhvcml0aWVzIGFjY2VwdGVkIDE0LDkzMCBob3VzZWhvbGRzIGFzIGJlaW5nIHN0YXR1dG9yaWx5IGhvbWVsZXNzIGJldHdlZW4gMSBKdWx5IGFuZCAzMCBTZXB0ZW1iZXIgMjAxNi4gVGhpcyByZXByZXNlbnRlZCBhIGZhbGwgb2Ygb25lIHBlcmNlbnQgb24gdGhlIHByZXZpb3VzIHF1YXJ0ZXIgYnV0IHVwIHR3byBwZXJjZW50IG9uIHRoZSBzYW1lIHF1YXJ0ZXIgb2YgbGFzdCB5ZWFyLiBUaGUgT05TIGFsc28gcmVwb3J0IHRoYXQgdGhlIHRvdGFsIG51bWJlciBvZiBob3VzZWhvbGRzIGluIHRlbXBvcmFyeSBhY2NvbW1vZGF0aW9uIGFzIG9mIDMwIFNlcHRlbWJlciAyMDE2IHdhcyA3NCw2MzAsIHJlcHJlc2VudGluZyBhIDU1IHBlcmNlbnQgaW5jcmVhc2Ugb24gdGhlIGxvdyBvZiA0OCwwMTAgb24gMzEgRGVjZW1iZXIgMjAxMC4ifQogICAgICAsICJkYXRlIiA6IHsiX3ZhbHVlIiA6ICIyMDE3LTAyLTEzVDE1OjQxOjU3Ljg4MzAxNjgrMDA6MDAiLCAiX2RhdGF0eXBlIiA6ICJkYXRlVGltZSJ9CiAgICAgICwgImRlc2NyaXB0aW9uIiA6IFsiVGhpcyBIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5IGJyaWVmaW5nIHByb3ZpZGVzIGJhY2tncm91bmQgcmVhZGluZyBpbiBhZHZhbmNlIG9mIHRoZSBzZWNvbmQgcmVhZGluZyBvZiB0aGUgSG9tZWxlc3NuZXNzIFJlZHVjdGlvbiBCaWxsIGluIHRoZSBIb3VzZSBvZiBMb3JkcyBvbiBGcmlkYXkgMjQgRmVicnVhcnkgMjAxNy4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIkxJRi0yMDE3LTAwMTYifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzQxNDA0MSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkxvcmRzIEluIEZvY3VzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiSG9tZWxlc3NuZXNzIFJlZHVjdGlvbiBCaWxsOiBCcmllZmluZyBmb3IgTG9yZHMgU3RhZ2VzIiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTYyNiIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvbWVsZXNzbmVzcyJ9CiAgICAgIH0KICAgICAgXSwgInR5cGUiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvc2NoZW1hL3BhcmwjUmVzZWFyY2hCcmllZmluZyJ9CiAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Jlc291cmNlcy82ODY1ODEiLCAiYWJzdHJhY3QiIDogeyJfdmFsdWUiIDogIkJhbmtzIGFuZCBvdGhlciBmaW5hbmNpYWwgaW5zdGl0dXRpb25zIGFyZSByZXF1aXJlZCB0byBjb25kdWN0IGVuaGFuY2VkIGN1c3RvbWVyIGR1ZSBkaWxpZ2VuY2Ugd2hlbiBkZWFsaW5nIHdpdGggcGVvcGxlIGlkZW50aWZpZWQgYXMgUEVQcy4gVGhpcyBpcyBpbnRlbmRlZCB0byBoZWxwIHRyYWNlIGFuZCBwdXQgYSBzdG9wIHRvIHRoZSBmaW5hbmNpbmcgb2YgdGVycm9yaXNtLiBJdCBoYXMgYmVlbiBhcmd1ZWQgdGhhdCwgaW4gc29tZSBjYXNlcywgZmluYW5jaWFsIGluc3RpdHV0aW9ucyBoYXZlIGRlY2xpbmVkIHRvIGhhbmRsZSBhY2NvdW50cyBvZiBVSyBQRVBzIGFzIGEgcmVzdWx0LiBUaGlzIHByb2Nlc3Mgb2Ygd2l0aGRyYXdpbmcgZmluYW5jaWFsIHNlcnZpY2VzIGZvciBQRVBcdTIwMTlzIGhhcyBiZWVuIGRlc2NyaWJlZCBhcyBcdTIwMThkZS1yaXNraW5nXHUyMDE5LlxuIFxuVGhlIGN1cnJlbnQgYW50aS1tb25leSBsYXVuZGVyaW5nIHJ1bGVzIGFyZSBzZXQgb3V0IGluIE1vbmV5IExhdW5kZXJpbmcgUmVndWxhdGlvbnMgMjAwNywgd2hpY2ggaW1wbGVtZW50IHRoZSBFVVx1MjAxOXMgVGhpcmQgTW9uZXkgTGF1bmRlcmluZyBEaXJlY3RpdmUgaW4gdGhlIFVLLiBUaGUgRm91cnRoIE1vbmV5IExhdW5kZXJpbmcgRGlyZWN0aXZlIHN0YXRlcyB0aGF0IHRoZSBlbmhhbmNlZCBkdWUgZGlsaWdlbmNlIG1lYXN1cmVzLCBjdXJyZW50IHJlcXVpcmVkIGZvciBmb3JlaWduIFBFUHMsIHNob3VsZCBiZSBleHRlbmRlZCB0byBkb21lc3RpYyBQRVBzLiBUaGlzIGRpcmVjdGl2ZSBoYXMgeWV0IHRvIGJlIGFncmVlZCBpbiB0aGUgRXVyb3BlYW4gUGFybGlhbWVudC4gVGhlIFVLIEdvdmVybm1lbnQgaGFzIHN0YXRlZCBpdHMgaW50ZW50aW9uIHRvIGltcGxlbWVudCBuZXcgbW9uZXktbGF1bmRlcmluZyByZWd1bGF0aW9ucyBieSBKdW5lIDIwMTcuIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wMi0wOFQxNDowNDo1MC41OTAwMzc1KzAwOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgSG91c2Ugb2YgTG9yZHMgTGlicmFyeSBicmllZmluZyBvdXRsaW5lcyB0aGUgY3VycmVudCBhbnRpLW1vbmV5IHJlZ3VsYXRpb25zIGluIHJlZ2FyZHMgdG8gUG9saXRpY2FsbHkgRXhwb3NlZCBQZXJzb25zIChQRVBzKSwgYW5kIHByb3Bvc2VkIHJlZm9ybXMuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMSUYtMjAxNy0wMDE1In0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy80MTQwNDEiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBJbiBGb2N1cyJ9CiAgICAgIH0KICAgICAgLCAidGl0bGUiIDogIlBvbGl0aWNhbGx5IEV4cG9zZWQgUGVyc29uczogQ3VycmVudCBSZWdpbWUgYW5kIFJlZm9ybXMiLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjAyIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiRmluYW5jaWFsIGluc3RpdHV0aW9ucyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTYwMyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkZpbmFuY2lhbCBzZXJ2aWNlcyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTczMyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlJlZ3VsYXRpb24ifQogICAgICB9CiAgICAgIF0sICJ0eXBlIiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3NjaGVtYS9wYXJsI1Jlc2VhcmNoQnJpZWZpbmcifQogICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9yZXNvdXJjZXMvNjg1MTQyIiwgImFic3RyYWN0IiA6IHsiX3ZhbHVlIiA6ICJBbGwgaW5mb3JtYXRpb24gcHJlc2VudGVkIGlzIGFjY3VyYXRlIGFzIGF0IHRoaXMgZGF0ZSB1bmxlc3Mgb3RoZXJ3aXNlIHN0YXRlZC4gS2V5IGZpbmRpbmdzIGluY2x1ZGU6XG4gXG4gVGhlIHRvdGFsIG1lbWJlcnNoaXAgb2YgdGhlIEhvdXNlIHdhcyA4MzkuIE9mIHRoaXMgdG90YWwsIDgwNSBNZW1iZXJzIHdlcmUgZWxpZ2libGUgdG8gYXR0ZW5kLiBUaGUgbWFqb3JpdHkgb2YgTWVtYmVyc1x1MjAxNDg0LjEgcGVyY2VudFx1MjAxNHNhdCBieSB2aXJ0dWUgb2YgYSBsaWZlIHBlZXJhZ2UgY29uZmVycmVkIHVuZGVyIHRoZSBMaWZlIFBlZXJhZ2VzIEFjdCAxOTU4LiBFeGNlcHRlZCBoZXJlZGl0YXJ5IHBlZXJzIGFjY291bnRlZCBmb3IgMTAuOCBwZXJjZW50IG9mIHRoZSBtZW1iZXJzaGlwLiBPZiB0aGUgZWxpZ2libGUgbWVtYmVyc2hpcDogQ29uc2VydmF0aXZlcyBjb21wcmlzZWQgdGhlIGxhcmdlc3QgcGFydHkgb3IgZ3JvdXAsIHdpdGggMjUzIE1lbWJlcnMgKDMxLjQgcGVyY2VudCkuIExhYm91ciBNZW1iZXJzIGNvbXByaXNlZCB0aGUgc2Vjb25kIGxhcmdlc3QgcGFydHkgb3IgZ3JvdXAsIHdpdGggMjAzIE1lbWJlcnMgKDI1LjIgcGVyY2VudCkuIE1lbiBtYWRlIHVwIDc0LjMgcGVyY2VudCBhbmQgd29tZW4gbWFkZSB1cCAyNS43IHBlcmNlbnQgb2YgdGhlIEhvdXNlLiBUaGlzIGNvbXBhcmVzIHdpdGggNzQuNCBwZXJjZW50IGFuZCAyNS42IHBlcmNlbnQgcmVzcGVjdGl2ZWx5IGFzIGF0IDExIE1hcmNoIDIwMTYuIFRoZSBtZWFuIGF2ZXJhZ2UgYWdlIHdhcyA2OTsgdGhlIG1lZGlhbiBhdmVyYWdlIGFnZSB3YXMgNzA7IGFuZCB0aGUgbW9kYWwgYXZlcmFnZSBhZ2Ugd2FzIDc0LiBUaGlzIGlzIHVuY2hhbmdlZCBmcm9tIDExIE1hcmNoIDIwMTYuwqAgTW9zdCBNZW1iZXJzIGluIGVhY2ggcGFydHkgb3IgZ3JvdXAsIGV4Y2VwdCB0aGUgQmlzaG9wcywgZmVsbCBpbnRvIHRoZSA3MFx1MjAxMzc5IGFnZSBiYW5kLiA0MCBNZW1iZXJzIHdlcmUgYWdlZCB1bmRlciA1MCBhbmQgMTMgTWVtYmVycyB3ZXJlIGFnZWQgOTAgb3Igb3Zlci4gVGhpcyBjb21wYXJlcyB3aXRoIDM0IE1lbWJlcnMgYWdlZCB1bmRlciA1MCBhbmQgMTYgTWVtYmVycyBhZ2VkIDkwIG9yIG92ZXIgYXMgYXQgMTEgTWFyY2ggMjAxNi7CoCBcbiBcblNlY3Rpb24gb25lIGluY2x1ZGVzIHRhYmxlcyB3aGljaCBkZXRhaWwgdGhlIGNvbXBvc2l0aW9uIG9mIHRoZSBIb3VzZS4gVGFibGUgMS4xIGRldGFpbHMgdGhlIGNvbXBvc2l0aW9uIG9mIHRoZSBIb3VzZSBieSBwYXJ0eS9ncm91cCBhZmZpbGlhdGlvbiBhbmQgbWVtYmVyc2hpcCB0eXBlOyBUYWJsZSAxLjIgYnkgcGFydHkvZ3JvdXAgYWZmaWxpYXRpb24gYW5kIGdlbmRlcjsgYW5kIFRhYmxlIDEuMyBieSB0eXBlIG9mIHBlZXJhZ2UgYW5kIGdlbmRlci4gU2VjdGlvbiB0d28gcHJvdmlkZXMgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGFnZSBwcm9maWxlIG9mIHRoZSBIb3VzZS4gU2VjdGlvbiAyLjEgcHJvdmlkZXMgaW5mb3JtYXRpb24gb24gYXZlcmFnZSBhZ2VzLiBUYWJsZSAyLjIgcHJvdmlkZXMgYSBzbmFwc2hvdCBvZiB0aGUgbWVtYmVyc2hpcCBvZiB0aGUgd2hvbGUgSG91c2UgYnkgYWdlIGJhbmRzLiBUYWJsZSAyLjMgYnJlYWtzIHRoaXMgaW5mb3JtYXRpb24gZG93biBieSBwYXJ0eS9ncm91cCBhZmZpbGlhdGlvbi4gVGFibGUgMi40IGxpc3RzIHRob3NlIE1lbWJlcnMgYWdlZCB1bmRlciA1MDsgYW5kIFRhYmxlIDIuNSBsaXN0cyB0aG9zZSBNZW1iZXJzIGFnZWQgOTAgYW5kIG92ZXIuIFRhYmxlIDIuNiBsaXN0cyB0aG9zZSBNZW1iZXJzIHdobyB3ZXJlIGFnZWQgdW5kZXIgNDAgd2hlbiB0aGV5IHJlY2VpdmVkIGEgbGlmZSBwZWVyYWdlLiBTZWN0aW9uIHRocmVlIGluY2x1ZGVzIHRhYmxlcyB3aGljaCBsaXN0IHZhcmlvdXMgY2F0ZWdvcmllcyBvZiBjdXJyZW50IE1lbWJlcnMgYnkgbGVuZ3RoIG9mIG1lbWJlcnNoaXAgb2YgdGhlIEhvdXNlLiBUYWJsZSAzLjEgbGlzdHMgdGhlIDUwIGxvbmdlc3QgY29udGludW91c2x5IHNlcnZpbmcgTWVtYmVycyBvZiB0aGUgSG91c2Ugd2hvIHdlcmUgZWxpZ2libGUgdG8gcGFydGljaXBhdGUgaW4gdGhlIHByb2NlZWRpbmdzLiBUYWJsZSAzLjIgbGlzdHMgbGlmZSBwZWVycyB3aG8gaGFkIHNlcnZlZCBhcyBNZW1iZXJzIG9mIHRoZSBIb3VzZSBmb3IgMzAgeWVhcnMgb3IgbW9yZTsgYW5kIFRhYmxlIDMuMyBsaXN0cyBhbGwgZmVtYWxlIHBlZXJzIHdobyBoYXZlIHNlcnZlZCBhcyBNZW1iZXJzIG9mIHRoZSBIb3VzZSBmb3IgMjAgeWVhcnMgb3IgbW9yZS4gU2VjdGlvbiBmb3VyIGRpcmVjdHMgaW50ZXJlc3RlZCByZWFkZXJzIHRvIHRoZSBIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5IGJyaWVmaW5nIE1lbWJlcnNoaXAgb2YgdGhlIEhvdXNlIG9mIExvcmRzOiBFdGhuaWNpdHksIFJlbGlnaW9uIGFuZCBEaXNhYmlsaXR5ICgxMiBKdW5lIDIwMTQpLsKgXG4gXG5UaGlzIGJyaWVmaW5nIHVwZGF0ZXMgdGhlIEhvdXNlIG9mIExvcmRzIExpYnJhcnkgTm90ZSBIb3VzZSBvZiBMb3JkczogU3RhdGlzdGljYWwgUHJvZmlsZSBvZiBNZW1iZXJzaGlwICgyMyBNYXJjaCAyMDE2KSwgd2hpY2ggcHJvdmlkZWQgaW5mb3JtYXRpb24gb24gdGhlIG1lbWJlcnNoaXAgb2YgdGhlIEhvdXNlIGFzIGF0IDExIE1hcmNoIDIwMTYuIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wMi0wNlQxNzoxMzo1Ny41ODYxNzAzKzAwOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgSG91c2Ugb2YgTG9yZHMgTGlicmFyeSBicmllZmluZyBwcmVzZW50cyBhIHJhbmdlIG9mIGluZm9ybWF0aW9uIGFib3V0IHRoZSBtZW1iZXJzaGlwIG9mIHRoZSBIb3VzZSBvZiBMb3JkcyBhcyB0aGUgSG91c2Ugd2FzIGNvbXBvc2VkIG9uIEZyaWRheSAyNyBKYW51YXJ5IDIwMTcuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMTE4tMjAxNy0wMDA4In0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8zNDY3MTMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBMaWJyYXJ5IG5vdGVzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiSG91c2Ugb2YgTG9yZHM6IFN0YXRpc3RpY2FsIFByb2ZpbGUgb2YgTWVtYmVyc2hpcFx1MjAxNEphbnVhcnkgMjAxNyIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2MjgiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTY3NSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIk1lbWJlcnMgb2YgdGhlIExvcmRzIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzM0MjQ1NCIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiTGl2aW5nIGZvcm1lciBNZW1iZXJzXG4gXG5UYWJsZSAxIGNvbnRhaW5zIGluZm9ybWF0aW9uIG9uIGZvcm1lciBNZW1iZXJzIHdobyBhcmUgc3RpbGwgbGl2aW5nLiBNUHMgYXJlIGxpc3RlZCB3aXRoOiBhbnkgdGl0bGVzIGF0IHRoZSB0aW1lIHRoZXkgY2Vhc2VkIHRvIGJlIGFuIE1QIGFuZCB0aGUgcGFydHkgdGhleSBiZWxvbmdlZCB0byBhdCB0aGUgdGltZTsgdGhlaXIgZGF0ZSBvZiBiaXJ0aCwgc3RhcnQgYW5kIGVuZCBkYXRlcyBmb3IgZWFjaCBjb25zdGl0dWVuY3kgdGhleSBzZXJ2ZWQ7IGFuZCB0aGVpciB0b3RhbCBsZW5ndGggb2Ygc2VydmljZS5cbiBcblBsZWFzZSBub3RlOiBUaGlzIGluZm9ybWF0aW9uIGhhcyBiZWVuIHRha2VuIHByaW5jaXBhbGx5IGZyb20gcHVibGlzaGVkIHNvdXJjZXMgYW5kIGlzIGNvcnJlY3QgdG8gdGhlIGJlc3Qgb2Ygb3VyIGtub3dsZWRnZS5cbiBcbkZvcm1lciBNZW1iZXJzIHdobyBoYXZlIGRpZWQgc2luY2UgdGhlIDIwMTUgR2VuZXJhbCBFbGVjdGlvblxuIFxuVGFibGUgMiBsaXN0cyBmb3JtZXIgTVBzIHdobyBoYXZlIGRpZWQgc2luY2UgdGhlIDIwMTUgR2VuZXJhbCBFbGVjdGlvbiBhbmQgaGF2ZSBiZWVuIHJlbW92ZWQgZnJvbSB0aGUgbGlzdCBvZiBsaXZpbmcgZm9ybWVyIE1lbWJlcnMuXG4gXG5GdXJ0aGVyIGluZm9ybWF0aW9uXG4gXG5Nb3JlIGRldGFpbGVkIGluZm9ybWF0aW9uIG9uIE1QcyB3aG8gc2VydmVkIGJldHdlZW4gMTk3OSBhbmQgMjAxMCwgaW5jbHVkaW5nIG1pbmlzdGVyaWFsIHBvc3RzIGFuZCBwYXJ0eSBhbGxlZ2lhbmNlLCBjb3ZlcmluZyB0aGVpciB0aW1lIGluIHRoZSBVSyBQYXJsaWFtZW50IGFuZCBvdGhlciBsZWdpc2xhdHVyZXMsIGNhbiBiZSBmb3VuZCBpbiB0aGUgQ29tbW9ucyBMaWJyYXJ5IEJyaWVmaW5nIG9uIE1lbWJlcnMgMTk3OS0yMDEwLlxuIFxuQXNzb2NpYXRpb24gb2YgRm9ybWVyIE1lbWJlcnMgb2YgUGFybGlhbWVudFxuIFxuQSBsaXN0IG9mIHJlY2VudGx5IGRlY2Vhc2VkIG1lbWJlcnMgb2YgdGhlIEFzc29jaWF0aW9uIG9mIEZvcm1lciBNZW1iZXJzIG9mIFBhcmxpYW1lbnQgaXMgYXZhaWxhYmxlIG9uIHRoZSBET0RTIFBvbGl0aWNzSG9tZSB3ZWJzaXRlLlxuIFxuRmVlZGJhY2tcbiBcbkFueSBjb21tZW50cywgY29ycmVjdGlvbnMgb3Igc3VnZ2VzdGlvbnMgZm9yIG5ldyBsaXN0cyBzaG91bGQgYmUgc2VudCB0bzogUGFybGlhbWVudGFyeSBJbmZvcm1hdGlvbiBMaXN0cyBFZGl0b3IsIFBhcmxpYW1lbnQgJiBDb25zdGl0dXRpb24gQ2VudHJlLCBIb3VzZSBvZiBDb21tb25zIExpYnJhcnksIExvbmRvbiBTVzFBIDBBQS5cbiBcbsKgIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wMi0wM1QxNzoxNToxMy41OTk3NjgxKzAwOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIkEgbGlzdCBvZiBrbm93biBsaXZpbmcgZm9ybWVyIE1QcyBhcyBhdCAzIEZlYnJ1YXJ5IDIwMTciXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIlNOMDUzMjQifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyNjciLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBDb21tb25zIExpYnJhcnkifQogICAgICB9CiAgICAgICwgInNlY3Rpb24iIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzYxMDU1IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiUGFybGlhbWVudCBhbmQgQ29uc3RpdHV0aW9uIENlbnRyZSJ9CiAgICAgIH0KICAgICAgXSwgInN1YlR5cGUiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvNDE0MDMzIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQ29tbW9ucyBCcmllZmluZyBwYXBlcnMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJMaXZpbmcgRm9ybWVyIE1lbWJlcnMgb2YgdGhlIEhvdXNlIG9mIENvbW1vbnMiLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1Njc0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTWVtYmVycyBvZiBQYXJsaWFtZW50In0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzY4Mzk2MyIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiVGhlIEV1cm9wZWFuIFVuaW9uIChOb3RpZmljYXRpb24gb2YgV2l0aGRyYXdhbCkgQmlsbCB3YXMgaW50cm9kdWNlZCBpbiB0aGUgSG91c2Ugb2YgQ29tbW9ucyBvbiAyNiBKYW51YXJ5IDIwMTcgYW5kIHJlY2VpdmVkIGl0cyBzZWNvbmQgcmVhZGluZyBvbiAzMSBKYW51YXJ5IGFuZCAxIEZlYnJ1YXJ5IDIwMTcuIFRoZSBCaWxsIHdvdWxkIGdpdmUgdGhlIFByaW1lIE1pbmlzdGVyIHBvd2VyIHRvIG5vdGlmeSB0aGUgRXVyb3BlYW4gQ291bmNpbCBvZiB0aGUgVUtcdTIwMTlzIGludGVudGlvbiB0byB3aXRoZHJhdyBmcm9tIHRoZSBFdXJvcGVhbiBVbmlvbiwgdW5kZXIgdGhlIHByb2Nlc3Mgc2V0IG91dCBpbiBBcnRpY2xlIDUwIG9mIHRoZSBUcmVhdHkgb24gRXVyb3BlYW4gVW5pb24uwqBcbiBcblRoaXMgYnJpZWZpbmcgc3VtbWFyaXNlcyB0aGUgc2Vjb25kIHJlYWRpbmcgcHJvY2VlZGluZ3MgaW4gdGhlIEhvdXNlIG9mIENvbW1vbnMuIFRoZSBIb3VzZSBkaXZpZGVkIG9uIGEgcmVhc29uZWQgYW1lbmRtZW50IHRhYmxlZCBieSB0aGUgU2NvdHRpc2ggTmF0aW9uYWwgUGFydHkgKFNOUCkgdG8gZGVueSB0aGUgQmlsbCBpdHMgc2Vjb25kIHJlYWRpbmcuIFRoZSBhbWVuZG1lbnQgd2FzIGRlZmVhdGVkIGJ5IDMzNiB2b3RlcyB0byAxMDAsIGEgbWFqb3JpdHkgb2YgMjM2LlxuIFxuVGhlIEJpbGwgd2FzIGdpdmVuIGl0cyBzZWNvbmQgcmVhZGluZyBieSA0OTggdm90ZXMgdG8gMTE0LCBhIG1ham9yaXR5IG9mIDM4NC4gT2YgdGhlIE1QcyB3aG8gdm90ZWQsIHRoZSBDb25zZXJ2YXRpdmVzICh3aXRoIHRoZSBleGNlcHRpb24gb2YgS2VubmV0aCBDbGFya2UpLCB0aGUgRGVtb2NyYXRpYyBVbmlvbmlzdCBQYXJ0eSwgdGhlIFVsc3RlciBVbmlvbmlzdCBQYXJ0eSBhbmQgVUtJUCB2b3RlZCBpbiBmYXZvdXIgb2YgdGhlIEJpbGwuIFRoZSBTTlAsIHRoZSBMaWJlcmFsIERlbW9jcmF0cywgdGhlIFNvY2lhbCBEZW1vY3JhdGljIGFuZCBMYWJvdXIgUGFydHksIFBsYWlkIEN5bXJ1IGFuZCB0aGUgR3JlZW4gUGFydHkgdm90ZWQgYWdhaW5zdCBpdC4gRGVzcGl0ZSB0aGUgUGFydHlcdTIwMTlzIHRocmVlLWxpbmUgd2hpcCB0byBzdXBwb3J0IHRoZSBCaWxsLCBMYWJvdXJcdTIwMTlzIHZvdGUgd2FzIHNwbGl0LCB3aXRoIDE2NyBMYWJvdXIgTVBzIHZvdGluZyBpbiBmYXZvdXIgb2YgdGhlIEJpbGwgYW5kIDQ3IHZvdGluZyBhZ2FpbnN0IGl0LlxuIFxuVGhlcmUgd2FzIGFsc28gYSBkaXZpc2lvbiBvbiB0aGUgcHJvZ3JhbW1lIG1vdGlvbiwgd2hpY2ggYWxsb2NhdGVkIHRocmVlIGRheXMgKDYsIDcgYW5kIDggRmVicnVhcnkgMjAxNykgZm9yIHRoZSBCaWxsXHUyMDE5cyBjb21taXR0ZWUgc3RhZ2UgYW5kIHRoaXJkIHJlYWRpbmcuIFRoZSBwcm9ncmFtbWUgbW90aW9uIHdhcyBhZ3JlZWQgdG8gYnkgMzI5IHZvdGVzIHRvIDExMiwgYSBtYWpvcml0eSBvZiAyMTcuXG4gXG5EdXJpbmcgdGhlIGZpcnN0IGRheSBvZiB0aGUgc2Vjb25kIHJlYWRpbmcgZGViYXRlLCBNUHMgZnJvbSBhbGwgc2lkZXMgb2YgdGhlIEhvdXNlIHF1ZXN0aW9uZWQgdGhlIEdvdmVybm1lbnQgYWJvdXQgd2hlbiBpdCB3b3VsZCBwdWJsaXNoIHRoZSB3aGl0ZSBwYXBlciB0aGF0IGhhZCBiZWVuIHByb21pc2VkIGJ5IFRoZXJlc2EgTWF5IGF0IFByaW1lIE1pbmlzdGVyXHUyMDE5cyBRdWVzdGlvbnMgb24gMjUgSmFudWFyeSAyMDE3LiBNcnMgTWF5IGFubm91bmNlZCBvbiAxIEZlYnJ1YXJ5LCBiZWZvcmUgdGhlIHNlY29uZCBkYXlcdTIwMTlzIGRlYmF0ZSBvbiB0aGUgQmlsbCBiZWdhbiwgdGhhdCB0aGUgd2hpdGUgcGFwZXIgd291bGQgYmUgcHVibGlzaGVkIHRoZSBmb2xsb3dpbmcgZGF5LiBPbiAyIEZlYnJ1YXJ5IDIwMTcsIHRoZSBHb3Zlcm5tZW50IHB1Ymxpc2hlZCBpdHMgd2hpdGUgcGFwZXIsIFRoZSBVbml0ZWQgS2luZ2RvbVx1MjAxOXMgRXhpdCBGcm9tLCBhbmQgTmV3IFBhcnRuZXJzaGlwIFdpdGgsIHRoZSBFdXJvcGVhbiBVbmlvbi7CoFxuIFxuVGhlIEJpbGxcdTIwMTlzIHJlbWFpbmluZyBDb21tb25zIHN0YWdlcyBhcmUgc2NoZWR1bGVkIHRvIHRha2UgcGxhY2Ugb24gNlx1MjAxMzggRmVicnVhcnkgMjAxNy4gVGhlIEJpbGxcdTIwMTlzIHNlY29uZCByZWFkaW5nIGluIHRoZSBIb3VzZSBvZiBMb3JkcyBpcyBzY2hlZHVsZWQgZm9yIDIwIEZlYnJ1YXJ5IDIwMTcuIEZvciBiYWNrZ3JvdW5kIGluZm9ybWF0aW9uIGFib3V0IHRoZSBCaWxsLCBzZWUgSG91c2Ugb2YgTG9yZHMgTGlicmFyeSwgRXVyb3BlYW4gVW5pb24gKE5vdGlmaWNhdGlvbiBvZiBXaXRoZHJhd2FsKSBCaWxswqAoMzAgSmFudWFyeSAyMDE3KSAoYSBjb25jaXNlIGZpdmUtcGFnZSBicmllZmluZykgYW5kIEhvdXNlIG9mIENvbW1vbnMgTGlicmFyeSBFdXJvcGVhbiBVbmlvbiAoTm90aWZpY2F0aW9uIG9mIFdpdGhkcmF3YWwpIEJpbGzCoCgzMCBKYW51YXJ5IDIwMTcpIChhIG1vcmUgZGV0YWlsZWQgNTAtcGFnZSBicmllZmluZykuIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wMi0wM1QxNDo1NjoyNi4zNDA5NTM4KzAwOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgSG91c2Ugb2YgTG9yZHMgTGlicmFyeSBicmllZmluZyBzdW1tYXJpc2VzIHRoZSBzZWNvbmQgcmVhZGluZyBwcm9jZWVkaW5ncyBpbiB0aGUgSG91c2Ugb2YgQ29tbW9ucyBvbiB0aGUgRXVyb3BlYW4gVW5pb24gKE5vdGlmaWNhdGlvbiBvZiBXaXRoZHJhd2FsKSBCaWxsIHRoYXQgdG9vayBwbGFjZSBvbiAzMSBKYW51YXJ5IGFuZCAxIEZlYnJ1YXJ5IDIwMTcuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMSUYtMjAxNy0wMDEzIn0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy80MTQwNDEiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBJbiBGb2N1cyJ9CiAgICAgIH0KICAgICAgLCAidGl0bGUiIDogIkV1cm9wZWFuIFVuaW9uIChOb3RpZmljYXRpb24gb2YgV2l0aGRyYXdhbCkgQmlsbDogU3VtbWFyeSBvZiBDb21tb25zIFNlY29uZCBSZWFkaW5nIERlYmF0ZSIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU1MzIiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJDb25zdGl0dXRpb24ifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU1NTIiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJEZXZvbHV0aW9uIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTkxIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiRVUgbGF3IGFuZCB0cmVhdGllcyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTY1OSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkxlZ2lzbGF0aXZlIHByb2Nlc3MifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2NzkiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJNaW5pc3RlcnMifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU3MDMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJQYXJsaWFtZW50In0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzY3MjY2OCIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiVGhlcmUgYXJlIHNldmVyYWwgdHlwZXMgb2YgaW50ZWxsZWN0dWFsIHByb3BlcnR5IChJUCkgcHJvdGVjdGlvbiBpbmNsdWRpbmcgcGF0ZW50cywgdHJhZGUgbWFya3MgYW5kIGRlc2lnbiByaWdodHMuIElQIHJpZ2h0cyBjYW4gc29tZXRpbWVzIGJlIHVzZWQgYnkgYSB0cmFkZXIgb3IgYnVzaW5lc3MgdG8gdGhyZWF0ZW4gYSByaXZhbCB3aXRob3V0IGp1c3RpZmljYXRpb24uIFN0YXR1dG9yeSBwcm90ZWN0aW9uIGhhcyBkZXZlbG9wZWQgc28gdGhhdCBhbiBhZ2dyaWV2ZWQgcGVyc29uIGNhbiB0YWtlIGFjdGlvbiBhZ2FpbnN0IHNvbWVvbmUgbWFraW5nIHRocmVhdHMuIFRoZXkgbWlnaHQgb2J0YWluOlxuIFxuIGFuIGluanVuY3Rpb24gdG8gcHJldmVudCBtb3JlIHRocmVhdHMgYmVpbmcgbWFkZTsgb3IgYSBkZWNsYXJhdGlvbiB0aGF0IHRoZSB0aHJlYXRzIGFyZSB1bmp1c3RpZmllZC4gXG4gXG5UaGV5IG1pZ2h0IGFsc28gY2xhaW0gZGFtYWdlcyBmb3IgbG9zcyBjYXVzZWQgYnkgdGhlIHRocmVhdC5cbiBcblRoZSBMYXcgQ29tbWlzc2lvbiBoYXMgcmVmZXJyZWQgdG8gYSBjYXNlIHdoZXJlIGVCYXkgcmVtb3ZlZCBiaWtlcyBmcm9tIGl0cyB3ZWJzaXRlIGFmdGVyIGFub3RoZXIgc2VsbGVyIGNsYWltZWQgdG8gaGF2ZSByZWdpc3RlcmVkIHRoZSBkZXNpZ24gb2YgdGhlIGJpa2VzLiBUaGUgZGVzaWducyB3ZXJlIG5vdCBpbiBmYWN0IHJlZ2lzdGVyZWQuIFRoZSBjbGFpbWFudCBpbiB0aGUgY2FzZSBvYnRhaW5lZCBhbiBvcmRlciB0byBzdG9wIGFueSBmdXJ0aGVyIHRocmVhdHMgYmVpbmcgbWFkZSwgYW5kIHdhcyBhYmxlIHRvIHJlc3VtZSB0cmFkaW5nLlxuIFxuQcKgTGF3IENvbW1pc3Npb27CoHJldmlldyBvZiB1bmp1c3RpZmllZCB0aHJlYXRzIHRvIElQIHJpZ2h0cyBmb3VuZCwgYW1vbmcgb3RoZXIgdGhpbmdzLCB0aGF0IHRoZSB0aHJlYXQgb2YgaW5mcmluZ2VtZW50IHByb2NlZWRpbmdzIGNhbiBjYXVzZSBjb21tZXJjaWFsIGRhbWFnZSB0byBidXNpbmVzc2VzLiBJUCBsaXRpZ2F0aW9uIGlzIGFsc28gcGVyY2VpdmVkIGFzIGJlaW5nIGV4cGVuc2l2ZSBhbmQgZGlzcnVwdGl2ZS4gQSBkcmFmdCBCaWxsIHdhcyBwdWJsaXNoZWQgYnkgdGhlIExhdyBDb21taXNzaW9uIGluIE9jdG9iZXIgMjAxNS5cbiBcblRoZSBJbnRlbGxlY3R1YWwgUHJvcGVydHkgKFVuanVzdGlmaWVkIFRocmVhdHMpIEJpbGwgW0hMXSAyMDE2LTE3IHdhcyBpbnRyb2R1Y2VkIGluIHRoZSBIb3VzZSBvZiBMb3JkcyBvbiAxOSBNYXkgMjAxNi5cbiBcbkFzIHRoZSBCaWxsIGlzIGEgTGF3IENvbW1pc3Npb24gQmlsbCwgaXQgaXMgc3ViamVjdCB0byBwYXJ0aWN1bGFyIHBhcmxpYW1lbnRhcnkgcHJvY2VkdXJlcy4gVGhlc2UgYXJlIGRlc2NyaWJlZCBpbiBhIExpYnJhcnkgQnJpZWZpbmcgUGFwZXIsIFRoZSBMYXcgQ29tbWlzc2lvbiBhbmQgTGF3IENvbW1pc3Npb24gQmlsbCBQcm9jZWR1cmVzLlxuIFxuVGhlIEJpbGwgcmVjZWl2ZWQgY3Jvc3MtcGFydHkgc3VwcG9ydCBpbiB0aGUgTG9yZHMuIEEgbnVtYmVyIG9mIEdvdmVybm1lbnQgYW1lbmRtZW50cyB3ZXJlIGFncmVlZCB0byBhdCB0aGUgQmlsbFx1MjAxOXMgUmVwb3J0IFN0YWdlLlxuIFxuVGhlIEJpbGwgd2FzIGludHJvZHVjZWQgaW4gdGhlIEhvdXNlIG9mIENvbW1vbnMgb24gMTMgRGVjZW1iZXIgMjAxNi4gSXQgd2FzIGRlYmF0ZWQgaW4gYSBTZWNvbmQgUmVhZGluZyBDb21taXR0ZWUgb24gMTYgSmFudWFyeSAyMDE3IHdoZXJlIGl0IHdhcyBicm9hZGx5IHdlbGNvbWVkIGJ5IExhYm91ciBhbmQgdGhlIFNOUC4gVGhlIEJpbGwgd2FzIG5vdCBhbWVuZGVkIGluIFB1YmxpYyBCaWxsIENvbW1pdHRlZSBvbiAyNMKgSmFudWFyeSAyMDE3LlxuIFxuVGhlIEJpbGwgd291bGQgcmVmb3JtIHRoZSBsYXcgb2YgdW5qdXN0aWZpZWQsIG9yIGdyb3VuZGxlc3MsIHRocmVhdHMgYXMgaXQgYXBwbGllcyB0byBwYXRlbnRzLCB0cmFkZSBtYXJrcyBhbmQgZGVzaWducy4gSXQgd291bGQgZXh0ZW5kIHRvIHRoZSB3aG9sZSBvZiB0aGUgVUsuwqBcbiBcbsKgXG4gXG7CoFxuIFxuwqBcbiBcbsKgXG4gXG7CoCJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDItMDJUMTY6MzU6NDIuNDg1Nzk1NyswMDowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIENvbW1vbnMgTGlicmFyeSBQYXBlciBsb29rcyBhdCB0aGUgSW50ZWxsZWN0dWFsIFByb3BlcnR5IChVbmp1c3RpZmllZCBUaHJlYXRzKSBCaWxsIFtITF0gMjAxNi0xNy4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIkNCUC03ODY2In0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1MjY3IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgQ29tbW9ucyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTAzNiIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvbWUgQWZmYWlycyBTZWN0aW9uIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzY3NzE2IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiU2NpZW5jZSBhbmQgRW52aXJvbm1lbnQgU2VjdGlvbiJ9CiAgICAgIH0KICAgICAgXSwgInN1YlR5cGUiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvNDE0MDMzIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQ29tbW9ucyBCcmllZmluZyBwYXBlcnMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJDb21tb25zIExpYnJhcnkgQW5hbHlzaXMgb2YgdGhlIEludGVsbGVjdHVhbCBQcm9wZXJ0eSAoVW5qdXN0aWZpZWQgVGhyZWF0cykgQmlsbCBbSExdIDIwMTYtMTciLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjQzIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSW50ZWxsZWN0dWFsIHByb3BlcnR5In0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzY3MTQ0MiIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiVGhlIEJyb2FkY2FzdGluZyAoUmFkaW8gTXVsdGlwbGV4IFNlcnZpY2VzKSBCaWxsIDIwMTYtMTcgaXMgYSBQcml2YXRlIE1lbWJlcnNcdTIwMTkgQmlsbCwgaW50cm9kdWNlZCBieSBLZXZpbiBGb3N0ZXIgb24gNCBKdWx5IDIwMTYuIFRoZSBCaWxsIGhhZCBpdHMgc2Vjb25kIHJlYWRpbmcgb24gMTMgSmFudWFyeSAyMDE3LiBJdCB3YXMgbm90IGFtZW5kZWQgaW4gUHVibGljIEJpbGzCoENvbW1pdHRlZSAoMzEgSmFudWFyeSkgYW5kIHdpbGwgaGF2ZSBpdHMgcmVtYWluaW5nIHN0YWdlcyBvbiAzIEZlYnJ1YXJ5IDIwMTcuXG4gXG5UaGUgRGVwYXJ0bWVudCBmb3IgQ3VsdHVyZSwgTWVkaWEgYW5kIFNwb3J0IChEQ01TKSBpcyBzdXBwb3J0aW5nIHRoZSBCaWxsIGFuZCBoYXMgcHJlcGFyZWQgRXhwbGFuYXRvcnkgTm90ZXMuXG4gXG5JbiB0aGUgVUssIERpZ2l0YWwgQXVkaW8gQnJvYWRjYXN0aW5nIChEQUIpIHJhZGlvIHNlcnZpY2VzIGFyZSBicm9hZGNhc3QgYXMgXHUyMDFjbXVsdGlwbGV4ZXNcdTIwMWQuIFRoaXMgbWVhbnMgdGhhdCBzb3VuZCBzaWduYWxzIGZyb20gYSBudW1iZXIgb2YgaW5kaXZpZHVhbCByYWRpbyBzdGF0aW9ucyBhcmUgY29tYmluZWQgdG9nZXRoZXIgYW5kIHRyYW5zbWl0dGVkIGFzIGRpZ2l0YWwgZGF0YS5cbiBcbkF0IHByZXNlbnQsIHVwIHRvIDQwMCBsb2NhbCBjb21tZXJjaWFsIGFuZCBjb21tdW5pdHkgcmFkaW8gc3RhdGlvbnMgYXJlIG5vdCBjYXJyaWVkIG9uIHRoZSBEQUIgZGlnaXRhbCByYWRpbyBwbGF0Zm9ybS4gVGhpcyBpcyB0aGUgcHJvYmxlbSB0aGF0IHRoZSBCaWxsIHNlZWtzIHRvIGFkZHJlc3MuXG4gXG5PZmNvbSByZWd1bGF0ZXMgREFCIG11bHRpcGxleCBzZXJ2aWNlcyB1bmRlciBQYXJ0IDIgb2YgdGhlIEJyb2FkY2FzdGluZyBBY3QgMTk5NiAoYXMgYW1lbmRlZCBieSB0aGUgQ29tbXVuaWNhdGlvbnMgQWN0IDIwMDMpLlxuIFxuVGhlIEJpbGwsIHdoaWNoIGhhcyBvbmUgc3Vic3RhbnRpdmUgY2xhdXNlLCB3b3VsZCBnaXZlIHRoZSBTZWNyZXRhcnkgb2YgU3RhdGUgdGhlIHBvd2VyIHRvIGFtZW5kIHRoZSBjb25kaXRpb25zIGZvciBEQUIgbXVsdGlwbGV4IGxpY2Vuc2luZyBpbiBvcmRlciB0byBcdTIwMWNjcmVhdGUgYSBuZXcsIGxpZ2h0ZXIgdG91Y2ggcmVndWxhdG9yeSBmcmFtZXdvcmsgYXBwcm9wcmlhdGUgZm9yIHRoZSBsaWNlbnNpbmcgb2Ygc21hbGwgc2NhbGUgKERBQikgcmFkaW8gbXVsdGlwbGV4ZXNcdTIwMWQuXG4gXG5UaGUgQmlsbCB3b3VsZCBleHRlbmQgdG8gRW5nbGFuZCBhbmQgV2FsZXMsIFNjb3RsYW5kIGFuZCBOb3J0aGVybiBJcmVsYW5kLiJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDItMDJUMTM6NDE6MjcuNzgzOTY1NiswMDowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIENvbW1vbnMgTGlicmFyeSBCcmllZmluZyBQYXBlciBsb29rcyBhdCB0aGUgQnJvYWRjYXN0aW5nIChSYWRpbyBNdWx0aXBsZXggU2VydmljZXMpIEJpbGwgMjAxNi0xNy4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIkNCUC03ODYxIn0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1MjY3IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgQ29tbW9ucyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTAzNiIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvbWUgQWZmYWlycyBTZWN0aW9uIn0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy80MTQwMzMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJDb21tb25zIEJyaWVmaW5nIHBhcGVycyJ9CiAgICAgIH0KICAgICAgLCAidGl0bGUiIDogIkNvbW1vbnMgTGlicmFyeSBBbmFseXNpcyBvZiB0aGUgQnJvYWRjYXN0aW5nIChSYWRpbyBNdWx0aXBsZXggU2VydmljZXMpIEJpbGwgMjAxNi0xNyIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU1MDciLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJCcm9hZGNhc3RpbmcifQogICAgICB9CiAgICAgIF0sICJ0eXBlIiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3NjaGVtYS9wYXJsI1Jlc2VhcmNoQnJpZWZpbmcifQogICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9yZXNvdXJjZXMvNjgyNDk0IiwgImFic3RyYWN0IiA6IHsiX3ZhbHVlIiA6ICJUaGlzIGJyaWVmaW5nIGhhcyBiZWVuIHByZXBhcmVkIGFoZWFkIG9mIHNlY29uZCByZWFkaW5nIG9uIHRoZSBDaGlsZCBQb3ZlcnR5IGluIHRoZSBVSyAoVGFyZ2V0IGZvciBSZWR1Y3Rpb24pIEJpbGwgMjAxNi0xNywgc2NoZWR1bGVkIHRvIG9jY3VyIG9uIDMgRmVicnVhcnkgMjAxNy4gVGhpcyBCaWxsIGlzIGEgUHJpdmF0ZSBNZW1iZXJzXHUyMDE5IEJpbGwgKEJhbGxvdCBCaWxsKSwgc3BvbnNvcmVkIGJ5IERhbiBKYXJ2aXMgTVAuXG4gXG5UaGUgQmlsbCBwbGFjZXMgYSBkdXR5IG9uIHRoZSBTZWNyZXRhcnkgb2YgU3RhdGUgdG8gbWVldCBmb3VyIHRhcmdldHMgZm9yIGNoaWxkIHBvdmVydHkgYnkgc29tZSB0YXJnZXQgZGF0ZSAodG8gYmUgc3BlY2lmaWVkKS4gVGhlIHRhcmdldHMgYXJlIGJhc2VkIG9uIGEgcmVsYXRpdmUgbG93IGluY29tZSBtZWFzdXJlLCBhIGNvbWJpbmVkIGxvdyBpbmNvbWUgYW5kIG1hdGVyaWFsIGRlcHJpdmF0aW9uIG1lYXN1cmUsIGFuIGFic29sdXRlIGxvdyBpbmNvbWUgbWVhc3VyZSBhbmQgYSBwZXJzaXN0ZW50IHBvdmVydHkgbWVhc3VyZS4gVGhlIEJpbGwgYWxzbyBhbGxvd3MgdGhlIFNlY3JldGFyeSBvZiBTdGF0ZSB0byBpbnRyb2R1Y2UsIHZpYSBzdGF0dXRvcnkgaW5zdHJ1bWVudCwgdGFyZ2V0cyByZWxhdGluZyB0byBvdGhlciBtZWFzdXJlcyB0byBiZSBtZXQgYnkgdGhlIHRhcmdldCBkYXRlLlxuIFxuVGhlIGZvdXIgbWVhc3VyZXMgYW5kIHRhcmdldHMgc3BlY2lmaWVkIGluIHRoZSBCaWxsIGFyZSB0aGUgc2FtZSBhcyB0aG9zZSB1c2VkIGluIHRoZSBDaGlsZCBQb3ZlcnR5IEFjdCAyMDEwIChhbHRob3VnaCB0aGUgQ2hpbGQgUG92ZXJ0eSBBY3Qgc3RhdGVkIHRoZSB0YXJnZXRzIHdlcmUgdG8gYmUgbWV0IGJ5IDIwMjAvMjEpLiBUaGUgdGFyZ2V0cyBpbiB0aGUgQ2hpbGQgUG92ZXJ0eSBBY3Qgd2VyZSBzdWJzZXF1ZW50bHkgcmVtb3ZlZCBieSB0aGUgV2VsZmFyZSBSZWZvcm0gYW5kIFdvcmsgQWN0IDIwMTYsIGFsdGhvdWdoIGl0IGhhZCBiZWVuIGNsZWFyIGZvciBzb21lIHRpbWUgdGhhdCB0aGUgdGFyZ2V0cyB3b3VsZCBub3QgYmUgbWV0LiBJbiBpdHMgMjAxNSBTdGF0ZSBvZiB0aGUgTmF0aW9uIFJlcG9ydCwgdGhlIFNvY2lhbCBNb2JpbGl0eSBhbmQgQ2hpbGQgUG92ZXJ0eSBDb21taXNzaW9uIG9ic2VydmVkIHRoYXQgdGhlIHRhcmdldHMgXHUyMDFjd2lsbCBiZSBtaXNzZWQgYnkgYSBjb3VudHJ5IG1pbGVcdTIwMWQuXG4gXG5UaGUgV2VsZmFyZSBSZWZvcm0gYW5kIFdvcmsgQWN0IDIwMTYgaW5zdGVhZCBpbnRyb2R1Y2VkIGEgZHV0eSBvbiBNaW5pc3RlcnMgdG8gcmVwb3J0IGFubnVhbGx5IG9uIHR3byBcdTIwMThsaWZlIGNoYW5jZXNcdTIwMTkgaW5kaWNhdG9ycywgcmVsYXRpbmcgdG8gY2hpbGRyZW4gaW4gd29ya2xlc3MgaG91c2Vob2xkcyBhbmQgZWR1Y2F0aW9uYWwgYXR0YWlubWVudC4gRHVyaW5nIHRoZSAyMDEwLTE1IFBhcmxpYW1lbnQsIE1pbmlzdGVycyBoYWQgcmVwZWF0ZWRseSBzaWduYWxsZWQgdGhlaXIgaW50ZW50aW9uIHRvIGludHJvZHVjZSBpbXByb3ZlZCBwb3ZlcnR5IG1lYXN1cmVzLlxuIFxuRHVyaW5nIHRoZSBwYXNzYWdlIG9mIHRoZSBXZWxmYXJlIFJlZm9ybSBhbmQgV29yayBBY3QsIERhdmlkIENhbWVyb25cdTIwMTlzIEdvdmVybm1lbnQgYW5ub3VuY2VkIGl0IHdvdWxkIHB1Ymxpc2ggYSBsaWZlIGNoYW5jZXMgc3RyYXRlZ3ksIGNvdmVyaW5nIG90aGVyIG5vbi1zdGF0dXRvcnkgaW5kaWNhdG9ycyBpbiBhZGRpdGlvbiB0byB0aGUgaW5kaWNhdG9ycyBpbiB0aGUgQWN0LiBUaGUgbGlmZSBjaGFuY2VzIHN0cmF0ZWd5IHdhcyBvcmlnaW5hbGx5IGV4cGVjdGVkIGluIHNwcmluZyAyMDE2IGJ1dCBpdCBub3cgYXBwZWFycyBpdCB3aWxsIG5vdCBiZSBwdWJsaXNoZWQuIEhvd2V2ZXIsIHRoZSBHb3Zlcm5tZW50IGhhcyBhbm5vdW5jZWQgaXQgd2lsbCBwdWJsaXNoIGEgU29jaWFsIEp1c3RpY2UgR3JlZW4gUGFwZXIgaW4gMjAxNy4ifQogICAgICAsICJkYXRlIiA6IHsiX3ZhbHVlIiA6ICIyMDE3LTAyLTAxVDE3OjQ0OjI2LjAzMDk5MjIrMDA6MDAiLCAiX2RhdGF0eXBlIiA6ICJkYXRlVGltZSJ9CiAgICAgICwgImRlc2NyaXB0aW9uIiA6IFsiVGhpcyBicmllZmluZyBoYXMgYmVlbiBwcmVwYXJlZCBhaGVhZCBvZiBzZWNvbmQgcmVhZGluZyBvbiB0aGUgQ2hpbGQgUG92ZXJ0eSBpbiB0aGUgVUsgKFRhcmdldCBmb3IgUmVkdWN0aW9uKSBCaWxsIDIwMTYtMTcsIHNjaGVkdWxlZCB0byBvY2N1ciBvbiAzIEZlYnJ1YXJ5IDIwMTcuIFRoaXMgQmlsbCBpcyBhIFByaXZhdGUgTWVtYmVyc1x1MjAxOSBCaWxsIChCYWxsb3QgQmlsbCksIHNwb25zb3JlZCBieSBEYW4gSmFydmlzIE1QLiJdLCAiaWRlbnRpZmllciIgOiB7Il92YWx1ZSIgOiAiQ0JQLTc4OTEifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyNjciLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBDb21tb25zIExpYnJhcnkifQogICAgICB9CiAgICAgICwgInNlY3Rpb24iIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzE3MTEzIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiRWNvbm9taWMgUG9saWN5IGFuZCBTdGF0aXN0aWNzIFNlY3Rpb24ifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzQxNDAzMyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkNvbW1vbnMgQnJpZWZpbmcgcGFwZXJzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiQ2hpbGQgUG92ZXJ0eSBpbiB0aGUgVUsgKFRhcmdldCBmb3IgUmVkdWN0aW9uKSBCaWxsLCAyMDE2LTE3IiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTYzNyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkluY29tZXMgYW5kIHBvdmVydHkifQogICAgICB9CiAgICAgIF0sICJ0eXBlIiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3NjaGVtYS9wYXJsI1Jlc2VhcmNoQnJpZWZpbmcifQogICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9yZXNvdXJjZXMvNjgxNDkwIiwgImFic3RyYWN0IiA6IHsiX3ZhbHVlIiA6ICJUaGUgSW50ZXJuYXRpb25hbCBEYXkgb2YgWmVybyBUb2xlcmFuY2UgZm9yIEZlbWFsZSBHZW5pdGFsIE11dGlsYXRpb24gYWltcyB0byByYWlzZSBhd2FyZW5lc3Mgb2YgdGhlIHByYWN0aWNlIGFuZCB3b3JrIHRvd2FyZHMgdGhlIGVsaW1pbmF0aW9uIG9mIGZlbWFsZSBnZW5pdGFsIG11dGlsYXRpb24sIHdoaWNoIGlzIHJlY29nbml6ZWQgaW50ZXJuYXRpb25hbGx5IGFzIGEgdmlvbGF0aW9uIG9mIHRoZSBodW1hbiByaWdodHMgb2YgZ2lybHMgYW5kIHdvbWVuOyByZWZsZWN0cyBkZWVwLXJvb3RlZCBpbmVxdWFsaXR5IGJldHdlZW4gdGhlIHNleGVzLCBhbmQgY29uc3RpdHV0ZXMgYW4gZXh0cmVtZSBmb3JtIG9mIGRpc2NyaW1pbmF0aW9uIGFnYWluc3Qgd29tZW4uIEluIEp1bHkgMjAxNCwgdGhlIFVLIGFuZCBVTklDRUYgY28taG9zdGVkIHRoZSBmaXJzdCBHaXJsIFN1bW1pdCwgYWltZWQgYXQgbW9iaWxpc2luZyBkb21lc3RpYyBhbmQgaW50ZXJuYXRpb25hbCBlZmZvcnRzIHRvIGVuZCBGR00gd2l0aGluIGEgZ2VuZXJhdGlvbi4gRkdNIGhhcyBiZWVuIGEgY3JpbWluYWwgb2ZmZW5jZSBpbiB0aGUgVUsgc2luY2UgdGhlIFByb2hpYml0aW9uIG9mIEZlbWFsZSBDaXJjdW1jaXNpb24gQWN0IDE5ODUgKGxhdGVyIHJlcGxhY2VkIGJ5IHRoZSBGZW1hbGUgR2VuaXRhbCBNdXRpbGF0aW9uIEFjdCAyMDAzKS4gRGVzcGl0ZSBpdCBiZWluZyBhIGNyaW1pbmFsIG9mZmVuY2UsIHRoZSBmaXJzdCBjcmltaW5hbCBwcm9zZWN1dGlvbiBkaWQgbm90IHRha2UgcGxhY2UgdW50aWwgMjAxNCB3aGVuIGEgZG9jdG9yIHdhcyBhbGxlZ2VkIHRvIGhhdmUgcGVyZm9ybWVkIEZHTSwgYnV0IGFjcXVpdHRlZCBhZnRlciB0cmlhbC4gVGhlIEhvdXNlIG9mIENvbW1vbnMgSG9tZSBBZmZhaXJzIENvbW1pdHRlZVx1MjAxOXMgbGF0ZXN0IHJlcG9ydCwgRmVtYWxlIEdlbml0YWwgTXV0aWxhdGlvbjogQWJ1c2UgVW5jaGVja2VkLCAxNSBTZXB0ZW1iZXIgMjAxNiwgbWFrZXMgcmVjb21tZW5kYXRpb25zIHRvIGVuY291cmFnZSBtb3JlIHN1Y2Nlc3NmdWwgcHJvc2VjdXRpb25zLiJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDEtMzFUMTY6NDE6MzUuMTc3NDI4NCswMDowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIEhvdXNlIG9mIExvcmRzIExpYnJhcnkgQnJpZWZpbmcgcHJvdmlkZXMgYmFja2dyb3VuZCBpbmZvcm1hdGlvbiBvbiB0aGUgVW5pdGVkIE5hdGlvbnMgSW50ZXJuYXRpb25hbCBEYXkgb2YgWmVybyBUb2xlcmFuY2UgZm9yIEZlbWFsZSBHZW5pdGFsIE11dGlsYXRpb24uIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMSUYtMjAxNy0wMDEyIn0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy80MTQwNDEiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBJbiBGb2N1cyJ9CiAgICAgIH0KICAgICAgLCAidGl0bGUiIDogIkludGVybmF0aW9uYWwgRGF5IG9mIFplcm8gVG9sZXJhbmNlIGZvciBGZW1hbGUgR2VuaXRhbCBNdXRpbGF0aW9uLCA2IEZlYnJ1YXJ5IDIwMTciLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NDc5IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQWZyaWNhIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NDk3IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQXNpYSJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTU0MCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkNyaW1lcyBvZiB2aW9sZW5jZSJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTYzNSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkh1bWFuIHJpZ2h0cyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTc0NyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlNleHVhbCBvZmZlbmNlcyJ9CiAgICAgIH0KICAgICAgXSwgInR5cGUiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvc2NoZW1hL3BhcmwjUmVzZWFyY2hCcmllZmluZyJ9CiAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Jlc291cmNlcy82ODE0NTIiLCAiYWJzdHJhY3QiIDogeyJfdmFsdWUiIDogIldvcmxkIENhbmNlciBEYXkgaGFzIGJlZW4gbWFya2VkIG9uIDQgRmVicnVhcnkgZWFjaCB5ZWFyIHNpbmNlIDIwMDAsIHdoZW4gaXQgd2FzIGVzdGFibGlzaGVkIGF0IHRoZSBXb3JsZCBTdW1taXQgQWdhaW5zdCBDYW5jZXIgZm9yIHRoZSBOZXcgTWlsbGVubml1bSBoZWxkIGluIFBhcmlzIHRoYXQgeWVhci4gSXQgaXMgYW4gaW5pdGlhdGl2ZSBvZiB0aGUgVW5pb24gZm9yIEludGVybmF0aW9uYWwgQ2FuY2VyIENvbnRyb2wgKFVJQ0MpLCBhIG1lbWJlcnNoaXAgb3JnYW5pc2F0aW9uIG9mIG92ZXIgOTUwIG9yZ2FuaXNhdGlvbnMgaW4gbW9yZSB0aGFuIDE1MCBjb3VudHJpZXMgdGhhdCB3b3JrcyB0byByZWR1Y2UgdGhlIGdsb2JhbCBjYW5jZXIgYnVyZGVuLCBwcm9tb3RlIGdyZWF0ZXIgZXF1aXR5IGFuZCBpbnRlZ3JhdGUgY2FuY2VyIGNvbnRyb2wgaW50byB0aGUgd29ybGQgaGVhbHRoIGFuZCBkZXZlbG9wbWVudCBhZ2VuZGEuIFRoZSBpbml0aWF0aXZlIGlzIHN1cHBvcnRlZCBieSB0aGUgV29ybGQgSGVhbHRoIE9yZ2FuaXNhdGlvbiAoV0hPKSBhbmQgSW50ZXJuYXRpb25hbCBBZ2VuY3kgZm9yIFJlc2VhcmNoIG9uIENhbmNlciAoSUFSQykuXG4gXG5UaGUgdGhlbWUgZm9yIFdvcmxkIENhbmNlciBEYXkgMjAxNlx1MjAxMzE4IGlzIFx1MjAxOFdlIGNhbi4gSSBjYW5cdTIwMTkuIFRoZSBVSUNDIGhhcyBzdGF0ZWQgdGhhdCBldmVudHMgdGFraW5nIHBsYWNlIGluIHRoaXMgY3ljbGUgd2lsbCBleHBsb3JlIGhvdyBcdTIwMWNldmVyeW9uZVx1MjAxNGFzIGEgY29sbGVjdGl2ZSBvciBhcyBpbmRpdmlkdWFsc1x1MjAxNGNhbiBkbyB0aGVpciBwYXJ0IHRvIHJlZHVjZSB0aGUgZ2xvYmFsIGJ1cmRlbiBvZiBjYW5jZXJcdTIwMWQuXG4gXG5JbiAyMDE2LCB0aGUgVW5pdGVkIE5hdGlvbnMgb3V0bGluZWQgdGhlIGZvbGxvd2luZyBpbmZvcm1hdGlvbiBhcyBwYXJ0IG9mIGl0cyBjYW1wYWlnbiB0byBzdXBwb3J0IHRoZSBXb3JsZCBDYW5jZXIgRGF5IGluaXRpYXRpdmU6wqBcbiBcbiBDYW5jZXIgaXMgYSBsZWFkaW5nIGNhdXNlIG9mIGRlYXRoIHdvcmxkd2lkZSwgYWNjb3VudGluZyBmb3IgOC4yIG1pbGxpb24gZGVhdGhzIGluIDIwMTIuIEx1bmcsIHN0b21hY2gsIGxpdmVyLCBjb2xvbiBhbmQgYnJlYXN0IGNhbmNlciBjYXVzZSB0aGUgbW9zdCBjYW5jZXIgZGVhdGhzIGVhY2ggeWVhci4gVGhlIG1vc3QgZnJlcXVlbnQgdHlwZXMgb2YgY2FuY2VyIGRpZmZlciBiZXR3ZWVuIG1lbiBhbmQgd29tZW4uIEFib3V0IDMwIHBlcmNlbnQgb2YgY2FuY2VyIGRlYXRocyBhcmUgZHVlIHRvIHRoZSBmaXZlIGxlYWRpbmcgYmVoYXZpb3VyYWwgYW5kIGRpZXRhcnkgcmlza3M6IGhpZ2ggYm9keSBtYXNzIGluZGV4LCBsb3cgZnJ1aXQgYW5kIHZlZ2V0YWJsZSBpbnRha2UsIGxhY2sgb2YgcGh5c2ljYWwgYWN0aXZpdHksIHRvYmFjY28gdXNlLCBhbGNvaG9sIHVzZS4gVG9iYWNjbyB1c2UgaXMgdGhlIG1vc3QgaW1wb3J0YW50IHJpc2sgZmFjdG9yIGZvciBjYW5jZXIgY2F1c2luZyAyMiBwZXJjZW50IG9mIGdsb2JhbCBjYW5jZXIgZGVhdGhzIGFuZCA3MSBwZXJjZW50IG9mIGdsb2JhbCBsdW5nIGNhbmNlciBkZWF0aHMuIENhbmNlciBjYXVzaW5nIHZpcmFsIGluZmVjdGlvbnMgc3VjaCBhcyBIQlYvSENWIGFuZCBIUFYgYXJlIHJlc3BvbnNpYmxlIGZvciB1cCB0byAyMCBwZXJjZW50IG9mIGNhbmNlciBkZWF0aHMgaW4gbG93IGFuZCBtaWRkbGUgaW5jb21lIGNvdW50cmllcy4gQWJvdXQgNzAgcGVyY2VudCBvZiBhbGwgY2FuY2VyIGRlYXRocyBpbiAyMDA4IG9jY3VycmVkIGluIGxvdyBhbmQgbWlkZGxlIGluY29tZSBjb3VudHJpZXMuIERlYXRocyBmcm9tIGNhbmNlciB3b3JsZHdpZGUgYXJlIHByb2plY3RlZCB0byBjb250aW51ZSByaXNpbmcsIHdpdGggYW4gZXN0aW1hdGVkIDEzLjEgbWlsbGlvbiBkZWF0aHMgaW4gMjAzMC4gXG4gXG5UaGUgbW9zdCByZWNlbnQgc3RhdGlzdGljYWwgYnVsbGV0aW4gb24gY2FuY2VyIHJlZ2lzdHJhdGlvbiBzdGF0aXN0aWNzIHB1Ymxpc2hlZCBieSB0aGUgT2ZmaWNlIGZvciBOYXRpb25hbCBTdGF0aXN0aWNzIGluY2x1ZGVkIHRoZSBmb2xsb3dpbmcgbWFpbiBmaW5kaW5ncyByZWxhdGluZyB0byBjYW5jZXIgcmVnaXN0cmF0aW9ucyBpbiBFbmdsYW5kIGluIDIwMTQ6wqBcbiBcbiBUaGUgbnVtYmVyIG9mIG5ldyBjYW5jZXIgcmVnaXN0cmF0aW9ucyBpbiBFbmdsYW5kIHdhcyAyOTYsODYzIGluIDIwMTQ7IGFuIGluY3JlYXNlIG9mIDQsMTgzIHJlZ2lzdHJhdGlvbnMgZnJvbSB0aGUgc2FtZSBwb2ludCBpbiAyMDEzLiBNb3JlIGNhbmNlcnMgd2VyZSByZWdpc3RlcmVkIGluIG1hbGVzICgxNTAsODMyKSB0aGFuIGZlbWFsZXMgKDE0NiwwMzEpLiBBY3Jvc3MgdGhlIG1ham9yaXR5IG9mIGNhbmNlciBzaXRlcyBtb3JlIG1hbGVzIGFyZSBkaWFnbm9zZWQgd2l0aCBjYW5jZXIgdGhhbiBmZW1hbGVzLiBUaGlzIGlzIGEgcGVyc2lzdGVudCBmZWF0dXJlIG9mIHRoZSBkYXRhLCByZXBvcnRlZCBpbiBwcmV2aW91cyByZWdpc3RyYXRpb24geWVhcnMuIFRoZSBhZ2Utc3RhbmRhcmRpc2VkIGluY2lkZW5jZSByYXRlcyBmb3IgbmV3bHkgZGlhZ25vc2VkIGNhbmNlcnMgd2VyZSA2NzAuOCBwZXIgMTAwLDAwMCBtYWxlcyBhbmQgNTQ2LjEgcGVyIDEwMCwwMDAgZmVtYWxlcy4gVGhlIHJhdGUgdGFrZXMgaW50byBhY2NvdW50IHRoZSBkaWZmZXJlbnQgYWdlIHN0cnVjdHVyZXMgYmV0d2VlbiBtYWxlcyBhbmQgZmVtYWxlcy4gQnJlYXN0ICgxNS42IHBlcmNlbnQpLCBwcm9zdGF0ZSAoMTMuNCBwZXJjZW50KSwgbHVuZyAoMTIuNiBwZXJjZW50KSBhbmQgY29sb3JlY3RhbCAoMTEuNSBwZXJjZW50KSBjYW5jZXIgY29udGludWUgdG8gYWNjb3VudCBmb3Igb3ZlciBoYWxmIG9mIHRoZSBtYWxpZ25hbnQgY2FuY2VyIHJlZ2lzdHJhdGlvbnMgaW4gRW5nbGFuZCBmb3IgYWxsIGFnZXMgY29tYmluZWQuIENhbmNlciBpcyBhIGRpc2Vhc2Ugb2YgdGhlIGVsZGVybHksIGFzIGFwcHJveGltYXRlbHkgMTIgcGVyY2VudCBvZiB0aGUgcG9wdWxhdGlvbiBhcmUgYWdlZCA3MCBhbmQgYWJvdmUgYW5kIGFjY291bnQgZm9yIDUwLjIgcGVyY2VudCBvZiB0aGUgdG90YWwgY2FuY2VycyByZWdpc3RlcmVkIGluIDIwMTQuIEdlbmVyYWxseSwgdGhlIGNhbmNlciBpbmNpZGVuY2UgcmF0ZXMgaW5jcmVhc2Ugb3ZlciB0aW1lLCB3aGlsZSBtb3J0YWxpdHkgcmF0ZXMgZGVjcmVhc2UsIHJlZmxlY3RpbmcgdGhlIGdlbmVyYWwgaW5jcmVhc2UgaW4gY2FuY2VyIHN1cnZpdmFsIGFzIHJlcG9ydGVkIGluIHRoZSBsYXRlc3QgY2FuY2VyIHN1cnZpdmFsIGVzdGltYXRlcy4ifQogICAgICAsICJkYXRlIiA6IHsiX3ZhbHVlIiA6ICIyMDE3LTAxLTMxVDEzOjA2OjEzLjE3NjIwNzMrMDA6MDAiLCAiX2RhdGF0eXBlIiA6ICJkYXRlVGltZSJ9CiAgICAgICwgImRlc2NyaXB0aW9uIiA6IFsiVGhpcyBIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5IGJyaWVmaW5nIHByb3ZpZGVzIGluZm9ybWF0aW9uIG9uIFdvcmxkIENhbmNlciBEYXksIG1hcmtlZCBvbiA0IEZlYnJ1YXJ5IGVhY2ggeWVhciwgYW5kIHJlY2VudCBlc3RpbWF0ZXMgb2YgdGhlIGluY2lkZW5jZSBvZiBjYW5jZXIgYm90aCBnbG9iYWxseSBhbmQgaW4gRW5nbGFuZC4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIkxJRi0yMDE3LTAwMTEifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzQxNDA0MSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkxvcmRzIEluIEZvY3VzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiV29ybGQgQ2FuY2VyIERheSwgNCBGZWJydWFyeSAyMDE3IiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTU1NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkRpc2Vhc2VzIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjE5IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSGVhbHRoIGVkdWNhdGlvbiBhbmQgcHJldmVudGl2ZSBtZWRpY2luZSJ9CiAgICAgIH0KICAgICAgXSwgInR5cGUiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvc2NoZW1hL3BhcmwjUmVzZWFyY2hCcmllZmluZyJ9CiAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Jlc291cmNlcy82ODE0NTEiLCAiYWJzdHJhY3QiIDogeyJfdmFsdWUiIDogIlRoZSBIb3VzZSBvZiBMb3JkcyBSZWZvcm0gQmlsbCBbSExdIGlzIGEgcHJpdmF0ZSBtZW1iZXJcdTIwMTlzIGJpbGwgaW50cm9kdWNlZCBieSBCYXJvbmVzcyBKb25lcyBvZiBNb3Vsc2Vjb29tYiAoR3JlZW4gUGFydHkpLiBUaGUgQmlsbCByZWNlaXZlZCBpdHMgZmlyc3QgcmVhZGluZyBvbiAyNiBNYXkgMjAxNiBhbmQgaXMgc2NoZWR1bGVkIHRvIHJlY2VpdmUgaXRzIHNlY29uZCByZWFkaW5nIG9uIDMgRmVicnVhcnkgMjAxNy4gVGhlIEJpbGwgc2Vla3MgdG8gZXhjbHVkZSBleGNlcHRlZCBoZXJlZGl0YXJ5IHBlZXJzIGZyb20gdGhlIEhvdXNlIG9mIExvcmRzLCBhbmQgd291bGQgaW50cm9kdWNlIHJlZ2lvbmFsIGVsZWN0aW9ucyB0byBzZWxlY3QgMjkyIE1lbWJlcnMgdG8gc2l0IGFuZCB2b3RlIGluIHRoZSBIb3VzZS4gVGhlc2UgZWxlY3RlZCBNZW1iZXJzIHdvdWxkIHNlcnZlIGVpZ2h0LXllYXIgdGVybXMsIHdpdGggaGFsZiBiZWluZyBlbGVjdGVkIGV2ZXJ5IGZvdXIgeWVhcnMuIFRoZSBCaWxsIHdvdWxkIG5vdCBjaGFuZ2UgdGhlIHJpZ2h0IG9mIGxpZmUgcGVlcnMgYW5kIExvcmRzIFNwaXJpdHVhbCB0byBzaXQgYW5kIGJlIGFwcG9pbnRlZCB0byB0aGUgSG91c2UsIGJ1dCB3b3VsZCByZW1vdmUgdGhlaXIgcmlnaHQgdG8gdm90ZS4gU2V0dGluZyBvdXQgdGhlIHB1cnBvc2Ugb2YgdGhlIEJpbGwsIEJhcm9uZXNzIEpvbmVzIHN0YXRlZDpcbiBcbiBEZW1vY3JhdGljIHJlZm9ybSBvZiB0aGUgSG91c2Ugb2YgTG9yZHMgaXMgbGVmdG92ZXIgYnVzaW5lc3MgZnJvbSB0aGUgMTk5OSBIb3VzZSBvZiBMb3JkcyBBY3QgYW5kIGhhcyBiZWVuIGF0dGVtcHRlZCBpbiBlYWNoIG9mIHRoZSBsYXN0IHRocmVlIHBhcmxpYW1lbnRzLiBJbiBhZGRpdGlvbiwgaXQgaXMgcHJvbWlzZWQgYnkgYWxsIHRoZSBtYWluIHBvbGl0aWNhbCBwYXJ0aWVzIGFuZCB3aWxsIGJlIGluZXZpdGFibGUgd2l0aGluIHRoZSBuZXh0IDUgdG8gMTUgeWVhcnMuIE15IEJpbGwgZ2l2ZXMgdGhlIHByZXNlbnQgSG91c2Ugb2YgTG9yZHMgdGhlIGNoYW5jZSB0byBkZXNpZ24gaXRzIG93biByZWZvcm0sIHJhdGhlciB0aGFuIGhhdmluZyBzb21ldGhpbmcgaW1wb3NlZCB1cG9uIGl0IGJ5IGEgZnV0dXJlIEhvdXNlIG9mIENvbW1vbnMuIEl0IHdvdWxkIGludHJvZHVjZSBlbGVjdGVkIG1lbWJlcnMgYW5kIHJlbW92ZSB0aGUgcmVtYWluaW5nIGhlcmVkaXRhcnkgcGVlcnMsIGJ1dCB3b3VsZCBhbGxvdyBhbGwgbGlmZSBwZWVycyBhbmQgYmlzaG9wcyB0byByZW1haW4gYXMgbm9uLXZvdGluZyBtZW1iZXJzIG9mIHRoZSByZWZvcm1lZCBIb3VzZSB3aXRoIGFsbCB0aGVpciBvdGhlciByaWdodHMgYW5kIHByaXZpbGVnZXMgaW50YWN0LiJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDEtMzFUMTM6MDI6MTkuNzA2MjQ5OCswMDowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIEhvdXNlIG9mIExvcmRzIExpYnJhcnkgYnJpZWZpbmcgcHJvdmlkZXMgaW5mb3JtYXRpb24gaW4gc3VwcG9ydCBvZiB0aGUgSG91c2Ugb2YgTG9yZHMgY29uc2lkZXJhdGlvbiBvZiB0aGUgSG91c2Ugb2YgTG9yZHMgUmVmb3JtIEJpbGwgW0hMXS4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIkxJRi0yMDE3LTAwMTAifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzQxNDA0MSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkxvcmRzIEluIEZvY3VzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiSG91c2Ugb2YgTG9yZHMgUmVmb3JtIEJpbGwgW0hMXTogQnJpZWZpbmcgZm9yIExvcmRzIFN0YWdlcyIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2MjgiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTY3NSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIk1lbWJlcnMgb2YgdGhlIExvcmRzIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzY4MDc1MSIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiVGhlIENoaWxkIENvbnRhY3QgQ2VudHJlcyAoQWNjcmVkaXRhdGlvbikgQmlsbCBbSExdIFtodHRwOi8vd3d3LnB1YmxpY2F0aW9ucy5wYXJsaWFtZW50LnVrL3BhL2JpbGxzL2xiaWxsLzIwMTYtMjAxNy8wMDI1LzE3MDI1LnBkZl0gaXMgYSBwcml2YXRlIG1lbWJlclx1MjAxOXMgYmlsbCBpbnRyb2R1Y2VkIGJ5IEJhcm9uZXNzIE1jSW50b3NoIG9mIFBpY2tlcmluZyAoQ29uc2VydmF0aXZlKS4gVGhlIEJpbGwgaGFkIGl0cyBmaXJzdCByZWFkaW5nIGluIHRoZSBIb3VzZSBvZiBMb3JkcyBvbiA2IEp1bmUgMjAxNiBhbmQgaXMgc2NoZWR1bGVkIHRvIHJlY2VpdmUgaXRzIHNlY29uZCByZWFkaW5nIG9uIDMgRmVicnVhcnkgMjAxNy4gVGhlIEJpbGwgd291bGQgbWFrZSBpdCBhIHJlcXVpcmVtZW50IGZvciBhbnkgY2hpbGQgY29udGFjdCBjZW50cmUgb3Igb3JnYW5pc2F0aW9uIHRoYXQgb2ZmZXJzIGZhY2lsaXRpZXMgb3Igc2VydmljZXMgZm9yIGNoaWxkIGNvbnRhY3RcdTIwMTR3aGVuIGNoaWxkcmVuIG9mIHNlcGFyYXRlZCBmYW1pbGllcyBtYWtlIGNvbnRhY3Qgd2l0aCBub24tcmVzaWRlbnQgcGFyZW50cyBhbmQgc29tZXRpbWVzIG90aGVyIGZhbWlseSBtZW1iZXJzXHUyMDE0dG8gYmUgYWNjcmVkaXRlZCBieSB0aGUgTmF0aW9uYWwgQXNzb2NpYXRpb24gb2YgQ2hpbGQgQ29udGFjdCBDZW50cmVzIChOQUNDQykuIFRoZSBOQUNDQyBpcyBhIHJlZ2lzdGVyZWQgY2hhcml0eSBhbmQgZGVzY3JpYmVzIGl0c2VsZiBhcyBhIHN1cHBvcnRpbmcgbWVtYmVyc2hpcCBib2R5IGZvciBhcm91bmQgMzUwIGNoaWxkIGNvbnRhY3QgY2VudHJlcyBhbmQgc2VydmljZXMgbG9jYXRlZCB0aHJvdWdob3V0IEVuZ2xhbmQsIFdhbGVzLCBOb3J0aGVybiBJcmVsYW5kLCB0aGUgQ2hhbm5lbCBJc2xhbmRzIGFuZCB0aGUgUmVwdWJsaWMgb2YgSXJlbGFuZC7CoCBVbmRlciB0aGUgcHJvdmlzaW9ucyBpbiB0aGUgQmlsbCwgYWNjcmVkaXRhdGlvbiwgb3IgcmUtYWNjcmVkaXRhdGlvbiwgd291bGQgb25seSBiZSBleHRlbmRlZCB0byBjZW50cmVzIHRoYXQgYWRoZXJlIHRvIHJlbGV2YW50IE5BQ0NDIHN0YW5kYXJkcy4gVGhlIEJpbGwgd291bGQgaW5zZXJ0IHNlY3Rpb25zIGludG8gdGhlIENoaWxkcmVuIEFjdCAxOTg5IGFuZCB0aGUgQ2hpbGRyZW4gQWN0IDIwMDQsIGFuZCB3b3VsZCBleHRlbmQgdG8gRW5nbGFuZCBvbmx5LlxuIFxuQmFyb25lc3MgTWNJbnRvc2ggaGFzIGRlc2NyaWJlZCB0aGUgQmlsbFx1MjAxOXMgY29udGV4dCBhbmQgaW50ZW50aW9ucyBhcyBmb2xsb3dzOlxuIFxuIE5BQ0NDIGhhcyBzZXQgbmF0aW9uYWwgc3RhbmRhcmRzIGFuZCBoYWQgYWNjcmVkaXRlZCBjaGlsZCBjb250YWN0IGNlbnRyZXMgaW4gYSBwcml2YXRlIGxhdyBzZXR0aW5nIGZvciAyNSB5ZWFycy4gTkFDQ0MgaGFzIGVuc3VyZWQgcm9idXN0IHF1YWxpdHkgc3RhbmRhcmRzIGluIHRlcm1zIG9mIHRoZSB0cmFpbmluZyBvZiBzdGFmZiBhbmQgdm9sdW50ZWVycyBhbmQgaW4gZGV2ZWxvcGluZyBwcm9jZXNzZXMgZm9yIHNhZmUgZGVsaXZlcnkgb2YgY29udGFjdCwgd2hpY2ggaXMgaW4gdGhlIGJlc3QgaW50ZXJlc3RzIG9mIHRoZSBjaGlsZC4gU2luY2UgMjAwNyB0aGVzZSBzdGFuZGFyZHMsIHdoaWNoIG9wZXJhdGUgaW4gcHJpdmF0ZSBsYXcgc2V0dGluZ3MsIGhhdmUgYmVlbiByZXZpc2VkIHdpdGggaW5wdXQgYW5kIGFwcHJvdmFsIGZyb20gdGhlIHJlbGV2YW50IGdvdmVybm1lbnQgZGVwYXJ0bWVudHMgYW5kIFt0aGUgQ2hpbGRyZW4gYW5kIEZhbWlseSBDb3VydCBBZHZpc29yeSBhbmQgU3VwcG9ydCBTZXJ2aWNlXSBDYWZjYXNzLiBGb3IgbW9yZSB0aGFuIGEgZGVjYWRlIHRoZXJlIGhhcyBiZWVuIGEganVkaWNpYWwgcHJvdG9jb2wgaXNzdWVkIGJ5IHRoZSBQcmVzaWRlbnQgb2YgdGhlIEZhbWlseSBEaXZpc2lvbiBbb2YgdGhlIEhpZ2ggQ291cnRdIHRoYXQgc3RhdGVzIHdoZW4gbWFraW5nIG9yZGVycyBmb3IgYXJyYW5nZW1lbnRzIGZvciBjaGlsZHJlbiAoY29udGFjdCBvcmRlcnMpLCBjb3VydHMgbXVzdCBvbmx5IHJlZmVyIHRvIGEgTkFDQ0MgYWNjcmVkaXRlZCBjZW50cmUuIE5BQ0NDIGhhcyBhbiBpbmRlcGVuZGVudCBzdGFuZGFyZHMgYm9hcmQgY2hhaXJlZCBieSBTaXIgTWFyayBIZWRsZXksIGEgZm9ybWVyIGhpZ2ggY291cnQganVkZ2UgaW4gdGhlIEZhbWlseSBEaXZpc2lvbi4gQXMgdGhlIG51bWJlciBvZiBjaGlsZHJlbiBpbnZvbHZlZCBpbiB0aGUgcHVibGljIGxhdyBzeXN0ZW0gd2hlcmUgdGhlaXIgY2FyZSBpcyB0aGUgcmVzcG9uc2liaWxpdHkgb2YgdGhlIGxvY2FsIGF1dGhvcml0eVx1MjAxNFx1MjAxOGxvb2tlZCBhZnRlciBjaGlsZHJlblx1MjAxOVx1MjAxNGluY3JlYXNlcywgYW5kIGxvY2FsIGF1dGhvcml0aWVzIGhhdmUgYSBzdGF0dXRvcnkgb2JsaWdhdGlvbiB1bmRlciBzZWN0aW9uIDM0IG9mIHRoZSBDaGlsZHJlbiBBY3QgMTk4OSB0byBwcm9tb3RlIGNvbnRhY3QgYmV0d2VlbiBjaGlsZHJlbiBhbmQgdGhlaXIgcGFyZW50cyBhbmQgcmVsZXZhbnQgb3RoZXJzLCBpdCBpcyBlc3NlbnRpYWwgdG8gbWFrZSBjZXJ0YWluIHRoYXQgdGhlc2Ugc2FtZSBoaWdoIHN0YW5kYXJkcyBvZiBwcmFjdGljZSB0aGF0IG9wZXJhdGUgaW4gdGhlIHByaXZhdGUgbGF3IHNlY3RvciBhcmUgbWV0IGluIGEgcHVibGljIGxhdyBzZXR0aW5nLiBUaGlzIEJpbGwgd2lsbCBlbnN1cmUgdGhhdCBhbnkgY2hpbGQgY29udGFjdCBjZW50cmUgb3Igb3JnYW5pc2F0aW9uIHRoYXQgb2ZmZXJzIGZhY2lsaXRpZXMgb3Igc2VydmljZXMgZm9yIGNoaWxkIGNvbnRhY3QgbXVzdCBiZSBhY2NyZWRpdGVkIGJ5IE5BQ0NDLiJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDEtMzBUMTY6MzU6MjguNzgyNjUzMyswMDowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIEhvdXNlIG9mIExvcmRzIExpYnJhcnkgYnJpZWZpbmcgcHJvdmlkZXMgaW5mb3JtYXRpb24gaW4gc3VwcG9ydCBvZiB0aGUgSG91c2Ugb2YgTG9yZHMgY29uc2lkZXJhdGlvbiBvZiB0aGUgQ2hpbGQgQ29udGFjdCBDZW50cmVzIChBY2NyZWRpdGF0aW9uKSBCaWxsIFtITF0gb24gMyBGZWJydWFyeSAyMDE3LiJdLCAiaWRlbnRpZmllciIgOiB7Il92YWx1ZSIgOiAiTElGLTIwMTctMDAwOSJ9CiAgICAgICwgInB1Ymxpc2hlciIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgICwgInNlY3Rpb24iIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgXSwgInN1YlR5cGUiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvNDE0MDQxIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTG9yZHMgSW4gRm9jdXMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJDaGlsZCBDb250YWN0IENlbnRyZXMgKEFjY3JlZGl0YXRpb24pIEJpbGwgW0hMXTogQnJpZWZpbmcgZm9yIExvcmRzIFN0YWdlcyIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2MDAiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJGYW1pbHkgbGF3In0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzY4MDc0NSIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiVGhlIFJlZ3VsYXRpb24gb2YgSGVhbHRoIGFuZCBTb2NpYWwgQ2FyZSBQcm9mZXNzaW9ucyBFdGMgQmlsbCBbSExdIGlzIGEgcHJpdmF0ZSBtZW1iZXJcdTIwMTlzIGJpbGwgaW50cm9kdWNlZCBieSBMb3JkIEh1bnQgb2YgS2luZ3MgSGVhdGggKExhYm91cikuIFRoZSBCaWxsIHJlY2VpdmVkIGl0cyBmaXJzdCByZWFkaW5nIGluIHRoZSBIb3VzZSBvZiBMb3JkcyBvbiAyNiBNYXkgMjAxNiwgYW5kIGlzIHNjaGVkdWxlZCB0byBoYXZlIGl0cyBzZWNvbmQgcmVhZGluZyBvbiAzIEZlYnJ1YXJ5IDIwMTcuIFRoZSBCaWxsIHdvdWxkIHJlcXVpcmUgdGhlIEdvdmVybm1lbnQgdG8gYnJpbmcgZm9yd2FyZCBsZWdpc2xhdGlvbiBnaXZpbmcgZWZmZWN0IHRvIHRoZSByZWNvbW1lbmRhdGlvbnMgb2YgdGhlIExhdyBDb21taXNzaW9uLCBTY290dGlzaCBMYXcgQ29tbWlzc2lvbiBhbmQgTm9ydGhlcm4gSXJlbGFuZCBMYXcgQ29tbWlzc2lvbiBpbiB0aGVpciByZXBvcnQgUmVndWxhdGlvbiBvZiBIZWFsdGggQ2FyZSBQcm9mZXNzaW9uYWxzOiBSZWd1bGF0aW9uIG9mIFNvY2lhbCBDYXJlIFByb2Zlc3Npb25hbHMgaW4gRW5nbGFuZCwgQXByaWwgMjAxNCwgQ20gODgzOS4gVGhlIHJlcG9ydCBpbmNsdWRlZCBhIGRyYWZ0IGJpbGwgdG8gcmVmb3JtIHRoZSBsZWdhbCBmcmFtZXdvcmsgYXJvdW5kIHRoZSByZWd1bGF0aW9uIG9mIGhlYWx0aCBjYXJlIHByb2Zlc3Npb25hbHMuIFRoZSBsZWdpc2xhdGlvbiB3b3VsZCBoYXZlIHRvIGJlIGludHJvZHVjZWQgd2l0aGluIHRocmVlIG1vbnRocyBvZiB0aGUgZGF5IG9uIHdoaWNoIHRoZSBBY3QgaXMgcGFzc2VkLiBDbGF1c2UgMSgyKSBvZiB0aGUgQmlsbCB3b3VsZCByZXF1aXJlIHRoZSBTZWNyZXRhcnkgb2YgU3RhdGUgdG8gY29uZmlybSB0aGF0IGluIHRoZWlyIHZpZXcgdGhlIGludHJvZHVjZWQgYmlsbCBpcyBzdWJzdGFudGlhbGx5IGJhc2VkIG9uIHRoZSBkcmFmdCBiaWxsIHByZXBhcmVkIGJ5IHRoZSBMYXcgQ29tbWlzc2lvbnMuIExvcmQgSHVudCBpbnRyb2R1Y2VkIGEgYmlsbCBvZiB0aGUgc2FtZSBuYW1lIGluIHRoZSAyMDE1XHUyMDEzMTYgc2Vzc2lvbi4ifQogICAgICAsICJkYXRlIiA6IHsiX3ZhbHVlIiA6ICIyMDE3LTAxLTMwVDE1OjE2OjA2LjQzNzIzNTYrMDA6MDAiLCAiX2RhdGF0eXBlIiA6ICJkYXRlVGltZSJ9CiAgICAgICwgImRlc2NyaXB0aW9uIiA6IFsiVGhpcyBIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5IGJyaWVmaW5nIHByb3ZpZGVzIGluZm9ybWF0aW9uIGluIHN1cHBvcnQgb2YgdGhlIEhvdXNlIG9mIExvcmRzIGNvbnNpZGVyYXRpb24gb2YgdGhlIFJlZ3VsYXRpb24gb2YgSGVhbHRoIGFuZCBTb2NpYWwgQ2FyZSBQcm9mZXNzaW9ucyBFdGMgQmlsbCBbSExdIDIwMTYtMTcgb24gMyBGZWJydWFyeSAyMDE3LiJdLCAiaWRlbnRpZmllciIgOiB7Il92YWx1ZSIgOiAiTElGLTIwMTctMDAwOCJ9CiAgICAgICwgInB1Ymxpc2hlciIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgICwgInNlY3Rpb24iIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgXSwgInN1YlR5cGUiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvNDE0MDQxIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTG9yZHMgSW4gRm9jdXMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJSZWd1bGF0aW9uIG9mIEhlYWx0aCBhbmQgU29jaWFsIENhcmUgUHJvZmVzc2lvbnMgRXRjIEJpbGwgW0hMXTogQnJpZWZpbmcgZm9yIExvcmRzIFN0YWdlcyIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2MjMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIZWFsdGggc3RhZmYgYW5kIHByb2Zlc3Npb25zIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzM0NTU3OCIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiVGhpcyBub3RlIGxpc3RzIENhYmluZXQgbWVldGluZ3MgaGVsZCBhd2F5IGZyb20gRG93bmluZyBTdHJlZXQuIFJlZ2lvbmFsIENhYmluZXQgbWVldGluZ3Mgd2VyZSBpbnRyb2R1Y2VkIGJ5IEdvcmRvbiBCcm93biBpbiAyMDA4IGFuZCBjb250aW51ZWQgdW5kZXIgdGhlIENvYWxpdGlvbiBHb3Zlcm5tZW50LiBUaGVyZXNhIE1heSBoZWxkIGhlciBmaXJzdCByZWdpb25hbCBDYWJpbmV0IG1lZXRpbmcgaW4gdGhlIG5vcnRoLXdlc3QgaW4gSmFudWFyeSAyMDE3LlxuIFxuUHJpb3IgdG8gMjAwOCwgQ2FiaW5ldCBtZWV0aW5ncyBvdXRzaWRlIExvbmRvbiB3ZXJlIGV4dHJlbWVseSByYXJlLlxuIFxuQ2FiaW5ldCBndWlkYW5jZcKgXG4gXG5UaGUgZm9sbG93aW5nIGlzIHRha2VuIGZyb20gdGhlIENhYmluZXQgTWFudWFsLCBhIGd1aWRlIHRvIGxhd3MsIGNvbnZlbnRpb25zIGFuZCBydWxlcyBvbiB0aGUgb3BlcmF0aW9uIG9mIGdvdmVybm1lbnQ6XG4gXG4gNC43IFRoZSBQcmltZSBNaW5pc3RlciBkZXRlcm1pbmVzIGFuZCByZWd1bGF0ZXMgdGhlIHByb2NlZHVyZXMgb2YgQ2FiaW5ldCwgaW5jbHVkaW5nIHdoZW4gYW5kIHdoZXJlIG1lZXRpbmdzIHRha2UgcGxhY2UuIENhYmluZXQgY3VycmVudGx5IG1lZXRzIGluIHRoZSBDYWJpbmV0IFJvb20gaW4gMTAgRG93bmluZyBTdHJlZXQgZXZlcnkgVHVlc2RheSBtb3JuaW5nIHdoaWxlIFBhcmxpYW1lbnQgaXMgc2l0dGluZy4gUmVnaW9uYWwgQ2FiaW5ldHMgY2FuIGFsc28gdGFrZSBwbGFjZSwgd2hlcmUgdGhlIHdlZWtseSBDYWJpbmV0IG1lZXRpbmcgaXMgaGVsZCBpbiBhIGxvY2F0aW9uIG91dHNpZGUgTG9uZG9uLiBUaGUgYWdlbmRhIGZvciBDYWJpbmV0IHVzdWFsbHkgaW5jbHVkZXMgUGFybGlhbWVudGFyeSBidXNpbmVzcywgZG9tZXN0aWMgYW5kIGZvcmVpZ24gYWZmYWlycywgYW5kIHRvcGljYWwgaXNzdWVzLiBUaGUgcHJvY2VlZGluZ3Mgb2YgQ2FiaW5ldCBhbmQgQ2FiaW5ldCBjb21taXR0ZWVzIGFyZSByZWNvcmRlZCBieSB0aGUgQ2FiaW5ldCBTZWNyZXRhcmlhdC4gVGhlIG1pbnV0ZXMgcHJvZHVjZWQgYXJlIHRoZSBvZmZpY2lhbCByZWNvcmQgb2YgZGlzY3Vzc2lvbiBhbmQgdGhlIGRlY2lzaW9ucyBtYWRlLiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlIHBhcmFncmFwaHMgNC4zNCBhbmQgNC4zNSBvbiBDYWJpbmV0IG1pbnV0ZXMgYW5kIHBhcmFncmFwaHMgNC41MSBhbmQgNC41MiBvbiB0aGUgQ2FiaW5ldCBTZWNyZXRhcmlhdC4gXG4gXG5Nb3JlIGluZm9ybWF0aW9uIG9uIHRoZSBDYWJpbmV0IGFuZCB0aGUgd29ya2luZ3Mgb2YgR292ZXJubWVudCBjYW4gYmUgZm91bmQgb24gdGhlIENhYmluZXQgT2ZmaWNlIHdlYnNpdGU6IEhvdyBHb3Zlcm5tZW50IHdvcmtzLlxuIFxuRmVlZGJhY2tcbiBcblBsZWFzZSBzZW5kIGFueSBjb21tZW50cywgY29ycmVjdGlvbnMgb3Igc3VnZ2VzdGlvbnMgZm9yIG5ldyBsaXN0cyB0bzogUGFybGlhbWVudGFyeSBJbmZvcm1hdGlvbiBMaXN0cyBFZGl0b3IsIFBhcmxpYW1lbnQgJiBDb25zdGl0dXRpb24gQ2VudHJlLCBIb3VzZSBvZiBDb21tb25zLCBMb25kb24gU1cxQSBPQUEuXG4gXG7CoCJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDEtMzBUMTM6MTg6MzEuMDMxMjY1MiswMDowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJBIGxpc3Qgb2YgQ2FiaW5ldCBtZWV0aW5ncyBoZWxkIGF3YXkgZnJvbSBEb3duaW5nIFN0cmVldC4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIlNOMDY2MDEifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyNjciLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBDb21tb25zIExpYnJhcnkifQogICAgICB9CiAgICAgICwgInNlY3Rpb24iIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzYxMDU1IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiUGFybGlhbWVudCBhbmQgQ29uc3RpdHV0aW9uIENlbnRyZSJ9CiAgICAgIH0KICAgICAgXSwgInN1YlR5cGUiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvNDE0MDMzIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQ29tbW9ucyBCcmllZmluZyBwYXBlcnMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJSZWdpb25hbCBjYWJpbmV0IG1lZXRpbmdzIiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTUxNCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkNlbnRyYWwgZ292ZXJubWVudCJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTY3OSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIk1pbmlzdGVycyJ9CiAgICAgIH0KICAgICAgXSwgInR5cGUiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvc2NoZW1hL3BhcmwjUmVzZWFyY2hCcmllZmluZyJ9CiAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Jlc291cmNlcy82ODA3MzkiLCAiYWJzdHJhY3QiIDogeyJfdmFsdWUiIDogIlRoZSBFdXJvcGVhbiBVbmlvbiAoTm90aWZpY2F0aW9uIG9mIFdpdGhkcmF3YWwpIEJpbGwgd2FzIGludHJvZHVjZWQgaW4gdGhlIEhvdXNlIG9mIENvbW1vbnMgb24gMjYgSmFudWFyeSAyMDE3LiBUaGlzIHR3by1jbGF1c2UgQmlsbCB3b3VsZCBnaXZlIHRoZSBQcmltZSBNaW5pc3RlciB0aGUgcG93ZXIgdG8gbm90aWZ5IHRoZSBFdXJvcGVhbiBDb3VuY2lsIG9mIHRoZSBVS1x1MjAxOXMgaW50ZW50aW9uIHRvIHdpdGhkcmF3IGZyb20gdGhlIEV1cm9wZWFuIFVuaW9uIHVuZGVyIHRoZSB0ZXJtcyBvZiBBcnRpY2xlIDUwIG9mIHRoZSBUcmVhdHkgb24gRXVyb3BlYW4gVW5pb24uIEl0IGRvZXMgbm90IGNvbnRhaW4gYW4gb2JsaWdhdGlvbiB0byBleGVyY2lzZSB0aGlzIHBvd2VyLCBhbmQgaXQgaXMgZG9lcyBub3Qgc3BlY2lmeSBhbnkgZGVhZGxpbmUgb3IgdGltZXNjYWxlIGZvciBleGVyY2lzaW5nIGl0LiBUaGlzIGlzIGEgc2VwYXJhdGUgcGllY2Ugb2YgbGVnaXNsYXRpb24gZnJvbSB0aGUgR3JlYXQgUmVwZWFsIEJpbGwgd2hpY2ggdGhlIEdvdmVybm1lbnQgaW50ZW5kcyB0byBpbnRyb2R1Y2UgaW4gdGhlIG5leHQgUXVlZW5cdTIwMTlzIFNwZWVjaCB0byByZXBlYWwgdGhlIEV1cm9wZWFuIENvbW11bml0aWVzIEFjdCAxOTcyLlxuIFxuVGhlIEJpbGwgaGFzIGJlZW4gaW50cm9kdWNlZCBmb2xsb3dpbmcgYSBqdWRnbWVudCBieSB0aGUgU3VwcmVtZSBDb3VydCBvbiAyNCBKYW51YXJ5IDIwMTcsIHJlYWNoZWQgYnkgYSBtYWpvcml0eSBvZiBlaWdodCB0byB0aHJlZSwgd2hpY2ggaGVsZCB0aGF0IGFuIEFjdCBvZiBQYXJsaWFtZW50IGlzIHJlcXVpcmVkIHRvIGF1dGhvcmlzZSBtaW5pc3RlcnMgdG8gZ2l2ZSBub3RpY2Ugb2YgdGhlIFVLXHUyMDE5cyBkZWNpc2lvbiB0byB3aXRoZHJhdyBmcm9tIHRoZSBFVS4gVGhlIFN1cHJlbWUgQ291cnQgcmVqZWN0ZWQgdGhlIEdvdmVybm1lbnRcdTIwMTlzIGFyZ3VtZW50IHRoYXQgdGhpcyBjb3VsZCBiZSBkb25lIGJ5IGV4ZXJjaXNpbmcgYSBwcmVyb2dhdGl2ZSBwb3dlci5cbiBcbkplcmVteSBDb3JieW4sIExlYWRlciBvZiB0aGUgTGFib3VyIFBhcnR5LCBoYXMgaXNzdWVkIGEgdGhyZWUtbGluZSB3aGlwIGZvciBoaXMgTVBzIG5vdCB0byBibG9jayB0aGUgQmlsbCwgYnV0IExhYm91ciBoYXMgdGFibGVkIGEgbnVtYmVyIG9mIGFtZW5kbWVudHMgaW50ZW5kZWQgdG8gYWxsb3cgYSBcdTIwMWNtZWFuaW5nZnVsXHUyMDFkIHZvdGUgaW4gUGFybGlhbWVudCBvbiB0aGUgQnJleGl0IGRlYWwsIHRvIGVzdGFibGlzaCBhIG51bWJlciBvZiBcdTIwMWNrZXkgcHJpbmNpcGxlc1x1MjAxZCBpdCB3YW50cyB0aGUgR292ZXJubWVudCB0byBzZWUgdG8gbmVnb3RpYXRlIGR1cmluZyB0aGUgcHJvY2VzcywgYW5kIHRvIGVuc3VyZSBcdTIwMWNyb2J1c3QgYW5kIHJlZ3VsYXJcdTIwMWQgcGFybGlhbWVudGFyeSBzY3J1dGlueS4gVGhlIExpYmVyYWwgRGVtb2NyYXRzIGhhdmUgc2FpZCB0aGV5IHdpbGwgc2VlayB0byBhbWVuZCB0aGUgQmlsbCB0byBzZWN1cmUgYSByZWZlcmVuZHVtIG9uIHRoZSB0ZXJtcyBvZiB0aGUgVUtcdTIwMTlzIGZ1dHVyZSByZWxhdGlvbnNoaXAgd2l0aCB0aGUgRXVyb3BlYW4gVW5pb24uwqBUaGUgU2NvdHRpc2ggTmF0aW9uYWwgUGFydHkgKFNOUCkgc2FpZCB0aGF0IGl0cyBNUHMgd291bGQgaW50cm9kdWNlIGEgcmVhc29uZWQgYW1lbmRtZW50IHRvIHJlamVjdCB0aGUgQmlsbCwgYW5kIHdvdWxkIGFsc28gdGFibGUgNTAgYW1lbmRtZW50cyB0byB0aGUgQmlsbC5cbiBcblRoZXJlc2EgTWF5IGhhcyBhY2NlZGVkIHRvIGNhbGxzIGZyb20gdGhlIExhYm91ciBQYXJ0eSBhbmQgb3RoZXJzIHRvIHB1Ymxpc2ggYSB3aGl0ZSBwYXBlciBvbiB0aGUgR292ZXJubWVudFx1MjAxOXMgb2JqZWN0aXZlcyBmb3IgdGhlIEJyZXhpdCBuZWdvdGlhdGlvbnMsIGJ1dCB0aGUgZGF0ZSBvZiBpdHMgZXhwZWN0ZWQgcHVibGljYXRpb24gaXMgbm90IHlldCBrbm93bi5cbiBcbkRldm9sdXRpb24gaXNzdWVzIGhhdmUgYWxzbyBiZWVuIHJhaXNlZCB3aXRoIHJlZ2FyZCB0byB0aGUgdHJpZ2dlcmluZyBvZiBBcnRpY2xlIDUwLiBUaGUgU3VwcmVtZSBDb3VydCBydWxlZCB1bmFuaW1vdXNseSB0aGF0IHRoZSBTZXdlbCBDb252ZW50aW9uXHUyMDE0YWNjb3JkaW5nIHRvIHdoaWNoIHRoZSBXZXN0bWluc3RlciBQYXJsaWFtZW50IGRvZXMgbm90IG5vcm1hbGx5IGxlZ2lzbGF0ZSB3aXRoIHJlZ2FyZCB0byBkZXZvbHZlZCBtYXR0ZXJzIGV4Y2VwdCB3aXRoIHRoZSBhZ3JlZW1lbnQgb2YgdGhlIGRldm9sdmVkIGxlZ2lzbGF0dXJlXHUyMDE0ZG9lcyBub3QgZ2l2ZSByaXNlIHRvIGEgbGVnYWxseSBlbmZvcmNlYWJsZSBvYmxpZ2F0aW9uLiBUaGUgR292ZXJubWVudCBoYXMgc3RhdGVkIHRoYXQgdGhlIEJpbGwgXHUyMDFjZG9lcyBub3QgY29udGFpbiBhbnkgcHJvdmlzaW9uIHdoaWNoIGdpdmVzIHJpc2UgdG8gdGhlIG5lZWQgZm9yIGEgbGVnaXNsYXRpdmUgY29uc2VudCBtb3Rpb24gaW4gdGhlIFNjb3R0aXNoIFBhcmxpYW1lbnQsIHRoZSBOYXRpb25hbCBBc3NlbWJseSBmb3IgV2FsZXMgb3IgdGhlIE5vcnRoZXJuIElyZWxhbmQgQXNzZW1ibHlcdTIwMWQuIEhvd2V2ZXIsIE5pY29sYSBTdHVyZ2VvbiwgU2NvdGxhbmRcdTIwMTlzIEZpcnN0IE1pbmlzdGVyLCBzYWlkIHRoYXQgaGVyIEdvdmVybm1lbnQgd291bGQgYnJpbmcgZm9yd2FyZCBhIGxlZ2lzbGF0aXZlIGNvbnNlbnQgbW90aW9uIG9uIHRoZSBCaWxsIHRvIGVuc3VyZSB0aGF0IHRoZSBTY290dGlzaCBQYXJsaWFtZW50IGhhZCB0aGUgb3Bwb3J0dW5pdHkgdG8gdm90ZSBvbiB3aGV0aGVyIG9yIG5vdCB0byBjb25zZW50IHRvIHRoZSB0cmlnZ2VyIG9mIEFydGljbGUgNTAuIFBsYWlkIEN5bXJ1IGFubm91bmNlZCB0aGF0IHRoZXkgd291bGQgYWxzbyBzZWVrIHRvIHRhYmxlIGEgbGVnaXNsYXRpdmUgY29uc2VudCBtb3Rpb24gaW4gdGhlIE5hdGlvbmFsIEFzc2VtYmx5IGZvciBXYWxlcy5cbiBcblRoZSBHb3Zlcm5tZW50IGV4cGVjdHMgdGhlIEJpbGwgdG8gcGFzcyB0aHJvdWdoIGJvdGggSG91c2VzIG9mIFBhcmxpYW1lbnQgYW5kIGdhaW4gcm95YWwgYXNzZW50IGJlZm9yZSAzMSBNYXJjaCAyMDE3LCB0aGUgZGVhZGxpbmUgTXJzIE1heSBoYXMgc2V0IG91dCBmb3IgdHJpZ2dlcmluZyBBcnRpY2xlIDUwLiBUaGUgR292ZXJubWVudCBpbnRlbmRzIHRvIGZhc3QtdHJhY2sgdGhlIEJpbGwgdG8gYWNoaWV2ZSB0aGlzLiBJdCBpcyBzY2hlZHVsZWQgdG8gaGF2ZSBpdHMgc2Vjb25kIHJlYWRpbmcgaW4gdGhlIEhvdXNlIG9mIENvbW1vbnMgb24gMzEgSmFudWFyeSBhbmQgMSBGZWJydWFyeSwgdG8gYmUgY29uc2lkZXJlZCBpbiBjb21taXR0ZWUgb2YgdGhlIHdob2xlIEhvdXNlIG9uIDYsIDcgYW5kIDggRmVicnVhcnksIGFuZCB0byBjb21wbGV0ZSBpdHMgcmVtYWluaW5nIHN0YWdlcyBpbiB0aGUgQ29tbW9ucyBvbiA4IEZlYnJ1YXJ5IGJlZm9yZSBjb21pbmcgdG8gdGhlIEhvdXNlIG9mIExvcmRzLiBBIG51bWJlciBvZiBMYWJvdXIgTVBzIGhhdmUgZXhwcmVzc2VkIGRpc3NhdGlzZmFjdGlvbiB3aXRoIHRoZSBsZW5ndGggb2YgdGltZSBhbGxvY2F0ZWQgdG8gdGhlIEJpbGwsIGJ1dCBpdCBoYXMgYmVlbiByZXBvcnRlZCB0aGF0IEplcmVteSBDb3JieW4gZG9lcyBub3QgaW50ZW5kIHRvIG9wcG9zZSB0aGUgcHJvZ3JhbW1lIG1vdGlvbi5cbiBcbsKgIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wMS0zMFQxMjoxMjoyMy41NTY2ODA3KzAwOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgSG91c2Ugb2YgTG9yZHMgTGlicmFyeSBicmllZmluZyBwcm92aWRlcyBpbmZvcm1hdGlvbiBvbiB0aGUgRXVyb3BlYW4gVW5pb24gKE5vdGlmaWNhdGlvbiBvZiBXaXRoZHJhd2FsKSBCaWxsIHdoaWNoIHdhcyBpbnRyb2R1Y2VkIGluIHRoZSBIb3VzZSBvZiBDb21tb25zIG9uIDI2IEphbnVhcnkgMjAxNywgZm9sbG93aW5nIHRoZSBTdXByZW1lIENvdXJ0IGp1ZGdtZW50IHRoYXQgbGVnaXNsYXRpb24gd2FzIHJlcXVpcmVkIHRvIGF1dGhvcmlzZSB0aGUgdHJpZ2dlcmluZyBvZiBBcnRpY2xlIDUwLiJdLCAiaWRlbnRpZmllciIgOiB7Il92YWx1ZSIgOiAiTElGLTIwMTctMDAwNyJ9CiAgICAgICwgInB1Ymxpc2hlciIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgICwgInNlY3Rpb24iIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgXSwgInN1YlR5cGUiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvNDE0MDQxIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTG9yZHMgSW4gRm9jdXMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJFdXJvcGVhbiBVbmlvbiAoTm90aWZpY2F0aW9uIG9mIFdpdGhkcmF3YWwpIEJpbGwiLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTMyIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQ29uc3RpdHV0aW9uIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTUyIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiRGV2b2x1dGlvbiJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTU5MSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkVVIGxhdyBhbmQgdHJlYXRpZXMifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2NTkiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMZWdpc2xhdGl2ZSBwcm9jZXNzIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1Njc5IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTWluaXN0ZXJzIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NzAzIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiUGFybGlhbWVudCJ9CiAgICAgIH0KICAgICAgXSwgInR5cGUiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvc2NoZW1hL3BhcmwjUmVzZWFyY2hCcmllZmluZyJ9CiAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Jlc291cmNlcy82Nzk2NTYiLCAiYWJzdHJhY3QiIDogeyJfdmFsdWUiIDogIk9uIDE3IEphbnVhcnkgMjAxNywgdGhlIFByaW1lIE1pbmlzdGVyLCBUaGVyZXNhIE1heSwgbWFkZSBhIHNwZWVjaCBhdCBMYW5jYXN0ZXIgSG91c2Ugb3V0bGluaW5nIHRoZSBHb3Zlcm5tZW50XHUyMDE5cyBwb3NpdGlvbiBvbiB0aGUgVUtcdTIwMTlzIGZ1dHVyZSBvbmNlIGl0IGxlYXZlcyB0aGUgRXVyb3BlYW4gVW5pb24uIEFzIHBhcnQgb2YgdGhlc2UgcmVtYXJrcywgTXJzIE1heSBzdGF0ZWQgdGhhdCB0aGUgR292ZXJubWVudCB3b3VsZCBub3QgYmUgcHVyc3VpbmcgY29udGludWVkIG1lbWJlcnNoaXAgb2YgdGhlIEVVXHUyMDE5cyBzaW5nbGUgbWFya2V0LCBvciBtZW1iZXJzaGlwIChpbiBpdHMgY3VycmVudCBmb3JtKSBvZiBpdHMgY3VzdG9tcyB1bmlvbi5cbiBcbkN1c3RvbXMgdW5pb25zIGFyZSBleHRlbnNpb25zIG9mIGNvbnZlbnRpb25hbCBmcmVlIHRyYWRlIGFncmVlbWVudHMgKEZUQXMpLCB3aGVyZSBwYXJ0aWVzIHRvIHRoZSBhZ3JlZW1lbnQgaGF2ZSBhZ3JlZWQgdG8gcHJvdmlkZSBlYWNoIG90aGVyIHdpdGggdHJhZGUgYmVuZWZpdHMgc3VjaCBhcyByZWR1Y2VkIG9yIHJlbW92ZWQgdGFyaWZmcy4gSW4gYWRkaXRpb24gdG8gdGhpcyBiYXNpYyBwcmVtaXNlLCBjdXN0b21zIHVuaW9ucyBhcHBseSBhIGNvbW1vbiBleHRlcm5hbCB0YXJpZmYgYWNyb3NzIGl0cyBtZW1iZXJzLiBUaGVyZWZvcmUsIGdvb2RzIGltcG9ydGVkIGludG8gb25lIG1lbWJlciBvZiBhIGN1c3RvbXMgdW5pb24gc2hvdWxkIGF0dHJhY3QgdGhlIHNhbWUgdGFyaWZmcyBhcyB0aG9zZSBpbXBvcnRlZCBpbnRvIGFub3RoZXIuIEN1c3RvbXMgdW5pb25zIGNhbiBoZWxwIGZhY2lsaXRhdGUgdHJhZGUgYmV0d2VlbiB0aGVpciBtZW1iZXJzIGJ5IHJlbW92aW5nIHRoZSBuZWVkIGZvciBjb21wbGV4IFx1MjAxOHJ1bGVzIG9mIG9yaWdpblx1MjAxOSBmb3IgZ29vZHMgaW1wb3J0ZWQgaW50byB0aGUgdHJhZGUgYXJlYSBmcm9tIHRoaXJkIGNvdW50cmllcy4gTWVtYmVycyBvZiB0aGUgV29ybGQgVHJhZGUgT3JnYW5pc2F0aW9uIGFyZSBhYmxlIHRvIGVzdGFibGlzaCBjdXN0b21zIHVuaW9ucyAoYW5kIGZyZWUgdHJhZGUgYWdyZWVtZW50cykgaW4gYWNjb3JkYW5jZSB3aXRoIGFydGljbGUgWFhJViBvZiB0aGUgR2VuZXJhbCBBZ3JlZW1lbnQgb24gVGFyaWZmcyBhbmQgVHJhZGUuXG4gXG5BZHZvY2F0ZXMgb2YgY3VzdG9tcyB1bmlvbnMgY29udGVuZCB0aGF0IHRoZXJlIGFyZSBhIG51bWJlciBvZiByZWFzb25zIGFzIHRvIHdoeSBhIGNvdW50cnkgbWF5IHByZWZlciB0byBwdXJzdWUgYSBjdXN0b21zIHVuaW9uIG92ZXIgYSBmcmVlIHRyYWRlIGFncmVlbWVudCwgaW5jbHVkaW5nIGEgZGVzaXJlIHRvIGZ1cnRoZXIgZmFjaWxpdGF0ZSB0cmFkZSwgYnV0IGFsc28gaW4gc29tZSBjYXNlcyBhcyBhIGZpcnN0IHN0ZXAgdG93YXJkcyBjbG9zZXIgcG9saXRpY2FsIG9yIGVjb25vbWljIGNvb3BlcmF0aW9uLiBIb3dldmVyLCBjdXN0b21zIHVuaW9ucyBjYW4gZmFjZSBhIHJhbmdlIG9mIGNoYWxsZW5nZXMuIEZvciBleGFtcGxlLCBpdCBjYW4gYmUgYSBwb2xpdGljYWxseSBhbmQgZWNvbm9taWNhbGx5IGNvbXBsZXggcHJvY2VzcyB0byBhZ3JlZSBhIGNvbW1vbiBleHRlcm5hbCB0YXJpZmYgYW5kIG1lbWJlciBjb3VudHJpZXMgZ2VuZXJhbGx5IGZvcmZlaXQgdGhlaXIgYWJpbGl0eSB0byBzZXQgdGhlaXIgb3duIHRyYWRlIHBvbGljaWVzLlxuIFxuVGhlIEV1cm9wZWFuIFVuaW9uIGlzIHRoZSBtb3N0IGNvbXByZWhlbnNpdmUgZnVuY3Rpb25pbmcgY3VzdG9tcyB1bmlvbiBpbiB0aGUgZ2xvYmFsIGVjb25vbXkuIFRoaXMgZXh0ZW5kcyBpbnRvIHRoZSBzaW5nbGUgbWFya2V0LCB3aGljaCBwcm92aWRlcyBmdXJ0aGVyIGhhcm1vbmlzYXRpb24gb2Ygc3RhbmRhcmRzIHRvIGZhY2lsaXRhdGUgdGhlIGZvdXIgZnJlZWRvbXM6IGZyZWVkb20gb2YgbW92ZW1lbnQgb2YgZ29vZHMsIGNhcGl0YWwsIHNlcnZpY2VzIGFuZCBwZW9wbGUuIEhvd2V2ZXIsIGEgbnVtYmVyIG9mIG90aGVyIGN1c3RvbXMgdW5pb25zIG9wZXJhdGUgb3V0c2lkZSBvZiB0aGUgRVUsIGV4YW1wbGVzIGluY2x1ZGUgdGhlIENhcmliYmVhbiBDb21tdW5pdHkgKENBUklDT00pLlxuIFxuVGhpcyBicmllZmluZyBwcm92aWRlcyBpbmZvcm1hdGlvbiBvbiBob3cgY3VzdG9tcyB1bmlvbnMgb3BlcmF0ZSwgaG93IHRoZXkgZGlmZmVyIGZyb20gZnJlZSB0cmFkZSBhZ3JlZW1lbnRzLCBhbmQgaG93IHRoZXkgaW50ZXJhY3Qgd2l0aCBXb3JsZCBUcmFkZSBPcmdhbmlzYXRpb24gcnVsZXMgb24gbW9zdC1mYXZvdXJlZC1uYXRpb24gc3RhdHVzLiBUaGUgYnJpZWZpbmcgYWxzbyBleGFtaW5lcyB0aGUgYXJndW1lbnRzIGFkdmFuY2VkIGZvciB3aHkgY291bnRyaWVzIG1heSB3aXNoIHRvIGpvaW4gY3VzdG9tcyB1bmlvbnMgYW5kIGFsc28gcG9saXRpY2FsIGFuZCBwcmFjdGljYWwgY3JpdGljaXNtcyBjdXN0b21zIHVuaW9ucyBtaWdodCBmYWNlLiBBIHN1bW1hcnkgb2YgdGhlIEVVXHUyMDE5cyBjdXN0b21zIHVuaW9uIGlzIGFsc28gcHJlc2VudGVkIGFsb25nc2lkZSBhbiBleHBsYW5hdGlvbiBvZiBpdHMgcmVsYXRpb25zaGlwIHRvIHRoZSBcdTIwMThzaW5nbGUgbWFya2V0XHUyMDE5LiBGaW5hbGx5LCBhIGxpc3Qgb2Ygb3RoZXIgY3VzdG9tcyB1bmlvbnMgd2hpY2ggb3BlcmF0ZSBhcm91bmQgdGhlIHdvcmxkIGlzIHByb3ZpZGVkLCBhbG9uZ3NpZGUgYSBtYXAgY29tcGlsZWQgZnJvbSBkYXRhIGZyb20gdGhlIFdvcmxkIFRyYWRlIE9yZ2FuaXNhdGlvblx1MjAxOXMgUmVnaW9uYWwgVHJhZGUgQWdyZWVtZW50cyBJbmZvcm1hdGlvbiBTeXN0ZW0uIEl0IGRvZXMgbm90IGNvbnNpZGVyIHRoZSBhcmd1bWVudHMgZm9yIGFuZCBhZ2FpbnN0IHRoZSBVSyByZW1haW5pbmcgaW4gdGhlIEVVIGN1c3RvbXMgdW5pb24uIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wMS0yN1QxNTozMDoyMy45MDcyNTMyKzAwOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgTG9yZHMgTGlicmFyeSBicmllZmluZyBwcm92aWRlcyBpbmZvcm1hdGlvbiBvbiBjdXN0b21zIHVuaW9ucyBpbiBsaWdodCBvZiB0aGUgVUtcdTIwMTlzIGRlY2lzaW9uIHRvIGxlYXZlIHRoZSBFVS4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIkxMTi0yMDE3LTAwMDcifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzM0NjcxMyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkxvcmRzIExpYnJhcnkgbm90ZXMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJMZWF2aW5nIHRoZSBFdXJvcGVhbiBVbmlvbjogQ3VzdG9tcyBVbmlvbnMgLSBBbiBJbnRyb2R1Y3Rpb24iLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTkxIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiRVUgbGF3IGFuZCB0cmVhdGllcyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTY0NyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkludGVybmF0aW9uYWwgZWNvbm9taWMgcmVsYXRpb25zIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjUxIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSW50ZXJuYXRpb25hbCB0cmFkZSJ9CiAgICAgIH0KICAgICAgXSwgInR5cGUiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvc2NoZW1hL3BhcmwjUmVzZWFyY2hCcmllZmluZyJ9CiAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Jlc291cmNlcy82NzgyODgiLCAiYWJzdHJhY3QiIDogeyJfdmFsdWUiIDogIlRoZXNlIGFyZSBjaGFuZ2VzIGxhcmdlbHkgcmVxdWlyZWQgYXMgYSBjb25zZXF1ZW5jZSBvZiB0aGUgYWJvbGl0aW9uIG9mIHRoZSBwYXBlciBkcml2aW5nIGxpY2VuY2UgY291bnRlcnBhcnQgaW4gSnVuZSAyMDE1LsKgU2luY2UgYWJvbGl0aW9uIHRoZXJlIGhhcyBiZWVuIG5vIG5lZWQgZm9yIGEgZHJpdmluZyBsaWNlbmNlIHRvIGJlIHByb2R1Y2VkIGZvciBhbiBlbmRvcnNlbWVudCB0byBiZSByZWNvcmRlZCBhZ2FpbnN0IGEgZHJpdmVyXHUyMDE5cyBkcml2aW5nIHJlY29yZCwgYXMgdGhpcyBjYW4gYmUgZG9uZSBlbGVjdHJvbmljYWxseSBvbiB0aGUgcGVyc29uXHUyMDE5cyBkcml2ZXIgcmVjb3JkLCB3aGljaCBpcyBoZWxkIGJ5IHRoZSBEVkxBLiBUaGUgb25seSBuZWVkIGZvciBhIGxpY2VuY2UgdG8gYmUgcHJvZHVjZWQgb3Igc3VycmVuZGVyZWQgaXMgdGhlcmVmb3JlIHdoZXJlIHRoZSBkcml2ZXIgbWF5IGJlIHNlbnRlbmNlZCB0byBkaXNxdWFsaWZpY2F0aW9uLCBvciBpcyBhY3R1YWxseSBkaXNxdWFsaWZpZWQuXG4gXG7CoCJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDEtMjVUMTQ6MTY6MjUuNTk5ODM0MSswMDowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIEJpbGwgaXMgZXNzZW50aWFsbHkgaW50ZW5kZWQgdG8gdXBkYXRlIHRoZSBsYXcgaW4gcmVsYXRpb24gdG8gdGhlIHByb2R1Y3Rpb24gYW5kIHN1cnJlbmRlciBvZiBkcml2aW5nIGxpY2VuY2VzLCBtYWtpbmcgY2hhbmdlcyBwcmluY2lwYWxseSB0byB0aGUgUm9hZCBUcmFmZmljIE9mZmVuZGVycyBBY3QgMTk4OCBhbmQgdG8gdGhlIFJvYWQgVHJhZmZpYyAoTmV3IERyaXZlcnMpIEFjdCAxOTk1LCB3aXRoIGNvbnNlcXVlbnRpYWwgYWRqdXN0bWVudCBvZiBvdGhlciBzdGF0dXRlcyBhZmZlY3RlZC4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIkNCUC03ODc5In0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1MjY3IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgQ29tbW9ucyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8xNjg0OSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkJ1c2luZXNzIGFuZCBUcmFuc3BvcnQgU2VjdGlvbiJ9CiAgICAgIH0KICAgICAgXSwgInN1YlR5cGUiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvNDE0MDMzIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQ29tbW9ucyBCcmllZmluZyBwYXBlcnMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJSb2FkIFRyYWZmaWMgT2ZmZW5kZXJzIChTdXJyZW5kZXIgb2YgRHJpdmluZyBMaWNlbmNlcyBFdGMpIEJpbGwiLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NzM4IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiUm9hZHMifQogICAgICB9CiAgICAgIF0sICJ0eXBlIiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3NjaGVtYS9wYXJsI1Jlc2VhcmNoQnJpZWZpbmcifQogICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9yZXNvdXJjZXMvMzQxODg4IiwgImFic3RyYWN0IiA6IHsiX3ZhbHVlIiA6ICJXaHkgY2FuXHUyMDE5dCBhIE1lbWJlciByZXNpZ24gdGhlaXIgc2VhdD9cbiBcblVuZGVyIGEgUmVzb2x1dGlvbiBvZiB0aGUgSG91c2Ugb2YgMiBNYXJjaCAxNjIzLCBNZW1iZXJzIG9mIFBhcmxpYW1lbnQgY2Fubm90IGRpcmVjdGx5IHJlc2lnbiB0aGVpciBzZWF0cy4gRGVhdGhzLCBkaXNxdWFsaWZpY2F0aW9uLCBlbGV2YXRpb24gdG8gUGVlcmFnZSwgZGlzc29sdXRpb24gb3IgZXhwdWxzaW9uIGFyZSB0aGUgb25seSBjYXVzZXMgYnkgd2hpY2ggYSBNZW1iZXJcdTIwMTlzIHNlYXQgY2FuIGJlIHZhY2F0ZWQuIFRoZXJlZm9yZSwgYSBNZW1iZXIgd2lzaGluZyB0byByZXNpZ24gaGFzIHRvIGJlIGFwcG9pbnRlZCB0byBhIHBhaWQgb2ZmaWNlIG9mIHRoZSBDcm93biwgd2hpY2ggYXV0b21hdGljYWxseSBkaXNxdWFsaWZpZXMgdGhlIE1lbWJlciBmcm9tIGhvbGRpbmcgYSBzZWF0IGluIHRoZSBIb3VzZSBvZiBDb21tb25zLlxuIFxuVGhlcmUgYXJlIGN1cnJlbnRseSB0d28gbm9taW5hbCBvZmZpY2VzIG9mIHByb2ZpdCB1bmRlciB0aGUgQ3Jvd246XG4gXG5Dcm93biBTdGV3YXJkIGFuZCBCYWlsaWZmIG9mIHRoZSB0aHJlZSBDaGlsdGVybiBIdW5kcmVkcyBvZiBTdG9rZSwgRGVzYm9yb3VnaCBhbmQgQnVybmhhbTtcbiBcbkNyb3duIFN0ZXdhcmQgYW5kIEJhaWxpZmYgb2YgdGhlIE1hbm9yIG9mIE5vcnRoc3RlYWQuXG4gXG5GdXJ0aGVyIGluZm9ybWF0aW9uIG9uIHRoZSBjdXJyZW50IHByb2NlZHVyZSBhbmQgaXRzIGhpc3RvcmljYWwgY29udGV4dCBjYW4gYmUgZm91bmQgaW4gdGhlIENvbW1vbnMgYnJpZWZpbmc6IFJlc2lnbmF0aW9uIGZyb20gdGhlIEhvdXNlIG9mIENvbW1vbnMuIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wMS0yNFQxNDozNTo0OS42NTM2NzgrMDA6MDAiLCAiX2RhdGF0eXBlIiA6ICJkYXRlVGltZSJ9CiAgICAgICwgImRlc2NyaXB0aW9uIiA6IFsiVGhpcyBub3RlIGxpc3RzIGtub3duIGFwcG9pbnRtZW50cyB0byB0aGUgQ3Jvd24gU3Rld2FyZCBhbmQgQmFpbGlmZiBvZiB0aGUgQ2hpbHRlcm4gSHVuZHJlZHMgYW5kIHRoZSBNYW5vciBvZiBOb3J0aHN0ZWFkIHNpbmNlIHRoZSAxOTQ1IEdlbmVyYWwgRWxlY3Rpb24uIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJTTjA0NzMxIn0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1MjY3IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgQ29tbW9ucyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy82MTA1NSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlBhcmxpYW1lbnQgYW5kIENvbnN0aXR1dGlvbiBDZW50cmUifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzQxNDAzMyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkNvbW1vbnMgQnJpZWZpbmcgcGFwZXJzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiQXBwb2ludG1lbnRzIHRvIHRoZSBDaGlsdGVybiBIdW5kcmVkcyBhbmQgTWFub3Igb2YgTm9ydGhzdGVhZCBTdGV3YXJkc2hpcHMgc2luY2UgMTk0NiIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2MjciLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBDb21tb25zIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1Njc0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTWVtYmVycyBvZiBQYXJsaWFtZW50In0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzY3NzY5MSIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiVGhlIFJlaGFiaWxpdGF0aW9uIG9mIE9mZmVuZGVycyBBY3QgMTk3NCAoMTk3NCBBY3QpIGFpbXMgdG8gc3VwcG9ydCB0aGUgcmVoYWJpbGl0YXRpb24gb2YgcmVmb3JtZWQgb2ZmZW5kZXJzIGJ5IHByb3ZpZGluZyBzcGVjaWZpYyBwZXJpb2RzXHUyMDE0c3ViamVjdCB0byB0aGUgc2VudGVuY2UgcGFzc2VkIG9yIGRpc3Bvc2FsIGFkbWluaXN0cmF0ZWRcdTIwMTRhZnRlciB3aGljaCBjYXV0aW9ucyBhbmQgY29udmljdGlvbnMgYmVjb21lIFx1MjAxOHNwZW50XHUyMDE5LCBhbmQgYW4gaW5kaXZpZHVhbCBpcyByZWdhcmRlZCBhcyByZWhhYmlsaXRhdGVkLiBUaGUgQmlsbCBhaW1zIHRvIHJlZHVjZSB0aGUgcmVoYWJpbGl0YXRpb24gcGVyaW9kcyBvZiB2YXJpb3VzIHNlbnRlbmNlcywgYW5kIGludHJvZHVjZSBhIHJlaGFiaWxpdGF0aW9uIHBlcmlvZCBmb3Igc2VudGVuY2VzIGV4Y2VlZGluZyBmb3VyIHllYXJzICg0OCBtb250aHMpLCB3aGljaCBhcmUgY3VycmVudGx5IG5ldmVyIFx1MjAxOHNwZW50XHUyMDE5LiBUaGVyZSBoYXZlIGJlZW4gY3JpdGljaXNtcyBvZiB0aGUgMTk3NCBBY3QgYW5kIHByZXZpb3VzIGdvdmVybm1lbnRzIGhhdmUgYXR0ZW1wdGVkIHRvIG1ha2UgY2hhbmdlcy4gVGhlIG1vc3QgcmVjZW50IGNoYW5nZXMgd2VyZSBtYWRlIGJ5IHNlY3Rpb24gMTM5IG9mIHRoZSBMZWdhbCBBaWQsIFNlbnRlbmNpbmcgYW5kIFB1bmlzaG1lbnQgb2YgT2ZmZW5kZXJzIEFjdCAyMDEyIHdoaWNoIHJlZHVjZWQgdGhlIHJlaGFiaWxpdGF0aW9uIHBlcmlvZHMgZm9yIGJvdGggY3VzdG9kaWFsIGFuZCBub24tY3VzdG9kaWFsIHNlbnRlbmNlcyBhbmQgaW5jcmVhc2VkIHRoZSB1cHBlciBsaW1pdCB0byBpbmNsdWRlIHNlbnRlbmNlcyBvZiB1cCB0byBmb3VyIHllYXJzIChhbmQgYXBwbHlpbmcgcmV0cm9zcGVjdGl2ZWx5KS4ifQogICAgICAsICJkYXRlIiA6IHsiX3ZhbHVlIiA6ICIyMDE3LTAxLTI0VDEyOjIzOjE0LjU2MjU2MTkrMDA6MDAiLCAiX2RhdGF0eXBlIiA6ICJkYXRlVGltZSJ9CiAgICAgICwgImRlc2NyaXB0aW9uIiA6IFsiVGhpcyBIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5IGJyaWVmaW5nIHByb3ZpZGVzIGluZm9ybWF0aW9uIGluIHN1cHBvcnQgb2YgdGhlIEhvdXNlIG9mIExvcmRzIGNvbnNpZGVyYXRpb24gb2YgdGhlIFJlaGFiaWxpdGF0aW9uIG9mIE9mZmVuZGVycyAoQW1lbmRtZW50KSBCaWxsIFtITF0gb24gMjcgSmFudWFyeSAyMDE3LiJdLCAiaWRlbnRpZmllciIgOiB7Il92YWx1ZSIgOiAiTElGLTIwMTctMDAwNSJ9CiAgICAgICwgInB1Ymxpc2hlciIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgICwgInNlY3Rpb24iIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgXSwgInN1YlR5cGUiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvNDE0MDQxIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTG9yZHMgSW4gRm9jdXMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJSZWhhYmlsaXRhdGlvbiBvZiBPZmZlbmRlcnMgKEFtZW5kbWVudCkgQmlsbCBbSExdOiBCcmllZmluZyBmb3IgTG9yZHMgU3RhZ2VzIiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTQ3NiIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkFkbWluaXN0cmF0aW9uIG9mIGp1c3RpY2UifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU1MzgiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJDcmltZSJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTU0MSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkNyaW1pbmFsIGxhdyJ9CiAgICAgIH0KICAgICAgXSwgInR5cGUiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvc2NoZW1hL3BhcmwjUmVzZWFyY2hCcmllZmluZyJ9CiAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Jlc291cmNlcy82Nzc2ODYiLCAiYWJzdHJhY3QiIDogeyJfdmFsdWUiIDogIlRoZSBEaXZvcmNlIChGaW5hbmNpYWwgUHJvdmlzaW9uKSBCaWxsIFtITF0gaXMgYSBwcml2YXRlIG1lbWJlclx1MjAxOXMgYmlsbCBpbnRyb2R1Y2VkIGJ5IEJhcm9uZXNzIERlZWNoIChDcm9zc2JlbmNoKS4gVGhlIEJpbGwgcmVjZWl2ZWQgaXRzIGZpcnN0IHJlYWRpbmcgaW4gdGhlIEhvdXNlIG9mIExvcmRzIG9uIDI2IE1heSAyMDE2LCBhbmQgaXMgc2NoZWR1bGVkIHRvIHJlY2VpdmUgaXRzIHNlY29uZCByZWFkaW5nIG9uIDI3IEphbnVhcnkgMjAxNy4gVGhlIEJpbGwgcHJvcG9zZXMgdG8gcmVwbGFjZSBzZWN0aW9uIDI1KDIpIG9mIHRoZSBNYXRyaW1vbmlhbCBDYXVzZXMgQWN0IDE5NzMgd2l0aCBcdTIwMWNwcm92aXNpb25zIGFib3V0IHRoZSBwcmluY2lwbGVzIHRvIGJlIGFwcGxpZWQgaW4gZGV0ZXJtaW5pbmcgYXBwbGljYXRpb25zIGZvciBzdWNoIG9yZGVycywgaW5jbHVkaW5nIHByb3Zpc2lvbiBhYm91dCB0aGUgZWZmZWN0IG9mIHByZS1udXB0aWFsIGFuZCBwb3N0LW51cHRpYWwgYWdyZWVtZW50c1x1MjAxZC4gU2V0dGluZyBvdXQgdGhlIHB1cnBvc2Ugb2YgdGhlIEJpbGwsIEJhcm9uZXNzIERlZWNoIGV4cGxhaW5lZDrCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgXG4gXG4gVGhlIHB1cnBvc2Ugb2YgdGhpcyBCaWxsIGlzIHRvIHJlZm9ybSB0aGUgbGF3IHJlbGF0aW5nIHRvIHRoZSBzcGxpdHRpbmcgb2YgYXNzZXRzIG9uIGRpdm9yY2UuwqAgVGhlIGN1cnJlbnQgbGF3IGlzIHRoZSBNYXRyaW1vbmlhbCBDYXVzZXMgQWN0IDE5NzMsIHNlY3Rpb24gMjUsIHdoaWNoIGhhcyBub3QgYmVlbiB0aG9yb3VnaGx5IGRlYmF0ZWQgYnkgUGFybGlhbWVudCBmb3IgNDAgeWVhcnMgZGVzcGl0ZSByYWRpY2FsIGNoYW5nZXMgaW4gc29jaWV0eSBhbmQgZmFtaWxpZXMsIGFuZCB3aGljaCBoYXMgYmVlbiB0aGUgc3ViamVjdCBvZiBjYWxscyBmb3IgcmVmb3JtIGZyb20gdGhlIExhdyBDb21taXNzaW9uLCBSZXNvbHV0aW9uIGFuZCB0aGUgQ2VudHJlIGZvciBTb2NpYWwgSnVzdGljZS4gUmVmb3JtIGlzIHVyZ2VudCBiZWNhdXNlIHRoZSBsYXcgaXMgdW5jZXJ0YWluLiBJdCBpcyBsYXJnZWx5IGp1ZGdlLW1hZGUgbGF3LCB3aGljaCBiZWFycyBsaXR0bGUgcmVzZW1ibGFuY2UgdG8gdGhlIHN0YXR1dGUuIEp1ZGljaWFsIGRpc2NyZXRpb24gaGFzIGxlZCB0byB1bnByZWRpY3RhYmlsaXR5IGFuZCBjb25mbGljdGluZyBkZWNpc2lvbnMsIHdoaWNoIG1ha2UgaXQgaGFyZCBmb3IgcGFydGllcyB0byBuZWdvdGlhdGUgYW5kIGxlYWQgdG8gZGlzcHJvcG9ydGlvbmF0ZSBjb3N0cy4gTGVnYWwgYWlkIGhhcyBiZWVuIHJlbW92ZWQgYW5kIHBhcnRpZXMgb2YgbW9kZXN0IG1lYW5zIGFyZSBsZWZ0IHVucmVwcmVzZW50ZWQgd2l0aCBsaXR0bGUgZ3VpZGFuY2UgYXMgdG8gdGhlIHJpZ2h0IG91dGNvbWUuIFRoZSBCaWxsIHdvdWxkIGltcGxlbWVudCBwcm92aXNpb25zIHZlcnkgc2ltaWxhciB0byB0aG9zZSBvZiBTY290dGlzaCBsYXcsIGFuZCB0aGUgbGF3cyBvZiBtb3N0IEV1cm9wZWFuIGFuZCBOb3J0aCBBbWVyaWNhbiBzdGF0ZXMuIEl0IHdvdWxkIGludHJvZHVjZSBhcyBhIGZhaXIgc3RhcnRpbmcgcG9pbnQgdGhlIGVxdWFsIGRpdmlzaW9uIG9mIGFsbCB0aGUgcHJvcGVydHkgYW5kIHBlbnNpb25zIGFjcXVpcmVkIGJ5IHRoZSBjb3VwbGUgYWZ0ZXIgbWFycmlhZ2U7IHByb3Zpc2lvbiBmb3Igc2hvcnQgdGVybSBtYWludGVuYW5jZTsgZmxleGliaWxpdHkgdG8gYWxsb3cgdGhlIGhvbWUgdG8gYmUgcmV0YWluZWQgZm9yIHRoZSBjYXJlciBhbmQgY2hpbGRyZW47IGFuZCBiaW5kaW5nIHByZW51cHRpYWwgYWdyZWVtZW50cy4gVGhpcyBpcyBpbnRlbmRlZCB0byBmYWNpbGl0YXRlIG1lZGlhdGlvbiwgcmVkdWNlIGxpdGlnYXRpb24gYW5kIGNvc3RzLCBhbmQgcmVjb2duaXNlIGVxdWFsIHBhcnRuZXJzaGlwIGluIG1hcnJpYWdlLiJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDEtMjRUMTI6MDI6NDcuOTI2OTA4MSswMDowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIEhvdXNlIG9mIExvcmRzIExpYnJhcnkgYnJpZWZpbmcgcHJvdmlkZXMgaW5mb3JtYXRpb24gaW4gc3VwcG9ydCBvZiB0aGUgSG91c2Ugb2YgTG9yZHMgY29uc2lkZXJhdGlvbiBvZiB0aGUgRGl2b3JjZSAoRmluYW5jaWFsIFByb3Zpc2lvbikgQmlsbCBbSExdIG9uIEZyaWRheSAyNyBKYW51YXJ5IDIwMTcuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMSUYtMjAxNy0wMDA0In0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy80MTQwNDEiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBJbiBGb2N1cyJ9CiAgICAgIH0KICAgICAgLCAidGl0bGUiIDogIkRpdm9yY2UgKEZpbmFuY2lhbCBQcm92aXNpb24pIEJpbGwgW0hMXTogQnJpZWZpbmcgZm9yIExvcmRzIFN0YWdlcyIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU1NTUiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJEaXZvcmNlIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzY3NzY4MyIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiVGhlIEFyYml0cmF0aW9uIGFuZCBNZWRpYXRpb24gU2VydmljZXMgKEVxdWFsaXR5KSBCaWxsIFtITF0gaXMgYSBwcml2YXRlIG1lbWJlclx1MjAxOXMgYmlsbCBpbnRyb2R1Y2VkIGJ5IEJhcm9uZXNzIENveCAoQ3Jvc3NiZW5jaCkuIFRoZSBCaWxsIHJlY2VpdmVkIGl0cyBmaXJzdCByZWFkaW5nIGluIHRoZSBIb3VzZSBvZiBMb3JkcyBvbiAyNSBNYXkgMjAxNiBhbmQgaXMgc2NoZWR1bGVkIHRvIHJlY2VpdmUgaXRzIHNlY29uZCByZWFkaW5nIG9uIDI3IEphbnVhcnkgMjAxNy4gVGhlIEJpbGwgd291bGQgc2VlayB0byBtYWtlIGZ1cnRoZXIgcHJvdmlzaW9uIGFib3V0IGFyYml0cmF0aW9uIGFuZCBtZWRpYXRpb24gc2VydmljZXMgYW5kIHRoZSBhcHBsaWNhdGlvbiBvZiBlcXVhbGl0eSBsZWdpc2xhdGlvbiB0byBzdWNoIHNlcnZpY2VzLlxuIFxuVGhlIEFyYml0cmF0aW9uIGFuZCBNZWRpYXRpb24gU2VydmljZXMgKEVxdWFsaXR5KSBCaWxsIFtITF0gd291bGQgbWFrZSBwcm92aXNpb25zIHJlZ2FyZGluZyB0aGUgYXBwbGljYXRpb24gb2YgZXF1YWxpdGllcyBsZWdpc2xhdGlvbiB0byBhcmJpdHJhdGlvbiBhbmQgbWVkaWF0aW9uIHNlcnZpY2VzLiBJdCBzZWVrcyB0byBwcmV2ZW50IHByb3ZpZGVycyBvZiBhcmJpdHJhdGlvbiBzZXJ2aWNlcyBmcm9tIGRvaW5nIGFueXRoaW5nIHRoYXQgY29uc3RpdHV0ZXMgZGlzY3JpbWluYXRpb24sIGhhcmFzc21lbnQgb3IgdmljdGltaXNhdGlvbiBvbiB0aGUgZ3JvdW5kcyBvZiBzZXguIEl0IHdvdWxkIGRvIHNvIGJ5IGluc2VydGluZyBhIG5ldyBzdWJzZWN0aW9uIGludG8gdGhlIEVxdWFsaXRpZXMgQWN0IDIwMTAgYW5kIGludG8gdGhlIEFyYml0cmF0aW9uIEFjdCAxOTk2LiBJdCB3b3VsZCBhbHNvIHByb3ZpZGUgY2xhcmlmaWNhdGlvbiB0aGF0IGRpc2NyaW1pbmF0aW9uIGluY2x1ZGVzLCBidXQgaXMgbm90IHJlc3RyaWN0ZWQgdG8sIHRyZWF0aW5nIGV2aWRlbmNlIGZyb20gbWVuIGFzIGJlaW5nIG9mIGdyZWF0ZXIgdmFsdWUgdGhhbiB0aGF0IG9mIHdvbWVuLCBvciB2aWNlIHZlcnNhLiBUaGUgRmFtaWx5IExhdyBBY3QgMTk5NiB3b3VsZCBhbHNvIGJlIGFtZW5kZWQgdG8gYWxsb3cgY291cnRzIHRvIHNldCBhc2lkZSBhbnkgb3JkZXIgYmFzZWQgb24gYSBtZWRpYXRpb24gc2V0dGxlbWVudCBhZ3JlZW1lbnQsIG9yIG90aGVyIG5lZ290aWF0aW9uIGFncmVlbWVudCwgaWYgdGhlIGNvdXJ0IGJlbGlldmVzIG9uIHRoZSBiYXNpcyBvZiBldmlkZW5jZSB0aGF0IG9uZSBwYXJ0eVx1MjAxOXMgY29uc2VudCB3YXMgbm90IGdlbnVpbmUuIFRoZSBCaWxsIHdvdWxkIGFsc28gcGxhY2UgYW4gb2JsaWdhdGlvbiBvbiBwdWJsaWMgYXV0aG9yaXRpZXMgdG8gaW5mb3JtIHRob3NlIHdobyBhcmUgbWFycmllZCBhY2NvcmRpbmcgb25seSB0byBjZXJ0YWluIHJlbGlnaW91cyBwcmFjdGljZXMsIG9yIHRob3NlIGluIHBvbHlnYW1vdXMgaG91c2Vob2xkcywgdGhhdCB0aGV5IG1heSBiZSB3aXRob3V0IGxlZ2FsIHByb3RlY3Rpb24uXG4gXG5CYXJvbmVzcyBDb3ggaGFzIGludHJvZHVjZWQgc2ltaWxhciBiaWxscyBpbiBwcmV2aW91cyBzZXNzaW9ucy4gSW4gMjAxMlx1MjAxMzEzIGhlciBwcml2YXRlIG1lbWJlclx1MjAxOXMgYmlsbCBvZiB0aGUgc2FtZSBuYW1lIHdhcyBnaXZlbiBhIHNlY29uZCByZWFkaW5nIGluIHRoZSBIb3VzZSBvZiBMb3JkcyBvbiAxOSBPY3RvYmVyIDIwMTIuIEluIDIwMTVcdTIwMTMxNiBhIGJpbGwgb2YgdGhlIHNhbWUgbmFtZSBwcm9ncmVzc2VkIHRvIGl0cyBmaXJzdCByZWFkaW5nIGluIHRoZSBIb3VzZSBvZiBDb21tb25zIGJ1dCBkaWQgbm90IHJlY2VpdmUgYSBzZWNvbmQgcmVhZGluZy4ifQogICAgICAsICJkYXRlIiA6IHsiX3ZhbHVlIiA6ICIyMDE3LTAxLTI0VDExOjUxOjM3LjE3NTI3NiswMDowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIEhvdXNlIG9mIExvcmRzIExpYnJhcnkgYnJpZWZpbmcgcHJvdmlkZXMgaW5mb3JtYXRpb24gaW4gc3VwcG9ydCBvZiB0aGUgSG91c2Ugb2YgTG9yZHMgY29uc2lkZXJhdGlvbiBvZiB0aGUgQXJiaXRyYXRpb24gYW5kIE1lZGlhdGlvbiBTZXJ2aWNlcyAoRXF1YWxpdHkpIEJpbGwgW0hMXSBvbiAyNyBKYW51YXJ5IDIwMTcuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMSUYtMjAxNy0wMDAzIn0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy80MTQwNDEiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBJbiBGb2N1cyJ9CiAgICAgIH0KICAgICAgLCAidGl0bGUiIDogIkFyYml0cmF0aW9uIGFuZCBNZWRpYXRpb24gU2VydmljZXMgKEVxdWFsaXR5KSBCaWxsIFtITF06IEJyaWVmaW5nIGZvciBMb3JkcyBTdGFnZXMiLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTgyIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiRXF1YWxpdHkifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2MDAiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJGYW1pbHkgbGF3In0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NzQ2IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiU2V4IGRpc2NyaW1pbmF0aW9uIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzY3NTk4NCIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiVGhpcyBIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5IGJyaWVmaW5nIGhhcyBiZWVuIHByZXBhcmVkIGluIGFkdmFuY2Ugb2YgYSBkZWJhdGUgdGhhdCBpcyBzY2hlZHVsZWQgdG8gdGFrZSBwbGFjZSBpbiB0aGUgSG91c2Ugb24gMjYgSmFudWFyeSAyMDE3IG9uIHRoZSBmb2xsb3dpbmcgbW90aW9uOlxuIFxuIEJhcm9uZXNzIEhheXRlciBvZiBLZW50aXNoIFRvd24gdG8gbW92ZSB0aGF0IHRoaXMgSG91c2UgdGFrZXMgbm90ZSBvZiB0aGUgaW1wYWN0IG9mIHRoZSBVbml0ZWQgS2luZ2RvbVx1MjAxOXMgd2l0aGRyYXdhbCBmcm9tIHRoZSBFdXJvcGVhbiBVbmlvbiBhbmQgcG90ZW50aWFsIHdpdGhkcmF3YWwgZnJvbSB0aGUgc2luZ2xlIG1hcmtldCBvbiB0aGUgcmlnaHRzIG9mIEV1cm9wZWFuIFVuaW9uIGNpdGl6ZW5zIGxpdmluZyBpbiB0aGlzIGNvdW50cnkgYW5kIHRoZSBVbml0ZWQgS2luZ2RvbVx1MjAxOXMgZnV0dXJlIGVjb25vbWljIHJlcXVpcmVtZW50cy4gXG4gXG5UaGUgRXVyb3BlYW4gc2luZ2xlIG1hcmtldCBpcyBhbiBpbnRlcm5hbCBtYXJrZXQgd2hpY2ggY3VycmVudGx5IGVuY29tcGFzc2VzIGFsbCAyOCBFVSBtZW1iZXIgc3RhdGVzLiBBIG51bWJlciBvZiBvdGhlciBFdXJvcGVhbiBjb3VudHJpZXMgb3V0c2lkZSB0aGUgRVUgYWxzbyBwYXJ0aWNpcGF0ZSBpbiB0aGUgc2luZ2xlIG1hcmtldCwgc3VjaCBhcyBJY2VsYW5kLCBMaWVjaHRlbnN0ZWluIGFuZCBOb3J3YXksIHdobyBhcmUgcGFydGllcyB0byB0aGUgRXVyb3BlYW4gRWNvbm9taWMgQXJlYSAoRUVBKSBhZ3JlZW1lbnQsIGFuZCBTd2l0emVybGFuZCwgd2hpY2ggaGFzIGEgbnVtYmVyIG9mIGJpbGF0ZXJhbCBhZ3JlZW1lbnRzIHdpdGggdGhlIEVVLiBUaGUgVUsgam9pbmVkIHRoZSB0aGVuIEV1cm9wZWFuIEVjb25vbWljIENvbW11bml0eSAoRUVDKSBpbiBKYW51YXJ5IDE5NzMsIHdpdGggdGhlIHNpbmdsZSBtYXJrZXQgYXMgaXQgZXhpc3RzIHRvZGF5IGJlaW5nIGVzdGFibGlzaGVkIGluIDE5OTIuIFRoZSBzaW5nbGUgbWFya2V0IHByb3ZpZGVzIGZvciB0aGUgXHUyMDE4Zm91ciBmcmVlZG9tc1x1MjAxOSB3aXRoaW4gdGhlIEVVOiB0aGUgZnJlZWRvbSBvZiBtb3ZlbWVudCBmb3IgZ29vZHMsIHNlcnZpY2VzLCBjYXBpdGFsIGFuZCBwZW9wbGUuXG4gXG5JbiBhIHNwZWVjaCBvbiAxNyBKYW51YXJ5IDIwMTcsIHRoZSBQcmltZSBNaW5pc3RlciwgVGhlcmVzYSBNYXksIGNvbmZpcm1lZCB0aGF0IHRoZSBHb3Zlcm5tZW50LCBpbiBuZWdvdGlhdGluZyB0aGUgVUtcdTIwMTlzIHdpdGhkcmF3YWwgZnJvbSB0aGUgRVUsIHdvdWxkIHNlZWsgYSBiZXNwb2tlIG1vZGVsIGZvciBmdXR1cmUgVUstRVUgcmVsYXRpb25zLiBBcyBwYXJ0IG9mIHRoaXMsIE1ycyBNYXkgYW5ub3VuY2VkIHRoYXQgdGhlIFVLIHdvdWxkIG5vdCByZXRhaW4gaXRzIG1lbWJlcnNoaXAgb2YgdGhlIHNpbmdsZSBtYXJrZXQuIFNoZSBzYWlkIHRoYXQgdGhlIEdvdmVybm1lbnQgd291bGQgc2VlayB0byBwcm90ZWN0IHRoZSByaWdodHMgb2YgRVUgY2l0aXplbnMgbGl2aW5nIGluIHRoZSBVSyBvbiB0aGUgYmFzaXMgdGhhdCB0aGUgc2FtZSByaWdodHMgd2VyZSBhZmZvcmRlZCB0byBVSyBjaXRpemVucyBsaXZpbmcgaW4gRVUgY291bnRyaWVzLlxuIFxuVGhpcyBicmllZmluZyBleHBsb3JlcyB0aGUgcG9zc2libGUgaW1wYWN0IG9uIHRoZSByaWdodHMgb2YgRVUgY2l0aXplbnMgbGl2aW5nIGluIHRoZSBVSyBmb2xsb3dpbmcgdGhlIFByaW1lIE1pbmlzdGVyXHUyMDE5cyBhbm5vdW5jZW1lbnQgdGhhdCB0aGUgVUsgd2lsbCBub3QgcmV0YWluIGl0cyBtZW1iZXJzaGlwIG9mIHRoZSBzaW5nbGUgbWFya2V0IG9uIGl0cyB3aXRoZHJhd2FsIGZyb20gdGhlIEVVLiBJdCBmb2N1c2VzIG9uIHRoZSBjdXJyZW50IGFuZCBmdXR1cmUgbGVnYWwgc3RhdHVzIG9mIG5vbi1VSyBFVSBjaXRpemVucyBpbiB0aGUgVUsgYW5kIGNvbnNpZGVycyB0aGUgcG9zc2libGUgZWZmZWN0cyBvZiB3aXRoZHJhd2luZyBmcm9tIHRoZSBzaW5nbGUgbWFya2V0IG9uIHRoZSBVS1x1MjAxOXMgbGFib3VyIGZvcmNlLiBJbiB0aGUgY29udGV4dCBvZiB0aGUgVUtcdTIwMTlzIGZ1dHVyZSBlY29ub21pYyByZXF1aXJlbWVudHMsIHRoZSBicmllZmluZyBjb25jbHVkZXMgd2l0aCBhbiBleGFtaW5hdGlvbiBvZiB0aGUgcG9zc2libGUgaW1wbGljYXRpb25zIG9mIGxlYXZpbmcgdGhlIEVVIGZvciBVSyBlY29ub215LCB0cmFkZSBhbmQgZmluYW5jaWFsIHNlcnZpY2VzLlxuIFxuSXQgZG9lcyBub3QgZXhhbWluZSB0aGUgZGlmZmVyZW50IG1vZGVscyB0aGF0IHRoZSBVSyBtYXkgYWRvcHQgb25jZSBpdCBoYXMgZm9ybWFsbHkgd2l0aGRyYXduIGZyb20gdGhlIEVVLiBOb3IgZG9lcyBpdCBleGFtaW5lIHRoZSBmdXR1cmUgaW1wbGljYXRpb25zIGZvciBpbW1pZ3JhdGlvbiBiZXR3ZWVuIEVVIGNvdW50cmllcyBhbmQgdGhlIFVLLiBUaGUgSG91c2Ugb2YgTG9yZHMgTGlicmFyeSBicmllZmluZyBvbiBMZWF2aW5nIHRoZSBFdXJvcGVhbiBVbmlvbjogRnV0dXJlIFVLLUVVIFJlbGF0aW9uc2hpcCBleHBsb3JlcyBib3RoIGlzc3VlcyBpbiBmdXJ0aGVyIGRldGFpbC4ifQogICAgICAsICJkYXRlIiA6IHsiX3ZhbHVlIiA6ICIyMDE3LTAxLTIwVDE1OjA5OjU1LjM1OTgyODMrMDA6MDAiLCAiX2RhdGF0eXBlIiA6ICJkYXRlVGltZSJ9CiAgICAgICwgImRlc2NyaXB0aW9uIiA6IFsiVGhpcyBMaWJyYXJ5IGJyaWVmaW5nIHdpbGwgZXhhbWluZSB0aGUgaW1wYWN0IG9uIHRoZSByaWdodHMgb2YgRVUgY2l0aXplbnMgbGl2aW5nIGluIHRoZSBVSyBvZiB0aGUgVUtcdTIwMTlzIGRlY2lzaW9uIHRvIGZvcm1hbGx5IHdpdGhkcmF3IGZyb20gdGhlIEVVLiBJdCB3aWxsIGFsc28gY29uc2lkZXIgdGhlIGFyZ3VtZW50cyByZWdhcmRpbmcgdGhlIFVLXHUyMDE5cyBmdXR1cmUgZWNvbm9taWMgcmVxdWlyZW1lbnRzIG9mIHRoZSBVSy4iXSwgImlkZW50aWZpZXIiIDogeyJfdmFsdWUiIDogIkxMTi0yMDE3LTAwMDYifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICAsICJzZWN0aW9uIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzM0NjcxMyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkxvcmRzIExpYnJhcnkgbm90ZXMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJMZWF2aW5nIHRoZSBFdXJvcGVhbiBVbmlvbjogVGhlIFNpbmdsZSBNYXJrZXQsIHRoZSBSaWdodHMgb2YgRVUgQ2l0aXplbnMgaW4gdGhlIFVLIGFuZCB0aGUgVUtcdTIwMTlzIEZ1dHVyZSBFY29ub21pYyBSZXF1aXJlbWVudHMiLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTYxIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiRWNvbm9taWMgc2l0dWF0aW9uIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjM2IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSW1taWdyYXRpb24ifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2NDciLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJJbnRlcm5hdGlvbmFsIGVjb25vbWljIHJlbGF0aW9ucyJ9CiAgICAgIH0KICAgICAgXSwgInR5cGUiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvc2NoZW1hL3BhcmwjUmVzZWFyY2hCcmllZmluZyJ9CiAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Jlc291cmNlcy82NzUzOTkiLCAiYWJzdHJhY3QiIDogeyJfdmFsdWUiIDogIlRoZSBUZWNobmljYWwgYW5kIEZ1cnRoZXIgRWR1Y2F0aW9uIEJpbGwgd2FzIGludHJvZHVjZWQgaW4gdGhlIEhvdXNlIG9mIExvcmRzIG9uIDEwIEphbnVhcnkgMjAxNyBhbmQgaXMgc2NoZWR1bGVkIGZvciBzZWNvbmQgcmVhZGluZyBvbiAxIEZlYnJ1YXJ5IDIwMTcuIFRoZSBCaWxsIGNvbXBsZXRlZCB0aGlyZCByZWFkaW5nIGluIHRoZSBIb3VzZSBvZiBDb21tb25zIG9uIDkgSmFudWFyeSAyMDE3LlxuIFxuVGhlIEJpbGwgaW5jbHVkZXMgdGhlIGZvbGxvd2luZyBwcm92aXNpb25zOlxuIFxuIFRvIGV4dGVuZCB0aGUgcmVtaXQgb2YgdGhlIEluc3RpdHV0ZSBmb3IgQXBwcmVudGljZXNoaXBzIHRvIGluY2x1ZGUgcmVndWxhdGlvbiBvZiB0aGUgcXVhbGl0eSBvZiBjbGFzc3Jvb20gYmFzZWQgdGVjaG5pY2FsIGVkdWNhdGlvbiBpbiBFbmdsYW5kLCBjcmVhdGluZyB0aGUgbmV3IEluc3RpdHV0ZSBmb3IgQXBwcmVudGljZXNoaXBzIGFuZCBUZWNobmljYWwgRWR1Y2F0aW9uIChJRkFURSkuIFRoZSByb2xlIG9mIElGQVRFIGhhcyBiZWVuIGRlc2NyaWJlZCBieSB0aGUgR292ZXJubWVudCBhcyBiZWluZyB0byBzdXBwb3J0IHRoZSBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgcmVmb3JtcyBzZXQgb3V0IGluIGl0cyBQb3N0LTE2IFNraWxscyBQbGFuLiBUbyBpbnRyb2R1Y2UgYW4gaW5zb2x2ZW5jeSByZWdpbWUgZm9yIGZ1cnRoZXIgZWR1Y2F0aW9uIGluc3RpdHV0aW9ucywgaW50ZW5kZWQgdG8gaW1wcm92ZSB0aGUgXHUyMDFjZmluYW5jaWFsIHJlbGlhbmNlXHUyMDFkIG9mIHRoZSBzZWN0b3IuIFRoaXMgd291bGQgcHJvdmlkZSBmb3IgdGhlIGNyZWF0aW9uIG9mIGFuIGVkdWNhdGlvbiBhZG1pbmlzdHJhdG9yLCB0byBiZSBhcHBvaW50ZWQgYnkgdGhlIGNvdXJ0cyBhcyBwYXJ0IG9mIHRoZSBpbnNvbHZlbmN5IHByb2NlZHVyZS4gRm9sbG93aW5nIHRoZSBkZXZvbHV0aW9uIG9mIHJlc3BvbnNpYmlsaXR5IGZvciBmdXJ0aGVyIGVkdWNhdGlvbiBpbiBzb21lIGFyZWFzIG9mIEVuZ2xhbmQgdG8gY29tYmluZWQgYXV0aG9yaXRpZXMsIHRoZSBCaWxsIHdvdWxkIGFsc28gYWxsb3cgdGhlIFNlY3JldGFyeSBvZiBTdGF0ZSB0byBjb250aW51ZSB0byBiZSBwcm92aWRlZCB3aXRoIGluZm9ybWF0aW9uIGJ5IGZ1cnRoZXIgZWR1Y2F0aW9uIGluc3RpdHV0aW9ucy4gXG4gXG5Hb3Zlcm5tZW50XHUyMDE5cyBBaW1zIGZvciB0aGUgQmlsbFxuIFxuVGhlIEdvdmVybm1lbnRcdTIwMTlzIHN0YXRlZCBhaW0gaW4gaW50cm9kdWNpbmcgdGhlIEJpbGwgaXMgdG8gc3VwcG9ydCB0aGUgaW1wcm92ZW1lbnQgb2YgdGVjaG5pY2FsIGFuZCBmdXJ0aGVyIGVkdWNhdGlvbiBhbmQgdGhlcmVieSBpbmNyZWFzZSBzb2NpYWwgbW9iaWxpdHkgYW5kIGhlbHAgaW5jcmVhc2UgcHJvZHVjdGl2aXR5IGJ5IGFkZHJlc3Npbmcgc2tpbGwgc2hvcnRhZ2VzIGluIHRoZSBlY29ub215LiBJdCBjb21lcyBhdCB0aGUgc2FtZSB0aW1lIHRoYXQgdGhlIEdvdmVybm1lbnQgaGFzIHByb3Bvc2VkIHRoZSBjcmVhdGlvbiBvZiAzIG1pbGxpb24gbmV3IGFwcHJlbnRpY2VzaGlwcyBieSAyMDIwLCB3aXRoIHRoZSBpbnRyb2R1Y3Rpb24gb2YgdGhlIEFwcHJlbnRpY2VzaGlwIExldnkgdG8gYmUgcGFpZCBieSBsYXJnZSBlbXBsb3llcnMuXG4gXG5PcHBvc2l0aW9uIEFtZW5kbWVudHNcbiBcblRoZSBPcHBvc2l0aW9uIGhhcyBzdGF0ZWQgaXRzIHN1cHBvcnQgZm9yIHRoZSBvYmplY3RpdmVzIG9mIHRoZSBCaWxsLCBidXQgdGFibGVkIGEgbnVtYmVyIG9mIGFtZW5kbWVudHMgZHVyaW5nIGNvbW1pdHRlZSBzdGFnZSBhbmQgcmVwb3J0IHN0YWdlLCB0aGUgcHVycG9zZSBvZiB3aGljaCBpdCBkZXNjcmliZWQgYXMgYmVpbmcgdG8gcHJvYmUgaG93IHRoZSBwcm92aXNpb25zIGluIHRoZSBCaWxsIG1pZ2h0IHdvcmsgaW4gcHJhY3RpY2UuXG4gXG5UaGVyZSB3ZXJlIHR3byBkaXZpc2lvbnMgb24gT3Bwb3NpdGlvbiBhbWVuZG1lbnRzIHRvIHRoZSBiaWxsIGF0IHJlcG9ydCBzdGFnZTogdGhlIGZpcnN0IG9uIGEgcmVxdWlyZW1lbnQgZm9yIHRoZSBHb3Zlcm5tZW50IHRvIGxheSBhIHN0cmF0ZWd5IG9uIGltcHJvdmluZyBjYXJlZXJzIGVkdWNhdGlvbiBiZWZvcmUgUGFybGlhbWVudCBhbmQgdGhlIHNlY29uZCBvbiB3aGV0aGVyIHRvIHByZXZlbnQgZWR1Y2F0aW9uIGFkbWluaXN0cmF0b3JzIGZyb20gdHJhbnNmZXJyaW5nIGNlcnRhaW4gYXNzZXRzIHRvIGEgZm9yLXByb2ZpdCBwcml2YXRlIGNvbXBhbnkuIEJvdGggb2YgdGhlc2UgbW90aW9ucyB3ZXJlIGRlZmVhdGVkLiJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDEtMTlUMTg6MTU6MzEuNzAxMjkzMyswMDowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIExpYnJhcnkgYnJpZWZpbmcgcHJvdmlkZXMgaW5mb3JtYXRpb24gb24gdGhlIFRlY2huaWNhbCBhbmQgRnVydGhlciBFZHVjYXRpb24gQmlsbCBhbmQgdGhlIGNvbnNpZGVyYXRpb24gb2YgdGhlIEJpbGwgaW4gdGhlIEhvdXNlIG9mIENvbW1vbnMuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMTE4tMjAxNy0wMDA1In0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8zNDY3MTMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBMaWJyYXJ5IG5vdGVzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiVGVjaG5pY2FsIGFuZCBGdXJ0aGVyIEVkdWNhdGlvbiBCaWxsOiBCcmllZmluZyBmb3IgTG9yZHMgU3RhZ2VzIiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTYxNCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkZ1cnRoZXIgZWR1Y2F0aW9uIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjQyIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSW5zb2x2ZW5jeSJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTc2OSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlRyYWluaW5nIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzY3NDY0NSIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiVGhlIENvbW1vbndlYWx0aCBEZXZlbG9wbWVudCBDb3Jwb3JhdGlvbiBCaWxsIGlzIGZvY3VzZWQgb24gdGhlIHdvcmsgb2YgQ0RDIEdyb3VwIFBMQyAodGhlIENEQyksIHRoZSBVSyBHb3Zlcm5tZW50XHUyMDE5cyBkZXZlbG9wbWVudCBmaW5hbmNlIGluc3RpdHV0aW9uLiBXaG9sbHkgb3duZWQgYnkgdGhlIERlcGFydG1lbnQgZm9yIEludGVybmF0aW9uYWwgRGV2ZWxvcG1lbnQgKERGSUQpLCB0aGUgQ0RDIGludmVzdHMgaW4gcHJpdmF0ZSBlbnRlcnByaXNlIGluIGEgc2VsZWN0IGxpc3Qgb2YgZGV2ZWxvcGluZyBjb3VudHJpZXMgdG8gc3VwcG9ydCBpdHMgbWlzc2lvbiBzdGF0ZW1lbnQgb2YgY3JlYXRpbmcgam9icywgYnVzaW5lc3MgZ3Jvd3RoIGFuZCBlY29ub21pYyBkZXZlbG9wbWVudCBpbiBzb21lIG9mIHRoZSB3b3JsZFx1MjAxOXMgcG9vcmVzdCByZWdpb25zLlxuIFxuVGhlIHByaW5jaXBhbCBmb2N1cyBvZiB0aGUgQ29tbW9ud2VhbHRoIERldmVsb3BtZW50IENvcnBvcmF0aW9uIEJpbGwgaXMgdGhlIGFtb3VudCBvZiBmaW5hbmNpYWwgYXNzaXN0YW5jZSB0aGF0IHRoZSBHb3Zlcm5tZW50IGNhbiBwcm92aWRlIHRvIHRoZSBDREMgaW4gc3VwcG9ydCBvZiB0aG9zZSBhaW1zLiBUaGUgcHJldmlvdXMgQWN0IGdvdmVybmluZyBpdHMgb3BlcmF0aW9uLCB0aGUgQ29tbW9ud2VhbHRoIERldmVsb3BtZW50IENvcnBvcmF0aW9uIEFjdCAxOTk5LCBpbXBvc2VkIGEgbGltaXQgb24gdGhhdCBhc3Npc3RhbmNlIG9mIMKjMS41IGJpbGxpb247IGEgbGltaXQgd2hpY2ggaGFzIG5vdyBiZWVuIHJlYWNoZWQgZm9sbG93aW5nIGdvdmVybm1lbnQgaW52ZXN0bWVudCBvZiDCozczNSBtaWxsaW9uIGluIHRoZSBDREMgaW4gSnVseSAyMDE1LiBUaGUgQmlsbCB3b3VsZCByYWlzZSB0aGUgaW52ZXN0bWVudCBsaW1pdCB0byDCozYgYmlsbGlvbiwgYW5kIGFsbG93IGZvciB0aGUgU2VjcmV0YXJ5IG9mIFN0YXRlIHRvIGZ1cnRoZXIgaW5jcmVhc2UgdGhlIGxpbWl0IHVwIHRvIMKjMTIgYmlsbGlvbiB3aXRob3V0IHRoZSBuZWVkIGZvciBmdXJ0aGVyIHByaW1hcnkgbGVnaXNsYXRpb24uXG4gXG5DZXJ0aWZpZWQgYnkgdGhlIFNwZWFrZXIgb2YgdGhlIEhvdXNlIG9mIENvbW1vbnMgYXMgYSBtb25leSBiaWxsLCB0aGUgQ29tbW9ud2VhbHRoIERldmVsb3BtZW50IENvcnBvcmF0aW9uIEJpbGwgcmVjZWl2ZWQgY3Jvc3MtcGFydHkgc3VwcG9ydCBkdXJpbmcgaXRzIHNjcnV0aW55IGJ5IE1Qcy4gSG93ZXZlciwgYSBudW1iZXIgb2YgYW1lbmRtZW50cyB3ZXJlIHRhYmxlZCBkdXJpbmcgdGhlIEJpbGxcdTIwMTlzIHBhc3NhZ2UgdGhyb3VnaCB0aGUgSG91c2UsIHdoaWNoIGZlbGwgaW50byB0aHJlZSBicm9hZCBjYXRlZ29yaWVzOiB0aG9zZSB3aGljaCBmb2N1c2VkIG9uIHRoZSBhbW91bnQgb2YgZnVuZGluZyBiZWluZyBwcm92aWRlZCB0byB0aGUgQ0RDOyB0aG9zZSB3aGljaCB3b3VsZCBpbXBvc2UgcmVzdHJpY3Rpb25zIG9yIHJlcG9ydGluZyByZXF1aXJlbWVudHMgb24gdGhhdCBpbnZlc3RtZW50OyBvciB0aG9zZSB3aGljaCB3b3VsZCBpbXBvc2UgY29uZGl0aW9ucyBvciByZXN0cmljdGlvbnMgb24gaG93IHRoZSBDREMgd2FzIHN1YnNlcXVlbnRseSBhYmxlIHRvIHVzZSB0aG9zZSBmdW5kcy4gT3Bwb3NpdGlvbiBwYXJ0aWVzIGZvY3VzZWQgcGFydGljdWxhciBhdHRlbnRpb24gb24gaG93IHRoZSBmaWd1cmVzIHdpdGhpbiB0aGUgQmlsbCBoYWQgYmVlbiBhcnJpdmVkIGF0LCBvbiBpc3N1ZXMgc3VjaCBhcyB0cmFuc3BhcmVuY3kgYW5kIHRoZSBDRENcdTIwMTlzIHVzZSBvZiB0YXggaGF2ZW5zLCBhbmQgd2hldGhlciB0aGVyZSB3YXMgc3VmZmljaWVudGx5IGV4cGxpY2l0IGZvY3VzIG9uIHRoZSBnb2FsIG9mIHBvdmVydHkgcmVkdWN0aW9uLiJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDEtMThUMTg6MzA6MDcuNTMxMDU3OSswMDowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIExvcmRzIExpYnJhcnkgYnJpZWZpbmcgcHJvdmlkZXMgaW5mb3JtYXRpb24gb24gdGhlIENvbW1vbndlYWx0aCBEZXZlbG9wbWVudCBDb3Jwb3JhdGlvbiBCaWxsIDIwMTYtMTcgYWhlYWQgb2YgaXRzIHNlY29uZCByZWFkaW5nIGluIHRoZSBIb3VzZSBvZiBMb3JkcyBvbiAyNSBKYW51YXJ5IDIwMTcuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMTE4tMjAxNy0wMDA0In0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8zNDY3MTMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBMaWJyYXJ5IG5vdGVzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiQ29tbW9ud2VhbHRoIERldmVsb3BtZW50IENvcnBvcmF0aW9uIEJpbGw6IEJyaWVmaW5nIGZvciBMb3JkcyBTdGFnZXMiLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjQ2IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSW50ZXJuYXRpb25hbCBkZXZlbG9wbWVudCJ9CiAgICAgIH0KICAgICAgXSwgInR5cGUiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvc2NoZW1hL3BhcmwjUmVzZWFyY2hCcmllZmluZyJ9CiAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Jlc291cmNlcy82NzM4MjIiLCAiYWJzdHJhY3QiIDogeyJfdmFsdWUiIDogIk1lbWJlciBEYXRlIEpvaW5lZCBOdW1iZXIgb2YgTUVQcyBFdXJvIFpvbmUgTWVtYmVyIFNjaGVuZ2VuIE1lbWJlciBDb3VuY2lsIG9mIHRoZSBFdXJvcGVhbiBVbmlvbiBQcmVzaWRlbmN5IDIwMTdcdTIwMTMyMDMwIEF1c3RyaWEgMTk5NSAxOCAxOTk5IFlFUyBKdWxcdTIwMTNEZWMgMjAxOCBCZWxnaXVtIDE5NTggMjEgMTk5OSBZRVMgSmFuXHUyMDEzSnVuIDIwMjQgQnVsZ2FyaWEgMjAwNyAxNyBOL0EgTk8gSmFuXHUyMDEzSnVuIDIwMTggQ3JvYXRpYSAyMDEzIDExIE4vQSBOTyBKYW5cdTIwMTNKdW4gMjAyMCBDeXBydXMgMjAwNCA2IDIwMDggTk8gSmFuXHUyMDEzSnVuIDIwMjYgQ3plY2ggUmVwdWJsaWMgMjAwNCAyMiBOL0EgWUVTIEp1bFx1MjAxM0RlYyAyMDIyIERlbm1hcmsgMTk3MyAxMyBOL0EgWUVTIEp1bFx1MjAxM0RlYyAyMDI1IEVzdG9uaWEgMjAwNCA2IDIwMTEgWUVTIEp1bFx1MjAxM0RlYyAyMDE3IEZpbmxhbmQgMTk5NSAxMyAxOTk5IFlFUyBKdWxcdTIwMTNEZWMgMjAxOSBGcmFuY2UgMTk1OCA3NCAxOTk5IFlFUyBKYW5cdTIwMTNKdW4gMjAyMiBHZXJtYW55IDE5NTggOTYgMTk5OSBZRVMgSnVsXHUyMDEzRGVjIDIwMjAgR3JlZWNlIDE5ODEgMjEgMjAwMSBZRVMgSnVsXHUyMDEzRGVjIDIwMjcgSHVuZ2FyeSAyMDA0IDIyIE4vQSBZRVMgSnVsXHUyMDEzRGVjIDIwMjQgSXJlbGFuZCAxOTczIDExIDE5OTkgTk8gSnVsXHUyMDEzRGVjIDIwMjYgSXRhbHkgMTk1OCA3MyAxOTk5IFlFUyBKYW5cdTIwMTNKdW4gMjAyOCBMYXR2aWEgMjAwNCA4IDIwMTQgWUVTIEp1bFx1MjAxM0RlYyAyMDI4IExpdGh1YW5pYSAyMDA0IDExIDIwMTUgWUVTIEphblx1MjAxM0p1biAyMDI3IEx1eGVtYm91cmcgMTk1OCA2IDE5OTkgWUVTIEphblx1MjAxM0p1biAyMDI5IE1hbHRhIDIwMDQgNiAyMDA4IFlFUyBKYW5cdTIwMTNKdW4gMjAxNyBKdWxcdTIwMTNEZWMgMjAzMCBOZXRoZXJsYW5kcyAxOTU4IDI2IDE5OTkgWUVTIEp1bFx1MjAxM0RlYyAyMDI5IFBvbGFuZCAyMDA0IDUxIE4vQSBZRVMgSmFuXHUyMDEzSnVuIDIwMjUgUG9ydHVnYWwgMTk4NiAyMSAxOTk5IFlFUyBKYW5cdTIwMTNKdW4gMjAyMSBSb21hbmlhIDIwMDcgMzIgTi9BIE5PIEphblx1MjAxM0p1biAyMDE5IFNsb3Zha2lhIDIwMDQgMTMgMjAwOSBZRVMgSmFuXHUyMDEzSnVuIDIwMzAgU2xvdmVuaWEgMjAwNCA4IDIwMDcgWUVTIEp1bFx1MjAxM0RlYyAyMDIxIFNwYWluIDE5ODYgNTQgMTk5OSBZRVMgSnVsXHUyMDEzRGVjIDIwMjMgU3dlZGVuIDE5OTUgMjAgTi9BIFlFUyBKYW5cdTIwMTNKdW4gMjAyMyBVbml0ZWQgS2luZ2RvbSAxOTczIDczIE4vQSBOTyBOL0EgXG4gXG5FbGVjdGlvbnMgaW4gTWVtYmVyIFN0YXRlcyBpbiAyMDE3XG4gXG4gRnJhbmNlXHUyMDE5cyBwcmVzaWRlbnRpYWwgZWxlY3Rpb25zIGFyZSBzZXQgZm9yIDIzIEFwcmlsIDIwMTcsIHdpdGggYSBzZWNvbmQgcm91bmQgcnVuLW9mZiBvbiA3IE1heSAyMDE3IGlmIHJlcXVpcmVkLiBHZXJtYW4gZmVkZXJhbCBlbGVjdGlvbnMgYXJlIGR1ZSB0byB0YWtlIHBsYWNlIGJ5IE9jdG9iZXIgMjAxNy4gVW5sZXNzIGl0IGlzIGRpc3NvbHZlZCBlYXJseSwgaW4gYWNjb3JkYW5jZSB3aXRoIEdlcm1hbiBCYXNpYyBMYXcsIDIzIEF1Z3VzdCAyMDE3IGlzIHRoZSBlYXJsaWVzdCBkYXRlIG9uIHdoaWNoIHRoZSBlbGVjdGlvbnMgY291bGQgYmUgaGVsZCwgdGhlIGxhdGVzdCBwb3NzaWJsZSBkYXRlIHdvdWxkIGJlIDIyIE9jdG9iZXIgMjAxNy4gXG4gXG5FdXJvcGVhbiBDb3VuY2lsIE1lZXRpbmdzIGluIDIwMTdcbiBcbiAzIEZlYnJ1YXJ5OiBpbmZvcm1hbCBtZWV0aW5nIG9mIEVVIGhlYWRzIG9mIHN0YXRlIG9yIGdvdmVybm1lbnQgOCBNYXJjaDogVHJpcGFydGl0ZSBTb2NpYWwgU3VtbWl0IDlcdTIwMTMxMCBNYXJjaDogRXVyb3BlYW4gQ291bmNpbCAyMlx1MjAxMzIzIEp1bmU6IEV1cm9wZWFuIENvdW5jaWwgMTlcdTIwMTMyMCBPY3RvYmVyOiBFdXJvcGVhbiBDb3VuY2lsIFxuIFxuTWVtYmVycyBvZiB0aGUgRXVyb3BlYW4gQ291bmNpbFxuIFxuIE5hbWUgUG9zaXRpb24gSGVsZCBNZW1iZXIgU3RhdGUgRG9uYWxkIFR1c2sgUHJlc2lkZW50IG9mIHRoZSBFdXJvcGVhbiBDb3VuY2lsIE4vQSBDaHJpc3RpYW4gS2VybiBGZWRlcmFsIENoYW5jZWxsb3IgQXVzdHJpYSBDaGFybGVzIE1pY2hlbCBQcmltZSBNaW5pc3RlciBCZWxnaXVtIEJveWtvIEJvcmlzc292IFByaW1lIE1pbmlzdGVyIEJ1bGdhcmlhIEFuZHJlaiBQbGVua292acSHIFByaW1lIE1pbmlzdGVyIENyb2F0aWEgTmljb3MgQW5hc3Rhc2lhZGVzIFByZXNpZGVudCBvZiB0aGUgUmVwdWJsaWMgQ3lwcnVzIEJvaHVzbGF2IFNvYm90a2EgUHJpbWUgTWluaXN0ZXIgQ3plY2ggUmVwdWJsaWMgTGFycyBMw7hra2UgUmFzbXVzc2VuIFByaW1lIE1pbmlzdGVyIERlbm1hcmsgRW5kYSBLZW5ueSBUYW9pc2VhY2ggSXJlbGFuZCBKw7xyaSBSYXRhcyBQcmltZSBNaW5pc3RlciBFc3RvbmlhIEp1aGEgU2lwaWzDpCBQcmltZSBNaW5pc3RlciBGaW5sYW5kIEZyYW7Dp29pcyBIb2xsYW5kZSBQcmVzaWRlbnQgb2YgdGhlIFJlcHVibGljIEZyYW5jZSBBbmdlbGEgTWVya2VsIEZlZGVyYWwgQ2hhbmNlbGxvciBHZXJtYW55IEFsZXhpcyBUc2lwcmFzIFByaW1lIE1pbmlzdGVyIEdyZWVjZSBWaWt0b3IgT3Jiw6FuIFByaW1lIE1pbmlzdGVyIEh1bmdhcnkgUGFvbG8gR2VudGlsb25pIFByaW1lIE1pbmlzdGVyIEl0YWx5IE3EgXJpcyBLdcSNaW5za2lzIFByaW1lIE1pbmlzdGVyIExhdHZpYSBYYXZpZXIgQmV0dGVsIFByaW1lIE1pbmlzdGVyIEx1eGVtYm91cmcgRGFsaWEgR3J5YmF1c2thaXTElyBQcmVzaWRlbnQgb2YgdGhlIFJlcHVibGljIExpdGh1YW5pYSBKb3NlcGggTXVzY2F0IFByaW1lIE1pbmlzdGVyIE1hbHRhIE1hcmsgUnV0dGUgUHJpbWUgTWluaXN0ZXIgTmV0aGVybGFuZHMgQmVhdGEgU3p5ZGxvIFByaW1lIE1pbmlzdGVyIFBvbGFuZCBBbnTDs25pbyBDb3N0YSBQcmltZSBNaW5pc3RlciBQb3J0dWdhbCBLbGF1cyBXZXJuZXIgSW9oYW5uaXMgUHJlc2lkZW50IFJvbWFuaWEgUm9iZXJ0IEZpY28gUHJpbWUgTWluaXN0ZXIgU2xvdmFraWEgTWlybyBDZXJhciBQcmltZSBNaW5pc3RlciBTbG92ZW5pYSBNYXJpYW5vIFJham95IEJyZXkgUHJlc2lkZW50IG9mIHRoZSBHb3Zlcm5tZW50IFNwYWluIFN0ZWZhbiBMw7ZmdmVuIFByaW1lIE1pbmlzdGVyIFN3ZWRlbiBUaGVyZXNhIE1heSBQcmltZSBNaW5pc3RlciBVbml0ZWQgS2luZ2RvbSBKZWFuIENsYXVkZSBKdW5ja2VyIFByZXNpZGVudCBvZiB0aGUgRXVyb3BlYW4gQ29tbWlzc2lvbiBOL0EifQogICAgICAsICJkYXRlIiA6IHsiX3ZhbHVlIiA6ICIyMDE3LTAxLTE3VDE3OjUzOjE1LjAyNzQzNjIrMDA6MDAiLCAiX2RhdGF0eXBlIiA6ICJkYXRlVGltZSJ9CiAgICAgICwgImRlc2NyaXB0aW9uIiA6IFsiVGhpcyBIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5IGJyaWVmaW5nIHByb3ZpZGVzIGJhY2tncm91bmQgaW5mb3JtYXRpb24gYWJvdXQgRVUgbWVtYmVyIHN0YXRlcywgaWRlbnRpZmllcyBrZXkgZWxlY3Rpb24gZGF0ZXMgaW4gbWVtYmVyIHN0YXRlcyBpbiAyMDE3LCB3aGVuIHRoZSBFdXJvcGVhbiBDb3VuY2lsIGlzIGR1ZSB0byBtZWV0LCBhbmQgbGlzdHMgdGhlIGluZGl2aWR1YWxzIHdobyBhcmUgY3VycmVudCBtZW1iZXJzIG9mIHRoZSBFdXJvcGVhbiBDb3VuY2lsLiJdLCAiaWRlbnRpZmllciIgOiB7Il92YWx1ZSIgOiAiTElGLTIwMTctMDAwMiJ9CiAgICAgICwgInB1Ymxpc2hlciIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8yNTI4NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIExpYnJhcnkifQogICAgICB9CiAgICAgICwgInNlY3Rpb24iIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgXSwgInN1YlR5cGUiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvNDE0MDQxIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTG9yZHMgSW4gRm9jdXMifQogICAgICB9CiAgICAgICwgInRpdGxlIiA6ICJFdXJvcGVhbiBVbmlvbiBpbiAyMDE3OiBCYWNrZ3JvdW5kIEluZm9ybWF0aW9uIiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTU5MCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkVVIGluc3RpdHV0aW9ucyJ9CiAgICAgIH0KICAgICAgXSwgInR5cGUiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvc2NoZW1hL3BhcmwjUmVzZWFyY2hCcmllZmluZyJ9CiAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Jlc291cmNlcy81OTM0MDEiLCAiYWJzdHJhY3QiIDogeyJfdmFsdWUiIDogIkJhY2tncm91bmRcbiBcblRoZSBTbWFsbCBDaGFyaXRhYmxlIERvbmF0aW9ucyBhbmQgQ2hpbGRjYXJlIFBheW1lbnRzIEFjdCAyMDE3wqBtYWtlcyBhIG51bWJlciBvZiBhbWVuZG1lbnRzIHRvIHRoZSBsZWdpc2xhdGlvbiB3aGljaCB1bmRlcnBpbnMgdGhlIEdpZnQgQWlkIFNtYWxsIERvbmF0aW9ucyBTY2hlbWUgKEdBU0RTKSwgaW50cm9kdWNlZCBpbiBBcHJpbCAyMDEzLiBUaGUgcHVycG9zZSBvZiB0aGVzZSBjaGFuZ2VzIGlzIHRvIHNpbXBsaWZ5IHRoZSBzY2hlbWUgYW5kIGV4dGVuZCBhY2Nlc3MgdG8gc21hbGxlciBhbmQgbmV3ZXIgY2hhcml0aWVzLiBUaGUgQWN0IGFsc28gbWFrZXMgYSBmZXcgdGVjaG5pY2FsIGFtZW5kbWVudHMgdG8gdGhlIGxlZ2lzbGF0aW9uIHdoaWNoIGVzdGFibGlzaGVzIFRheC1GcmVlIENoaWxkY2FyZSwgdGhlIEdvdmVybm1lbnRcdTIwMTlzIHNjaGVtZSB0byBzdXBwb3J0IHBhcmVudHNcdTIwMTkgY2hpbGRjYXJlIGNvc3RzLCBzY2hlZHVsZWQgdG8gYmUgcm9sbGVkIG91dCBmcm9tIGVhcmx5IDIwMTcuXG4gXG5VbmRlciBHaWZ0IEFpZCBjaGFyaXRpZXMgYXJlIGVudGl0bGVkIHRvIGNsYWltIDI1cCB0YXggb24gZWFjaCDCozEgdGhleSByZWNlaXZlIGZyb20gaW5kaXZpZHVhbCBkb25hdGlvbnMuIFRoaXMgcmVwcmVzZW50cyByZXBheW1lbnQgb2YgdGhlIGJhc2ljIHJhdGUgdGF4IHRoYXQgZG9ub3JzIGhhdmUgcGFpZCBvbiB0aGlzIHBhcnQgb2YgdGhlaXIgaW5jb21lLiBJbmRpdmlkdWFscyB3aG8gYXJlIGhpZ2hlciBvciBhZGRpdGlvbmFsIHJhdGUgdGF4cGF5ZXJzIGNsYWltIHRoZSBleHRyYSB0YXggdGhleSB3aWxsIGhhdmUgcGFpZCBmcm9tIEhNIFJldmVudWUgJiBDdXN0b21zIChITVJDKS4gVG8gc3VwcG9ydCBhbnkgR2lmdCBBaWQgY2xhaW0sIGNoYXJpdGllcyBtdXN0IGhhdmUgYSBHaWZ0IEFpZCBkZWNsYXJhdGlvbiBmcm9tIHRoZSBkb25vciwgY29uZmlybWluZyB0aGV5IGhhdmUgcGFpZCB0aGUgc2FtZSBhbW91bnQgb3IgbW9yZSBpbiB0YXggaW4gdGhhdCB5ZWFyLlsxXSBJZiBhIGRvbmF0aW9uIGhhcyBub3QgYmVlbiBtYWRlIG91dCBvZiB0YXhlZCBpbmNvbWUsIHRheCBoYXMgdG8gYmUgcGFpZCBieSB0aGUgZG9ub3IgdG8gSE1SQy4gQ2xlYXJseSB0aG9zZSBkb25vcnMgd2hvIGFyZSBub3QgZWFybmluZyBlbm91Z2ggdG8gYmUgcGF5aW5nIGluY29tZSB0YXggd2lsbCBub3Qgd2FudCB0byB1c2UgR2lmdCBBaWQuIFRoZXJlIHdpbGwgYWxzbyBiZSBjaXJjdW1zdGFuY2VzIHdoZXJlIGNoYXJpdGllcyBtYXkgZmluZCBpdCBkaWZmaWN1bHQgdG8gZ2V0IGEgZGVjbGFyYXRpb24gZnJvbSBkb25vcnMgXHUyMDEzIHNheSwgd2hlbiBjb2xsZWN0aW5nIHNtYWxsIGNhc2ggZ2lmdHMgaW4gYSBjb2xsZWN0aW5nIHRpbi4gVGhlIEdBU0RTIGFsbG93cyBjaGFyaXRpZXMgdG8gY2xhaW0gYSB0b3AtdXAgcGF5bWVudCBvbiBkb25hdGlvbnMgZXF1aXZhbGVudCB0byBHaWZ0IEFpZCBpbiB0aGVzZSBzaXR1YXRpb25zLlxuIFxuSW4gdGhlIDIwMTEgQnVkZ2V0IHRoZSB0aGVuIENoYW5jZWxsb3IgR2VvcmdlIE9zYm9ybmUgYW5ub3VuY2VkIFx1MjAxY2EgbmV3IHNjaGVtZSB3aGVyZSBHaWZ0IEFpZCBjYW4gYmUgY2xhaW1lZCBvbiBzbWFsbCBkb25hdGlvbnMsIHVwIHRvIGEgdG90YWwgb2YgwqM1LDAwMCBhIHllYXIgcGVyIGNoYXJpdHksIHdpdGhvdXQgdGhlIG5lZWQgZm9yIGRvbm9ycyB0byBmaWxsIGluIGFueSBmb3JtcyBhdCBhbGwuIFRoaXMgbWVhbnMgR2lmdCBBaWQgb24gdGhlIGNvbnRlbnRzIG9mIHRoZSBjb2xsZWN0aW5nIHRpbiBhbmQgdGhlIHN0cmVldCBidWNrZXQsIGFuZCAxMDAsMDAwIGNoYXJpdGllcyB3aWxsIGJlbmVmaXQgdG8gdGhlIHR1bmUgb2YgwqMyNDBtLlx1MjAxZFsyXSBTdGF0dXRvcnkgcHJvdmlzaW9uIGZvciB0aGUgR0FTRFMgd2FzIG1hZGUgYnkgdGhlIFNtYWxsIENoYXJpdGFibGUgRG9uYXRpb25zIEFjdCAyMDEyLiBBcyB0aGVyZSBpcyBubyBsaW5rIHRvIHRoZSB0YXggcGFpZCBieSB0aGUgZG9ub3IsIHRoZSBHQVNEUyBpcyBub3QgdGF4IHJlbGllZiBidXQgaXMgdHJlYXRlZCBhcyBwdWJsaWMgZXhwZW5kaXR1cmU7IHRoaXMgaXMgd2h5IHRoZSBsZWdpc2xhdGlvbiB0byBlc3RhYmxpc2ggdGhlIHNjaGVtZSB3YXMgbm90IGluY2x1ZGVkIGluIHRoZSBhbm51YWwgRmluYW5jZSBCaWxsLlszXVxuIFxuVGhlIEFjdCBzZXRzIGEgbnVtYmVyIG9mIHJ1bGVzIGZvciBlbGlnaWJsZSBjaGFyaXRpZXMgYW5kIHF1YWxpZnlpbmcgcGF5bWVudHMsIHRvIG1pbmltaXNlIHRoZSByaXNrIG9mIGZyYXVkIGFuZCB0byBwcm92aWRlIGEgbGluayB3aXRoIEdpZnQgQWlkOiBzZXR0aW5nIHN0YW5kYXJkcyBmb3IgYSBjaGFyaXR5XHUyMDE5cyBjb21wbGlhbmNlIGJlaGF2aW91ciwgYW5kLCBjYXBwaW5nIHRoZSBzaXplIG9mIGEgY2hhcml0eVx1MjAxOXMgYW5udWFsIGNsYWltIHVuZGVyIEdBU0RTIGJ5IHJlZmVyZW5jZSB0byBpdHMgYW5udWFsIGNsYWltIHVuZGVyIEdpZnQgQWlkICh0aGUgXHUyMDE4bWF0Y2hpbmcgcnVsZVx1MjAxOSkuIEluIGFkZGl0aW9uLCBhIGNoYXJpdHkgdGhhdCBpcyBjb25uZWN0ZWQgd2l0aCBvbmUgb3IgbW9yZSBvdGhlciBjaGFyaXRpZXMgaGFzIHRvIHNoYXJlIHRoZSBhbm51YWwgwqM1LDAwMCBtYWluIGFsbG93YW5jZS4gRmluYWxseSwgdGhlIHNjaGVtZSBhbGxvd3MgYSBjaGFyaXR5IHRvIG1ha2UgYW4gYWRkaXRpb25hbCBjbGFpbSBpbiByZXNwZWN0IG9mIGRvbmF0aW9ucyBpdCBoYXMgcmFpc2VkIGFzIHBhcnQgb2YgaXRzIGNoYXJpdGFibGUgYWN0aXZpdGllcyBpbiBhIGNvbW11bml0eSBidWlsZGluZyBcdTIwMTMgc3VjaCBhcyBhIHZpbGxhZ2UgaGFsbCwgdG93biBoYWxsIG9yIHBsYWNlIG9mIHdvcnNoaXAuIFRoZSBhaW0gb2YgdGhlc2UgcnVsZXMgaXMgdG8gYWxsb3cgXHUyMDE4Z3JvdXBzXHUyMDE5IG9mIGNoYXJpdGllcyB0byBjbGFpbSBlcXVpdmFsZW50IGFtb3VudHMgaWYgdGhleSBhcmUgc3RydWN0dXJlZCBpbiBkaWZmZXJlbnQgd2F5cy4gQXMgYSBjb25zZXF1ZW5jZSBuYXRpb25hbCBvcmdhbmlzYXRpb25zLCBsaWtlIGRvbWluYXRpb25zIG9mIGNodXJjaGVzLCBtYXkgY2xhaW0gc2ltaWxhciBhbW91bnRzIHdoZXRoZXIgdGhleSBhcmUgc3RydWN0dXJlZCBhcyBhIHNpbmdsZSBjaGFyaXR5IG5hdGlvbmFsbHksIG9yIGFzIGEgXHUyMDE4Z3JvdXBcdTIwMTkgc3RydWN0dXJlIG1hZGUgdXAgb2YgaW5kaXZpZHVhbCBjaGFyaXRpZXMuXG4gXG5Pbmx5IGNhc2ggZG9uYXRpb25zIG9mIHVwIHRvIMKjMjAgbWF5IHF1YWxpZnkgZm9yIGEgdG9wLXVwIHBheW1lbnQuIFRoaXMgbGltaXQgcmVtYWlucyBpbiBmb3JjZSwgYWx0aG91Z2ggdGhlIGFubnVhbCBcdTIwMThtYWluIGFsbG93YW5jZVx1MjAxOSBmb3IgZG9uYXRpb25zIHdhcyBpbmNyZWFzZWQgdG8gwqM4LDAwMCBmcm9tIEFwcmlsIDIwMTYuWzRdXG4gXG5Db25zdWx0YXRpb24gb24gcmVmb3JtaW5nIHRoZSBzY2hlbWVcbiBcbkF0IHRoZSB0aW1lIG9mIGl0cyBsYXVuY2ggaW4gMjAxMyB0aGUgR292ZXJubWVudCBzYWlkIHRoYXQgaXQgd291bGQgcmV2aWV3IHRoZSBvcGVyYXRpb24gb2YgR0FTRFMgYWZ0ZXIgdGhyZWUgeWVhcnMuIEZvbGxvd2luZyBhIGNhbGwgZm9yIGV2aWRlbmNlIGZyb20gc3Rha2Vob2xkZXJzLCBpbiBBcHJpbCAyMDE2IHRoZSBHb3Zlcm5tZW50IHB1Ymxpc2hlZCBwcm9wb3NhbHMgZm9yIHJlZm9ybWluZyB0aGUgc2NoZW1lLls1XSBJbiBBdWd1c3QgdGhlIEdvdmVybm1lbnQgY29uZmlybWVkIHRoYXQgcmVzcG9uc2VzIGhhZCBiZWVuIFx1MjAxOGdlbmVyYWxseSBwb3NpdGl2ZVx1MjAxOSwgYW5kIGl0IHdvdWxkIGxlZ2lzbGF0ZSB0byBzaW1wbGlmeSB0aGUgY29tcGxpYW5jZSBjcml0ZXJpYSwgYW5kIHRvIHJlbGF4IHRoZSBjb21tdW5pdHkgYnVpbGRpbmcgcnVsZXMsIHRob3VnaCBpbiBmdXR1cmUgY2hhcml0aWVzIHdvdWxkIGJlIGVudGl0bGVkIHRvIGEgdG9wLXVwIHBheW1lbnQgZm9yIGRvbmF0aW9ucyByYWlzZWQgaW4gZWxpZ2libGUgY29tbXVuaXR5IGJ1aWxkaW5ncyBvciBmb3IgZG9uYXRpb25zIHVuZGVyIHRoZSBzaW5nbGUgbWFpbiBhbGxvd2FuY2UsIG5vdCBmb3IgYm90aC4gRmluYWxseSwgR0FTRFMgd291bGQgYmUgZXh0ZW5kZWQgdG8gaW5jbHVkZSBkb25hdGlvbnMgbWFkZSBieSBcdTIwMThjb250YWN0bGVzcyBwYXltZW50c1x1MjAxOS5bNl0gwqBUaGVzZSBjaGFuZ2VzIHdvdWxkIHRha2UgZWZmZWN0IGZyb20gNiBBcHJpbCAyMDE3LlxuIFxuSE1SQyBoYXMgcHVibGlzaGVkIGFuIGltcGFjdCBhc3Nlc3NtZW50IG9uIHRoZXNlIHJlZm9ybXM6IHRoaXMgZXN0aW1hdGVzIHRoYXQgdGhlIG1lYXN1cmVzIHRvIHNpbXBsaWZ5IEdBU0RTIFx1MjAxY2NvdWxkIGJlbmVmaXQgdXAgdG8gNzEsMDAwIGNoYXJpdGllcyB0aGF0IGN1cnJlbnRseSBjbGFpbSBHaWZ0IEFpZC5cdTIwMWQgUmVzdHJpY3RpbmcgY2hhcml0aWVzXHUyMDE5IGNsYWltcyB0byBlaXRoZXIgdGhlIG1haW4gYWxsb3dhbmNlIG9yIGNvbW11bml0eSBidWlsZGluZ3MgYWxsb3dhbmNlIGlzIGVzdGltYXRlZCB0byBpbXBhY3QgXHUyMDFjdXAgdG8gMywwMDAgY2hhcml0aWVzLlx1MjAxZCBPdmVyYWxsIHRoZSBjaGFuZ2VzIGFyZSBhbnRpY2lwYXRlZCB0byBcdTIwMWNkZWNyZWFzZSByZWNlaXB0cyBieSBhcHByb3hpbWF0ZWx5IMKjMTVtIHBlciBhbm51bS5cdTIwMWRbN11cbiBcblRoZSBCaWxsXG4gXG5JbiB0aGUgUXVlZW5cdTIwMTlzIFNwZWVjaCBvbiAxOCBNYXkgMjAxNiB0aGUgR292ZXJubWVudCBjb25maXJtZWQgdGhhdCBpdCB3b3VsZCBpbnRyb2R1Y2UgbGVnaXNsYXRpb24gaW4gdGhlIDIwMTYtMTcgU2Vzc2lvbiB0byByZWZvcm0gR0FTRFMgXHUyMDFjdG8gZW5zdXJlIGl0IHN1cHBvcnRzIHRoZSBtYXhpbXVtIG51bWJlciBvZiBjaGFyaXRpZXMgYW5kIGRvbmF0aW9ucyBwb3NzaWJsZS5cdTIwMWRbOF1cbiBcblRoZSBTbWFsbCBDaGFyaXRhYmxlIERvbmF0aW9ucyBhbmQgQ2hpbGRjYXJlIFBheW1lbnRzIEJpbGwgKEJpbGwgNjggb2YgMjAxNi0xNykgd2FzIHB1Ymxpc2hlZCBvbiAxNCBTZXB0ZW1iZXIuIFRoZSBCaWxsIGlzIHNob3J0LCB3aXRoIDkgY2xhdXNlcy4gSXQgZXh0ZW5kcyB0byB0aGUgd2hvbGUgb2YgdGhlIFVLLiBUaGUgdGV4dCBvZiB0aGUgQmlsbCwgZXhwbGFuYXRvcnkgbm90ZXMgb24gaXRzIHByb3Zpc2lvbnMsIGFuZCBkZXRhaWxzIG9mIGl0cyBQYXJsaWFtZW50YXJ5IHNjcnV0aW55IGFyZSBjb2xsYXRlZCBvbiBpdHMgUGFybGlhbWVudCBwYWdlLlxuIFxuVGhlIEJpbGwgd2FzIGdpdmVuIGEgU2Vjb25kIFJlYWRpbmcgb24gMTEgT2N0b2JlciwgYW5kIHdhcyBjb25zaWRlcmVkIGluIFB1YmxpYyBCaWxsIENvbW1pdHRlZSBvdmVyIGEgc2luZ2xlIHNpdHRpbmcgb24gMTggT2N0b2Jlci4gVGhlIEdvdmVybm1lbnQgZGlkIG5vdCB0YWJsZSBhbnkgYW1lbmRtZW50cyB0byB0aGUgQmlsbCwgYW5kIHRoZSBCaWxsIHdhcyBhZ3JlZWQgd2l0aG91dCBhbWVuZG1lbnQuwqAgVGhlIEJpbGwgd2FzIG5vdCBhbWVuZGVkIG9uIFJlcG9ydCwgYW5kIGhhcyBjb21wbGV0ZWQgaXRzIHNjcnV0aW55IGluIHRoZSBMb3JkcywgYWdhaW4gd2l0aG91dCBhbWVuZG1lbnQuIEl0IHJlY2VpdmVkIFJveWFsIEFzc2VudCBvbiAxNiBKYW51YXJ5IDIwMTcuXG4gXG5Ob3Rlc1xuIFxuWzFdIMKgwqDCoCBEb25vcnMgbmVlZCB0byBjb25maXJtIHRoYXQgdGhleSBoYWQgcGFpZCwgb3Igd2lsbCBoYXZlIHBhaWQsIGluY29tZSB0YXggYW5kL29yIGNhcGl0YWwgZ2FpbnMgdGF4IG9mIGF0IGxlYXN0IHRoZSBhbW91bnQgb2YgR2lmdCBBaWQgdGhhdCB0aGUgb3JnYW5pc2F0aW9uIHdpbGwgY2xhaW0gb24gdGhlaXIgZG9uYXRpb24gaW4gYW55IGdpdmVuIHRheCB5ZWFyLiBGb3IgZGV0YWlscyBzZWUsIEhNUkMsIEdpZnQgQWlkIGRlY2xhcmF0aW9uczogY2xhaW1pbmcgdGF4IGJhY2sgb24gZG9uYXRpb25zLCBKYW51YXJ5IDIwMTYuXG4gXG5bMl0gwqDCoMKgIEhDIERlYiAyMyBNYXJjaCAyMDExIGM5NjJcbiBcblszXSDCoMKgwqAgRm9yIG1vcmUgYmFja2dyb3VuZCBvbiB0aGUgZGV2ZWxvcG1lbnQgb2YgR0FTRFMgc2VlLCBMaWJyYXJ5IEJyaWVmaW5nIHBhcGVyIDEyLzQ1LCAxNCBBdWd1c3QgMjAxMi5cbiBcbls0XSDCoMKgwqAgRm9yIG1vcmUgZ3VpZGFuY2Ugc2VlLCBITVJDLCBDbGFpbWluZyBhIHRvcC11cCBwYXltZW50IG9uIHNtYWxsIGNoYXJpdGFibGUgZG9uYXRpb25zLCBNYXJjaCAyMDE2LlxuIFxuWzVdIMKgwqDCoCBHaWZ0IEFpZCBTbWFsbCBEb25hdGlvbnMgU2NoZW1lIGNvbnN1bHRhdGlvbiwgMjAgQXByaWwgMjAxNi4gUmVzcG9uc2VzIHdlcmUgaW52aXRlZCBieSAxIEp1bHkgMjAxNi5cbiBcbls2XSDCoMKgwqAgSE1SQywgR2lmdCBBaWQgU21hbGwgRG9uYXRpb25zIFNjaGVtZSBcdTIwMTMgc3VtbWFyeSBvZiByZXNwb25zZXMsIDEwIEF1Z3VzdCAyMDE2XG4gXG5bN10gwqDCoMKgIEhNUkMsIFNtYWxsIENoYXJpdGFibGUgRG9uYXRpb25zIGFuZCBDaGlsZGNhcmUgUGF5bWVudHMgQmlsbDogSW1wYWN0IEFzc2Vzc21lbnQsIFNlcHRlbWJlciAyMDE2IHAyLCBwNi4gVGhlIEF1dHVtbiBTdGF0ZW1lbnQgZXN0aW1hdGVzIHRoaXMgbWVhc3VyZSB3aWxsIGNvc3QgwqMxMG0gaW4gMjAxOC8xOSwgcmlzaW5nIHRvIMKjMjBtIGJ5IDIwMjEvMjIgKEF1dHVtbiBTdGF0ZW1lbnQsIENtIDkzNjIsIE5vdmVtYmVyIDIwMTYgVGFibGUgMi4xIFx1MjAxMyBpdGVtIDQwKS5cbiBcbls4XSDCoMKgwqAgQ2FiaW5ldCBPZmZpY2UsIFF1ZWVuXHUyMDE5cyBTcGVlY2ggMjAxNjogYmFja2dyb3VuZCBicmllZmluZyBub3RlcywgMTggTWF5IDIwMTYgcDQ2In0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wMS0xN1QxMDo1ODoyNS42MDQxNzYrMDA6MDAiLCAiX2RhdGF0eXBlIiA6ICJkYXRlVGltZSJ9CiAgICAgICwgImRlc2NyaXB0aW9uIiA6IFsiVGhlIFNtYWxsIENoYXJpdGFibGUgRG9uYXRpb25zIGFuZCBDaGlsZGNhcmUgUGF5bWVudHMgQWN0IDIwMTcgbWFrZXMgYSBudW1iZXIgb2YgYW1lbmRtZW50cyB0byB0aGUgbGVnaXNsYXRpb24gd2hpY2ggdW5kZXJwaW5zIHRoZSBHaWZ0IEFpZCBTbWFsbCBEb25hdGlvbnMgU2NoZW1lIChHQVNEUyksIGludHJvZHVjZWQgaW4gQXByaWwgMjAxMy4gVGhlIHB1cnBvc2Ugb2YgdGhlc2UgY2hhbmdlcyBpcyB0byBzaW1wbGlmeSB0aGUgc2NoZW1lIGFuZCBleHRlbmQgYWNjZXNzIHRvIHNtYWxsZXIgYW5kIG5ld2VyIGNoYXJpdGllcy4gVGhlIEFjdCBhbHNvIG1ha2VzIGEgZmV3IHRlY2huaWNhbCBhbWVuZG1lbnRzIHRvIHRoZSBsZWdpc2xhdGlvbiB3aGljaCBlc3RhYmxpc2hlcyBUYXgtRnJlZSBDaGlsZGNhcmUsIHRoZSBHb3Zlcm5tZW50XHUyMDE5cyBzY2hlbWUgdG8gc3VwcG9ydCBwYXJlbnRzXHUyMDE5IGNoaWxkY2FyZSBjb3N0cywgc2NoZWR1bGVkIHRvIGJlIHJvbGxlZCBvdXQgZnJvbSBlYXJseSAyMDE3LiJdLCAiaWRlbnRpZmllciIgOiB7Il92YWx1ZSIgOiAiQ0JQLTc3MTEifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyNjciLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBDb21tb25zIExpYnJhcnkifQogICAgICB9CiAgICAgICwgInNlY3Rpb24iIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzE2ODQ5IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQnVzaW5lc3MgYW5kIFRyYW5zcG9ydCBTZWN0aW9uIn0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy80MTQwMzMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJDb21tb25zIEJyaWVmaW5nIHBhcGVycyJ9CiAgICAgIH0KICAgICAgLCAidGl0bGUiIDogIlNtYWxsIENoYXJpdGFibGUgRG9uYXRpb25zIGFuZCBDaGlsZGNhcmUgUGF5bWVudHMgQWN0IDIwMTciLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTE1IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQ2hhcml0aWVzIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTE2IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQ2hpbGQgY2FyZSJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTc2NCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlRheGF0aW9uIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzY3MjY2MCIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiT24gMTkgSmFudWFyeSAyMDE3LCB0aGUgSG91c2Ugb2YgTG9yZHMgd2lsbCBkZWJhdGUgdGhlIGltcGFjdCBvZiBCcml0YWluXHUyMDE5cyBwbGFubmVkIHdpdGhkcmF3YWwgZnJvbSB0aGUgRVUgb24gdGhlIGNyZWF0aXZlIGluZHVzdHJpZXMuXG4gXG5UaGUgY3JlYXRpdmUgaW5kdXN0cmllcyBpbiB0aGUgVUsgYWNjb3VudCBmb3IgYSBzaWduaWZpY2FudCBwYXJ0IG9mIHRoZSBVSyBlY29ub215LiBBY2NvcmRpbmcgdG8gZmlndXJlcyBwcm9kdWNlZCBieSB0aGUgRGVwYXJ0bWVudCBmb3IgQ3VsdHVyZSwgTWVkaWEgYW5kIFNwb3J0IChEQ01TKSwgdGhlIGdyb3NzIHZhbHVlIGFkZGVkIChHVkEpIGZvciB0aGUgY3JlYXRpdmUgaW5kdXN0cmllcyB3YXMgwqM4NC4xIGJpbGxpb24sIHdoaWNoIGFjY291bnRlZCBmb3IgNS4yIHBlcmNlbnQgb2YgdGhlIFVLIGVjb25vbXkuIFRoZSBHVkEgZm9yIHRoZSBjcmVhdGl2ZSBlY29ub215XHUyMDE0d2hpY2ggaW5jbHVkZXMgdGhlIGNvbnRyaWJ1dGlvbiBvZiBhbGwgdGhvc2UgZW1wbG95ZWQgaW4gdGhlIGNyZWF0aXZlIGluZHVzdHJpZXMsIGFzIHdlbGwgYXMgdGhvc2Ugd2hvIHdvcmsgaW4gc28tY2FsbGVkIGNyZWF0aXZlIG9jY3VwYXRpb25zIG91dHNpZGUgdGhlIGNyZWF0aXZlIGluZHVzdHJpZXNcdTIwMTR3YXMgd29ydGggwqMxMzMuMyBiaWxsaW9uIGluIDIwMTQsIGFjY291bnRpbmcgZm9yIDguMiBwZXJjZW50IG9mIHRoZSBVSyBlY29ub215LlxuIFxuRm9sbG93aW5nIHRoZSByZXN1bHRzIG9mIHRoZSBFVSByZWZlcmVuZHVtLCBhIG51bWJlciBvZiBjb21tZW50YXRvcnMgcmFpc2VkIGNvbmNlcm5zIGFib3V0IHRoZSBwb3RlbnRpYWwgaW1wYWN0IG9mIGxlYXZpbmcgdGhlIEV1cm9wZWFuIFVuaW9uIG9uIHRoZSBVS1x1MjAxOXMgY3JlYXRpdmUgaW5kdXN0cmllcywgZXNwZWNpYWxseSBmdW5kaW5nLiBDcmVhdGl2ZSBFdXJvcGUgd2FzIGVzdGFibGlzaGVkIGJ5IHRoZSBFVSBpbiAyMDE0IGFuZCBpcyB0aGUgRXVyb3BlYW4gQ29tbWlzc2lvblx1MjAxOXMgZnJhbWV3b3JrIHByb2dyYW1tZSB0byBzdXBwb3J0IHRoZSBFVVx1MjAxOXMgY3VsdHVyZSBhbmQgYXVkaW8tdmlzdWFsIHNlY3RvcnMuIEl0IGhhcyBhIFx1MjBhYzEuNDYgYmlsbGlvbiBidWRnZXQgZm9yIHRoZSB5ZWFycyAyMDE0LzIwIHdpdGggdGhlIFVLIHJlY2VpdmluZyBcdTIwYWM0MCBtaWxsaW9uIHdvcnRoIG9mIGdyYW50cyBvdmVyIDIwMTQgYW5kIDIwMTUuIEhvd2V2ZXIsIHdpdGggdGhlIFVLIHNldCB0byBsZWF2ZSB0aGUgRVUsIGl0cyBwYXJ0aWNpcGF0aW9uIGluIHRoaXMgcHJvZ3JhbW1lIHJlbWFpbnMgdW5jZXJ0YWluLlxuIFxuQXMgdGhlIGNyZWF0aXZlIGluZHVzdHJpZXMgY292ZXIgYSB3aWRlIHZhcmlldHkgb2Ygc2VjdG9ycywgdGhpcyBMaWJyYXJ5IGJyaWVmaW5nIGNvbnNpZGVycyB0d28gYXJlYXMgb2YgdGhlIGNyZWF0aXZlIGluZHVzdHJ5IGluIGdyZWF0ZXIgZGV0YWlsXHUyMDE0dGhlIHZpZGVvIGdhbWUgaW5kdXN0cnkgYW5kIHRoZSBmaWxtIGluZHVzdHJ5LiBUaGUgRW50ZXJ0YWlubWVudCBSZXRhaWxlcnMgQXNzb2NpYXRpb24gcHJlbGltaW5hcnkgZXN0aW1hdGVzIGZvdW5kIHRoYXQgdmlkZW8gZ2FtZXMgc2FsZXMgaW4gMjAxNiB3ZXJlIHdvcnRoIGFyb3VuZCDCozIuOSBiaWxsaW9uIGFuZCBhcyBvZiBPY3RvYmVyIDIwMTYgdGhlcmUgd2VyZSAyLDA0NCBhY3RpdmUgZ2FtZXMgY29tcGFuaWVzIGluIHRoZSBVSy4gVHJhZGUgYm9kaWVzIGZvciB0aGUgaW5kdXN0cnkgYXJlIHBhcnRpY3VsYXJseSBjb25jZXJuZWQgdGhhdCBsZWF2aW5nIHRoZSBFVSBjb3VsZCBtYWtlIGl0IGRpZmZpY3VsdCBmb3IgVUsgY29tcGFuaWVzIHRvIHJlY3J1aXQgdGhlIHRhbGVudCBpdCBuZWVkcy4gU2ltaWxhcmx5LCB0aGUgZmlsbSBhbmQgdGVsZXZpc2lvbiBtYXJrZXQgd2FzIHdvcnRoIGFuIGVzdGltYXRlZCDCozQuMSBiaWxsaW9uIGluIDIwMTUuIEEgbnVtYmVyIG9mIGNvbW1lbnRhdG9ycyBoYXZlIGV4cHJlc3NlZCBjb25jZXJuIGFib3V0IHRoZSBwb3RlbnRpYWwgbG9zcyBvZiBmdW5kaW5nIGZvciB0aGUgZmlsbSBpbmR1c3RyeSBmcm9tIHRoZSBFVVx1MjAxOXMgQ3JlYXRpdmUgRXVyb3BlIHByb2dyYW1tZSwgYWx0aG91Z2ggb3RoZXJzIGhhdmUgYXJndWVkIHRoYXQgdGhlIFVLXHUyMDE5cyBleGl0IHByZXNlbnRzIG9wcG9ydHVuaXRpZXMgZm9yIHRoZSBCcml0aXNoIGZpbG0gbWFya2V0LlxuIFxuT24gMTYgU2VwdGVtYmVyIDIwMTYsIHRoZSBIb3VzZSBvZiBDb21tb25zIEN1bHR1cmUsIE1lZGlhIGFuZCBTcG9ydCBDb21taXR0ZWUgbGF1bmNoZWQgYW4gaW5xdWlyeSBvbiB0aGUgaW1wYWN0IG9mIGxlYXZpbmcgdGhlIEVVIG9uIHRoZSBjcmVhdGl2ZSBpbmR1c3RyaWVzLCB0b3VyaXNtIGFuZCB0aGUgZGlnaXRhbCBzaW5nbGUgbWFya2V0LiJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDEtMTNUMTU6MjU6MzYuNzY1MzQ2NyswMDowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIExvcmRzIExpYnJhcnkgYnJpZWZpbmcgcHJvdmlkZXMgaW5mb3JtYXRpb24gb24gdGhlIHBvdGVudGlhbCBpbXBhY3Qgb2YgbGVhdmluZyB0aGUgRXVyb3BlYW4gVW5pb24gb24gdGhlIGNyZWF0aXZlIGluZHVzdHJpZXMuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMTE4tMjAxNy0wMDAzIn0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8zNDY3MTMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBMaWJyYXJ5IG5vdGVzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiTGVhdmluZyB0aGUgRXVyb3BlYW4gVW5pb246IEltcGFjdCBvbiB0aGUgQ3JlYXRpdmUgSW5kdXN0cmllcyIsICJ0b3BpYyIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU0OTYiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJBcnRzIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NTg5IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiRVUgZ3JhbnRzIGFuZCBsb2FucyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTY3MSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIk1lZGlhIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzY3MTk4OCIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiSW4gcmVjZW50IHllYXJzLCBhbmQgaW4gcGFydGljdWxhciBpbiAyMDE2LCBldmVudHMgaGF2ZSB0YWtlbiBwbGFjZSBpbiBhIG51bWJlciBvZiBjb3VudHJpZXMsIGluY2x1ZGluZyB0aGUgVVMsIHRoZSBVSyBhbmQgQXVzdHJpYSBhbW9uZ3N0IG90aGVycywgd2hpY2ggc2Nob2xhcnMgYW5kIGNvbW1lbnRhdG9ycyBoYXZlIGlkZW50aWZpZWQgYXMgZXhoaWJpdGluZyBhIHBvcHVsaXN0IGFuZC9vciBuYXRpb25hbGlzdCBjaGFyYWN0ZXIgYW5kIGJlaW5nIHBhcnQgb2YgYSB0cmVuZCBvZiBkaXNydXB0aW9uIHRvIHRoZSBjdXJyZW50IFx1MjAxOHJ1bGVzLWJhc2VkIGludGVybmF0aW9uYWwgb3JkZXJcdTIwMTkuIEhvd2V2ZXIsIHRoZXJlIGlzIGRpc2FncmVlbWVudCBvdmVyIHdoYXQgaXMgbWVhbnQgYnkgdGhlIHRlcm1zIFx1MjAxOHBvcHVsaXNtXHUyMDE5IGFuZCBcdTIwMThuYXRpb25hbGlzbVx1MjAxOSBhbmQgd2hldGhlciBlbGVjdGlvbnMgYW5kIHJlZmVyZW5kYSBvciBjaGFuZ2VzIGluIHBvbGl0aWNhbCBkaXNjb3Vyc2Ugc3ViamVjdCB0byB0aGVzZSBjaGFyYWN0ZXJpc3RpY3MgcG9zZSBhIHN5c3RlbWljIHJpc2sgdG8gdGhlIGludGVybmF0aW9uYWwgbGliZXJhbCBvcmRlci4gVGhpcyBsYXR0ZXIgdGVybSBpcyB3aWRlbHkgdW5kZXJzdG9vZCB0byBtZWFuIHRoZSBmcmFtZXdvcmsgb2YgbGliZXJhbCBwb2xpdGljYWwgYW5kIGVjb25vbWljIHJ1bGVzLCBlbWJvZGllZCBpbiBhIG5ldHdvcmsgb2YgaW50ZXJuYXRpb25hbCBvcmdhbmlzYXRpb25zIGFuZCByZWd1bGF0aW9ucywgZXN0YWJsaXNoZWQgZm9sbG93aW5nIHRoZSBTZWNvbmQgV29ybGQgV2FyOyBidXQgd2hldGhlciBzdWNoIGFuIG9yZGVyIGV4aXN0cyBpcyBpdHNlbGYgdGhlIHN1YmplY3Qgb2YgZGlzYWdyZWVtZW50LiBUaGUgVUsgR292ZXJubWVudCByZWNvZ25pc2VzIGFuZCBzdXBwb3J0cyB0aGUgY29uY2VwdCBvZiBhIHJ1bGVzLWJhc2VkIGludGVybmF0aW9uYWwgb3JkZXIuXG4gXG5UaGlzIGJyaWVmaW5nIG91dGxpbmVzIHRoZSBVSyBHb3Zlcm5tZW50XHUyMDE5cyBwb3NpdGlvbiBvbiB0aGUgY3VycmVudCBpbnRlcm5hdGlvbmFsIG9yZGVyIHdoaWNoIHByb3ZpZGVzIHRoZSBiYWNrZHJvcCB0byBjb250ZW1wb3JhcnkgaW50ZXJuYXRpb25hbCByZWxhdGlvbnMsIGJlZm9yZSBzdW1tYXJpc2luZyB0aGUgZGViYXRlIG92ZXIgdGhlIHRlcm1zIFx1MjAxOHBvcHVsaXNtXHUyMDE5IGFuZCBcdTIwMThuYXRpb25hbGlzbVx1MjAxOS4gSXQgdGhlbiBzdXJ2ZXlzIHRoZSB3b3JrIG9mIHNjaG9sYXJzIGFuZCBjb21tZW50YXRvcnMgd2hvIHNlZSB0aGUgcmlzZSBpbiBwb3B1bGlzbSBhbmQgbmF0aW9uYWxpc20gaW4gdGhlIGRvbWVzdGljIHBvbGl0aWNzIG9mIGEgbnVtYmVyIG9mIGNvdW50cmllcyBhcm91bmQgdGhlIHdvcmxkIGFzIHBoZW5vbWVuYSB3aGljaCBleGhpYml0IGVpdGhlciBwb3NpdGl2ZSBvciBuZWdhdGl2ZSBjaGFyYWN0ZXJpc3RpY3MsIG9yIGEgY29tYmluYXRpb24gb2YgdGhlIHR3bywgd2hpY2ggaW4gdHVybiBoYXZlIGJlZW4gc2VlbiBhcyBpbmZsdWVuY2luZywgb3IgaGF2aW5nIHRoZSBjYXBhY2l0eSB0byBpbmZsdWVuY2UsIGludGVybmF0aW9uYWwgcmVsYXRpb25zLiBUaGUgYnJpZWZpbmcgc2hvdWxkIGJlIHJlYWQgYXMgYW4gaW50cm9kdWN0aW9uIHRvLCBhbmQgbm90IGEgY29tcHJlaGVuc2l2ZSBzdXJ2ZXkgb2YsIHRoZSBzaWduaWZpY2FudCBib2R5IG9mIGxpdGVyYXR1cmUgb24gdGhlIHN1YmplY3QuIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wMS0xMlQxNTo1NzowNS4xNTYyNDU0KzAwOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgSG91c2Ugb2YgTG9yZHMgTGlicmFyeSBicmllZmluZyBoYXMgYmVlbiBwcmVwYXJlZCBpbiBhZHZhbmNlIG9mIGEgZGViYXRlIG9uIDE5IEphbnVhcnkgYWJvdXQgdGhlIGNoYWxsZW5nZXMgdG8gdGhlIGxpYmVyYWwgaW50ZXJuYXRpb25hbCBvcmRlciBwb3NlZCBieSB0aGUgZGV2ZWxvcG1lbnQgb2YgcG9wdWxpc20gYW5kIG5hdGlvbmFsaXNtIGFyb3VuZCB0aGUgd29ybGQuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMTE4tMjAxNy0wMDAyIn0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8zNDY3MTMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBMaWJyYXJ5IG5vdGVzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiUG9wdWxpc20gYW5kIE5hdGlvbmFsaXNtOiBJbXBsaWNhdGlvbnMgZm9yIHRoZSBJbnRlcm5hdGlvbmFsIE9yZGVyIiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTU2NyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkVsZWN0aW9ucyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTY1MCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkludGVybmF0aW9uYWwgcG9saXRpY3MgYW5kIGdvdmVybm1lbnQifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU3MTMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJQb2xpdGljYWwgcGFydGllcyJ9CiAgICAgIH0KICAgICAgXSwgInR5cGUiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvc2NoZW1hL3BhcmwjUmVzZWFyY2hCcmllZmluZyJ9CiAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Jlc291cmNlcy82NzEzOTQiLCAiYWJzdHJhY3QiIDogeyJfdmFsdWUiIDogIkxvcmQgQnV0bGVyIG9mIEJyb2Nrd2VsbCAoQ3Jvc3NiZW5jaCksIGEgZm9ybWVyIENhYmluZXQgU2VjcmV0YXJ5LCBoYXMgdGFibGVkIGEgcXVlc3Rpb24gZm9yIHNob3J0IGRlYmF0ZSB0byBhc2sgd2hhdCBzdGVwcyB0aGUgR292ZXJubWVudCBpcyBwbGFubmluZyB0byB0YWtlIHRvIGluY2x1ZGUgc3RhdGlzdGljcyBvbiB0aGUgdGltZSBzcGVudCBvbiBwYXJsaWFtZW50YXJ5IHByb2NlZWRpbmdzIG9uIGVhY2ggcGFydCBvZiBhbiBBY3QgaW4gdGhlIGV4cGxhbmF0b3J5IG5vdGVzIG9uIEFjdHMgb2YgUGFybGlhbWVudC4gQSBwcm9wb3NhbCBhbG9uZyB0aGVzZSBsaW5lcyB3YXMgcHV0IGZvcndhcmQgYnkgRGFuaWVsIEdyZWVuYmVyZywgYSBmb3JtZXIgUGFybGlhbWVudGFyeSBDb3Vuc2VsLCBpbiBhwqBwYXBlciBwdWJsaXNoZWQgYnkgdGhlIENlbnRyZSBmb3IgUG9saWN5IFN0dWRpZXMgdGhpbmsgdGFuayBpbiBBcHJpbCAyMDE2LiBEYW5pZWwgR3JlZW5iZXJnIGFyZ3VlZCB0aGF0IGxpbmUtYnktbGluZSBzY3J1dGlueSBvZiBsZWdpc2xhdGlvbiBpbiBib3RoIEhvdXNlcyBoYWQgXHUyMDFjYmVjb21lIGRpbHV0ZWQgdG8gc3VjaCBhIGRlZ3JlZSB0aGF0IGl0IGNhbiBubyBsb25nZXIgYmUgZGVzY3JpYmVkIGFzIHRha2luZyBwbGFjZVx1MjAxZCwgYW5kIGFzIGEgcmVzdWx0IHRoZXJlIHdlcmUgXHUyMDFjb2Z0ZW4gbGVuZ3RoeSBhbmQgc2lnbmlmaWNhbnQgcGFydHMgb2YgYSBiaWxsIHRoYXQgcmVjZWl2ZSBubyBkZXRhaWxlZCBzY3J1dGlueSBhdCBhbGwgYXQgYW55IHBvaW50IGluIGl0cyBwYXJsaWFtZW50YXJ5IHBhc3NhZ2VcdTIwMWQuIFRvIGFkZHJlc3MgdGhpcywgaGUgc3VnZ2VzdGVkIHRoYXQgdGhlIGZvbGxvd2luZyBpbmZvcm1hdGlvbiBzaG91bGQgYmUgcHVibGlzaGVkIGluIHJlc3BlY3Qgb2YgZWFjaCBiaWxsLCBpbiBib3RoIHRoZSBleHBsYW5hdG9yeSBub3RlcyBpc3N1ZWQgd2hlbiB0aGUgYmlsbCBhcnJpdmVkIGluIHRoZSBzZWNvbmQgSG91c2UgYW5kIGluIHRob3NlIHB1Ymxpc2hlZCBvbmNlIGl0IHJlY2VpdmVkIHJveWFsIGFzc2VudDpcbiBcbiBUaGUgbnVtYmVyIG9mIGhvdXJzIHNwZW50IGluIGNvbW1pdHRlZSBvbiBlYWNoIHBhcnQgb3IgZ3JvdXAgb2YgY2xhdXNlcyBUaGUgbnVtYmVyIG9mIGhvdXJzIHNwZW50IGF0IG90aGVyIGFtZW5kYWJsZSBzdGFnZXMgVGhlIG51bWJlciBvZiBhbWVuZG1lbnRzIHRhYmxlZCBieSB0aGUgR292ZXJubWVudCBUaGUgbnVtYmVyIG9mIGFtZW5kbWVudHMgdGFibGVkIGJ5IG90aGVycywgYW5kIHRoZSBwZXJjZW50YWdlIG9mIHRob3NlIGFtZW5kbWVudHMgdGhhdCB3ZXJlIGdpdmVuIHN1YnN0YW50aXZlIGNvbnNpZGVyYXRpb24gQSBsaXN0IG9mIHRob3NlIGNsYXVzZXMgb24gd2hpY2ggbm8gc3Vic3RhbnRpdmUgZGlzY3Vzc2lvbiB0b29rIHBsYWNlIGluIGNvbW1pdHRlZSBhbmQgYXQgZWFjaCBvdGhlciBhbWVuZGFibGUgc3RhZ2UgKHdoZXRoZXIgYmVjYXVzZSBvZiB0aGUgZGVzY2VudCBvZiBhIHByb2dyYW1tZSBtb3Rpb24ga25pZmUgb3IgZm9yIG90aGVyIHJlYXNvbnMpLiBcbiBcbkRpZmZlcmVudCBhcnJhbmdlbWVudHMgYXBwbHkgaW4gdGhlIHR3byBIb3VzZXMgb2YgUGFybGlhbWVudCBmb3IgdGhlIHRpbWV0YWJsaW5nIG9mIHByb2NlZWRpbmdzIG9uIGxlZ2lzbGF0aW9uLiBJbiB0aGUgSG91c2Ugb2YgQ29tbW9ucywgdGhlIG1ham9yaXR5IG9mIGdvdmVybm1lbnQgYmlsbHMgYXJlIHN1YmplY3QgdG8gcHJvZ3JhbW1pbmcuIFByb2dyYW1tZSBvcmRlcnMgcHJvdmlkZSBhIHRpbWV0YWJsZSBmb3IgdGhlIGNvbmNsdXNpb24gb2YgcHJvY2VlZGluZ3Mgb24gYSBiaWxsLiBUaGV5IG1heSBzcGVjaWZ5IGJ5IHdoYXQgZGF0ZSBhIHN0YWdlIHNob3VsZCBiZSBjb21wbGV0ZWQsIG9yIGhvdyBsb25nIGlzIHRvIGJlIHNwZW50IG9uIGEgc3RhZ2UuIEEgcHJvZ3JhbW1lIG9yZGVyIG1heSBjb250YWluIFx1MjAxOGtuaXZlc1x1MjAxOSwgb3IgZGVhZGxpbmVzIHJlbGF0aW5nIHRvIGJ1c2luZXNzIG9uIHBhcnRpY3VsYXIgcGFydHMgb2YgdGhlIGJpbGw7IHdoZW4gYSBcdTIwMThrbmlmZVx1MjAxOSBmYWxscywgb25seSBzcGVjaWZpZWQgZGVjaXNpb25zIG1heSBiZSB0YWtlbiwgYW5kIGl0IG1heSBub3QgYmUgcG9zc2libGUgdG8gZGViYXRlIG9yIGRlY2lkZSBvbiBjZXJ0YWluIGNsYXVzZXMgb3IgYW1lbmRtZW50cy4gSW4gdGhlIEhvdXNlIG9mIExvcmRzLCB0aGVyZSBpcyBubyBmb3JtYWwgZXF1aXZhbGVudCB0byBwcm9ncmFtbWluZy4gSW5mb3JtYWwgbmVnb3RpYXRpb25zIHRha2UgcGxhY2UgdGhyb3VnaCB0aGUgXHUyMDE4dXN1YWwgY2hhbm5lbHNcdTIwMTkgb24gaG93IG11Y2ggdGltZSB0byBhbGxvY2F0ZSB0byBsZWdpc2xhdGl2ZSBidXNpbmVzcywgYnV0IHRoZWlyIGRlYWxzIGFyZSBub3Qgc2V0IGluIHN0b25lIGFuZCBjYW4gYmUgYWx0ZXJlZCBpZiB0aGUgSG91c2UgZGVhbHMgd2l0aCBidXNpbmVzcyBtb3JlIG9yIGxlc3MgcXVpY2tseSB0aGFuIGV4cGVjdGVkLiBUaGVyZSBoYXZlIGJlZW4gY3JpdGljaXNtcyB0aGF0IHByb2dyYW1taW5nIGluIHRoZSBDb21tb25zIG1lYW5zIHRoYXQgbm90IGFsbCBhbWVuZG1lbnRzIGFuZCBjbGF1c2VzIGFyZSBuZWNlc3NhcmlseSBkZWJhdGVkLCBhbmQgdGhhdCB0aGVyZSBpcyB0b28gbXVjaCBsZWdpc2xhdGlvbiB0byBhbGxvdyB0aW1lIGZvciBwcm9wZXIgc2NydXRpbnkgaW4gZWl0aGVyIEhvdXNlLlxuIFxuVGhlIEhvdXNlIG9mIExvcmRzIENvbnN0aXR1dGlvbiBDb21taXR0ZWUgaXMgY3VycmVudGx5IGNvbmR1Y3RpbmcgYW4gaW5xdWlyeSBpbnRvIHRoZSBsZWdpc2xhdGl2ZSBwcm9jZXNzwqBvbmUgcGFydCBvZiB3aGljaCB3aWxsIGZvY3VzIHNwZWNpZmljYWxseSBvbiB0aGUgcGFzc2FnZSBvZiBsZWdpc2xhdGlvbiB0aHJvdWdoIFBhcmxpYW1lbnQuIFRoZSBDb21taXR0ZWUgaW50ZW5kcyB0byB0YWtlIGV2aWRlbmNlIG9uIHRoaXMgdG9waWMgaW4gdGhlIDIwMTctMTggcGFybGlhbWVudGFyeSBzZXNzaW9uLiJ9CiAgICAgICwgImRhdGUiIDogeyJfdmFsdWUiIDogIjIwMTctMDEtMTFUMTU6MTM6MDguMDIyNDY2MyswMDowMCIsICJfZGF0YXR5cGUiIDogImRhdGVUaW1lIn0KICAgICAgLCAiZGVzY3JpcHRpb24iIDogWyJUaGlzIEhvdXNlIG9mIExvcmRzIExpYnJhcnkgYnJpZWZpbmcgZXhhbWluZXMgdGhlIGJhY2tncm91bmQgdG8gYSBwcm9wb3NhbCB0aGF0IGluZm9ybWF0aW9uIHNob3VsZCBiZSBwdWJsaXNoZWQgYWxvbmdzaWRlIGV2ZXJ5IEFjdCBzaG93aW5nIHRoZSBsZW5ndGggb2YgdGltZSBzcGVudCBvbiBpdCBhdCBlYWNoIHN0YWdlIGluIHRoZSBwYXJsaWFtZW50YXJ5IHByb2Nlc3MgdG8gaGlnaGxpZ2h0IHRoZSBsZXZlbCBvZiBzY3J1dGlueSBpdCBoYWQgcmVjZWl2ZWQuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMSUYtMjAxNy0wMDAxIn0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy80MTQwNDEiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBJbiBGb2N1cyJ9CiAgICAgIH0KICAgICAgLCAidGl0bGUiIDogIlB1Ymxpc2hpbmcgU3RhdGlzdGljcyBvbiB0aGUgVGltZSBTcGVudCBvbiBQYXJsaWFtZW50YXJ5IFByb2NlZWRpbmdzIG9uIEVhY2ggUGFydCBvZiBhbiBBY3QiLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjI3IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgQ29tbW9ucyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTYyOCIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNlIG9mIExvcmRzIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NjU5IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiTGVnaXNsYXRpdmUgcHJvY2VzcyJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTcwNSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlBhcmxpYW1lbnRhcnkgcHJvY2VkdXJlIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NzYwIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiU3RhdGlzdGljcyBwb2xpY3kifQogICAgICB9CiAgICAgIF0sICJ0eXBlIiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3NjaGVtYS9wYXJsI1Jlc2VhcmNoQnJpZWZpbmcifQogICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9yZXNvdXJjZXMvNjY4MzcyIiwgImFic3RyYWN0IiA6IHsiX3ZhbHVlIiA6ICJUaGUgTmVpZ2hib3VyaG9vZCBQbGFubmluZyBCaWxsIHdhcyBpbnRyb2R1Y2VkIGluIHRoZSBIb3VzZSBvZiBMb3JkcyBvbiAxNCBEZWNlbWJlciAyMDE2IGFuZCBpcyBzY2hlZHVsZWQgZm9yIHNlY29uZCByZWFkaW5nIG9uIDE3IEphbnVhcnkgMjAxNy4gSXQgY29tcGxldGVkIHJlcG9ydCBzdGFnZSBpbiB0aGUgSG91c2Ugb2YgQ29tbW9ucyBvbiAxMyBEZWNlbWJlciAyMDE2IGFuZCB3YXMgcGFzc2VkIGF0IHRoaXJkIHJlYWRpbmcgd2l0aG91dCBhIGRpdmlzaW9uIHRoZSBzYW1lIGRheS4gVGhlIEdvdmVybm1lbnQgZGVzY3JpYmVzIHRoZSBOZWlnaGJvdXJob29kIFBsYW5uaW5nIEJpbGwgYXMgaGF2aW5nIHR3byBwcmltYXJ5IGFpbXM6XG4gXG4gVG8gaGVscCBpZGVudGlmeSBhbmQgZnJlZSB1cCBtb3JlIGxhbmQgdG8gYnVpbGQgaG9tZXMgb24gdG8gZ2l2ZSBjb21tdW5pdGllcyBhcyBtdWNoIGNlcnRhaW50eSBhcyBwb3NzaWJsZSBhYm91dCB3aGVyZSBhbmQgd2hlbiBkZXZlbG9wbWVudCB3aWxsIHRha2UgcGxhY2U7IGFuZCBUbyBzcGVlZCB1cCB0aGUgZGVsaXZlcnkgb2YgbmV3IGhvbWVzLCBpbiBwYXJ0aWN1bGFyIGJ5IHJlZHVjaW5nIHRoZSB0aW1lIGl0IHRha2VzIHRvIGdldCBmcm9tIHBsYW5uaW5nIHBlcm1pc3Npb24gYmVpbmcgZ3JhbnRlZCB0byBidWlsZGluZyB3b3JrIGhhcHBlbmluZyBvbiBzaXRlIGFuZCBuZXcgaG9tZXMgYmVpbmcgZGVsaXZlcmVkLiBcbiBcbkF0IHRoZSBCaWxsXHUyMDE5cyBzZWNvbmQgcmVhZGluZyBpbiB0aGUgSG91c2Ugb2YgQ29tbW9ucywgVGVyZXNhIFBlYXJjZSwgU2hhZG93IFNlY3JldGFyeSBvZiBTdGF0ZSBmb3IgQ29tbXVuaXRpZXMgYW5kIExvY2FsIEdvdmVybm1lbnQsIHN0YXRlZCB0aGF0IHRoZSBCaWxsIGRpZCBub3QgXHUyMDFjYXBwZWFyIGF0IGZpcnN0IGdsYW5jZSB0byBiZSBhIGNvbnRyb3ZlcnNpYWwgb25lXHUyMDFkIGFuZCBpbmNsdWRlZCBlbGVtZW50cyB0aGF0IHRoZSBMYWJvdXIgUGFydHkgc3VwcG9ydGVkLiBIb3dldmVyLCBzaGUgZXhwcmVzc2VkIHBhcnRpY3VsYXIgY29uY2VybiBhYm91dCB0aGUgQmlsbFx1MjAxOXMgcHJvcG9zZWQgcmVmb3JtcyB0byBwcmUtY29tbWVuY2VtZW50IHBsYW5uaW5nIGNvbmRpdGlvbnMgd2hpY2gsIHVuZGVyIHRoZSBCaWxsLCB3b3VsZCBub3JtYWxseSByZXF1aXJlIHRoZSB3cml0dGVuIGFncmVlbWVudCBvZiB0aGUgcGxhbm5pbmcgYXBwbGljYW50LiBUaGVyZSB3YXMgYSBkaXZpc2lvbiBvbiBhbiBvcHBvc2l0aW9uIGFtZW5kbWVudCBvbiB0aGlzIGlzc3VlIGR1cmluZyBjb21taXR0ZWUsIHdoaWNoIHdhcyBkZWZlYXRlZC4gVGhlIEdvdmVybm1lbnQgaW50cm9kdWNlZCBhIHNlcmllcyBvZiBuZXcgY2xhdXNlcyBvbiBkZXZlbG9wbWVudCBkb2N1bWVudHMgd2hpY2ggd2VyZSBhZGRlZCBkdXJpbmcgdGhlIEJpbGxcdTIwMTlzIGNvbW1pdHRlZSBzdGFnZS4gQXQgcmVwb3J0IHN0YWdlLCB0aGUgc3ViamVjdCBvZiBwcmUtY29tbWVuY2VtZW50IHBsYW5uaW5nIGNvbmRpdGlvbnMgd2FzIGFnYWluIHJhaXNlZCBhbmQgd2FzIHRoZSBzdWJqZWN0IG9mIGEgZnVydGhlciBkaXZpc2lvbiBvbiBhbiBvcHBvc2l0aW9uIGFtZW5kbWVudCwgd2hpY2ggd2FzIGRlZmVhdGVkLiBUaGVyZSB3YXMgYWxzbyBhIGRpdmlzaW9uIG9uIGFuIG9wcG9zaXRpb24gYW1lbmRtZW50IG9uIHJlbW92aW5nIHBlcm1pdHRlZCBkZXZlbG9wbWVudCByaWdodHMgdG8gYWxsb3cgdGhlIGNoYW5nZSBvZiB1c2Ugb2YgcHVicywgd2hpY2ggd2FzIGRlZmVhdGVkLiBPdGhlciBub24tZ292ZXJubWVudCBhbWVuZG1lbnRzIGRpc2N1c3NlZCBhdCByZXBvcnQgc3RhZ2UgKHdoaWNoIHdlcmUgbm90IGRpdmlkZWQgdXBvbiBvciBhZGRlZCB0byB0aGUgQmlsbCkgaW5jbHVkZWQgYSBuZXcgY2xhdXNlIG9uIHRoZSBjbHVzdGVyaW5nIG9mIGJldHRpbmcgc2hvcHMsIG5ldyBjbGF1c2VzIG9uIGNvbnN1bHRhdGlvbiBiZXR3ZWVuIHBsYW5uaW5nIGF1dGhvcml0aWVzIGFuZCBuZWlnaGJvdXJob29kIHBsYW5uaW5nIGJvZGllcyBhbmQgdGhlIGlzc3VlIG9mIGZpdmUteWVhciBsYW5kIHN1cHBseSBmb3IgaG91c2luZywgdGhlIGhvdXNpbmcgbmVlZHMgb2YgZGlzYWJsZWQgYW5kIG9sZGVyIHBlb3BsZSBhbmQgdGhlIEJpbGxcdTIwMTlzIGNvbXB1bHNvcnkgcHVyY2hhc2UgcHJvdmlzaW9ucywgYW1vbmdzdCBvdGhlcnMuIFRoZSBHb3Zlcm5tZW50IG1hZGUgYSBudW1iZXIgb2YgdGVjaG5pY2FsIGFtZW5kbWVudHMgdG8gdGhlIEJpbGwuXG4gXG5PbiAxMiBEZWNlbWJlciAyMDE2LCBiZWZvcmUgcmVwb3J0IHN0YWdlIG9uIHRoZSBCaWxsLCBHYXZpbiBCYXJ3ZWxsLCBNaW5pc3RlciBmb3IgSG91c2luZyBhbmQgUGxhbm5pbmcsIG1hZGUgYSB3cml0dGVuIHN0YXRlbWVudCBvbiBuZWlnaGJvdXJob29kIHBsYW5uaW5nLiBUaGlzIGluY2x1ZGVkIGRpcmVjdGlvbnMgb24gd2hlbiBMb2NhbCBQbGFucyBzaG91bGQgYmUgY29uc2lkZXJlZCBvdXQgb2YgZGF0ZSB1bmRlciB0aGUgTmF0aW9uYWwgUGxhbm5pbmcgUG9saWN5IEZyYW1ld29yayBhbmQgb24gdGhlIGlzc3VlIG9mIGZpdmUteWVhciBsYW5kIHN1cHBseSBmb3IgaG91c2luZy4gVGhlc2UgaXNzdWVzIHdlcmUgc3ViamVjdCB0byBub24tZ292ZXJubWVudCBhbWVuZG1lbnRzIGF0IHRoZSBCaWxsXHUyMDE5cyByZXBvcnQgc3RhZ2UuIFRoZSBNaW5pc3RlciBhbHNvIGFubm91bmNlZCB0aGF0IHRoZSBHb3Zlcm5tZW50IHdvdWxkIGJlIHB1Ymxpc2hpbmcgYSB3aGl0ZSBwYXBlciBvbiBob3VzaW5nIGluIFx1MjAxY2R1ZSBjb3Vyc2VcdTIwMWQuIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wMS0wNVQxNjo1MzoxNC4xNDM1NDgrMDA6MDAiLCAiX2RhdGF0eXBlIiA6ICJkYXRlVGltZSJ9CiAgICAgICwgImRlc2NyaXB0aW9uIiA6IFsiVGhpcyBIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5IGJyaWVmaW5nIHByb3ZpZGVzIGluZm9ybWF0aW9uIG9uIHRoZSBOZWlnaGJvdXJob29kIFBsYW5uaW5nIEJpbGwgYWhlYWQgb2YgaXRzIHNlY29uZCByZWFkaW5nIGluIHRoZSBIb3VzZSBvZiBMb3Jkcywgd2hpY2ggaXMgc2NoZWR1bGVkIGZvciAxNyBKYW51YXJ5IDIwMTYuIl0sICJpZGVudGlmaWVyIiA6IHsiX3ZhbHVlIiA6ICJMTE4tMjAxNy0wMDAxIn0KICAgICAgLCAicHVibGlzaGVyIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzI1Mjg0IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiSG91c2Ugb2YgTG9yZHMgTGlicmFyeSJ9CiAgICAgIH0KICAgICAgLCAic2VjdGlvbiIgOiBbeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyODQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBMb3JkcyBMaWJyYXJ5In0KICAgICAgfQogICAgICBdLCAic3ViVHlwZSIgOiB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy8zNDY3MTMiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJMb3JkcyBMaWJyYXJ5IG5vdGVzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiTmVpZ2hib3VyaG9vZCBQbGFubmluZyBCaWxsOiBCcmllZmluZyBmb3IgTG9yZHMgU3RhZ2VzIiwgInRvcGljIiA6IFt7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTYyOSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkhvdXNpbmcifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2MzQiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzaW5nIHN1cHBseSJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTcxMSIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIlBsYW5uaW5nIn0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvcmVzb3VyY2VzLzY2NzM5MCIsICJhYnN0cmFjdCIgOiB7Il92YWx1ZSIgOiAiVGhlIENvbW1vbndlYWx0aCBEZXZlbG9wbWVudCBDb3Jwb3JhdGlvbiBCaWxsIDIwMTYtMTcgd2FzIGludHJvZHVjZWQgb24gMTYgTm92ZW1iZXIgMjAxNiBhbmQgcmVjZWl2ZWQgaXRzIFNlY29uZCBSZWFkaW5nIG9uIDkgSnVuZSAyMDE1LiBUaGlzIEJyaWVmaW5nIFBhcGVyIHN1bW1hcmlzZXMgdGhlIHByb2dyZXNzIG9mIHRoZSBCaWxsOyBpdCBjb21wbGVtZW50cyBCcmllZmluZyBQYXBlciA3ODA5IENvbW1vbndlYWx0aCBEZXZlbG9wbWVudCBDb3Jwb3JhdGlvbiBCaWxsIDIwMTYtMTcgdGhhdCB3YXMgcHJlcGFyZWQgYmVmb3JlIHRoZSBCaWxsXHUyMDE5cyBTZWNvbmQgUmVhZGluZyBkZWJhdGUuXG4gXG5DREMgR3JvdXAgcGxjIChoZW5jZWZvcnRoIFx1MjAxY0NEQ1x1MjAxZCkgaXMgYSBwdWJsaWMgbGltaXRlZCBwcml2YXRlIGVxdWl0eSBjb21wYW55IG93bmVkIGVudGlyZWx5IGJ5IHRoZSBEZXBhcnRtZW50IGZvciBJbnRlcm5hdGlvbmFsIERldmVsb3BtZW50IChERklEKSB0aGF0IGludmVzdHMgaW4gYnVzaW5lc3NlcyBpbiBkZXZlbG9waW5nIGNvdW50cmllcyB0byBzdXBwb3J0IHRoZSBwcml2YXRlIHNlY3RvciBhbmQgZm9zdGVyIGRldmVsb3BtZW50LiBUaGUgZmluYW5jaWFsIGFzc2lzdGFuY2UgdGhhdCB0aGUgR292ZXJubWVudCBwcm92aWRlcyB0byBDREMgcmVjZW50bHkgcmVhY2hlZCBpdHMgbGVnaXNsYXRlZCBsaW1pdCBvZiDCozEuNSBiaWxsaW9uLCBzbyB0aGUgQmlsbCBwcm92aWRlcyBmb3IgYW4gaW5jcmVhc2Ugb2YgdGhpcyBsaW1pdCB0byDCozYgYmlsbGlvbiwgd2l0aCB0aGUgcG90ZW50aWFsIGZvciB0aGlzIHRvIGJlIGV4dGVuZGVkIGZ1cnRoZXIgdG8gwqMxMiBiaWxsaW9uIGJ5IHN0YXR1dG9yeSBpbnN0cnVtZW50LlxuIFxuU2Vjb25kIHJlYWRpbmdcbiBcbk9uIDI5IE5vdmVtYmVyIHRoZSBCaWxsIHBhc3NlZCBpdHMgc2Vjb25kIHJlYWRpbmcgaW4gdGhlIENvbW1vbnMgd2l0aG91dCBhIHZvdGUsIGFuZCB3aGlsZSB0aGUgQmlsbCByZWNlaXZlZCBzdXBwb3J0IGluIHRoZSBkZWJhdGUsIHNvbWUgY29uY2VybnMgd2VyZSByYWlzZWQuIFRoZXNlIHJhbmdlZCBmcm9tIHBhc3QgZXhjZXNzaXZlIGV4ZWN1dGl2ZSBwYXksIENEQ1x1MjAxOXMgZmFpbHVyZSB0byBmb2N1cyBzdWZmaWNpZW50bHkgb24gcG92ZXJ0eS1yZWR1Y3Rpb24sIGl0cyByZWR1Y2VkIGxldmVscyBvZiBpbnZlc3RtZW50IGluIGFncmljdWx0dXJlIGFuZCBpbmZyYXN0cnVjdHVyZSwgaXRzIHJvdXRpbmcgb2YgaW52ZXN0bWVudHMgdGhyb3VnaCB0YXggaGF2ZW5zIGFuZCB0aGUgZmFjdCB0aGF0IGEgZGVjaXNpb24gdG8gaW5jcmVhc2UgdGhlIG9yZ2FuaXNhdGlvblx1MjAxOXMgY2FwaXRhbCB3b3VsZCBwcmVjZWRpbmcgdGhlIHB1YmxpY2F0aW9uIG9mIGl0cyBpbnZlc3RtZW50IHN0cmF0ZWd5IGZvciAyMDE3LTIxLlxuIFxuQ29tbWl0dGVlIHN0YWdlXG4gXG5UaGVyZSB3ZXJlIHR3byBzaXR0aW5ncyBhdCBDb21tb25zIGNvbW1pdHRlZSBzdGFnZSwgYm90aCB0YWtpbmcgcGxhY2Ugb24gNiBEZWNlbWJlciAyMDE2LiBUaGVyZSB3YXMgYSB0aGlyZCBzaXR0aW5nIHBsYW5uZWQgZm9yIDggRGVjZW1iZXIgMjAxNiBidXQgdGhpcyBkaWQgbm90IHRha2UgcGxhY2UuXG4gXG5UaGUgZGViYXRlIGF0IHRoZSBDb21taXR0ZWUgc3RhZ2UgZm9jdXNlZCBvbiB0aGUgdHdvIG1haW4gcHJvdmlzaW9ucyBvZiB0aGUgQmlsbC4gSXQgZmlyc3QgZm9jdXNlZCBvbiB0aGUgYW1vdW50IG9mIHRoZSBpbml0aWFsIGluY3JlYXNlICh0byDCozYgYmlsbGlvbiksIHdpdGggYW1lbmRtZW50cyB0byBjaGFuZ2UgdGhpcyBkaXNjdXNzZWQgYW5kIHdpdGhkcmF3biBvciBuZWdhdGl2ZWQgb24gZGl2aXNpb24uIFRoZSBkZWJhdGUgdGhlbiB0dXJuZWQgdG8gdGhlIHByb3Zpc2lvbiB0aGF0IHdvdWxkIGVuYWJsZSB0aGUgR292ZXJubWVudCB0byBmdXJ0aGVyIGluY3JlYXNlIHRoZSBsaW1pdCB0byDCozEyIGJpbGxpb24gYnkgc3RhdHV0b3J5IGluc3RydW1lbnQuIEEgbnVtYmVyIG9mIG5ldyBjbGF1c2VzIHdlcmUgcHJvcG9zZWQgdGhhdCB3b3VsZCBwbGFjZSBjb25kaXRpb25zIG9uIHRoaXMgZnVydGhlciBpbmNyZWFzZSByZWxhdGluZyB0byByZXBvcnRpbmcgb24gQ0RDXHUyMDE5cyBwZXJmb3JtYW5jZSwgYWRoZXJlbmNlIHRvIERGSURcdTIwMTlzIHBhcnRuZXJzaGlwIHByaW5jaXBsZXMgYW5kIHRoZSBnZW9ncmFwaGljYWwgYW5kIHNlY3RvcmFsIGZvY3VzIG9mIENEQ1x1MjAxOXMgaW52ZXN0bWVudHMuIFRoZXNlIG5ldyBjbGF1c2VzIHdlcmUgc3Vic2VxdWVudGx5IHdpdGhkcmF3biB3aXRoIG9uZSBuZWdhdGl2ZWQgb24gZGl2aXNpb24uXG4gXG5ObyBhbWVuZG1lbnRzIG9yIG5ldyBjbGF1c2VzIHdlcmUgY2FycmllZCBhbmQgdGhlIEJpbGwgaXMgZ29pbmcgaW50byByZXBvcnQgc3RhZ2Ugd2l0aG91dCBhbWVuZG1lbnQuIn0KICAgICAgLCAiZGF0ZSIgOiB7Il92YWx1ZSIgOiAiMjAxNy0wMS0wM1QxNjoyODoxMS4zOTEzMTgzKzAwOjAwIiwgIl9kYXRhdHlwZSIgOiAiZGF0ZVRpbWUifQogICAgICAsICJkZXNjcmlwdGlvbiIgOiBbIlRoaXMgQ29tbW9ucyBMaWJyYXJ5IGJyaWVmaW5nIHN1bW1hcmlzZXMgdGhlIHByb2dyZXNzIG9mIHRoZSBDb21tb253ZWFsdGggRGV2ZWxvcG1lbnQgQ29ycG9yYXRpb24gQmlsbCAyMDE2LTE3LiJdLCAiaWRlbnRpZmllciIgOiB7Il92YWx1ZSIgOiAiQ0JQLTc4NDkifQogICAgICAsICJwdWJsaXNoZXIiIDogeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvMjUyNjciLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJIb3VzZSBvZiBDb21tb25zIExpYnJhcnkifQogICAgICB9CiAgICAgICwgInNlY3Rpb24iIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzE3MTEzIiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiRWNvbm9taWMgUG9saWN5IGFuZCBTdGF0aXN0aWNzIFNlY3Rpb24ifQogICAgICB9CiAgICAgIF0sICJzdWJUeXBlIiA6IHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzQxNDAzMyIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkNvbW1vbnMgQnJpZWZpbmcgcGFwZXJzIn0KICAgICAgfQogICAgICAsICJ0aXRsZSIgOiAiQ29tbW9ud2VhbHRoIERldmVsb3BtZW50IENvcnBvcmF0aW9uIEJpbGwgMjAxNi0xNzogUHJvZ3Jlc3Mgb2YgdGhlIEJpbGwiLCAidG9waWMiIDogW3siX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NDc5IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQWZyaWNhIn0KICAgICAgfQogICAgICAsIHsiX2Fib3V0IiA6ICJodHRwOi8vZGF0YS5wYXJsaWFtZW50LnVrL3Rlcm1zLzk1NDk3IiwgInByZWZMYWJlbCIgOiB7Il92YWx1ZSIgOiAiQXNpYSJ9CiAgICAgIH0KICAgICAgLCB7Il9hYm91dCIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay90ZXJtcy85NTYwMiIsICJwcmVmTGFiZWwiIDogeyJfdmFsdWUiIDogIkZpbmFuY2lhbCBpbnN0aXR1dGlvbnMifQogICAgICB9CiAgICAgICwgeyJfYWJvdXQiIDogImh0dHA6Ly9kYXRhLnBhcmxpYW1lbnQudWsvdGVybXMvOTU2NDYiLCAicHJlZkxhYmVsIiA6IHsiX3ZhbHVlIiA6ICJJbnRlcm5hdGlvbmFsIGRldmVsb3BtZW50In0KICAgICAgfQogICAgICBdLCAidHlwZSIgOiAiaHR0cDovL2RhdGEucGFybGlhbWVudC51ay9zY2hlbWEvcGFybCNSZXNlYXJjaEJyaWVmaW5nIn0KICAgIF0sICJpdGVtc1BlclBhZ2UiIDogNTAwLCAicGFnZSIgOiAwLCAic3RhcnRJbmRleCIgOiAxLCAidG90YWxSZXN1bHRzIiA6IDk0LCAidHlwZSIgOiAiaHR0cDovL3B1cmwub3JnL2xpbmtlZC1kYXRhL2FwaS92b2NhYiNQYWdlIn0KfQo=
    http_version: 
  recorded_at: Fri, 09 Feb 2018 11:42:38 GMT
- request:
    method: get
    uri: http://lda.data.parliament.uk/researchbriefings.json?_page=1&_pageSize=500&exists-category=true&max-date=2017-06-29&min-date=2017-01-01
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Typhoeus - https://github.com/typhoeus/typhoeus
      Expect:
      - ''
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 09 Feb 2018 11:42:18 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - __cfduid=d04dda5ac2214f186b0b0503eaf71a3011518176537; expires=Sat, 09-Feb-19
        11:42:17 GMT; path=/; domain=.parliament.uk; HttpOnly
      Content-Location:
      - http://eldaddp.azurewebsites.net/researchbriefings.json?_pageSize=500&_page=1&exists-category=true&min-date=2017-01-01&max-date=2017-06-29
      Expires:
      - Fri, 09 Feb 2018 15:42:18 GMT
      Etag:
      - W/"78c997a9df9ca26"
      Vary:
      - Accept-Encoding
      X-Response-Id:
      - '130019'
      Access-Control-Allow-Origin:
      - "*"
      X-Powered-By:
      - ASP.NET
      Cf-Cache-Status:
      - MISS
      Cache-Control:
      - public, max-age=14400
      Server:
      - cloudflare
      Cf-Ray:
      - 3ea6908263a80ccb-LHR
    body:
      encoding: UTF-8
      string: |
        { "format" : "linked-data-api", "version" : "0.2", "result" : {"_about" : "http://eldaddp.azurewebsites.net/researchbriefings.json?_pageSize=500&_page=1&exists-category=true&min-date=2017-01-01&max-date=2017-06-29", "definition" : "http://eldaddp.azurewebsites.net/meta/researchbriefings.json?exists-category=true&min-date=2017-01-01&max-date=2017-06-29", "extendedMetadataVersion" : "http://eldaddp.azurewebsites.net/researchbriefings.json?_pageSize=500&_page=1&exists-category=true&min-date=2017-01-01&max-date=2017-06-29&_metadata=all", "first" : "http://eldaddp.azurewebsites.net/researchbriefings.json?_page=0&exists-category=true&min-date=2017-01-01&max-date=2017-06-29", "isPartOf" : {"_about" : "http://eldaddp.azurewebsites.net/researchbriefings.json?exists-category=true&min-date=2017-01-01&max-date=2017-06-29", "definition" : "http://eldaddp.azurewebsites.net/meta/researchbriefings.json?exists-category=true&min-date=2017-01-01&max-date=2017-06-29", "hasPart" : "http://eldaddp.azurewebsites.net/researchbriefings.json?_pageSize=500&_page=1&exists-category=true&min-date=2017-01-01&max-date=2017-06-29", "type" : "http://purl.org/linked-data/api/vocab#ListEndpoint"}
            , "items" : [], "itemsPerPage" : 500, "page" : 1, "prev" : "http://eldaddp.azurewebsites.net/researchbriefings.json?_page=0&exists-category=true&min-date=2017-01-01&max-date=2017-06-29", "startIndex" : 501, "totalResults" : 94, "type" : "http://purl.org/linked-data/api/vocab#Page"}
        }
    http_version: 
  recorded_at: Fri, 09 Feb 2018 11:42:38 GMT
recorded_with: VCR 4.0.0
