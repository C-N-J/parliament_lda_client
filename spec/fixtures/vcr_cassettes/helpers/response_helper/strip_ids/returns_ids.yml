---
http_interactions:
- request:
    method: get
    uri: http://lda.data.parliament.uk/researchbriefings.json?_page=0&_pageSize=500&max-date=2017-03-20&min-date=2017-01-01
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - lda.data.parliament.uk
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 24 Jan 2018 09:42:01 GMT
      Content-Type:
      - application/json
      Set-Cookie:
      - __cfduid=dee564ffc593afb24333c25e34cd3f1cb1516786918; expires=Thu, 24-Jan-19
        09:41:58 GMT; path=/; domain=.parliament.uk; HttpOnly
      X-Response-Id:
      - '16859'
      Access-Control-Allow-Origin:
      - "*"
      Expires:
      - Wed, 24 Jan 2018 09:58:38 GMT
      Etag:
      - W/"f26591fe8b21dc8"
      Content-Location:
      - http://lda.data.parliament.uk/researchbriefings.json?max-date=2017-03-20&min-date=2017-01-01&_pageSize=500&_page=0
      Server:
      - cloudflare
      Cf-Ray:
      - 3e220a4360010c71-AMS
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        { "format" : "linked-data-api", "version" : "0.2", "result" : {"_about" : "http://lda.data.parliament.uk/researchbriefings.json?max-date=2017-03-20&min-date=2017-01-01&_pageSize=500&_page=0", "definition" : "http://lda.data.parliament.uk/meta/researchbriefings.json?max-date=2017-03-20&min-date=2017-01-01", "extendedMetadataVersion" : "http://lda.data.parliament.uk/researchbriefings.json?max-date=2017-03-20&min-date=2017-01-01&_metadata=all&_pageSize=500&_page=0", "first" : "http://lda.data.parliament.uk/researchbriefings.json?max-date=2017-03-20&min-date=2017-01-01&_page=0", "isPartOf" : {"_about" : "http://lda.data.parliament.uk/researchbriefings.json?max-date=2017-03-20&min-date=2017-01-01", "definition" : "http://lda.data.parliament.uk/meta/researchbriefings.json?max-date=2017-03-20&min-date=2017-01-01", "hasPart" : "http://lda.data.parliament.uk/researchbriefings.json?max-date=2017-03-20&min-date=2017-01-01&_pageSize=500&_page=0", "type" : "http://purl.org/linked-data/api/vocab#ListEndpoint"}
    , "items" : [{"_about" : "http://data.parliament.uk/resources/710745", "abstract" : {"_value" : "The United Nations International Day for the Elimination of Racial Discrimination is observed with a series of worldwide events on 21 March every year.\n \nIt was proclaimed through a United Nations Resolution \"Elimination of all forms of racial discrimination\" adopted on 26 October 1966, six years after police had opened fire and killed 69 people at a peaceful demonstration in Sharpeville, South Africa, against the apartheid \"pass laws\".\n \nThe theme for the International Day 2017 is \"racial profiling and incitement to hatred, including in the context of migration\".\n \nRacial and ethnic profiling is defined as \"a reliance by law enforcement, security and border control personnel on race, colour, descent or national or ethnic origin as a basis for subjecting persons to detailed searches, identity checks and investigations, or for determining whether an individual is engaged in criminal activity\" according to a report of the Special Rapporteur on contemporary forms of racism of 20 April 2015.   \n \nFurther information\n \nUnited Nations International Day for the Elimination of Racial Discrimination 21 March"}
      , "date" : {"_value" : "2017-03-17T18:56:58.3408032+00:00", "_datatype" : "dateTime"}
      , "description" : ["A Westminster Hall debate on the UN International Day for the Elimination of Racial Discrimination will be held at 2.30pm on Tuesday 21 March 2017. The Member in charge of this debate is Dawn Butler MP."], "identifier" : {"_value" : "CDP-2017-0092"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "UN International Day for the Elimination of Racial Discrimination", "topic" : [{"_about" : "http://data.parliament.uk/terms/95727", "prefLabel" : {"_value" : "Racial discrimination"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/712060", "abstract" : {"_value" : "This version has been withdrawn: the latest version of the briefing paper on glyphosate is Commons Library briefing 08066."}
      , "date" : {"_value" : "2017-03-17T16:48:44.7089704+00:00", "_datatype" : "dateTime"}
      , "description" : ["The House of Commons Library has published a briefing paper examining the recent history of the EU authorisation for glyphosate."], "identifier" : {"_value" : "CBP-7928"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Commons Library analysis:  Controversy around the EU's re-approval of the pesticide glyphosate", "topic" : [{"_about" : "http://data.parliament.uk/terms/95481", "prefLabel" : {"_value" : "Agriculture"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95536", "prefLabel" : {"_value" : "Countryside"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95554", "prefLabel" : {"_value" : "Diseases"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95581", "prefLabel" : {"_value" : "Environmental protection"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95608", "prefLabel" : {"_value" : "Food"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/712050", "abstract" : {"_value" : "In early 2017, the Nuclear Decommissioning Authority (NDA) and employers across the NDA estate consulted on reforms to two final salary schemes:\n \n Combined Nuclear Pension Plan (CNPP) Magnox Electric Group of the Electricity Supply Pension Scheme (MEG ESPS). \n \nThe purpose of the consultation was to seek the views of members on reforms including moving to a Career Averaged Revalued Earnings (CARE) arrangement and a cap on pensionable pay.\n \nMembers of these schemes are covered by protection arrangements put in place at privatisation, requiring the new private sector employers to continue to provide pension benefits for those employed at the time of privatisation which are \u201cat least as good as those they were receiving in the public sector.\u201d\n \nHowever, the current Government has decided that \u2013 because the NDA is classified as public sector - the schemes fall to be reformed under the Public Service Pensions Act 2013. In response, the trade unions argue that i) they are not public sector pension schemes; ii) they have already gone through far more radical reform (in that they were closed to new entrants in the mid-2000s); and that scheme members are covered by statutory protection put in place at privatisation.\n \n "}
      , "date" : {"_value" : "2017-03-17T12:55:18.134879+00:00", "_datatype" : "dateTime"}
      , "description" : ["Looks at current proposals to reform NDA pensions"], "identifier" : {"_value" : "CBP-7926"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Nuclear Decommissioning Authority (NDA) pensions", "topic" : [{"_about" : "http://data.parliament.uk/terms/95708", "prefLabel" : {"_value" : "Pensions"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/712048", "abstract" : {"_value" : "The Kew Gardens (Leases) Bill 2016-17 has its Commons report stage and third reading on Friday 24 March 2017.\n \nIt is a Private Member\u2019s Bill, introduced to Parliament by Ian Liddell-Grainger MP on 29 June 2016 [Bill 22], through the ballot procedure. It is a short Bill, comprising two clauses.\n \nWhat does the Bill aim to do?\n \nThe Explanatory Notes for the Bill  (Bill 22 EN, 56/2, prepared by the Department for the Environment, Food and Rural Affairs (DEFRA) with Ian Liddell-Grainger\u2019s consent) set out its purpose:\n \nThis Bill confirms the Secretary of State\u2019s powers in relation to the management of the Royal Botanic Gardens, Kew (Kew) and raises the restriction on leasing land at Kew from a period of up to 31 years to a period of up to 150 years. [paragraph 1]\n \nThe Explanatory Notes go on to explain that the Bill is intended as a modernising measure, as it would enable Kew Gardens to generate more income by offering longer leases:\n \n2.  The Bill would remove unnecessary restrictions on leases on the Kew Gardens estate.  Currently the 1702 Crown Land Act limits leases at Kew Gardens to 31 years. This Bill modernises these provisions \u2013 allowing leases up to 150 years.\n \n3.  The change would free up Kew to generate revenue to improve the quality of its estate and support its world\u2010class science in line with its plans. Income generation will help enable Kew to achieve its core objectives and retention of UNESCO World Heritage Site status.\n \n4.  The aim is to help Kew in its ambition to further increase its self\u2010generated income. Income would be generated by granting long leases to third parties for use of non\u2010core elements of the Kew Gardens estate. In addition by transferring property to third parties Kew would transfer the liability and cost of maintaining those non\u2010core assets. [paragraphs 2 \u2013 4]\n \nThe current limit on leases to 31 years dates from 1702, as the Explanatory Notes go on to explain:\n \n5.  Section 5 of the Crown Land Act 1702 prevents the sale of Crown land and limits the length of leases over Crown land to a term of 31 years. Kew is Crown land. It is managed by the Secretary of State and, where directed to do so, Kewʹs Board of Trustees. This Bill confirms the Secretary of Stateʹs powers of management include the power to grant leases at Kew. It also raises the restriction on the length of leases over land at Kew from a maximum term of 31 years to a maximum term of 150 years. [paragraph 5]\n \nParliament\u2019s consideration of the Bill\n \nThe Bill had an undebated second reading on 3 February 2017 and was agreed without a vote at the Public Bill Committee on 22 February 2017.\n \nIn the Public Bill Committee, Ian Liddell-Grainger set out what the Bill was intended to achieve:\n \nThat change [to the length of leases] would allow Kew to generate revenue to improve the quality of the estate and support its world-class science. Income generation would help Kew achieve its core objectives and retain its UNESCO world heritage site status. The change would also enable the release of value from non-core land and property at Kew. Long leases would help Kew develop what it does and what it wants to do in future. Anybody who saw David Attenborough in the wonderful series at Kew will not disagree that it is a remarkable place. The aim is to help Kew in its ambition to increase its self-generated income and become more financially viable.\u200bKew\u2019s historic estate requires conservation and improvement. The Bill will enable income generation from the land at Kew that can be reinvested in the maintenance and development of the site. That will allow Kew\u2019s infrastructure to be brought up to a standard that fully supports Kew\u2019s ambitions and, more importantly, its mission. Basically, that has to happen because it is a UNESCO world heritage site. The financial benefits mean that it will have a time and place to raise the money it requires for the long-term commitment that it has shown in the past 150 years since it was set up. [PBC on Kew Gardens (Leases) Bill, 22 February 2017, cc3-4]\n \nHe also set out what the Bill would not do:\n \nThe change does not allow the sale of the freehold land. The Government cannot sell the land because it remains with the Crown. Primary legislation would be needed if we wanted to do anything else to the land. Any proposals for new build or changes to buildings or their use, including the wider estate, will continue to be subject to rigorous review. There are tight restrictions on planning anyway, because Kew is a UNESCO world heritage site. We also know how rigorous planning is in that part of London. [PBC on Kew Gardens (Leases) Bill, 22 February 2017, c4]\n \nHe explained, too, that 150 years had been adopted as the maximum length of any lease because the Crown works on 150 year leases. [PBC on Kew Gardens (Leases) Bill, 22 February 2017, c4]\n \nShadow DEFRA minister, Mary Glindon said that the Opposition supported the Bill:\n \nWe support this little Bill, because it would modernise those restraints and instead allow leases of up to 150 years. We believe that would make properties on the Kew Gardens estate more commercially attractive, generating income that can help support its world-class scientific research and help maintain its historic buildings. My researcher gave me an estimate that in the first 10 years of the new arrangements Kew could bring in £40 million in capital receipts. [PBC on Kew Gardens (Leases) Bill, 22 February 2017, c5]\n \nDEFRA minister George Eustice confirmed that the Government also welcomed the Bill and supported Kew in its aims:\n \nA large proportion of Kew\u2019s estate is historic in nature and requires careful management. To create world-class infrastructure, Kew would like to be able to enhance its estate. It would like to get additional investment into its infrastructure through leveraging Government investment to achieve philanthropic and private commercial investment. The Government fully support Kew in that aim, as part of its ambitions to further increase its self-generated income and become more financially self-sufficient.\n \n[\u2026]\n \nExamples of situations in which long leases might be granted include for the replacement of outdated catering and visitor facilities within the gardens and the renovation of properties just outside the gardens for residential use. All proposals for granting long leases will be in line with Kew\u2019s world heritage site management plan. Proposals will be subject to scrutiny by Kew trustees and DEFRA, as well as through the planning process with local residents and businesses. [PBC on Kew Gardens (Leases) Bill, 22 February 2017, c5]\n \nFurther background:\n \nOther documents relating to the Bill are on the Bill page.\n \nKew Gardens is London\u2019s largest UNESCO world heritage site.  Its annual report and accounts for the year ending 31 March 2016 [HC 233] records its five strategic objectives:\n \nRBG Kew\u2019s mission is to be the global resource for plant and fungal knowledge, building an understanding of the world\u2019s plants and fungi upon which all our lives depend. We have five strategic objectives:\n \n Our collections are curated to excellent standards and are widely used for the benefit of humankind; Our science makes a demonstrable contribution to solving the critical challenges facing humanity today; We are the world\u2019s leading botanic gardens where our large and diverse audiences develop their understanding of why plants and fungi matter; We are valued as the pre-eminent provider of public education on plant and fungal science, conservation and horticulture; and We are a sustainable and dynamic organisation, making positive global impacts in partnership with others. \n \n "}
      , "date" : {"_value" : "2017-03-17T12:33:00.713074+00:00", "_datatype" : "dateTime"}
      , "description" : ["The Kew Gardens (Leases) Bill 2016-17 - a Private Members' Bill introduced to Parliament by Ian Liddell-Grainger MP on 29 June 2016 [Bill 22] - has its Commons report stage and third reading on Friday 24 March 2017."], "identifier" : {"_value" : "CBP-7932"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Commons Library analysis:  Kew Gardens (Leases) Bill [Bill 22]", "topic" : [{"_about" : "http://data.parliament.uk/terms/95536", "prefLabel" : {"_value" : "Countryside"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95688", "prefLabel" : {"_value" : "Nature conservation"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/711709", "abstract" : {"_value" : "There has been a long standing campaign for compensation for Equitable Life policyholders.  Questionable business practices by the company dating back into the 1970s and the offer of 'guaranteed returns' which proved to be impossible to honour, forced the company to adopt a series of legal and economic measures to reduce payments to its policyholders. Affected pensioners won a long argument over the contribution of the then regulator due to maladministration.  The pensioner's group has won a significant amount of money in compensation already but argue that they deserve more.  The government compensation scheme is now closed and the current Government has indicated that no further sums are available."}
      , "date" : {"_value" : "2017-03-17T10:36:41.628443+00:00", "_datatype" : "dateTime"}
      , "description" : ["Equitable Life Compensation; A further debate calling for compensation for some Equitable Life policyholders."], "identifier" : {"_value" : "CDP-2017-0097"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Compensation for Equitable Life policyholders", "topic" : [{"_about" : "http://data.parliament.uk/terms/95708", "prefLabel" : {"_value" : "Pensions"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/709247", "abstract" : {"_value" : "Spring Budget 2017 was presented by the Chancellor of the Exchequer to Parliament on 8 March. At the same time the Office for Budget Responsibility (OBR) published updated forecasts in its economic and fiscal outlook.\n \nGovernment announcements\n \nTax\n \n The main rate of self-employment Class 4 National Insurance contributions to rise from 9% to 10% in April 2018 and 11% in April 2019. The Class 4 rate is currently levied on self-employment profits above £8,060. This change raises between £325 million and £645 million a year. See section 3 of this briefing for more on this change. \n \n The tax-free allowance for dividend income to be reduced from £5,000 to £2,000 from April 2018. This change raises over £800 million a year from 2019/20. See section 3 of this briefing for more on this change. \n \n Local authorities to receive around £300 million over the next three years to provide discretionary support for businesses facing increases in business rates bills following April 2017\u2019s business rates revaluation in England. \n \n Additional funding of £20-25 million a year to support some businesses that no longer receive small business rate relief after the revaluation. \n \n A 25% charge to be introduced targeted at those seeking to reduce the tax payable by moving their pension wealth to another jurisdiction. This change raises around £60 million a year. \n \n UK VAT of 20% will apply to mobile phone use by UK residents when outside the EU. Currently VAT is applied when UK residents use their mobile phone inside the EU, but not when outside. The change ensures mobile phone companies cannot use the inconsistency to avoid UK VAT. This change raises around £65 million a year. \n \nSpending\n \n Local authorities in England to receive £2 billion of additional funding over the next three years to spend on adult social services. \n \n NHS in England to receive an additional £100 million in 2017/18 for capital investment in A&E departments. The funding will support up to 100 new GP triage projects. \n \n NHS in England to receive £325 million over the next three years to invest in local Sustainability and Transformation Plans (STPs). STPs are locally developed proposals to improve local health and care. \n \n £320 million of additional spending this Parliament to extend the free schools programme introducing new schools in England, including selective schools. Over £500 million will be provided in 2021/22. \n \n Additional funding for 16-19 technical education in England. New T-levels, offering technical training routes, will be introduced from 2019/20. Around £300 million will be provided during this Parliament. \n \n An additional £216 million spread over 2018/19 and 2019/20 for school maintenance. \n \n The Scottish Government (£350 million), Welsh Government (£200 million) and Northern Ireland Executive (£120 million) receive additional funding through the Barnett formula. \n \n \n \nOBR forecasts for the economy\n \nIn its March 2017, forecasts compared with its November 2016 forecasts, the OBR:\n \n expects annual GDP growth to be higher in 2017 but lower in 2018, 2019 and 2020. The forecast for the overall level of GDP from 2019 is very similar \n \n \n has left its CPI inflation forecasts broadly unchanged \n \n \n has raised average annual earnings growth forecasts for 2017 but lowered them in every year afterwards \n \n \n has lowered its unemployment rate forecasts in each year \n \n \nOBR forecasts for the public finances\n \nIn its March 2017 forecasts, compared with its November 2016 forecasts, the OBR:\n \n lowered its forecast for borrowing in 2016/17 by £13.4 billion (on a like-for-like basis) to £51.7 billion, or from 3.3% of GDP to 2.6% expects broadly similar borrowing in each year from 2017/18 to 2021/22, which means the deficit will rise in 2017/18 compared with 2016/17 before falling in future years \n \n \n forecasts debt as a proportion of GDP to be lower in all years \n \n \nThe OBR assesses that the Government is more likely than not to meet its fiscal targets for: (i) the cyclically-adjusted, or structural, deficit to be below 2% of GDP by 2020/21, and (ii) debt to be falling as a percentage of GDP by 2020/21."}
      , "date" : {"_value" : "2017-03-17T07:26:03.0074815+00:00", "_datatype" : "dateTime"}
      , "description" : ["A summary of Spring Budget 2017 and the Office for Budget Responsibility's forecasts for the economy and public finances. This briefing now includes detailed discussion of changes to National Insurance contributions for the self-employed and the tax-free allowance for dividend income."], "identifier" : {"_value" : "CBP-7919"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/17113", "prefLabel" : {"_value" : "Economic Policy and Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Spring Budget 2017: A summary", "topic" : [{"_about" : "http://data.parliament.uk/terms/95529", "prefLabel" : {"_value" : "Community care"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95530", "prefLabel" : {"_value" : "Companies"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95560", "prefLabel" : {"_value" : "Economic policy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95561", "prefLabel" : {"_value" : "Economic situation"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95574", "prefLabel" : {"_value" : "Employment"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95614", "prefLabel" : {"_value" : "Further education"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95620", "prefLabel" : {"_value" : "Health finance"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95621", "prefLabel" : {"_value" : "Health services"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95637", "prefLabel" : {"_value" : "Incomes and poverty"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95684", "prefLabel" : {"_value" : "National insurance"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95697", "prefLabel" : {"_value" : "Older people"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95707", "prefLabel" : {"_value" : "Pay"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95724", "prefLabel" : {"_value" : "Public expenditure"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95740", "prefLabel" : {"_value" : "Schools"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95764", "prefLabel" : {"_value" : "Taxation"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/711707", "abstract" : {"_value" : "A Law of Property Act (LPA) receiver is a person appointed by the holder of a fixed charge over property (usually a bank or other commercial lender). Under the Law of Property Act 1925, a lender has the right to appoint such a receiver under section 101(1)(iii), once the debt falls into arrears. The Act confers very limited powers on the receiver. However, the receiver\u2019s powers are typically modified and extended by express provisions in the security document.\n \nLPA receivers are usually appointed by lenders with a view of selling the charged property or collecting income (e.g. rental income) from it to repay the debt. It is important to note that an LPA receiver will not necessarily be a licensed insolvency practitioner; the receiver might, for example, be a surveyor, valuer or accountant.  Since LPA receivership is not an insolvency process, it is not regulated by the Insolvency Service. However, the receiver may be a member of a professional trade body.\n \nLaw of Property Act (LPA) receivership is a difficult area of law, particularly as regards the nature of receivership and delegation of powers to the receiver. This Commons briefing paper does not provide a definitive statement of the law but a generalised overview. In particular, it looks at how LPA receivers are appointed; their powers; and their role."}
      , "date" : {"_value" : "2017-03-16T16:49:36.9000283+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons briefing paper provides a generalised overview of Law of Property Act receivers. In particular, it looks at how LPA receivers are appointed; their powers; and their role."], "identifier" : {"_value" : "CBP-7931"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Law of Property Act receivers", "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/709186", "abstract" : {"_value" : "On 7 March 2017, the House of Lords voted at report stage on the European Union (Notification of Withdrawal) Bill by 366 votes to 268 to agree to an amendment moved by Lord Pannick (Crossbench). In total 634 Members voted, almost 4 in 5 of those eligible to do so at the time of the vote. This is the largest total number of Members voting in a single division on record.\n \nThis beat the previous largest vote of 621 recorded on 14 July 1993. On this occasion, Members voted by 445 to 176 against an amendment to the European Communities (Amendment) Bill, which would have required a referendum to be held. The Times called it the \u201cbiggest turnout of peers in modern times\u201d. In terms of the proportion of Members eligible to vote at that time, this represented about three in five.\n \nUntil this year, the 1993 vote was thought to have been the largest since 1831. This has been widely assumed to mean a larger vote took place in 1831, possibly on the \u2018Great Reform Bill\u2019. However, the House was not large enough at that time to vote in such numbers: figures available for 1830 suggest the House had 399 Members. However, in rejecting the \u2018Great Reform Bill\u2019 on 7 October 1831 a total of 357 Members voted. On the basis that the House had around 400 Members in 1831 this would have equated to almost nine in ten of Members voting in that division.\n \nThe following table provides details of votes held since the House of Lords Act 1999 where the number of Members voting totalled more than 500.\n \n \n \n Number Voted Issue Bill/Issue Bill Stage Date 634 Amendment requiring parliamentary approval for the outcome of negotiations with the European Union European Union (Notification of Withdrawal) Bill Report 7 March 2017 614 Amendment concerning EU citizen\u2019s right to remain European Union (Notification of Withdrawal) Bill Committee 1 March 2017 592 Amendment to the motion to send the Bill to a select committee for consideration Health and Social Care Bill Second Reading 12 October 2011 584 Amendment to the motion declining to consider the Regulations until the Government laid a report before the House Tax Credits (Income Thresholds and Determination of Rates) (Amendment) Regulations 2015 N/A 26 October 2015 574 Amendment to the motion declining to give the Bill a second reading Health and Social Care Bill Second Reading 12 October 2011 561 Amendment to the motion declining to consider the Regulations until the Government issued a consultation and laid a report before the House Tax Credits (Income Thresholds and Determination of Rates) (Amendment) Regulations 2015 N/A 26 October 2015 561 To appoint a select committee to consider the impact of clauses 10 and 11 of the Trade Union Bill Trade Union Bill N/A 20 January 2016 544 Detention of 15 year olds in secure colleges Criminal Justice and Courts Bill Commons Amendments 9 December 2014 541 Amendment to the motion that the Bill be not read a third time until the House had the opportunity to consider further specified information Health and Social Care Bill Third Reading 19 March 2012 538 Amendment to the motion declining to give the Bill a second reading Marriages (Same Sex Couples) Bill Second Reading 4 June 2013 532 Amendment concerning students and academic staff at higher education providers Higher Education and Research Bill Report 13 March 2017 532 Amendment regarding the number and distribution of seats in the House of Commons Parliamentary Voting System and Constituencies Bill Report 9 February 2011 531 Amendment to delay the report of the Boundary Commission until October 2018 Electoral Registration and Administration Bill Committee 14 January 2013 528 Amendment to a government amendment concerning publicity of Boundary Commission reports Parliamentary Voting System and Constituencies Bill Report 8 February 2011 524 Amendment to the motion to annul Electoral Registration and Administration Act 2013 (Transitional Provisions) Order 2015 N/A 27 October 2015 513 Amendment concerning civil liability for unlawful interceptions Investigatory Powers Bill Consideration of Commons Reasons and Amendments 2 November 2016 503 Motion to annul Electoral Registration and Administration Act 2013 (Transitional Provisions) Order 2015 N/A 27 October 2015"}
      , "date" : {"_value" : "2017-03-16T15:00:06.3493968+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Lords Library briefing provides information about the largest votes that have taken place in the House of Lords."], "identifier" : {"_value" : "LIF-2017-0023"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414041", "prefLabel" : {"_value" : "Lords In Focus"}
      }
      , "title" : "House of Lords: Largest Votes Recorded", "topic" : [{"_about" : "http://data.parliament.uk/terms/95628", "prefLabel" : {"_value" : "House of Lords"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95705", "prefLabel" : {"_value" : "Parliamentary procedure"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/711655", "abstract" : {"_value" : "Current Deployment\n \nThe NATO Secretary General, Jens Stoltenberg, has described the North Atlantic Treaty Organization (NATO) as currently facing the greatest challenge to its security since the Cold War. Approximately 18,000 military personnel from member countries are engaged in NATO missions around the World, including in Afghanistan, Kosovo and the Mediterranean. Following the Russian annexation of Crimea in 2014, NATO has increased its presence in Eastern Europe, including the deployed on a rotational basis of four multinational battalions to the Baltic States and Poland.\n \n2 Percent and 20 Percent Targets\n \nThe United States has recently renewed pressure on NATO partners to meet the commitment to spend above 2 percent of their gross domestic product of defence. In 2016, five countries met this target: the United States (3.61 percent); Greece (2.36 percent); Estonia (2.18 percent); the UK (2.17 percent); and Poland (2.01 percent).\n \nNATO\u2019s target is also that 20 percent of defence spending by member countries go towards equipment. In 2016, this target was met by 10 countries: Lithuania (27.65 percent); Luxemburg (27.24 percent); Poland (25.79 percent); Norway (25.08 percent); the United States (25.03 percent); France (24.48 percent); the UK (22.56 percent); Turkey (22.35 percent); Romania (20.40 percent) and Italy (20.24 percent)."}
      , "date" : {"_value" : "2017-03-16T12:52:58.8070012+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Lords Library briefing outlines recent NATO policy, including the increase in the deployment of forces in Eastern Europe since 2014. It also summarises recent comment on NATO preparedness in the face of external threats and the risk of fragmentation within the alliance."], "identifier" : {"_value" : "LIF-2017-0024"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414041", "prefLabel" : {"_value" : "Lords In Focus"}
      }
      , "title" : "NATO Alliance: Recent Developments", "topic" : [{"_about" : "http://data.parliament.uk/terms/95550", "prefLabel" : {"_value" : "Defence expenditure"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95551", "prefLabel" : {"_value" : "Defence policy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95687", "prefLabel" : {"_value" : "NATO"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/709600", "abstract" : {"_value" : "The debate was triggered by epetition 166847 which has gained 185,000 signatures. \n \nHigh car insurance premiums act as a barrier to young people having access to further education or employment.  The problem is widespread though particular attention is paid to rural areas.\n \nThe insurance industry justify high premiums by pointing to the fact that young drivers are more likely to have accidents and much more likely to have \u2018catastrophic\u2019 accidents which can result in multiple £million settlements.\n \nAccident statistics support this contention.\n \nThe government points to a wider range of measures it has taken to reduce premiums for all drivers.\n \nThere is a library paper on the cost of motor insurance. "}
      , "date" : {"_value" : "2017-03-16T11:54:59.6397425+00:00", "_datatype" : "dateTime"}
      , "description" : ["There will be a debate on the cost of car insurance for young people. This will take place in Westminster Hall on Monday 20th March and is sponsored by Steve Double."], "identifier" : {"_value" : "CDP-2017-0088"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Cost of car insurance for young people", "topic" : [{"_about" : "http://data.parliament.uk/terms/95603", "prefLabel" : {"_value" : "Financial services"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/711237", "abstract" : {"_value" : "Overview\n \nThe Prisons and Courts Bill covers a number of policy areas that fall within the Ministry of Justice\u2019s remit, from prisons to whiplash to online criminal convictions. The Bill, which is composed of six parts, deals with four discrete areas. \n \n Part 1 on prison reform Parts 2 and 3 on reforming the court and tribunal system Part 4 on the judiciary and the Judicial Appointments Commission; and Part 5 on whiplash. \n \nThe Bill is due to have its second reading on 20 March 2017.\n \nAs well as a longer paper, which covers the whole Bill, we have split the paper up into three sections for those who are only interested in those aspects:\n \n Prison reform is covered here Court reform is covered here Whiplash is covered here \n \nLibrary Briefing Paper CBP 7892: Prison and Court Statistics, England and Wales gives statistics on the Bill to accompany this Briefing Paper.\n \nThe Ministry of Justice has published Explanatory Notes. The Gov.UK website has a \u201clatest news\u201d page, Prisons and Courts Bill: what it means for you and a collection of relevant documents including  factsheets on the Bill, impact assessments and equalities statements.\n \nThe Bill\u2019s progress can be followed on the Prisons and Courts Bill page of the Parliamentary website, which also provides relevant documents such as proposed amendments and versions of the Bill.\n \nWhere does the Bill extend to?\n \nMost of the Bill extends to England and Wales only. However, some aspects of the prison reforms also extend to Scotland and Northern Ireland, because Her Majesty\u2019s Inspectorate of Prisons and the Prisons and Probation Ombudsman have functions relating to immigration detention, and this is a reserved matter.  In relation to court reform, Parts 2 and 3 of the Bill are relevant to Scotland and Northern Ireland in so far that they make changes to the way in which reserved tribunals are administered.\n \nPrison reforms\n \nThe Government\u2019s proposals\n \nPart 1 of the Bill concerns prison reform. The Government\u2019s November 2016 white paper, Prison Safety and Reform, set out a range of proposals to deal with increasing levels of violence and self-harm in prisons and the persistently high levels of reoffending.  A central proposal was greater autonomy for prison governors, currently being piloted in six \u201creform prisons\u201d. \n \nWhich of the prison reforms are in the Bill?\n \nMany of the proposed reforms do not need primary, or indeed any, legislation. As a result, there is actually very little in the Bill on prisons.\n \nA new statutory purpose\n \nClause 1 sets out a new statutory purpose for prisons promised by the white paper (similar declaratory provisions exist in legislation for probation and youth justice) and amends the Secretary of State\u2019s duties to include reporting on the extent to which prisons are achieving that purpose.\n \nInspection and oversight\n \nClause 2 makes some changes to the law governing Her Majesty\u2019s Inspectorate of Prisons, and provides inspectors with some additional powers. Clauses 4-20 would put the Prisons and Probation Ombudsman on a statutory footing.  There were attempts to do this in 2004 and 2008, but these were abandoned. \n \nPrison security \u2013 mobile phones and drugs\n \nThe provisions on prison security in chapter 3 of Part 1 build on recent legislation to help deal with two major challenges to prison security: illicit mobile phones and psychoactive substances. A 2012 Act already allows prison governors to interfere with wireless telegraphy in prisons in order either to block mobile phones or detect their use. Clause 21 would allow the Secretary of State to authorise telecoms and internet service providers to do this. Legislation in 2015 and 2016 was brought in to deal with New Psychoactive Substances (NPSs), including introducing a new offence of possession in a custodial setting. Clause 22 would allow for prisoners to be tested for NPSs without each individual substance needing to be specified separately.\n \nCourt reform\n \nParts 2 and 3 of the Prison and Courts Bill will make significant changes to the courts and tribunals system in England and Wales. The provisions includes reforms to the criminal courts, civil courts, the family courts and tribunals in England and Wales.\n \nWhat is driving these reforms? \n \n The provisions in Parts 2 and 3 predominantly relate to Her Majesty\u2019s Court and Tribunal\u2019s (HMCTS) Reform Programme, which was launched in March 2014.[1] The programme, and this Bill, aim to modernise the justice system and improve access to justice, through a series of reforms designed to integrate technology and enhance efficiency. The aims and principles of the programme were set out in a joint statement by the Lord Chancellor, the Lord Chief Justice and the Senior President of Tribunals, titled Transforming Our Justice System, which was published in September 2016.\n \nHow will the criminal justice system be changed? \n \nThe proposed reforms to the criminal courts focus on expanded use of technology, in particular by providing for more hearings and decisions to be conducted in writing (including electronically) or virtually via audio and video links.  The proposals that have attracted most comment are those to enable \u201cfully virtual\u201d court hearings, and those to introduce a new automated online conviction procedure for certain low-level non-imprisonable offences.\n \nHow will the bill reform the civil justice system? \n \nPart 2 of the Bill also provides the legal foundations for the introduction of new online procedures and online dispute resolution (ODR) for the civil courts, family courts and tribunals. The clauses enable the creation of a new online court that could deal with low value money claims below £25,000, as was recommended by Lord Justice Briggs\u2019 Civil Courts Structure Review. The clauses would allow new online procedures to apply to existing civil courts, family courts and tribunals.  The Government\u2019s Transforming our justice system paper indicates that the Social Security and Child Support Tribunal is going to be one of first \u201cto be moved entirely online, with an end-to-end digital process that will be faster and easier to use for people that use it\u201d. \n \nJudiciary and the Judicial Appointments Commission\n \nPart 4 of the Bill concerns judicial terms and conditions, and the role of the Judicial Appointments Commission. The former provisions of the Bill largely follow from the Ministry of Justice\u2019s consultation on Modernising Judicial Terms and Conditions, while the latter follow from certain recommendations in the Triennial Review of the Judicial Appointments Commission. There are also minor changes to the law on deployment of judges and the remuneration of Employment Tribunal members.\n \nWhat\u2019s happening to appointments for senior judges?\n \nAt present, some leadership roles are held on a fixed term basis whereas others are not. Many leadership judge positions are non-statutory, and thus can already be held on a fixed-term basis without the need for legislation. Clause 56 amends the law to allow the remaining statutory judicial leadership positions to be held on a fixed-term basis, in line with the conclusions of the Ministry of Justice\u2019s consultation. The Government claim that this will create a clearer career path and improve diversity in the judiciary. The Bill does not specify how long the term will be for any such appointments, as this is left to the Lord Chancellor to decide following consultation with the judiciary. Proposals to appoint all fee-paid judges on fixed-term appointments were included in the consultation but are not being taken forward in the Bill.\n \nWhat about the Judicial Appointments Commission is changing?\n \nClause 60 amends the law to allow the Lord Chancellor to direct the Judicial Appointments Commission (JAC) to provide its advice on appointments both within and without the United Kingdom, even where those appointments are non-judicial in nature. The JAC is also empowered to set up a charging model to recoup the costs of providing this advice. This is following a recommendation in the Triennial Review that these duties were formalised, as they were already being sought out due to the JAC\u2019s expertise in the realm of appointments.\n \nWhiplash\n \nBackground\n \nAgainst a background of rising motor insurance premiums and the perception (not universally accepted) of the existence of a \u201ccompensation culture\u201d, there has been a focus on the incidence of personal injury claims for whiplash injuries, insurance fraud more generally, and the extent to which this has affected the cost of motor insurance.\n \nThe Government remains concerned about the number and cost of whiplash claims and has consulted on ways to address the issue. It now intends to proceed with a range of reforms aimed at capping whiplash compensation payments and banning settlement of claims without medical evidence.\n \nThe Bill: Part 5\n \nPart 5 of the Bill deals with whiplash, including the definition of whiplash; damages for whiplash injuries; an uplift, in exceptional circumstances, to the amount of damages; banning settlement of claims before medical report; and regulation of the ban on pre-medical settlement. Much of the detail would be included in secondary legislation, which, in many cases, would be subject to the affirmative resolution procedure.\n \nReaction to the Bill\n \nIn general, lawyers\u2019 groups, including the Law Society and the Association of Personal Injury Lawyers, are among those who have raised concerns about the Government\u2019s proposals, while the Association of British Insurers has welcomed them.\n \nThe Government considers that the reforms would lead to savings of about £1bn and expects this to be passed on to motorists, resulting in an average saving per motor insurance premium of £40. Others disagree that the savings will be passed on and also consider it unfair that the reforms would reduce the compensation payable to genuine claimants, and leave victims to conduct claims without legal advice.  There is also disagreement about whether the number and cost of whiplash claims has increased.\n \nFurther reading\n \nBackground information about the whiplash provisions is provided in Library briefing paper, Small claims for personal injuries including whiplash. Information about factors influencing the cost of motor insurance premiums, and what Government and the industry have done to try and reduce costs, is provided in Library briefing paper, Motor car insurance.\n \n \n \n \n \n "}
      , "date" : {"_value" : "2017-03-16T09:46:09.8723241+00:00", "_datatype" : "dateTime"}
      , "description" : ["The Prisons and Courts Bill 2016-17 has its second reading on 20 March 2017.  This Briefing Paper provides relevant information and analysis, including commentary from other organisations."], "identifier" : {"_value" : "CBP-7907"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Commons Library Analysis: The Prisons and Courts Bill", "topic" : [{"_about" : "http://data.parliament.uk/terms/95520", "prefLabel" : {"_value" : "Civil law"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95541", "prefLabel" : {"_value" : "Criminal law"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95710", "prefLabel" : {"_value" : "Personal injury"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95720", "prefLabel" : {"_value" : "Prisons"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95751", "prefLabel" : {"_value" : "Small claims"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/711241", "date" : {"_value" : "2017-03-15T15:54:13.7048692+00:00", "_datatype" : "dateTime"}
      , "identifier" : {"_value" : "CDP-2017-0096"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Regulatory role of the RICS in Law of Property Act receiverships", "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/349867", "abstract" : {"_value" : "The National Health Service Act 1946, which set up the NHS in England and Wales, contained a provision that NHS services should be provided free of charge unless that Act expressly provided for a charge. This provision has been carried forward into the legislation which replaced the 1946 Act \u2013 the NHS Act 1977 and subsequently the NHS Act 2006.\n \nSince the founding of the NHS, amendments to legislation have been made allowing charges for NHS services including prescription, dental and optical charges. There are also charges for facilities not covered by NHS legislation, such as hospital car parking.\n \nThis note sets out the provisions for prescription and dental charges, which groups are exempt, and explains where charges vary in devolved countries. It additionally covers efforts to reduce prescription wastage, including new Government plans to publish the actual cost to the NHS on prescription items over £20.\n \nIt also briefly examines the future of NHS charges. In the context of financial pressure on the NHS, there have been proposals to introduce additional charges for services, such as GP appointments. However, the Health Secretary has recently confirmed that there are no plans to introduce a charge for GP appointments."}
      , "date" : {"_value" : "2017-03-15T15:02:58.5977517+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Commons Library briefing outlines the provisions for prescription, dental and other NHS charges under NHS legislation. This note sets out the provisions for prescription and dental charges, which groups are exempt, and explains where charges vary in devolved countries. It additionally covers efforts to reduce prescription wastage, including new Government plans to publish the actual cost to the NHS on prescription items over £20.  It also briefly examines the future of NHS charges."], "identifier" : {"_value" : "CBP-7227"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "The prescription charge and other NHS charges", "topic" : [{"_about" : "http://data.parliament.uk/terms/95620", "prefLabel" : {"_value" : "Health finance"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95621", "prefLabel" : {"_value" : "Health services"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95673", "prefLabel" : {"_value" : "Medicine"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/528529", "abstract" : {"_value" : "What is the legal framework?\n \nThe design of pension systems is largely the responsibility of Member States. The regulatory framework at EU level covers:\n \n establishing an internal market for funded occupational pension schemes and the minimum standards to protect scheme members; minimum guarantees concerning accrued rights in occupational pension schemes in case of the insolvency of the sponsoring employer; and anti-discrimination rules. (European Commission Memo 10/302 Green Paper on Pensions and Green Paper. Towards adequate sustainable and safe European pension systems, July 2010, SEC(2010)830) \n \nThe Pension and Lifetime Savings Association (PLSA) explains that UK workplace pension schemes tend to operate on a national basis but want access to investment opportunities and service providers in the EU:\n \n Workplace pension schemes in the UK are not generally looking to provide pensions to workers in other Member States. So, in this respect, there is little interest in taking up the opportunities that might - in theory at least \u2013 be provided by an effective EU-wide Single Market. However, workplace pension schemes do want ready access to investment opportunities and service providers in EU and across the world, and this is where a strong Single Market has a role to play. Having ready access to the widest possible range of service providers helps schemes to invest their assets and administer their schemes with a minimum of cost in order to provide the best value to their members. (PLSA Response to balance of competences review: single market and free movement of capital, January 2013). \n \nEU legislation has an impact on them:\n \n directly, through pensions-specific EU legislation such as the Directive on Institutions for Occupational Retirement Provision (\u2018IORP Directive\u2019), through the regulatory activities of EIOPA, and through EU employment law, such as the Equal Treatment Directive; and indirectly, because the costs of complying with the EU\u2019s investment markets legislation (such as EMIR, MIFID, the draft Money Market Funds Regulation and the potential Financial Transaction Tax) are passed to pension fund clients by asset managers, brokers and banks. (Ibid) \n \nWhat will Brexit mean for this?\n \nFollowing the vote on 23 June, the regulators said existing law would continue to apply until changed by the UK Government and Parliament (FCA Statement on European Union referendum result, 24 June 2016).\n \nThe PLSA said pension schemes do not want major regulatory upheaval:\n \n UK pensions law is extensively intertwined with EU law, regualtions and court rulings. There is no need to dismantle this framework - and very little to gain from doing so. (PLSA, Brexit and Pension Schemes: Getting the right deal for Britain\u2019s savers, January 2017). \n \nIt says that while they would welcome clarification on whether the revised IORP II Directive will apply, in the UK, of greater concern is the potential EU legislation on a solvency-based funding regime for pension schemes (Ibid).\n \nThere have been questions in the pension press about whether the Government will proceed with complex rules to require the equalisation of Guaranteed Minimum Pensions (GMPs). However, the PLSA argues that the UK's own Equality Act and continuing participation in the European Convention on Human Rights will prevent this outcome (Ibid). A new EU Directive on Data Protection Regulation is expected to apply in the UK (Occupational Pensions, September 2016).\n \nWhat about market changes?\n \nFollowing the vote to leave, the Pensions Regulator warned against \"knee-jerk reactions\" but said trustees should review their position to understand the risks in the scheme's investment strategy and employer covenant (their legal obligation and financial ability to support the scheme). (Market volatility following the EU referendum: guidance statement from TPR, July 2016).\n \nThe PLSA says that the most obvious immediate policy consequence of the referendum had been:\n \n [...] the Bank of England's announcement of a 0.25% reduction in the base rate and further £60 bn of quantitative easing (QE) announced on 4 August. QE, in particular, has undoubtedly contributed to pension fund deficits. (PLSA, Brexit and Pension Schemes: Getting the right deal for Britain\u2019s savers, January 2017). \n \nLane Clark and Peacock have looked at the impact on scheme's abilities to de-risk (LCP, Pension de-risking, September 2016 update).\n \nWhat does the pensions industry want?\n \nAccording to the PLSA, the UK has the larges pensions sector in Europe, providing pensions for 20 million people and with over £1 trillion of assets under management. It argues that a successful outcome from the Brexit negotiations would include the following:\n \n For a strong economy: replication of both the current UK-EU framework for free trade in goods and existing EU free trade agreements with third countries. Also, a new immigration policy that continues to allow flows of talent and labour from the EU for the good of the wider economy in general and pension schemes in particular; For the right regulation: the maximum possible access to the Single Market in services \u2013 while also exempting pension schemes that operate only in the UK from damaging EU pensions regulation, such as a potential solvency-based regime for pension funds; For strong financial services: continuation of the passporting regime so that pension funds can invest efficiently. (PLSA, Brexit and Pension Schemes: Getting the right deal for Britain\u2019s savers, January 2017). \n \nThe ABI has called on the Government to \u201cmake a clear commitment that it will seek an early agreement with our European partners on a high level transitional implementation period which will help avoid economic shocks to both the UK and the EU\u201d. It has also set out \u2018five key asks\u2019 for UK insurers:\n \n Securing a regulatory environment that is appropriate for the UK market. Retaining the ability to passport out of and into the UK. Closely mirroring the EU data protection regime to avoid a quagmire of complexity around how personal and non-personal data is protected. An improved future migration policy that enables the employment of high-skilled professionals from both within and outside the EU. (ABI calls for \u2018clear commitment\u2019 to a transitional implementation period following Brexit, December 2016). \n \n "}
      , "date" : {"_value" : "2017-03-15T13:27:31.6486319+00:00", "_datatype" : "dateTime"}
      , "description" : ["Looks at the emerging discussion about the potential implications of Brexit for EU pensions"], "identifier" : {"_value" : "CBP-7629"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Brexit - implications for private pensions", "topic" : [{"_about" : "http://data.parliament.uk/terms/95708", "prefLabel" : {"_value" : "Pensions"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/711223", "abstract" : {"_value" : "Key labour market statistics for the UK\n \nThe unemployment rate was 4.7% in November 2016-January 2017. The ILO measure of unemployment was 1.58 million people, 31,000 fewer than the previous quarter and 106,000 fewer than the year before.\n \nThe number of people in employment was 31.85 million in November 2016-January 2017, 92,000 more than the previous quarter and 315,000 more than the year before. The employment rate was 74.6%, the joint highest since comparable records began in 1971. \n \nAverage weekly total pay in Great Britain increased by 2.2% in the three months to January 2017 compared with the previous year. Regular pay (excluding bonuses) grew by 2.3%. CPI inflation averaged 1.5% over this period.\n \nPublication of claimant count statistics\n \nThe Office for National Statistics (ONS) announced on 23 February 2017 that it is removing seasonally adjusted data on the claimant count from the PDF version of its monthly UK Labour Market statistical bulletin. ONS believes that due to the impact of Universal Credit, seasonally adjusted data on the claimant count \u201cmay now be providing a misleading representation of the UK labour market\u201d.\n \nIn addition to these seasonal considerations, a broader span of claimants are required to look for work under Universal Credit than under Jobseeker's Allowance. This acts to increase the number of unemployed claimants. The effect is visible in areas operating Universal Credit \"Full Service\u201d (where rollout of Universal Credit is more advanced), which have seen an increase in the claimant count compared to last year. Most jobcentre areas have not yet moved to \"Full Service\" but will do so over the course of 2017 and 2018. The Library's briefing paper on Universal Credit and the claimant count gives more information.\n \nONS continues to publish non-seasonally adjusted data for parliamentary constituencies, local authorities and other geographies on the Nomis website.\n \nThe Library continues to publish non-seasonally adjusted constituency data in this briefing paper and on our Constituency Profiles intranet site."}
      , "date" : {"_value" : "2017-03-15T13:22:04.905365+00:00", "_datatype" : "dateTime"}
      , "description" : ["This paper was formerly called \"Unemployment by Constituency\". It contains claimant count figures for parliamentary constituencies, as well as a summary of the latest labour market statistics for the UK as a whole."], "identifier" : {"_value" : "CBP-7925"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/17113", "prefLabel" : {"_value" : "Economic Policy and Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "People claiming unemployment benefits by constituency, February 2017", "topic" : [{"_about" : "http://data.parliament.uk/terms/95561", "prefLabel" : {"_value" : "Economic situation"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95574", "prefLabel" : {"_value" : "Employment"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95771", "prefLabel" : {"_value" : "Unemployment"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/710743", "abstract" : {"_value" : "This Debate Pack has been prepared ahead the debate on 'Energy Prices' to be held on Thursday 16 March 2017 in the House of Commons Chamber. The subject for the debate has been chosen by the Backbench Business Committee following a representation by Caroline Flint MP and John Penrose MP.\n \nThe Motion is as follows:\n \nThat this House deplores the big six energy firms\u2019 treatment of out-of-contract energy customers on default tariffs; believes immediate action is needed to protect those consumers, and that pushing customers to start switching will not fix the problem sufficiently quickly or completely on its own; and calls on the industry, regulators and the Government to consider solutions which recognise that many people lead busy lives and that switching their energy supplier may not always be a high priority.\n \nNB: On 16 March 2017, the Committee on Climate Change published its Energy Prices and Bills Report 2017 which is relevant to this debate. It has been added to the debate pack in the 'Further reading' section.\n \n "}
      , "date" : {"_value" : "2017-03-15T13:09:12.2359258+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Debate Pack has been prepared ahead of the debate on 'Energy prices', to be held on Thursday 16 March 2017. The subject for the debate has been chosen by the Backbench Business Committee, following a representation by Caroline Flint and John Penrose"], "identifier" : {"_value" : "CDP-2017-0090"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/67716", "prefLabel" : {"_value" : "Science and Environment Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Energy Prices", "topic" : [{"_about" : "http://data.parliament.uk/terms/95578", "prefLabel" : {"_value" : "Energy"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/711231", "abstract" : {"_value" : "The British domestic energy market has seen a number of reforms in the past two decades, from the opening-up of the markets in 1980\u2019s-1990\u2019s to the latest interventions following the Competition and Markets Authority\u2019s Energy Market Investigation.\n \nSuccessive probes and reviews of the British energy market have led select committees, Ofgem (the gas and electricity market regulator) and stakeholders to conclude that competition in this market was not \u201cworking effectively\u201d for consumers. No evidence of \u201cactive collusion\u201d was ever found but Ofgem ended their Retail Market Review in 2013 with a series of measures aimed at providing more clarity to consumers regarding tariffs.\n \nIn 2013, Ed Miliband announced that Labour would cap energy prices for 20 months if it won the general election. In 2014, with increased political and public interest in the energy market, Ofgem worked with the Office of Fair Trading and the CMA on a State of the Market Assessment.\n \nShortly after the report was published, Ofgem made an investigation reference to the CMA. It became the CMA energy market investigation. The CMA published its first set of provisional decisions on remedies on 7 July 2015 and planned to publish its final report in December 2015. Due to the volume of evidence and comments on its original findings and provisional remedies, the CMA extended the inquiry to the statutory deadline of 26 June 2016. It published its final report on 24 June 2016.\n \nThe CMA\u2019s key findings for Domestic Consumers were:\n \n Around 70% of the domestic customers of the six largest energy firms are still on an expensive \u2018default\u2019 standard variable tariff (SVT) These customers could potentially save over £300 by switching to a cheaper deal Customers could have been paying about £1.4 billion a year more than they would in a fully competitive market. The principal remedies proposed by the CMA to address these challenges are: \n \n Ordering suppliers to give Ofgem details of all customers who have been on their default tariff for more than 3 years, which will be put on a secure database under Ofgem control to allow rival suppliers to contact customers. Introducing a temporary safeguard price control to protect customers on prepayment meters, whose options are more limited, which would reduce their bills by a total of £300 million a year. Enabling price comparison websites (PCWs) to play a more active role in helping customers find the best offers for them and give access to meter data which will enable customers to search instantly for deals.Reactions to the CMA\u2019s findings were mixed but the Government is committed to take forward the recommendations. The Department for Business, Energy and Industrial Strategy (BEIS) announced on 14 December 2016 that Ofgem was also publishing \u201can energy supplier league table to increase transparency on the numbers of people on expensive standard variable tariffs.\u201d Unusually for an investigation by the CMA, there was one dissenting member of the investigating panel for one part of the proposed domestic market remedies. \n \nOfgem also recently launched a Supplier Cost Index. Drawing on publically-available information, it estimates ongoing trends in the main elements of cost that a supplier incurs in supplying a typical domestic customer with gas and electricity. The aim of this index is to increase transparency in the energy market and help consumers understand what is behind trends in prices.\n \nThe number of energy suppliers has grown in the last six years, from 14 to 48 as of March 2017, as the so-called \u2018big six\u2019 - Centrica plc (British Gas), EDF Energy, E.ON, SSE, Scottish Power and Npower \u2013 have seen their share of the market decline.\n \nHowever, it is still viewed that the market could be more competitive, and support consumers in accessing lower prices. For example, the CMA has found that between 2004 and 2014 average annual domestic gas prices rose by around 125% in real terms over the period, and domestic electricity prices by around 75%.\n \nMoreover, and despite Ofgem\u2019s warning about increasing prices, five of the \u2018big six\u2019 have announced since December 2016 that they were increasing their energy prices. This led the Members of Parliament John Penrose, Caroline Flint, Patricia Gibson, Caroline Lucas and Mr Roger Godsiff to apply to the Backbench Business Committee for a parliamentary debate on energy prices. The debate will take place on 16 March 2017.\n \n "}
      , "date" : {"_value" : "2017-03-15T12:51:08.4977335+00:00", "_datatype" : "dateTime"}
      , "description" : ["This briefing paper covers the current energy market reforms in Great Britain. Increasing energy costs and the position of the \u2018big six\u2019 suppliers has meant that competition in the energy market has been high on the political agenda in recent years. A major review of the marketplace concluded in 2016 with a report from the Competition and Markets Authority. Recommendations from this report are now being implemented whilst the Government has indicated further reforms are being considered.\n\nThe energy market in Northern Ireland is separate and is not included here. The focus of the paper is on major reforms and events; it does not provide full coverage of the Competition and Markets Authority (\u2018CMA\u2019)\u2019s Energy Market Investigation. Members and their staff can get in touch with the Library if they require further briefing on this."], "identifier" : {"_value" : "CBP-7759"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/67716", "prefLabel" : {"_value" : "Science and Environment Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "The Current Energy Market Reforms in Great Britain", "topic" : [{"_about" : "http://data.parliament.uk/terms/95531", "prefLabel" : {"_value" : "Competition"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95534", "prefLabel" : {"_value" : "Consumers"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95578", "prefLabel" : {"_value" : "Energy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95773", "prefLabel" : {"_value" : "Utilities"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/711230", "abstract" : {"_value" : "The relative size of the political parties in the House of Lords has been a subject of interest for many years. The implementation of the House of Lords Act 1999 removed the majority of hereditary peers from the House and represented a major change in its composition. The overall size of the House of Lords (as defined as those Members eligible to sit) has risen from 690, following reform in 1999\u20132000, to 807 at the end of the 2015\u201316 session. During this time no one party or group has held a majority. Nevertheless, the relative sizes of the parties and groups has changed over time with the appointments made to the House by successive Prime Ministers. \n \nMembership data in the House of Lords is available since the 1984\u201385 session. As a percentage of the whole House, the Conservative Party has been the largest party group since the 2013\u201314 session (currently 30.6 percent). In contrast, the Labour Party currently constitutes 26.1 percent of the House, 4 percentage points lower than their peak of 30.1 percent in the 2008\u201309 session. The Liberal Democrats are currently at their highest percentage of the whole House since 1984\u201385, at 13.5 percent, whilst the Crossbenchers are at their lowest, at 21.7 percent. In terms of division participation, the average number of Members voting per division was 365 in the 2015\u201316 session. The Government was defeated in 53.1 percent of divisions in 2015\u201316, the highest percentage since 2004\u201305, and the second highest since 1984\u201385. This Lords Library briefing will be updated following the end of each parliamentary session."}
      , "date" : {"_value" : "2017-03-15T12:47:39.4100942+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Lords Library briefing presents statistics on the relative size of the three largest political parties and the politically unaligned groups in the House of Lords. It also presents select statistics on voting behaviour in the House."], "identifier" : {"_value" : "LLN-2017-0016"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/346713", "prefLabel" : {"_value" : "Lords Library notes"}
      }
      , "title" : "House of Lords: Party and Group Strengths and Voting", "topic" : [{"_about" : "http://data.parliament.uk/terms/95628", "prefLabel" : {"_value" : "House of Lords"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/710785", "abstract" : {"_value" : "Under the 2012 scheme, administered by the Child Maintenance Service (CMS), earnings from such occupations are taken into account having been disregarded under the 2003 child maintenance scheme run by the Child Support Agency (CSA).\n \nThis means that those in such \"special occupations\", which also includes auxillary coastguards and part-time fire fighters and lifeboat crew members, will see any earnings from such roles being included in the calculation of their gross weekly income which is used to derive how much their child maintenance liability.\n \nThis briefing paper sets out the current approach, why the policy was changed, and notes that by including earnings from the \"special occupations\" the 2012 scheme is broadly similar to the original 1993 statutory child maintenance scheme.\n \nThis note applies to Great Britain."}
      , "date" : {"_value" : "2017-03-14T17:16:07.7121026+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library research briefing provides information about changes to the treatment of earnings (for child maintenance purposes) from certain \"special occupations\", including reserve or territorial force members and local authority councillors."], "identifier" : {"_value" : "CBP-7772"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Child maintenance: inclusion of earnings from \"special occupations\" in the 2012 CMS scheme", "topic" : [{"_about" : "http://data.parliament.uk/terms/95517", "prefLabel" : {"_value" : "Child support"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/710744", "abstract" : {"_value" : "Further information\n \nSyrian refugee crisis, First Report of Session 2015\u201316, International Development Committee, HC 463, 5 January 2015\n \nSyrian refugee crisis: Government Response to the Committee's First Report of Session 2015\u201316, Fifth Special Report of Session 2015\u201316, International Development Committee, HC 902, 9 March 2016\n \nDFID\u2019s programme in Nigeria, Second Report of Session 2016\u201317, International Development Committee, HC 110, 27 July 2016\n \nDFID\u2019s programme in Nigeria: Government Response to the Committee\u2019s Second Report of Session 2016\u201317, Fifth Special Report of Session 2016\u201317, International Development Committee, HC 735, 13 October 2016"}
      , "date" : {"_value" : "2017-03-14T14:25:52.0039842+00:00", "_datatype" : "dateTime"}
      , "description" : ["On Thursday 23 March 2017, MPs will debate the First Report from the International Development Committee of Session 2015-16, Syrian refugee crisis, HC 463, and the Government Response, HC 902, and the Second Report from the International Development Committee of Session 2016-17, DfID's programme in Nigeria, HC 110, and the Government Response, HC 735. The debate will start at 1.30pm in Westminster Hall and has been initiated by the Chairman of the International Development Committee, Stephen Twigg MP."], "identifier" : {"_value" : "CDP-2017-0091"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/37362", "prefLabel" : {"_value" : "International Affairs and Defence Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Reports from the International Development Committee and Government responses on the Syrian refugee crisis and DfID's programme in Nigeria", "topic" : [{"_about" : "http://data.parliament.uk/terms/95479", "prefLabel" : {"_value" : "Africa"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95646", "prefLabel" : {"_value" : "International development"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95677", "prefLabel" : {"_value" : "Middle East"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/692761", "abstract" : {"_value" : "Iran has long been a significant player in the Middle East and the multiple conflicts in the region have enabled the regime to exert its considerable influence over its neighbours\u2019 affairs. Iran supports Hezbollah in Lebanon and militias in Iraq and has sent forces to support Assad in Syria. Iran is also accused of supporting the Houthis in Yemen and of interfering in the domestic affairs of Gulf States.\n \nThe Foreign Secretary has warned of Iran\u2019s \u201cmalign influence\u201d across the region. Prime Minister Theresa May told the Gulf leaders she was \u201cclear-eyed about the threat that Iran poses to the Gulf and the wider Middle East.\u201d The UK and members of the Gulf Cooperation Council agreed at a summit in December 2016 to work together to \u201ccounter Iran\u2019s destabilising activities in the region.\u201d\n \nIn 2015 Iran accepted limits on its nuclear programme in return for a lifting of many financial and economic sanctions. President Trump described it as \u201cthe worst deal ever negotiated\u201d during his election campaign. Israel\u2019s Prime Minister has called for new sanctions to be applied which the UK has so far resisted supporting. Downing Street described the nuclear deal as \u201cvital.\u201d While some sanctions have been lifted an arms embargo remains in place.\n \nIn January Iran conducted a ballistic missile test, prompting the new Trump administration to impose sanctions. The UK Government said the test did not violate the nuclear deal but was inconsistent with UN Security Council Resolution 2231 (which calls on Iran not to undertake any activity related to ballistic missiles designed to be capable of delivering nuclear weapons, including launches).\n \nThe UK embassy in Iran reopened in 2015 and since the lifting of sanctions, the Department for International Trade is helping UK companies enter the Iranian market. Foreign Office Minister Tobias Ellwood visited Iran on 18 January 2017."}
      , "date" : {"_value" : "2017-03-14T13:04:09.8096693+00:00", "_datatype" : "dateTime"}
      , "description" : ["MPs will debate Iran's influence in the Middle East in Westminster Hall on Wednesday 22 March 2017 from 9.30am to 11.00am. The debate has been initiated by Dr Matthew Offord MP."], "identifier" : {"_value" : "CDP-2017-0062"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/37362", "prefLabel" : {"_value" : "International Affairs and Defence Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Iran's influence in the Middle East", "topic" : [{"_about" : "http://data.parliament.uk/terms/95653", "prefLabel" : {"_value" : "Iran"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95677", "prefLabel" : {"_value" : "Middle East"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/710738", "abstract" : {"_value" : "The Farrier\u2019s (Registration) Bill 2016-2017 is a Private Members' (Ballot) Bill introduced by Byron Davies MP. It is a Bill \u201cto make provision about the constitution of the Farriers Registration Council and its committees.\u201d The Bill is due to have its report stage and third reading in the Commons on Friday 24 March 2017.\n \nThe Bill completed its committee stage on Tuesday 7 March 2017. It had its second reading on Friday 27 January 2017. It was presented to Parliament for first reading on 29 June 2016 through the Ballot procedure.\n \nThe Bill extends to England and Wales and Scotland.\n \nBackground: Regulation of the farriery profession\n \nThe Farriers (Registration) Act 1975\n \nThe explanatory notes to the Bill set out the current regulatory framework for the farriery profession as follows:\n \n \u201cThe Farriers Registration Council (FRC) is the regulatory body for the farriery profession in Great Britain. It has statutory responsibilities as set out in the Farriers (Registration) Act 1975 (FRA) to maintain a register of farriers, determining who is eligible for registration and to regulate farriery training. The FRC investigates and, where necessary, determines disciplinary cases through the statutory Investigating Committee and Disciplinary Committee. In common with other statutory regulatory bodies its primary function is to protect and maintain the public interest; in doing so this also serves to act in the interests of animal welfare.\u201d \n \nDEFRA consultation to reform of the Farriers Registration Council (FRC)\n \nIn November 2013, DEFRA consulted stakeholders seeking views on proposals for reforming the governance, structure and operation of the Farriers Registration Council (FRC). The consultation document explained that \u201csuch reforms would include certain amendments to the Farriers (Registration) Act 1975 (FRA)\u201d.\n \nIn its summary of consultation responses, DEFRA stated that it intended to go forward with proposed amendments to reform the Farriers (Registration) Act 1975 with respect to the constitution of the Council and the constitution of the Investigating and Disciplinary Committees. It went on to say that it intended to prepare a draft Bill to make the amendments. However, the Coalition Government did not find space in their legislative programme for the draft Bill in the 2010-15 parliament.\n \nPrivate Members\u2019 Bill ballot, May 2016\n \nFollowing the ballot for Private Members\u2019 Bills held on 26 May 2016, Byron Davies MP \u2018picked up\u2019 the draft bill and presented it for first reading on 29 June 2016.\n \nOn 2 December 2016, the FRC website announced that its chairman had accepted an invitation to speak with Defra Minister, George Eustice on 16 December 2016. At this meeting, the FRC Chairman Tony Charlwood and DEFRA Minister George Eustice discussed the Bill ahead of its second reading.  According to the FRC press release, the Minister and Chairman discussed the development of the draft Bill, and noted preferences and ideas offered during the consultation.\n \nWhat does the Bill do?\n \nClause 1 of the Bill introduces the schedule, which amends the Farriers (Registration) Act 1975 and makes changes to the constitution of the Farriers Registration Council and its committees: the investigating committee and the disciplinary committee. Clause 2 of the Bill gives the Secretary of State powers to change the constitution of the Council and its committees by regulations. Clause 3 defines the territorial extent and commencement of the Bill\u2014England and Wales and Scotland.\n \nThe Schedule has three parts, which replace the respective sections in the original Act dealing with the constitution of the council, the constitution of the investigating committee, and the constitution of the disciplinary committee.\n \nPart 1 of the schedule deals with the constitution of the council. The Bill retains the existing number of members (16), but makes some changes to their make-up as follows:\n \n Four practising farriers will be elected; Two farriers will be appointed by the British Farriers and Blacksmiths Association; Three members will be appointed by the Worshipful Company of Farriers (but there will be a new requirement that at least one must be a practising farrier); There will be two veterinary surgeons appointed by the Royal College of Veterinary Surgeons; and Five lay representatives will be appointed by various interested bodies, (e.g. the RSPCA and the British Horseracing Authority). \n \nThe Bill also introduces a fixed four-year term of office for all members, stipulates that a member may serve on the council only twice and introduces fitness-to-serve conditions.\n \nParts 2 and 3 of the schedule make changes to the constitution of the investigating and disciplinary committees.\n \nDebate and amendments to the Bill\n \nThere have been no tabled amendments to the Bill at any stage, and there is widespread support for this Bill across the House. Shadow DEFRA Minister Mary Glindon expressed her support for the Bill at committee stage, stating:\n \n \u201cWe support the Bill, as it introduces a greater level of fairness and transparency to the FRC and its committees that will underpin its progress as a modern and professional regulator for its members, and for those who rely on the industry well into the future.\u201d \n \nThe Government has stated that the Bill \u201cenjoys full Government support\u201d. In addition, DEFRA was responsible for drafting the explanatory notes to the Bill (with the consent of Byron Davies, the Member\u2010in\u2010Charge of the Bill).\n \nRelated documents\n \nExplanatory Notes to the Bill (23 January 2017). Prepared by DEFRA with the consent of the Sponsoring Member Byron Davies MP.\n \nThe Bill, as introduced (20 January 2017)\n \nPublic Bill Committee Proceedings (7 March 2017)"}
      , "date" : {"_value" : "2017-03-14T12:27:09.7594221+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library briefing provides background to the Farrier\u2019s (Registration) Bill 2016-2017. This is a Private Members Bill introduced by Byron Davies MP which has support from the Government. This page details the background and aims of the Bill."], "identifier" : {"_value" : "CBP-7924"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/67716", "prefLabel" : {"_value" : "Science and Environment Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Farrier\u2019s (Registration) Bill 2016-2017", "topic" : [{"_about" : "http://data.parliament.uk/terms/95489", "prefLabel" : {"_value" : "Animal welfare"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95490", "prefLabel" : {"_value" : "Animals"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/709195", "abstract" : {"_value" : "Westminster Hall debate initiated by Deidre Brock MP (Edinburgh North and Leith) (SNP). The hour long debate takes place on Wednesday 15 March 2017 at 4.30pm.\n \nThe debate comes as the UK Parliament approaches the end of its consideration of the European Union (Notification of Withdrawal) Bill, and the UK Government prepares to make a notification under Article 50 TEU of its intention to withdraw from the EU. It comes two days after the First Minister of Scotland, Nicola Sturgeon, announced that she intended to seek approval from the Scottish Parliament to begin talks with the UK Government to gain authority to hold a second independence referendum for Scotland.\n \n  \n \nFurther information\n \nCopyright details\n \niStock\n \nPublication details\n \n "}
      , "date" : {"_value" : "2017-03-13T17:46:18.2072549+00:00", "_datatype" : "dateTime"}
      , "description" : ["Debate on the motion: \"That this House has considered the implications for the Scottish devolution settlement of triggering Article 50\"."], "identifier" : {"_value" : "CDP-2017-0083"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/61055", "prefLabel" : {"_value" : "Parliament and Constitution Centre"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "The implications for the Scottish devolution settlement of triggering Article 50", "topic" : [{"_about" : "http://data.parliament.uk/terms/95743", "prefLabel" : {"_value" : "Scottish Parliament"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/710268", "abstract" : {"_value" : "On 12 June 2014, the House of Lords Extradition Law Committee was appointed to consider and report on the law and practice relating to extradition, in particular the Extradition Act 2003. The Committee published two reports. On 10 November 2014, the Committee published a short report, The European Arrest Warrant Opt-In, and, on 10 March 2015, published its main report Extradition: Law and Practice. The Government published its response to the reports on 20 July 2015, which were then debated in the House of Lords on 16 September 2015.\n \nWith regard to the first report on the European Arrest Warrant (EAW), the Committee stated that its intention was to inform debate in both Houses ahead of the vote in the House of Commons on 19 November 2014 on whether the UK should re-join the EAW. The report made a number of conclusions with regards to the EAW. The Committee noted that despite flaws in the EAW, such as miscarriages of justice, the majority of its members thought that the UK should opt back into the EAW. The Committee also recommended that further work by the Government should be undertaken in order to improve the extradition system.\n \nIn its main report, the Committee concluded that though there were aspects of the law and practice which were \u201cof concern\u201d, there was \u201cno systemic problem with the UK\u2019s extradition regime\u201d. The report made a number of conclusions and recommendations on various aspects of the extradition system. For example, the Committee argued that the system of seeking assurances from countries in order to protect the human rights of an individual sought for extradition did not provide \u201csufficient confidence that the UK is meeting its human rights obligations\u201d. The Committee also considered the issue legal aid in extradition cases. It argued that legal aid should not be means-tested and should be awarded automatically. In addition, the Committee heard evidence on conditions within some areas of the US justice system. It recommended that the Government make representations to the US on the treatment of individuals extradited from the UK, and formalise these discussions in a memorandum of understanding. "}
      , "date" : {"_value" : "2017-03-13T17:40:50.7436255+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Lords Library briefing provides information about the work of the House of Lords Extradition Law Committee; its two reports ('The European Arrest Warrant Opt-In' and 'Extradition: Law and Practice'); its conclusions and recommendations; the government\u2019s responses; and a summary of the debates held on the two reports in the House of Lords."], "identifier" : {"_value" : "LLN-2017-0015"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/346713", "prefLabel" : {"_value" : "Lords Library notes"}
      }
      , "title" : "Work of the Ad Hoc Committees in 2014\u201315: House of Lords Extradition Law Committee", "topic" : [{"_about" : "http://data.parliament.uk/terms/95476", "prefLabel" : {"_value" : "Administration of justice"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95635", "prefLabel" : {"_value" : "Human rights"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95648", "prefLabel" : {"_value" : "International law"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/710267", "abstract" : {"_value" : "On 12 June 2014, House of Lords Digital Skills Committee was appointed with the remit of considering \u201cinformation and communications technology, competitiveness and skills in the United Kingdom\u201d. Following its inquiry, the Committee published a report, Make or Break: The UK\u2019s Digital Future, on 17 February 2015.\n \nMake or Break Point\n \nReviewing the evidence on the UK\u2019s digital economy, the Committee concluded that there was a risk that the UK might be left behind in the global skills market if it did not provide the right conditions to enable digital businesses to flourish in the UK. It argued that the UK was at a \u201cmake or break\u201d point in time, when it needed to ensure that it could continue to compete with other countries around the world. Key to this was the UK having the right skills and infrastructure to keep pace with the requirements of changing digital technology.\n \nPrincipal Recommendation: New Digital Agenda\n \nThe Committee\u2019s principal recommendation was that the Government should produce a new digital agenda. The Committee described the purpose of such an agenda as to enable the Government to better coordinate both its own initiatives and initiatives outside of government. The Committee recommended that there should be a cabinet minister with responsibility for implementing this agenda, located in the Cabinet Office, who would report annually to Parliament on progress made. The Committee also recommended that Parliament should establish the best means of maintaining oversight of the progress of the digital agenda.\n \nThe Committee\u2019s report included its own illustrative digital agenda, submitted for the Government\u2019s consideration. This included the following objectives:\n \n That people in the UK should be able access to digital technologies. That the population as a whole should have the appropriate levels of digital skills. That digital teaching in schools, universities and further education should meet the requirements of the modern industry. \n \nGovernment\u2019s Digital Strategy\n \nThe Government published its own Digital Strategy on 1 March 2017. This included a commitment to complete the roll-out of 4G mobile coverage and superfast broadband by 2020 and implement a Universal Service Obligation. The Government also said that it would ensure that adults in England who lacked digital skills would be able to access basic digital skills training for free."}
      , "date" : {"_value" : "2017-03-13T17:40:00.3363821+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Lords Library briefing provides information about the work of the House of Lords Digital Skills Committee; its conclusions and recommendations; the government\u2019s response; and a summary of the debate held in the House of Lords."], "identifier" : {"_value" : "LLN-2017-0014"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/346713", "prefLabel" : {"_value" : "Lords Library notes"}
      }
      , "title" : "Work of the Ad Hoc Committees in 2014\u201315: House of Lords Digital Skills Committee", "topic" : [{"_about" : "http://data.parliament.uk/terms/95560", "prefLabel" : {"_value" : "Economic policy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95614", "prefLabel" : {"_value" : "Further education"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95640", "prefLabel" : {"_value" : "Industry"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95641", "prefLabel" : {"_value" : "Information technology"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95652", "prefLabel" : {"_value" : "Internet and cybercrime"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95740", "prefLabel" : {"_value" : "Schools"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95769", "prefLabel" : {"_value" : "Training"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/710266", "abstract" : {"_value" : "On 12 June 2014, the House of Lords Affordable Childcare Committee was appointed to consider issues relating to affordable childcare, and to make recommendations. The Committee looked in depth at a range of issues, including government funding for childcare. At the time of the Committee\u2019s report, the Coalition Government was investing £5.2 billion annually in early education and childcare. That figure was set to rise to £6.4 billion in the 2015\u201320 Parliament and, to date, the current Conservative Government has maintained this commitment. The stated aims of this investment in childcare were, and broadly remain: to promote child development for all children; to narrow the gap in attainment between the most disadvantaged children and their \u201cbetter off\u201d peers; and to enable parents to work.The Committee\u2019s report investigated whether value for money was being delivered by childcare policy when assessed against these aims and focused on 0 to five year-olds. It also considered the impact of childcare costs on parental employment rates and work choices.\n \nThe Committee published its report on 24 February 2015, prior to the 2015 general election. In a summary of its findings, the Committee urged \u201cthree main actions the new Government must take in order to get the best value for its investment\u201d. These were to:\n \n Reprioritise spending in early education and childcare to focus on disadvantaged children\u2014better value for money will be achieved by targeting those most likely to benefit; Ensure that disadvantaged two year-olds access their free early education in settings rated good or outstanding by Ofsted no later than 2020; and Address the under-funding of free early education places in the Public, Voluntary and Independent (PVI) sector. \n \nChildcare policy is a devolved matter in Scotland, Wales and Northern Ireland, and the report findings therefore concerned England only. Due to the breadth and complexity of childcare issues touched upon in the Committee report, this Lords Library briefing addresses only a selection of them. It looks in particular at: the Government\u2019s childcare policy strands; the early years pupil premium (implemented in April 2015 for disadvantaged three and four years-olds); the free early education entitlement (for all three and four year-olds and for some disadvantaged two years-olds) and the additional 15 hour free entitlement of childcare, announced in 2016. The briefing focuses mainly on issues raised surrounding the funding and quality of provision. It does not provide detailed information on the provisions of Universal Credit (which the childcare element of working tax credits is transitioning to), or on the new tax free childcare scheme to be rolled-out in 2017, or on provisions specifically targeted towards those with disabilities."}
      , "date" : {"_value" : "2017-03-13T17:39:17.2719062+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Lords Library briefing provides information about the work of the House of Lords Affordable Childcare Committee; its conclusions and recommendations; the government\u2019s response; and gives an update on developments since the government response to the Committee\u2019s report."], "identifier" : {"_value" : "LLN-2017-0013"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/346713", "prefLabel" : {"_value" : "Lords Library notes"}
      }
      , "title" : "Work of the Ad Hoc Committees in 2014\u201315: House of Lords Affordable Childcare Committee", "topic" : [{"_about" : "http://data.parliament.uk/terms/95516", "prefLabel" : {"_value" : "Child care"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95718", "prefLabel" : {"_value" : "Pre-school education"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/709578", "abstract" : {"_value" : "In February 2015 then Home Secretary Theresa May commissioned an independent review into the Home Office policies and operating procedures that have an impact on immigration detainee welfare. Stephen Shaw, former Prisons and Probation Ombudsman for England and Wales, lead the review. His report, published in January 2016, made 64 specific recommendations.\n \nPart 4 of Mr Shaw\u2019s report addressed the concept of vulnerability. He recommended that the presumption against detention be extended to include victims of rape and other sexual or gender-based violence (including FGM), to those with a diagnosis of PTSD, to transsexual people and to those with learning difficulties. He called for the presumptive exclusion of pregnant women be replaced by an absolute exclusion, and that the clause \u201cwhich cannot be satisfactorily managed in detention\u201d should be removed from the section of the guidance covering those suffering from serious mental illness.\n \nMr Shaw also found that rule 35 of the Detention Centre Rules - designed as a key safeguard for victims of torture or whose health would be at risk from continued detention - failed to protect vulnerable people in detention. He identified the \u2018fundamental problem\u2019 as being a lack of trust in GPs to provide independent advice and called on the Home Office to consider whether GPs independent of the IRC system would be more appropriate to conduct assessments.\n \nAt the invitation of the Government Mr Shaw will conduct a shorter follow-up review in autumn 2017, assessing the progress made in implementing the recommendations in his first report.\n \n \n \n "}
      , "date" : {"_value" : "2017-03-13T14:33:10.5915356+00:00", "_datatype" : "dateTime"}
      , "description" : ["A Westminster Hall debate on the detention of vulnerable persons has been scheduled for 2.30pm on Tuesday 14 March 2017. The Member in charge of this debate is Anne McLaughlin MP."], "identifier" : {"_value" : "CDP-2017-0086"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Detention of vulnerable persons", "topic" : [{"_about" : "http://data.parliament.uk/terms/95498", "prefLabel" : {"_value" : "Asylum"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95636", "prefLabel" : {"_value" : "Immigration"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/709576", "abstract" : {"_value" : "In recent years, a key concern among general practitioners in England has been the rising cost of indemnity against clinical negligence. Many GPs feel that the above-inflation rises in the amount they are required to pay for indemnity are unsustainable.  In particular, concerns have been raised about this discouraging GPs from taking on certain forms of work, such as out of hours care.\n \nIn May 2016, NHS England and the Department of Health established a GP Indemnity Review group with the objective of addressing the rising cost of indemnity for GPs. This Review investigated the causes for the rise in indemnity costs and proposed certain long and short term solutions, and a report was published in July 2016.  Two immediate short term solutions of note from the Review are\n \n A new GP Indemnity support scheme established in 2016/17 which will run for two years. A winter indemnity scheme, first established in December 2015 which reimbursed the indemnity costs of GPs who were willing to work more out of hours sessions to deal with winter pressures. \n \nNHS England and the Department of Health are embarking on further consultations with GPs, Clinical Commissioning Groups (CCGs) and Mutual Defence Organisations (MDOs) to explore long term options, especially with regard to the ability of GPs to deliver out of hours care.\n \nThe attached debate pack briefing applies to England only, but some information about arrangements in the rest of the UK can be found in section 1.7.\n \n \n \nUpdate: on 14 March NHS England announced that it would extend by one month the 2016 Winter Indemnity Scheme.  It is now due to end on 17 April 2017: https://www.england.nhs.uk/2017/03/gp-support-ideminity-costs/."}
      , "date" : {"_value" : "2017-03-13T13:18:01.5403971+00:00", "_datatype" : "dateTime"}
      , "description" : ["The debate, entitled \u201cCost of GP Indemnity in England\u201d and sponsored by Alex Chalk, will take place in Westminster Hall on Wednesday 15 March at 2.30pm, lasting for 90 minutes."], "identifier" : {"_value" : "CDP-2017-0085"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Cost of GP indemnity in England", "topic" : [{"_about" : "http://data.parliament.uk/terms/95621", "prefLabel" : {"_value" : "Health services"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95623", "prefLabel" : {"_value" : "Health staff and professions"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95706", "prefLabel" : {"_value" : "Patient rights and complaints"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/710251", "abstract" : {"_value" : "In relation to peace and security, many commentators have speculated as to the impact that leaving the EU could have on the future of peace and security in Northern Ireland. For some, the implications include a danger of the peace process unravelling, the cessation of cross-border peace programmes and a return to the \u2018hard\u2019 border that featured so prominently during the Troubles. This includes former Deputy First Minister of Northern Ireland, Martin McGuinness, who has warned that leaving the European Union could \u201cundermine all-Ireland bodies and co-operation created by the peace process and it will harden partition. It will have consequences for human rights legislation which, again, is specifically referred to in the Belfast and subsequent agreements\u201d. In addition, during the passage of the European Union (Notification of Withdrawal) Bill in both Houses, concerns were raised regarding the impact that leaving the EU would have on the peace process. This included a number of amendments that sought to take account of the Good Friday Agreement when triggering Article 50 and ensuring that borders between the UK and Ireland remained open once the UK formally withdraws from the EU. In contrast, others have suggested that there will be little or no impact on the peace process, such as the UK Prime Minister, Theresa May, and former First Minister of Northern Ireland, Arlene Foster, who have both stated on multiple occasions that they did not want to see a \u201creturn to the border of the past\u201d, reminiscent of the border arrangements during the Troubles.\n \nIn terms of trade, should the UK withdraw from the EU, it could possibly impact on bilateral trade relations between the UK and Ireland. As of 2015, the value of trade in exports to Ireland from the UK was £15.1 billion, whilst the value of trade in imports from Ireland to the UK was £11.2 billion. The Economic and Social Research Institute think tank \u201csuggest that a Brexit is likely to significantly reduce bilateral trade flows between Ireland and the UK\u201d and that \u201cthe impact could be 20 percent or more\u201d. Others, such as Arlene Foster, have argued against the UK staying in the EU for the sake of existing trade agreements. Writing an article for the Guardian, Foster contended that \u201cthere is no evidence to support the case that either Scotland or Northern Ireland should stay in the EU \u2018for the sake of\u2019 trade with the rest of the EU\u201d."}
      , "date" : {"_value" : "2017-03-13T10:56:56.8258172+00:00", "_datatype" : "dateTime"}
      , "description" : ["For the UK, the decision to leave the EU could have a significant impact, particularly on its relationship with Ireland. This includes on peace and security, which encompasses the peace process following the 30-year conflict in Northern Ireland, known as \u2018the Troubles\u2019, border controls and the Common Travel Area; and trade, particularly the bilateral trade relationship between UK and Ireland. This briefing examines the implications of the UK\u2019s decision to leave the EU on its relationship with Ireland, particularly, in regards to peace, security and trade. In addition to covering the aforementioned issues in closer detail, this briefing also examines the current situation in both the UK and Ireland, and discusses the potential implications of the UK leaving the EU, drawing upon commentary from UK and Irish heads of governments, political parties, think tanks and organisations."], "identifier" : {"_value" : "LLN-2017-0012"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/346713", "prefLabel" : {"_value" : "Lords Library notes"}
      }
      , "title" : "Leaving the European Union: The UK and Ireland", "topic" : [{"_about" : "http://data.parliament.uk/terms/95593", "prefLabel" : {"_value" : "Europe"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95651", "prefLabel" : {"_value" : "International trade"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/661326", "abstract" : {"_value" : "It is not a comprehensive list but will be expanded and updated periodically.\n \nExample term: Article 50 TEU\n \nArticle 50 of the Treaty on European Union was inserted into the European Union (EU) Treaty by the Lisbon Treaty in 2009. It allows a Member State to leave the EU and sets out a procedure for doing so.\n \nExample term: Brexit\n \nBrexit is the abbreviation for \u2018British exit\u2019 from the EU. It was used before the referendum on 23 June 2016 in which a majority of the UK electorate voted to leave the EU, and has been used ever since in the media and by commentators and experts on the subject of the UK\u2019s withdrawal from the EU.\n \nBrexit has not happened yet, although many reports suggest that it has. The UK voted for Brexit in the referendum but the UK will remain in the EU for up to two years after notifying the EU of its intention to leave the EU, or until a withdrawal agreement comes into force. The exit negotiations have not yet started. They can be extended beyond two years if all EU Member States agree.\n \nHard Brexit\n \nA situation in which the UK leaves the EU swiftly and probably with a free trade agreement (FTA) with the EU. A very hard Brexit would involve resorting to WTO rules.\n \nSoft Brexit\n \nA situation in which the UK leaves the EU but negotiates continued membership of the European Economic Area (EEA) and largely staying in the single market while giving up influence over single market rules.\n \nSmooth Brexit\n \nAn orderly, negotiated, prepared Brexit.\n \nRed, white and blue Brexit\n \nThe Prime Minister used this to describe the kind of Brexit she hopes to achieve, continuing: \"the right Brexit for the UK, the right deal for the UK\". But its precise meaning has been debated.\n \nThe Guardian, 6 December 2016, said that this kind of Brexit was \"midway between a 'black Brexit', a cliff-edge scenario for businesses and financial services in which the government left the article 50 talks without a future deal with the EU, and a 'white Brexit', which would see the UK attempt to remain in the single market\".\n \nExample term: The \u2018Great Repeal Bill\u2019\n \nThe \u2018Great Repeal Bill\u2019 is the Bill the Prime Minister announced on 2 October 2016 that it planned to introduce in the next Queen's Speech, which will repeal the ECA and convert EU law into domestic law \u201cwherever practical\u201d.\n \nThe Government has indicated that these legal changes within the Bill would take effect on \u2018Brexit Day\u2019, i.e. the day the UK officially leaves the EU.\n \n see Commons Briefing Paper 7793, Legislating for Brexit: the Great Repeal Bill, 21 November 2016 \n \n \n \nFurther information\n \nPublication details"}
      , "date" : {"_value" : "2017-03-13T09:53:05.5100962+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library research briefing contains a list of commonly-used terms and acronyms that have needed clarification since the United Kingdom voted in the June 2016 EU referendum."], "identifier" : {"_value" : "CBP-7840"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/37362", "prefLabel" : {"_value" : "International Affairs and Defence Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Brexit Glossary", "topic" : [{"_about" : "http://data.parliament.uk/terms/95526", "prefLabel" : {"_value" : "Common Agricultural Policy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95559", "prefLabel" : {"_value" : "Economic and monetary union"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95578", "prefLabel" : {"_value" : "Energy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95584", "prefLabel" : {"_value" : "EU budget"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95586", "prefLabel" : {"_value" : "EU defence policy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95587", "prefLabel" : {"_value" : "EU enlargement"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95588", "prefLabel" : {"_value" : "EU external relations"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95589", "prefLabel" : {"_value" : "EU grants and loans"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95590", "prefLabel" : {"_value" : "EU institutions"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95591", "prefLabel" : {"_value" : "EU law and treaties"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95592", "prefLabel" : {"_value" : "EU political integration"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95648", "prefLabel" : {"_value" : "International law"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95649", "prefLabel" : {"_value" : "International organisations"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/709938", "abstract" : {"_value" : "The Bill so far\n \nThe European Union (Notification of Withdrawal) Bill is returning to the Commons on Monday 13 March 2017 for consideration of two amendments inserted by the Lords. One is on the status of EU/EEA citizens in the UK, and the other is on a \u2018meaningful\u2019 parliamentary vote at the end of the negotiation period.\n \nSimilar amendments had previously been voted down in the Commons, who now have the option of agreeing or disagreeing with each Lords amendment, or amending or proposing alternatives to it.\n \nEU/EEA citizens in the UK\n \nLords amendment 9B\n \nOn 1 March 2017 the House of Lords amended the Bill to include a provision to guarantee the residence rights of EU and EEA citizens (hereafter \u2018EU/EEA citizens\u2019) presently in the UK. It would require the Government to introduce proposals for achieving this within three months of the triggering of Article 50.\n \nPeers in favour of the amendment spoke of the UK\u2019s moral obligation to reassure and protect the millions of EU/EEA citizens and their family members who came to Britain believing they could build careers and lives here. Some raised the complexity of the current arrangements by which EU/EEA citizens can acquire proof of their right to permanent residence; others highlighted the dependence of industry and the NHS on European workers. Many of those who opposed the amendment denounced talk of \u2018bargaining chips\u2019, and argued that the best way to protect both EU/EEA citizens in the UK and British nationals elsewhere in Europe was not to delay passage of the Bill and to allow negotiations to commence with this issue first on the agenda.\n \nFree movement\n \nFree movement is central to the concept of EU citizenship. It is a right enjoyed by all citizens of the Union (those with nationality of any of the 28 Member States).\n \nAll EU/EEA citizens have a right to reside in another EU Member State for up to three months without any conditions other than the requirement to hold a valid identity card or passport. After three months certain conditions apply, depending on the status of the EU/EEA citizen (eg whether they are a worker or a student etc). Those who opt to exercise their free movement rights are protected against discrimination in employment on the grounds of nationality. Provisions co\u2011ordinating social security rules ensure citizens do not lose entitlements by working elsewhere.\n \nEU/EEA citizens who have resided legally for a continuous period of five years in another EU Member State automatically acquire the right to permanent residence there. To qualify for permanent residence, students and the self-sufficient must possess comprehensive sickness insurance cover throughout the five year period. Confusingly, while EU/EEA citizens in the UK have access to NHS care, this does not satisfy the requirement to have comprehensive sickness insurance cover.\n \nUK immigration law as it applies to non-EU/EEA citizens is significantly more restrictive.\n \nWhat was said during the referendum campaign?\n \nThe Government White Paper noted that if the UK left the EU, remaining Member States would no longer be required to maintain the rights currently enjoyed by UK citizens. Securing these rights would likely require the offer of reciprocal protection for EU/EEA citizens resident in the UK.\n \nBoth the Vote Leave and Leave.EU campaigns claimed the status of EU/EEA citizens lawfully resident in the UK would be unaffected as a result of Brexit.\n \nThe Government position since the referendum\n \nThe Government immediately sought to reassure EU/EEA citizens in the UK that there was no change in their status as a result of the vote to leave.\n \nIn the months since the referendum ministers have reiterated that the Government wants to protect EU/EEA citizens\u2019 status. They say the only scenario in which such an outcome would be impossible is if the rights of British citizens in remaining Member States are not protected in return. In her Lancaster House speech of 17 January 2017 Theresa May suggested the blame for the failure to achieve a reciprocal agreement lay with a handful of other European leaders. Despite this, the Government has faced accusations of treating EU/EEA citizens as \u2018bargaining chips\u2019 in the expected negotiations with the European Commission.\n \nParliamentary reaction\n \nThe Joint Committee on Human Rights urged the Government to seek a quick resolution by way of a separate, preliminary agreement to avoid subjecting individuals to \u2018continuing and distressing insecurity\u2019. The House of Lords European Union Committee called on the Government to give a unilateral guarantee that it will safeguard the EU citizenship rights of all EU nationals in the UK post\u2011Brexit. The Brexit Committee is critical of the current, \u2018untenable\u2019 system by which EU migrants apply for proof of their right to permanent residence in the UK. It has called on the Government and the European Commission to make resolution of the issue the first order of business in the negotiations.\n \nCommons Committee Stage\n \nA similar amendment was moved by Harriet Harman during the Committee Stage in the Commons. The proposed amendment was rejected by a majority of 42, with 290 members voting in favour and 332 voting against.\n \nA \u2018meaningful vote\u2019?\n \nWhat is the \u2018meaningful vote\u2019 debate about?\n \nNow that Parliament has agreed in principle to the Government triggering Brexit, and the Government has agreed that there should be a vote on a proposed withdrawal agreement before it is signed, the debate boils down to three main questions:\n \n Should the Government\u2019s commitment to a vote be enshrined in legislation? What are the implications of Parliament voting against a withdrawal agreement? Should Parliament also have a vote if the Government decided to leave the EU without a withdrawal agreement? \n \nThese raise a wide range of issues, including parliamentary sovereignty, the negotiation of treaties and compliance with the referendum result.\n \nRevocability is key\n \nUnderlying the whole debate is the unanswered question of whether a withdrawal notification can be suspended or revoked. Although there is a widespread assumption that it cannot, no court has ruled on this and there is considerable opinion that notification could in fact be revoked.\n \nThe effects of a vote against a withdrawal agreement (or against leaving without an agreement) would be completely different depending on the answer.\n \nGovernment commitment and new clause compared\n \nThe main difference is that the new clause requires parliamentary approval of a Government decision to leave the EU without a withdrawal agreement, which the Government commitment does not.\n \nArguably the Government\u2019s undertaking does not say that the Prime Minister would necessarily be bound by the vote.\n \nShould the vote be specified in legislation?\n \nWhether or not to enshrine the commitment to a vote in legislation depends on issues including whether one trusts the Government, whether one wants to guard against a change of circumstances, and whether one considers that a legislative requirement will bind the Government\u2019s hand more than a political commitment.\n \nEither would go further than is normal for treaties.\n \nWhat if Parliament rejects the withdrawal agreement?\n \nWhat would happen if either or both Houses voted against a proposed withdrawal agreement? Should the Government seek to renegotiate? Could a \u2018no\u2019 vote delay or even prevent Brexit? Or would it mean the UK leaving the EU with no agreement?\n \nThese questions apply both to a vote under the Government\u2019s commitment and one under the Lords\u2019 new clause (neither of which specifies the full implications of a no vote), and the answers are not clear. The only certainty is that the EU would not be able to prevent the UK from leaving the EU without an agreement.\n \nAnother question is what would happen if the Commons accepted the withdrawal agreement but the Lords rejected it.\n \nWhat if the European Parliament rejects the withdrawal agreement?\n \nThe European Parliament (EP) will not be involved in the withdrawal negotiations themselves, but under Article 50 of the Treaty on European Union (TEU) its consent is needed before the Council can conclude a withdrawal agreement.  The EP would like greater involvement and says it might reject the final withdrawal agreement if EU leaders do not agree to this.\n \nIf the EP rejects the agreement, and if there is no possibility of continuing negotiations, the UK might have to leave without a withdrawal agreement.\n \nShould Parliament have to approve leaving the EU without an agreement?\n \nThe Government suggests this would not be a \u2018meaningful vote\u2019. But the Lords\u2019 new clause specifies that Parliament must approve a decision by the Prime Minister to leave the EU without an agreement, because of the implication on rights.\n \nThe effects of Parliament voting against such a decision are not clear.\n \nIs an Act of Parliament required at the end of the negotiations?\n \nA legal opinion published shortly before the Bill went to the Lords argues that there is a UK constitutional requirement for an Act of Parliament to give effect to a withdrawal agreement, or to authorise withdrawal from the EU without an agreement \u2013 the current Bill is not enough.\n \nThe Government and others disagree.\n \n\u2018Meaningful votes\u2019 on EU matters\n \nThe UK Parliament has not had a statutory power to approve any of the major EU Treaties or Treaty amendments on their conclusion by EU governments, although UK ratification has involved an Act of Parliament in each case to give them legal effect.\n \nThe closest the UK Parliament has come to a \u2018meaningful\u2019 vote in the sense of the Lords amendment was in 1971, when the then Prime Minister, Edward Heath, said Parliament would decide whether to proceed with the UK application to join the then European Economic Community (EEC) on the basis of the terms negotiated. That decision was made in October 1971 on a Government motion to approve its \u201cdecision of principle to join the European Communities on the basis of the arrangements which have been negotiated\u201d.\n \nThe European Union Act 2011 gave Parliament statutory powers to approve certain EU Treaty amendments or EU acts before the Government could agree to them at EU level. However, this has sometimes resulted in Parliament having to pass an Act of Parliament so that the Government can approve relatively insignificant EU proposals in the Council.\n \n "}
      , "date" : {"_value" : "2017-03-10T15:56:37.4084494+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library briefing analyses the Lords\u2019 new clauses on EU/EEA citizens in the UK and on a \u2018meaningful vote\u2019 at the end of the negotiations, for the Bill's return to the Commons."], "identifier" : {"_value" : "CBP-7922"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      , {"_about" : "http://data.parliament.uk/terms/37362", "prefLabel" : {"_value" : "International Affairs and Defence Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "European Union (Notification of Withdrawal) Bill: analysis of Lords' amendments", "topic" : [{"_about" : "http://data.parliament.uk/terms/95514", "prefLabel" : {"_value" : "Central government"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95532", "prefLabel" : {"_value" : "Constitution"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95542", "prefLabel" : {"_value" : "Crown"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95590", "prefLabel" : {"_value" : "EU institutions"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95591", "prefLabel" : {"_value" : "EU law and treaties"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95636", "prefLabel" : {"_value" : "Immigration"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95648", "prefLabel" : {"_value" : "International law"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95703", "prefLabel" : {"_value" : "Parliament"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95705", "prefLabel" : {"_value" : "Parliamentary procedure"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/656590", "abstract" : {"_value" : "Wendy Morton presented the Crown Tenancies Bill on 4 July 2016. The debate on Second Reading was initially scheduled to take place on 16 December 2016. The Bill passed its Second Reading without debate on 3 February 2017. It was considered in Public Bill Committee on 1 March 2017. The Bill was not amended in Committee. Report and Third Reading are scheduled to take place on 12 May 2017.\n \nPurpose of the Bill\n \nThe Bill is seeking to bring most Crown tenancies created after it comes into force within the assured tenancy regime governed by the Housing Act 1988. It is felt that this regime will offer sufficient flexibility to government departments while at the same time improving the statutory protection offered to Crown tenants. Crown tenants are generally tenants of the Secretary of State or government departments. Some exclusions from the 1988 Act will remain in place.\n \nPrior consultation\n \nThe Coalition Government announced its intention to legislate in this area in July 2013 but consultation on the proposals did not take place until July 2015: Giving Crown Tenants Greater Protection. A summary of responses to this consultation process has not yet been published \u2013 the proposals appear to be relatively uncontroversial.\n \nThe Bill replicates provisions in a Private Member\u2019s Bill introduced by Mark Pawsey during the 2015-16 parliamentary session: Crown Tenancies Bill 2015-16. This Bill did not progress beyond its First Reading despite attracting Government support.\n \nThe Bill extends to England and Wales.\n \n "}
      , "date" : {"_value" : "2017-03-10T15:48:11.1534941+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library briefing paper provides background information on a Private Member's Bill which is seeking to bring most Crown tenancies within the assured tenancy regime  under the Housing Act 1988."], "identifier" : {"_value" : "CBP-7831"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Crown Tenancies Bill [Bill 32 of 2016-17]", "topic" : [{"_about" : "http://data.parliament.uk/terms/95629", "prefLabel" : {"_value" : "Housing"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95722", "prefLabel" : {"_value" : "Private rented housing"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/669678", "abstract" : {"_value" : "The National Citizen Service\n \nThe National Citizen Service (NCS) consists of courses for young people in England and Northern Ireland, mostly aged 16 and 17. The courses take place during school holidays and involve a mixture of activities - adventures, life skills and social action - to encourage young people to engage with their community and develop for the future. The NCS is currently administered by the NCS Trust, a community interest company.\n \nThe National Citizen Service Bill [HL] 2016-17\n \nThe National Citizen Service Bill [HL] 2016-17 was introduced in the House of Commons on 14 December 2016. \n \nThe Bill had its second reading on 16 January 2017 where it received cross-party support. It was considered in Public Bill Committee on 24 January 2017 where a number of drafting and technical amendments were moved by the Government.\n \nThe Bill will have its remaining stages in the House of Commons on 15 March 2017.\n \nThe Bill, in combination with a Royal Charter, would place the NCS on a permanent statutory footing. The Bill\u2019s Explanatory Notes state that the Bill:\n \n Incorporates the new NCS Trust as a Charter body and creates a legislative mechanism to transfer the business of the Company to the new Trust. This creates a legislative framework for the NCS, with the aim of making it a national institution while preserving its independent ethos; Aims to secure that the administrative and funding arrangements for the NCS Trust are appropriate for the increased level of public funds the Trust will manage, with proper accountability to government and Parliament; and Aims to impose on the NCS Trust an appropriate level of government control for a body in receipt of public funds \n \nIn addition, the Bill would enable HMRC to send information about the Trust and its work to young people who are eligible for NCS and invite them to take part.\n \nThe Bill and Explanatory Notes are available from the Bill pages on the parliamentary website. A draft Royal Charter for the National Citizen Service Trust (Cm 9393, January 2017) is also available.\n \nThe Bill would extend to England and Wales but would only apply to England."}
      , "date" : {"_value" : "2017-03-10T15:47:30.3569481+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library Briefing Paper has been prepared for the remaining stages of the National Citizen Service Bill [HL] 2016-17 on 15 March 2017."], "identifier" : {"_value" : "CBP-7853"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Commons Library Analysis of the National Citizen Service Bill [HL] 2016-17", "topic" : [{"_about" : "http://data.parliament.uk/terms/95776", "prefLabel" : {"_value" : "Voluntary organisations"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/709934", "abstract" : {"_value" : "In March 2018, the DWP\u2019s 20 year contract with Telereal Trillium to manage the DWP estate in Great Britain, including jobcentres, comes to an end. As a result, the Department is considering future locations for Jobcentre Plus and other offices in Great Britain ahead of its expiry.\n \nAs part of these considerations, the DWP is looking to reduce the size of its estate by around 20%, and to increase \u201cco-location\u201d of Jobcentre Plus offices with other local services such as local authority benefit teams and mental health services. This 20% reduction is part of a wider plan to sell £4.5 billion worth of Government land and property by 2020/21.\n \nAttached to a written statement on 26 January 2017, the Employment Minister Damian Hinds set out proposals for the future of the entire DWP estate, including 784 buildings providing jobcentre services.\n \n \n \nThere have been two previous Westminster Hall debate on the proposed closure of jobcentres in Glasgow, for which Debate Packs were also produced \u2013 Closure of jobcentres in Glasgow (CDP-2016-0255) and Future of the DWP estate (CDP-2017-0012).\n \nThe DWP has also published its full estates proposal, with information on every jobcentre in Great Britain."}
      , "date" : {"_value" : "2017-03-10T15:42:29.0351785+00:00", "_datatype" : "dateTime"}
      , "description" : ["MPs will debate Jobcentre Plus office closures, on Thursday 16 March 2017 in Westminster Hall, from 3:00pm - 4:30pm. Chris Stephens MP will lead the debate. This House of Commons Library briefing provides background to the debate and includes a summary of the issues and press and parliamentary coverage."], "identifier" : {"_value" : "CDP-2017-0089"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Jobcentre Plus office closures", "topic" : [{"_about" : "http://data.parliament.uk/terms/95503", "prefLabel" : {"_value" : "Benefits administration"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/707728", "abstract" : {"_value" : "This is a debate on an e-petition which has attracted over 100,000 signatures on the petitions website. The subject for the debate was determined by the Petitions Committee.\n \nThe petition, e-petition 166711 , is entitled \"April's Law\".\n \nThe text of the Parliamentary motion is:\n \n That this House has considered e-petition 166711 relating to sentencing for child abuse offences \n \nThe text of the petition is:\n \nApril's Law \n \n We the undersigned call on the prime minister to make all sex offenders remain on the register for life no matter the crime, for service providers and search engines to be better policed regarding child abuse images and harder sentences on those caught with indecent images of children. \n \nThe text of the Government response to the petition is:\n \n Protecting the public from harm remains a priority for this Government, and we have been clear that those offenders who continue to pose a risk will remain subject to notification for life. The public should rest assured that sex offenders will not automatically come off the register; the order only provides a mechanism by which a sex offender can apply for a review. On 30 July 2012 the Sexual Offences Act 2003 was amended by the Sexual Offences Act 2003 (Remedial) Order 2012 to introduce a mechanism which will enable registered sex offenders who are subject to notification requirements for life to apply for those requirements to be reviewed. This was as a result of an earlier Supreme Court ruling that our then law on indefinite sex offender registration without the right for review was incompatible with article 8 of the European Convention on Human Rights (ECHR). The Government fully acknowledged the ruling of the Supreme Court and took appropriate action as is its duty; to uphold the independence of the judiciary by complying with the judgement. Under the previous Government, we made changes to the notification requirements introducing additional measures which sought to strengthen the existing mechanism by making it mandatory for all registered sex offenders to notify to the police: all foreign travel; weekly, where they are registered as having \u2018no fixed abode\u2019; where they are living in a household with a child under the age of 18; and; their bank account and credit card details, and information about their passports or other identity documents. We continue to work with the police and other law enforcement agencies to ensure that the right powers are available for the authorities to tackle sexual crimes and to bring perpetrators to justice. Policing of child abuse images The Government agrees that industry has a responsibility to work together with law enforcement and Government to prevent and inhibit the use of their services by those seeking to generate and share child abuse material. In 2015, Google announced that it had made changes to its search algorithm to prevent images and videos containing child abuse material from appearing in search results. They have publicly stated there has been an eight-fold reduction in child sexual abuse image related search queries since. The Internet Watch Foundation, which is funded by industry, has been active in facilitating the removal of indecent imagery of children from the internet. Their efforts have helped the UK see a reduction from the UK hosting 18% of web pages of child abuse imagery, to 0.2% by 2015. Since April 2014 as permitted by Government, they have proactively sought out child sexual abuse material to take action to get this material removed. At the WePROTECT summit in December 2014, industry committed to taking digital hashes of known child abuse imagery in order to ensure these could be identified and referred to the US National Centre for Missing and Exploited Children, and removed. As of October 2016, over 34,750 image hashes have been shared among industry by the IWF. Sentencing Sentencing is entirely a matter for our independent courts. When deciding what sentence to impose the courts take into account the circumstances of the offence and any mitigating and aggravating factors, in line with the sentencing guidelines. Maximum penalties are kept under review to ensure that the courts have adequate powers to deal with offences effectively and proportionately. The independent Sentencing Council are responsible for issuing guidelines to the courts. In December 2013 the Sentencing Council issued a revised guideline on sentencing for sexual offences, which came into force in England and Wales in April 2014. Under the Protection of Children Act 1978 (as amended), the UK prohibits the taking, making circulation and possession with a view to distribution of any indecent photograph or pseudo-photograph of a child under 16. Such offences carry a maximum sentence of 10 years\u2019 imprisonment. Section 160 of the Criminal Justice Act 1988 also makes the simple possession of indecent photographs or pseudo-photographs of children an offence. This carries a maximum sentence of 5 years\u2019 imprisonment. This age was raised to 18 in the Sexual Offences Act 2003 and there are defences for those aged over the age of consent (16) who produce sexual photographs for their own use within a marriage or civil partnership. These defences are lost, however, if such images are distributed. The Sexual Offences 2003 Act significantly modernised and strengthened the laws on sexual offences in England and Wales to provide extra protection to children from sexual abuse and sexual exploitation. It was designed to meet 21st century challenges of protecting children, and addresses issues including internet pornography and \u2018grooming\u2019 children for sexual abuse. Home Office \n \n Further information\n \nThe Library briefing Registration and management of sex offenders\n \n "}
      , "date" : {"_value" : "2017-03-10T15:07:35.0694007+00:00", "_datatype" : "dateTime"}
      , "description" : ["A Westminster Hall debate on an e-petition entitled \"April's Law\" is scheduled for Monday 13 March 2017 at 4.30pm. The debate will be led by Catherine McKinnell MP, a member of the Petitions Committee."], "identifier" : {"_value" : "CDP-2017-0080"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "April's Law: debate on an e-petition relating to sentencing for child abuse offences", "topic" : [{"_about" : "http://data.parliament.uk/terms/95476", "prefLabel" : {"_value" : "Administration of justice"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95747", "prefLabel" : {"_value" : "Sexual offences"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/708771", "abstract" : {"_value" : "Members will debate Dog Fouling in a Westminster Hall debate, scheduled for Tuesday 14 March 2017 at 430-530pm. The Member in charge of the debate is Mrs Anne Main MP.\n \nDog fouling: What is the problem?\n \nAccording to Keep Britain Tidy dog fouling is \u201ca major concern to members of the public\u201d. In 2014-15, the BBC found that local authorities in England and Wales received some 73,824 complaints about dog fouling. A particular complaint in many areas is that dog waste is bagged up, but then left behind; Keep Britain Tidy report that this is an increasing problem. Speaking to the BBC Countryfile magazine about this issue in April 2015, Caroline Kisko, the Kennel Club Secretary, said:\n \n \u201cDog owners should always clean up after their dogs and dispose of the waste appropriately and the vast majority do, however a small minority who do not can give all dog owners a bad name.  A lack of bins in an area, particularly public footpaths through the countryside and woodland areas can be frustrating, but is not an excuse to hang dog waste bags in trees or leave them on the ground as some people seem to do.  Owners should keep their dog waste bags with them until they can find a dog waste bin or regular litter bin, or should take it home with them to dispose of it properly.\u201d \n \nThe Dogs Trust also advise that if there are no specific dog waste bins available, it is possible to put bagged dog mess in a public litter bin.\n \nThis is a devolved issue; separate legislation applies to England and Wales (together) and Scotland. This brief covers the England and Wales approach first, and details the legislation and guidance for Scotland separately below.\n \nWho is responsible for keeping land clear of dog waste?\n \nIt is illegal for dog owners to not clean up their dog\u2019s waste in a public area. There is an exemption for some kinds of public land in England and Wales, including: Land used for agriculture or woodlands; rural common land; land that is predominantly marshland, moor or heath; and highways with a speed limit of 50mph or more.\n \nLitter authorities have a statutory duty under section 89 of the Environmental Protection Act 1990 (as amended) to ensure that, so far as reasonably practicable, their land is kept clear of litter (including dog waste), and refuse. Litter authorities generally refers to local authorities, but also includes educational institutions and the Crown (in each case in respect of its own land) and the Secretary of State.\n \nMost local authorities have webpages giving advice about litter, and many also have dedicated helplines on which to report litter.\n \nAll organisations with a duty to collect litter are required to have regard to the Statutory Code of Practice on Litter and Refuse for England. In addition, DEFRA has produced guidance for how councils on how they should deal with litter (including dog waste) and the penalties they can give.\n \nIf a member of the public feels that a litter authority is not fulfilling its duties to keep public land clear of litter, he or she may apply to a Magistrates\u2019 Court for a litter abatement order (section 91 of the Environmental Protection Act 1990). If the court is satisfied that the litter authority is in dereliction of its duty under section 89 of the Act, it may issue a litter abatement order requiring the body to clear the area of litter.\n \nWhat powers do local authorities have?\n \nIn England and Wales, local authorities can issue on-the-spot fines for dog fouling, known as Fixed Penalty Notices. The amount will vary depending on the council. It is often £50 and can be as much as £80; most local authorities have set it at the default level of £75. If someone refuses to pay the fine, they can be taken to court and fined up to £1,000.\n \nDEFRA discontinued collecting figures on the number of fixed penalty notices issued by local authorities in 2010, as this was deemed to be an unnecessary data burden on local authorities. This means the most recent official figures for the number of fixed penalty notices issued is 2008-09 when 2,082 fixed penalty notices were issued. In 2015, a BBC article stated that the number of people fined for failing to clean up after their dog fell by almost 20% in 2014-15\u20142,868 fixed penalty notices were issued in England and Wales compared to 3,521 in 2013-14. The BBC obtained figures from 302 of the 348 local authorities in England and Wales. Of those, 103 did not issue any fixed penalty notices in 2014-15, and 48 had not issued any in the last five years.\n \nFollowing the implementation of the Anti-social Behaviour, Crime and Policing Act 2014, local authorities in England and Wales can no longer make Dog Control Orders. Instead they can use new powers under the new Act to control dog fouling by issuing Public Space Protection Orders (PSPOs) to require owners to clean up after their dogs in specified public areas. Existing Dog Control Orders will stay in effect until 20 October 2017, unless they are replaced by PSPOs before then.\n \nIn accordance with the DEFRA guidance, local authorities can use PSPOs in a similar way to dog control orders, to stop anti-social behaviour such as dog fouling in a public place. PSPOs can make it an offence if dog owners do any of the following:\n \n don\u2019t clean up after their dogs; allow their dogs to enter particular places that have a PSPO, like playgrounds or parks. \n \nIf a PSPO is not complied with, the person in breach of it can be fined up to £100 on the spot or up to £1000 if it goes to court.\n \nRegistered blind dog owners cannot be fined.\n \nFor further information, the Library Briefing Paper on litter  sets out information on general litter offences (including more detail on fixed penalty notices).\n \nA Novel approach to dealing with dog fouling\n \nIn 2012, West Dunbartonshire council provided its local cleanup workers with cans of bright spray paint to tag abandoned dog waste in a highly visible colour scheme. This alerts passers-by to the mess, and aims to shame irresponsible owners into picking up after their dogs in the future.\n \nDealing with dog fouling in Scotland\n \nIn Scotland, The Dog Fouling (Scotland) Act 2003 makes it an offence for a person to fail to clear up their dog\u2019s waste in certain public places, such as footpaths and pavements.\n \nThe maximum fine for the offence is currently £500. Local authorities must authorise at least one person to issue fixed penalty notices for the offence. Fixed penalty notices can be issued by such persons and by the police. The Dog Fouling (Fixed Penalty) (Scotland) Order 2016 increased the fixed penalty for dog fouling from £40 to £80, bringing it in to line with the fine for littering.\n \nWorking dogs\u2014tending or driving of sheep or cattle, working with the armed forces, customs and excise or the police force\u2014are exempted from the Act while they are working. So too are registered blind dog owners.\n \nPublic Health risks: Toxocariosis\n \nThe main risk to health from dog faeces is an infection called Toxocariosis. This a rare infection caused by roundworm parasites. The parasites are usually found in cats and dogs, and are more likely to affect young children as they are most likely to come into contact with soil contaminated with the roundworm larvae from dog/cat faeces.\n \nIn most people, the infection does not cause any symptoms and the parasites die within a few months. Some people experience mild symptoms, such as a cough, fever, headaches. In rare cases the larvae can infect organs such as the liver, eyes, brain or lung and cause more severe symptoms. These can include, fatigue, seizures, loss of vision, and breathing difficulties."}
      , "date" : {"_value" : "2017-03-10T11:29:00.1713177+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library debate pack has been prepared ahead of the Westminster Hall debate, scheduled for Tuesday 14 March 2017 at 430-530pm. It provides background information on the legislation, guidance and attempts to tackle the issue of dog fouling in the UK."], "identifier" : {"_value" : "CDP-2017-0081"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Dog Fouling", "topic" : [{"_about" : "http://data.parliament.uk/terms/95490", "prefLabel" : {"_value" : "Animals"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95581", "prefLabel" : {"_value" : "Environmental protection"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95688", "prefLabel" : {"_value" : "Nature conservation"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95714", "prefLabel" : {"_value" : "Pollution"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95777", "prefLabel" : {"_value" : "Waste management"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95782", "prefLabel" : {"_value" : "Wildlife"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/339392", "abstract" : {"_value" : "New GCSE performance measures for 2016 show that pupils at grammar schools acheived an average of two grades higher per subject than those at comprehensive schools. They also made more progress (from primary school test results), but the gap was narrower at around one third of a grade per subject. \n \nThe number of state grammar schools peaked at almost 1,300 in the mid-1960s when around one-quarter of all pupils in state secondaries attended grammars. Their number started falling soon after. The fastest period of decline was the 1970s; between 1971 and 1978 650 grammar schools closed. The proportion of pupils in grammars fell to below 20% in the early 1970s, below 10% in the mid-1970s and has been 5% or less from the late 1970s onwards.\n \n \nThere are currently 163 grammar schools in England with a total of 167,000 pupils. These pupils are much less likely to have special education needs or be eligible for free school meals than average. Grammar schools have a slightly higher than average proportion of non-white pupils.\n \n \nThis note gives a brief summary of statistics on grammar schools \u2013state schools that select all or virtually all of their pupils by ability. It includes trends in the number and share of pupils at grammar schools since the late 1940s and a snapshot of current grammars. Most of the data are for England only."}
      , "date" : {"_value" : "2017-03-10T09:11:22.7274527+00:00", "_datatype" : "dateTime"}
      , "description" : ["The number of state grammar schools peaked at almost 1,300 in the mid-1960s when around one-quarter of all pupils in state secondaries attended grammars. Their number started falling soon after with the fastest period of decline was in the 1970s. The proportion of pupils in grammars fell to below 20% in the early 1970s, below 10% in the mid-1970s and has been 5% or less from the late 1970s onwards. There are currently 163 grammar schools in England with a total of 167,000 pupils."], "identifier" : {"_value" : "SN01398"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70459", "prefLabel" : {"_value" : "Social and General Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Grammar school statistics", "topic" : [{"_about" : "http://data.parliament.uk/terms/95740", "prefLabel" : {"_value" : "Schools"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/444398", "abstract" : {"_value" : "On 13 December 2015, the Government published a National Space Policy which supports the Government\u2019s new investments in areas such as human spaceflight and microgravity research as space becomes \u201can increasingly essential part of our daily lives and a huge success story for the UK.\u201d\n \nThe policy serves as an articulation of government support for a sector that is worth £11.8 billion to the economy and supports a range of public services from disaster relief, defence and transport. The Government also rehearses its commitment to growing the UK\u2019s commercial space sector \u2013 with an ambition to capture 10% of the global market supporting 100,000 new jobs and generating £40bn for the economy by 2030.\n \nAccording to the Parliamentary Office of Science and Technology (POST) some of the key issues facing the commercial space sector are: the regulatory regime governing outer space, notably in respect of a future spaceport; the development of small satellites, an area of particular strength in the UK; insurance requirements and other structural and international factors. Understanding these issues requires an appreciation of the national and international legal framework governing the exploitation and exploration of outer space. The lead role of the UK Space Agency, not least in administering the licensing regime for outer space activities, will remain central to the development of UK capabilities.\n \nThe UK\u2019s new National Space Policy commits to four key principles in the Government\u2019s use of space. The Government:\n \n recognises that space is of strategic importance to the UK because of the value that space programmes deliver back to public services, national security, science and innovation and the economy commits to preserving and promoting the safety and security of the unique space operating environment, free from interference supports the growth of a robust and competitive commercial space sector, underpinned by excellent academic research commits to cooperating internationally to create the legal frameworks for the responsible use of space and to collaborating with other nations to deliver maximum benefit from UK investment in space \n \nAgainst this background, the House of Commons Science and Technology Committee launched an inquiry into satellites and space, to inform the Government\u2019s UK civil space strategy, originally planned for 2016. Satellite technology is one of the \u2018Eight Great Technologies\u2019 identified in 2013 by the Government for public support.\n \nOn the 21 February 2017, the Government published a Draft Spaceflight Bill to \"provide for the creation of a regulatory framework to enable commercial spaceflight activities to be carried out from spaceports in the United Kingdom\". This changes earlier plans to introduce such provisions as part of a wider Modern Transport Bill. The House of Commons Science and Technology Committee will be examining the Draft Bill, and has issued a call for written evidence by 20 March."}
      , "date" : {"_value" : "2017-03-09T17:45:40.0205313+00:00", "_datatype" : "dateTime"}
      , "description" : ["On the 21 February 2017, the Government published a Draft Spaceflight Bill to \"provide for the creation of a regulatory framework to enable commercial spaceflight activities to be carried out from spaceports in the United Kingdom\"."], "identifier" : {"_value" : "CBP-7464"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Outer space", "topic" : [{"_about" : "http://data.parliament.uk/terms/95741", "prefLabel" : {"_value" : "Science"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/709584", "date" : {"_value" : "2017-03-09T16:28:35.3882096+00:00", "_datatype" : "dateTime"}
      , "identifier" : {"_value" : "CDP-2017-0087"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Jobcentre Plus office closures", "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/342759", "abstract" : {"_value" : "This Commons Library briefing paper provides general information about the number of cohabiting couples, how the law applies to cohabitants, and about the Law Commission\u2019s proposals for reform. \n \nUnless specified otherwise, this paper deals generally with the law in England and Wales.  There is also a short summary of the position in Scotland and Northern Ireland.\n \nNo legal status for \"common law marriage\"\n \nAlthough cohabitants do have some legal protection in several areas, cohabitation gives no general legal status to a couple, unlike marriage and civil partnership from which many legal rights and responsibilities flow.  Many people are unaware that there is no specific legal status for what is often referred to as a \u201ccommon law marriage\u201d.  Unmarried couples have no guaranteed rights to ownership of each other's property if they separate or one cohabitant dies.  This is the case no matter how long they lived together and even if they had children together.\n \nNumber of cohabiting couples\n \nThe Office for National Statistics has published annual data on the composition of families and households living in the UK since 1996. During this period, the number of opposite sex and same sex cohabiting couple families has increased, but trends differ between opposite sex and same sex couple families.\n \nHow does the law treat cohabiting couples?\n \nThis paper sets out information about how the current law affects cohabiting couples in these areas: property rights; housing; domestic violence; inheritance; social security; pensions; taxation; immigration; birth registration; and parental responsibility.\n \nCohabitation agreements\n \nSome cohabitants enter into a cohabitation agreement which can act as encouragement to consider what they would want to happen if the relationship ends. \n \nLaw Commission proposals for reform\n \nFinancial relief on separation\n \nIn July 2007, following consultation, the Law Commission published a report, Cohabitation: the financial consequences of relationship breakdown, which considered the financial consequences of the ending of cohabiting relationships. The Law Commission recommended the introduction of a new statutory scheme of financial relief on separation, based on the contributions made to the relationship by the parties. \n \nThe scheme would be available to eligible cohabiting couples. Couples who have had a child together or who have lived together for a minimum period would be eligible. Couples would be able to opt out of the scheme by a written agreement to that effect.\n \nGovernment response: recommendations not implemented\n \nIn March 2008, the Labour Government announced that it would be taking no action to implement the Law Commission\u2019s recommendations until research on the cost and effectiveness of a similar scheme recently implemented in Scotland could be studied.  On 6 September 2011, Jonathan Djanogly, then a junior Justice Minister, announced that, having carefully considered the Law Commission\u2019s recommendations, together with the outcomes of research on the Family Law (Scotland) Act 2006, the then Government did not intend to reform the law relating to cohabitation in that Parliamentary term.\n \nInheritance\n \nIn a separate report, published in 2011, the Law Commission recommended that some cohabitants should have the right to inherit under the intestacy rules on their partner's death, without having to go to court.  This recommendation has not been implemented.\n \nScotland\n \nIn Scotland, cohabitants may make limited claims against each other either when their relationship breaks down or when a partner dies. \n \nNorthern Ireland\n \nIn Northern Ireland, cohabitants have legal protection in some areas.  However, they have significantly fewer rights and responsibilities than couples who have married or formed a civil partnership.\n \n "}
      , "date" : {"_value" : "2017-03-09T14:29:59.5576701+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library briefing paper provides general information about  how the law applies to cohabitants, the number of cohabiting couples, and about the Law Commission\u2019s proposals for reform."], "identifier" : {"_value" : "SN03372"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "\"Common law marriage\" and cohabitation", "topic" : [{"_about" : "http://data.parliament.uk/terms/95525", "prefLabel" : {"_value" : "Cohabitation"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95600", "prefLabel" : {"_value" : "Family law"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/709580", "abstract" : {"_value" : "The Northern Ireland Assembly elections on 2 March 2017 took place just 301 days since the previous elections. The resignation of the Northern Ireland Deputy First Minister, Martin McGuinness, on 9 January 2017 set in train a sequence of statutory provisions that has led to an early election to the Northern Ireland Assembly.\n \nThe March 2017 Northern Ireland Assembly Elections were conducted with the Single Transferrable Vote system. 90 Members were elected, 5 for each of the 18 constituencies; previously 108 Members were elected.\n \nThe DUP remained the largest party in the Assembly with 28 MLAs (31.1% of seats) although they no longer have enough MLAs to unilaterally use a \u201cpetition of concern\u201d (a blocking mechanism) in the Assembly.\n \nSinn Féin is the second largest party with 27 MLAs (30% of seats). The UUP lost their position as the third largest party in the Assembly (a position they had held since 2007) and was replaced by the SDLP. The Alliance party kept the same number of seats as they had in 2016 although their share of total seats increased.\n \n27 women were elected to the Assembly; 30% of MLAs are women, the highest proportion ever.\n \nThe turnout was 64% (based on valid votes), higher than any previous Assembly election since 1998.\n \nNorthern Ireland Assembly elections 2017"}
      , "date" : {"_value" : "2017-03-09T13:50:05.1213129+00:00", "_datatype" : "dateTime"}
      , "description" : ["The Northern Ireland Assembly elections on 2 March 2017 took place just 301 days from the previous elections. The resignation of the Northern Ireland Deputy First Minister, Martin McGuinness, on 9 January 2017 set in train a sequence of statutory provisions that has led to an early election to the Northern Ireland Assembly."], "identifier" : {"_value" : "CBP-7920"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70459", "prefLabel" : {"_value" : "Social and General Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Northern Ireland Assembly Elections: 2017", "topic" : [{"_about" : "http://data.parliament.uk/terms/95566", "prefLabel" : {"_value" : "Election results : UK"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95567", "prefLabel" : {"_value" : "Elections"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95691", "prefLabel" : {"_value" : "Northern Ireland Assembly"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/345630", "abstract" : {"_value" : "Government Targets\n \nSuperfast broadband has been rolled out to much of the country on commercial terms by providers such as BT and Virgin Media. The Government\u2019s policy is to provide funding to support the roll-out of superfast broadband to those areas of the UK where commercial roll-out is not economically viable. This is mostly, but not entirely, in rural areas. The Government defines superfast as speeds greater than 24Mbps, whereas Ofcom (the UK regulator) defines it as speeds greater than 30Mbps.\n \nBroadband Delivery UK (BDUK), part of the Department for Culture, Media and Sport (DCMS), is responsible for implementing the Government\u2019s policy on superfast broadband roll-out which consists of three stages:\n \n to provide superfast broadband coverage to 90% of UK premises by early 2016 and access to basic broadband (2Mbps) for all from December 2015 \u2013 \u201cPhase 1\u201d to provide superfast broadband coverage to 95% of UK premises by the end of 2017 \u2013 \u201cPhase 2\u201d to explore options to provide superfast coverage to the hardest to reach parts of the UK - \u201cthe final 5%\u201d \n \nThe BDUK coverage targets include the commercial roll-out, however, the BDUK programme and funding is focused on those areas that are not reached by the commercial roll-out.\n \nPhase 1\n \nIn a Westminster Hall debate on 9 March 2016 the then Minister of State for the Digital Economy, Ed Vaizey MP, stated that the target for coverage of 90% of UK premises had been met.\n \nIn its Connected Nations 2016 Report, Ofcom confirmed that, as of June 2016, 90% of UK premises (almost 26 million) were covered by superfast broadband (at least 24 Mbps). Ofcom data as at June 2016 showed that about 1% of UK premises (about 190,000) were unable to receive speeds of 2Mbps.\n \nPhase 2\n \nPhase 2 is currently underway in many areas of England with only a small number of local bodies yet to sign contracts for the roll-out. Procurement has not yet started for Phase 2 in Scotland. Contracts have been signed for Phase 2 in Wales and Northern Ireland.\n \nA BDUK Programme summary (based on contracts signed at 1 February 2017) provides detailed information on the contracts and the total amounts of funding (BDUK and local body funding) for Phase 1 and Phase 2 in each local project area. The Government has confirmed it is \u201con track to reach 95% of premises by December 2017\u201d.\n \nThe Final 5%\n \nWith Phase 2 of the broadband roll-out underway in many areas the focus has moved to superfast broadband coverage for the \u201cfinal 5%\u201d of UK premises. The remaining unserved premises (5% is around 1.4 million premises) are geographically dispersed across the landmass of the UK. \n \nProviding superfast broadband to these premises poses distinct challenges and a number of different approaches are explained in the Briefing Paper.\n \n Click to view a map of superfast broadband availability by constituency in the UK\n \n \n \n \n \n \n \n \n \n \n \nDelivery of the roll-out\n \nIn England each county council or local enterprise partnership (collectively \u2018local bodies\u2019) is leading the broadband roll-out in their area. In Scotland, Wales and Northern Ireland the roll-out is led by the devolved Administrations.\n \nCoverage across the UK\n \nBy the end of December 2016, the BDUK government funded superfast broadband programme had extended superfast broadband to 4.3 million homes and businesses across the UK.\n \nOfcom\u2019s Connected Nations 2016 report and postcode level data downloads showed:\n \n the average download speed for all fixed broadband services for the entire UK is 37Mbps, although speeds available to individual customers vary considerably; superfast broadband \u2013 speeds greater than 30 Mbps \u2013 is now available in 89% of UK premises (over 25 million), with take-up of 31%; about 1% of UK premises (about 190,000) are unable to receive speeds of 2Mbps; 5% of UK premises (about 1.4 million) are unable to receive speeds of at least 10Mbps through a fixed line. \n \nData for constituencies and wards is contained in our downloadable tables, available at the bottom of this page. On request, the Library can provide MPs and their staff with further data and maps for their area. See section 6.3 of the Paper for an example.\n \nThe dot maps below show detailed information on superfast connections in Great Britain. Click to view full-size."}
      , "date" : {"_value" : "2017-03-09T09:03:43.6326357+00:00", "_datatype" : "dateTime"}
      , "description" : ["A Commons Library Briefing on the Government\u2019s superfast broadband policy for the UK. It sets out the current situation for broadband access and coverage in all four nations of the UK, and how the roll-out of superfast broadband is being managed and funded. Constituency data and local maps on broadband connectivity and speeds are also included."], "identifier" : {"_value" : "SN06643"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/67716", "prefLabel" : {"_value" : "Science and Environment Section"}
      }
      , {"_about" : "http://data.parliament.uk/terms/70459", "prefLabel" : {"_value" : "Social and General Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Superfast Broadband Coverage in the UK", "topic" : [{"_about" : "http://data.parliament.uk/terms/95766", "prefLabel" : {"_value" : "Telecommunications"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/678296", "abstract" : {"_value" : "On 7 March 2017, the House of Lords considered the European Union (Notification of Withdrawal) Bill at third reading. Lord Newby, the Leader of the Liberal Democrats in the House of Lords, moved the following amendment to the motion \u201cthat this bill do now pass\u201d:\n \n Leave out from \u201cthat\u201d to the end and insert \u201cthis House declines to allow the bill to pass, because the bill does not provide a mechanism for the people of the United Kingdom to have a vote, prior to the United Kingdom\u2019s departure from the European Union, on the terms of the new relationship between the United Kingdom and the European Union. \n \nFollowing a debate, the amendment was defeated by 340 votes to 95. Paragraph 8.152 of the Companion to the Standing Orders provides full details of the \u2018passing\u2019 procedure, in particular how Members can oppose the motion or put down amendments to it:\n \n The motion \u201cthat this bill do now pass\u201d is moved immediately after third reading has been agreed to or, if amendments have been tabled, as soon as the last amendment has been disposed of. The motion is usually moved formally. It may be opposed, and reasoned or delaying amendments, of which notice must be given, may be moved to it, but in other circumstances there is normally no substantive debate. Any remarks should be brief and should not seek to reopen debates at previous stages of the bill. \n \nThis briefing sets out some further examples of where such amendments have been tabled and/or moved. It does not constitute procedural advice. Members requiring such advice should consult the Legislation Office\u2019s A Guide to Public Bills in the House of Lords (May 2015) and contact the Legislation Office with any further enquiries.\n \n \n \n "}
      , "date" : {"_value" : "2017-03-08T14:28:31.2753071+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Lords Library briefing provides examples in the House of Lords of where an amendment to the motion \u201cthat this bill do now pass\u201d has been tabled and/or moved."], "identifier" : {"_value" : "LIF-2017-0006"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414041", "prefLabel" : {"_value" : "Lords In Focus"}
      }
      , "title" : "Lords Public Bill Stages: \"That This Bill Do Now Pass\"", "topic" : [{"_about" : "http://data.parliament.uk/terms/95628", "prefLabel" : {"_value" : "House of Lords"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95705", "prefLabel" : {"_value" : "Parliamentary procedure"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/387934", "abstract" : {"_value" : "What are University Technical Colleges?\n \nUniversity Technical Colleges (UTCs) are technical schools for 14-19 year olds, working alongside employers and universities, introduced under the Coalition Government.  They operate as a type of academy, with relevant freedoms such as not having to follow the national curriculum, or employ teachers with qualified teacher status.  In keeping with other forms of academy, they operate in England only.\n \nKey facts\n \n In January 2017 there were 48 UTCs open across all regions in England. The first opened in September 2011, three more followed in 2012, and 13 opened in both 2013 and 2014 and 11 in both 2015 and 2016. Two of the earlier UTCs closed at the end of the 2014/15 school year; Black Country UTC and Hackney UTC. Central Bedfordshire UTC closed at the end of 2015/16. According to the Baker Dearing Educational Trust a further five are due to open in September 2017 and two more are currently planned for in 2018. In mid-2016 the Department for Education listed 20 potential UTCs in \u2018pre-opening\u2019 stage. \n \nClosures\n \nTwo of the first created UTCs closed in summer 2015.  Hackney UTC and Black Country UTC had experienced disappointing pupil recruitment and received critical Ofsted reports.  Further closures have followed through 2016 and 2017, owing to low pupil take-up of places in the affected UTCs.\n \nOther issues\n \nMore broadly, the small number of UTCs, and pupils attending them, make it difficult to draw firm conclusions on their impact at this stage.  The concerns that have been raised around the operation of UTCs have focused on enrolment numbers, and the attendance rates of pupils enrolled.  Concerns have also been raised about the proportion of female students enrolling at UTCs. "}
      , "date" : {"_value" : "2017-03-08T11:47:34.3398432+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Commons Library briefing discusses the origin, progress and future of University Technical Colleges - technical schools for 14-19 year olds, working alongside employers and universities in England, introduced under the Coalition Government"], "identifier" : {"_value" : "CBP-7250"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "University Technical Colleges", "topic" : [{"_about" : "http://data.parliament.uk/terms/95614", "prefLabel" : {"_value" : "Further education"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95740", "prefLabel" : {"_value" : "Schools"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/346180", "abstract" : {"_value" : "A coalition of 68 countries are engaged in international efforts to counter ISIS (also known as Daesh, ISIL or so-called Islamic State). The military campaign in Iraq and Syria is just one aspect of that broader strategy which also includes measures to restrict the flow of foreign fighters, stop foreign financing, provide humanitarian assistance to Iraq and Syria and strategic communications (propaganda, public diplomacy and psychological operations) intended to counter ISIS\u2019 ideology.\n \nIt is the military campaign against ISIS which is the focus of this paper. It does not examine the ongoing civil war in Syria or the peace talks.\n \nObjectives of the military campaign\n \nThe United States has led airstrikes against ISIS in Iraq since 8 August 2014. Operations were extended into Syria toward the end of September 2014.\n \nWith a view to building the capacity of local forces on the ground, offensive military action in Iraq and Syria has focused largely on air operations in support of those local forces, providing intelligence, reconnaissance, surveillance and attack capabilities.\n \nThe other element of the campaign has been the training of Iraqi and Kurdish security forces as a means of enabling them to take responsibility for operations against ISIS on the ground. Targeted Special Forces operations are providing advisory assistance to Iraqi and local forces on the ground. A US-led programme of support is also being provided to opposition forces in Syria.\n \nMilitary action in Iraq is being conducted at the request of the Iraqi government, which coalition partners consider provides a firm legal basis for operations. Military operations in Syria are not at the request of the Assad government, and are being conducted in the absence of a UN Security Council resolution specifically authorising such action. However, coalition nations have expressed the view that such operations are legally justified on the basis of the collective self-defence of Iraq, and the individual self-defence of participating nations.\n \nOver the last year the dynamics of the campaign have begun to shift as ISIS has increasingly lost territory, operations to re-take Mosul and Raqqa have begun, and regional players such as Turkey have made moves to secure their spheres of influence. The lines between the campaign to defeat ISIS and the Syrian civil conflict are also becoming increasingly blurred with Russia\u2019s support for the Assad regime complicating the strategic picture in Syria.\n \nSituational report\n \nAs of 28 February 2017 Coalition aircraft have conducted a total of 18,666 airstrikes against ISIS targets in Iraq and Syria (Iraq \u2013 11,245 and Syria \u2013 7,421). Approximately 68% of airstrikes in Iraq and 95% of airstrikes in Syria have been conducted by US aircraft.\n \n Iraq\n \nThe Pentagon estimates that ISIS has lost 60% of the territory it once controlled in Iraq and now occupies less than 10% of Iraqi territory in total.\n \nAfter months of preparation the operation to liberate Mosul began on 17 October 2016. A coalition of 35,000 Iraqi security forces, Kurdish Peshmerga, Sunni Arab tribesmen and Shia paramilitary forces are participating in the operation, supported by Coalition intelligence and surveillance, airstrikes, and 100 US Special Operations personnel advising on the ground. Initially Turkey had also been pushing for a role in the campaign, a proposal which the Iraqi Prime Minister, Haider al-Abadi, firmly rejected.\n \nAfter three and half months of fighting the Iraqi Government announced on 24 January 2017 that the city to the east of the River Tigris had been liberated from ISIS. Iraqi security forces now control all areas inside the eastern part of the city and the eastern bank of the river for the first time in two and a half years. As such attention has now increasingly shifted toward the west of the city.\n \nOperations to liberate the western part of the city began on 19 February 2017. Iraqi forces, backed by the coalition, have liberated Mosul airport allowing troops access to the city from the southwest. However, the dense urban environment of the old city and the number of civilians in western Mosul is recognised as presenting a significant challenge to Iraqi security forces moving forward.\n \nSyria\n \nThe Coalition has estimated that ISIS has lost more than 25% of the territory it once held in Syria.\n \nOver the summer operations by Syrian Democratic Forces (SDF), an alliance of opposition and local forces including the Syrian Arab Coalition and Kurdish forces in Syria, focused on liberating the town of Manbij, on Syria\u2019s northern border with Turkey. Assisted by Coalition forces Manbij was liberated in mid-August 2016 after two months of fighting.\n \nEfforts to secure the region along Turkey\u2019s border have advanced significantly over the last few months after an offensive led by an alliance of Syrian rebel groups, and supported by Turkey, was launched in late August (Operation Euphrates Shield). Key towns have been liberated from ISIS including al-Rai and Jarabulus. Turkish involvement in the campaign to take Jarabulus represented Turkey\u2019s first full-scale incursion into Syria since the civil conflict began. While striking a blow against ISIS, Turkey\u2019s actions have also been motivated by a desire to secure its regional sphere of influence and stop the Kurds from advancing into areas in north eastern Syria, thereby unifying the eastern and western areas that they currently hold along the Turkish border.\n \nTurkish -led forces have since continued to push south and recently liberated the town of al-Bab, after almost a month of fighting. Although not supported by coalition forces in its initial stages, the campaign to re-take al-Bab was increasingly backed by coalition intelligence and surveillance, and more recently airstrikes. Syrian government forces have also been operating in the region and in mid-January Russian warplanes began conducting joint airstrikes with Turkey in the surrounding area. Following the liberation of al-Bab concerns have been raised that Turkey may now turn its attention to Manbij, and other areas in northern Syria under the control of Kurdish forces, in an effort to secure their sphere of influence.\n \nWith the Mosul offensive now underway attention has increasingly turned to the campaign to liberate Raqqa. On 6 November 2016 the SDF announced that the campaign to \u201cisolate\u201d, and eventually liberate, Raqqa had begun. The SDF will be supported by coalition airstrikes. Turkey has continued to push for a role in the campaign to liberate Raqqa, although has called for Syrian Kurdish forces, specifically the YPG, to be excluded from any operation. Russia is not currently involved in the plans to liberate Raqqa.\n \nThe Trump administration\u2019s comprehensive strategy\n \nFollowing his inauguration in January 2017 US President Donald Trump stated that \u201cdefeating ISIS and other radical Islamic terror groups will be our highest priority\u201d and that \u201cto defeat and destroy these groups, we will pursue aggressive joint and coalition military operations when necessary\u201d. To that end, on 28 January President Trump signed a Presidential Memorandum directing the US administration to develop, within 30 days, a comprehensive plan to defeat ISIS.\n \nThe Pentagon presented its plan to the US National Security Council\u2019s Principals Committee on 27 February 2017. The plan has been described as a \u201cpreliminary framework\u201d that extends both beyond the military and beyond the immediate theatre of conflict in Iraq and Syria. No official details of the plan have been made public, to date. Speculation within the media has focused on the possibility of deploying US \u201cboots on the ground\u201d in Syria and the creation of \u201csafe zones\u201d for the protection of civilians.\n \nWho are the main players in the military campaign?\n \nAlthough there are 68 coalition countries engaged in international efforts to counter ISIS, only a handful of nations are directly involved in offensive air combat operations. The number of countries involved in the train and assist programme is more substantial, although still only represents less than half of the Coalition\u2019s members. In total 29 nations contribute 3,800 troops to the counter-ISIS operation.\n \nAir campaign\n \nThe countries currently conducting air strikes in both Iraq and Syria are:\n \n United States France Australia Jordan United Kingdom Belgium \n \nDenmark recently withdrew its combat aircraft.\n \nThe countries conducting air combat operations solely in Syria are:\n \n Turkey Saudi Arabia United Arab Emirates \n \nParticipation by Saudi Arabia and UAE is, however, considered to have been minimal.\n \nA number of other coalition countries, notably Canada, Germany and Poland, are providing force enabling capabilities such as air-to-air refuelling and surveillance and reconnaissance assets in support of coalition air operations. NATO is also providing direct AWACS support to the coalition, in order to increase situational awareness. That support began at the end of October 2016 with one E-3 aircraft currently based in Turkey. NATO Leaders have sought to highlight, however, that such assistance \u201cdoes not make NATO a member of this coalition\u201d.\n \nTrain, advise and assist mission\n \nThe United States, the UK and a number of other coalition countries have deployed military personnel on the ground in Iraq to train Iraqi and Kurdish security forces. These are not combat troops and are not deployed in an offensive role.\n \nTo date, over 70,000 Iraqi personnel have been trained, including Iraqi troops, Peshmerga, police and border forces and other tribal fighters. The number of Iraqi forces being trained has also increased three-fold since October 2016, with approximately 3,000 Iraqi forces being trained every month.\n \nIn addition to training, the US is also leading efforts to advise and assist the Iraqi Security Forces and Peshmerga at the command level.\n \nSeveral coalition countries have also been providing Iraqi and Kurdish forces with logistical assistance and resources, including the provision of arms, ammunition and other military equipment. Financial assistance for the payment of Peshmerga salaries has also been provided.\n \nThe US is also leading a programme of training for moderate opposition forces in Syria. The focus of that programme is on \u201cequipping and enabling\u201d selected groups of vetted leaders and their units so that over time they can make a concerted push into territory still controlled by ISIL\u201d. The US is providing equipment packages and weapons, and providing air support as and when necessary. In October 2016 the UK announced that it would resume its training of Syrian opposition forces, outside of Syria, following a request for support from the US.\n \nThe US has also deployed Special Forces personnel in northern Syria and in Iraq in order to provide logistical and planning assistance to Iraqi, Kurdish and other local forces at the command level.\n \nTurkey is also providing support and assistance to local opposition forces in northern Syria.\n \nBritish military participation\n \nParliamentary approval\n \nIn September 2014 Parliament voted to support offensive military action in Iraq. However, that vote did not extend to offensive operations in Syria. In July 2015 the Secretary of State for Defence indicated that the Government could seek further approval from Parliament to extend air strikes into Syria provided that \u201cthere is a sufficient consensus behind it\u201d. A debate, and vote, on extending offensive military action against ISIS in Syria was subsequently held on 2 December 2015. Parliament voted in support of military action exclusively against ISIS in Syria by 397 to 223 votes.\n \nOffensive military action in Iraq and Syria\n \nOn 30 September 2014 Tornado aircraft carried out their first airstrikes on ISIS targets in Iraq (Operation Shader).\n \nRAF Tornado aircraft conducted the first offensive operation in Syria on 3 December 2015. RAF aircraft had, however, been conducting non-offensive surveillance operations over Syria since 21 October 2014.\n \nThe RAF is the primary service in this operation and has deployed a mixture of combat, surveillance, reconnaissance, and refuelling/transport aircraft. Aircraft currently deployed include:\n \n 8 Tornado GR4 fast jet aircraft 6 Typhoon combat aircraft (from 2 December 2015) Reaper Remotely Piloted Air Systems Airseeker surveillance aircraft Voyager air-to-air refuelling aircraft 2 C130 transport aircraft. E3-D sentry aircraft Sentinel surveillance aircraft. \n \nRAF Akrotiri in Cyprus is serving as the main operating base for aircraft in the region.\n \nIn August 2016 the MOD announced that the Type 45 destroyer HMS Daring would deploy to the Gulf in order to provide air defence support to US Carrier Groups deployed in the region.\n \nAt present, approximately 850 UK personnel are currently supporting Operation Shader in Iraq and Syria. With the addition of the UK\u2019s training contingent in Iraq (500 personnel) the UK\u2019s total footprint across the region in support of this operation is approximately 1,350 personnel. Those personnel on the ground are not combat troops.\n \nThe UK has been the second largest contributor to the air campaign in Iraq and Syria. UK aircraft have flown over 3,000 missions as part of Operation Shader, and as of mid-February 2017 had conducted over 1,200 airstrikes against ISIS targets in Iraq and Syria. The RAF is conducting operations at a tempo not seen since the first Gulf War.\n \nThe Government has consistently maintained that no civilian casualties in Iraq or Syria, to date, have resulted from UK air strikes.\n \nTraining\n \nSince October 2014 the UK has been providing training to Kurdish Peshmerga forces and military advice to the Iraqi security forces. Specifically, the UK is co-ordinating the coalition\u2019s counter-IED training programme. At the end of June 2016 the MOD confirmed that it would expand its training assistance, with the deployment of an additional 50 military trainers to the Al Asad airbase in Western Iraq to provide counter-IED, infantry skills and medical training. More recently the MOD confirmed that UK personnel would expand its training to other locations in Iraq.\n \nThe total UK training contingent based in Iraq comprises 500 personnel.\n \nTo date, the UK has trained nearly 40,000 Iraqi security forces personnel, including 7,300 Kurdish Peshmerga, in Besmaya, Taji and al-Asad. Many of those trained personnel are currently conducting operations in Mosul.\n \nOn 25 October 2016 the Defence Secretary announced that the UK would resume training of vetted moderate Syrian opposition groups following a request by the US for support of its train and equip programme. 20 UK personnel are expected to deploy to a number of locations in the region, outside of Syria. Training will focus on basic infantry tactics; command and control; medical training and explosive hazard awareness training.\n \nGifting of equipment to the Peshmerga\n \nThe UK has also supplied over 50 tonnes of non-lethal support, 40 heavy machine guns, nearly half a million rounds of ammunition and £600,000 worth of military equipment to the Kurdish Peshmerga since August 2014. In May 2016 the Defence Secretary announced that a further £1.4 million of ammunition would be gifted.\n \nCosts of the mission\n \nIn March 2015 the MOD confirmed that the net additional costs of the military air operation would be met from the Treasury Special Reserve; while the costs of training and equipping the Iraqi and Kurdish security forces, and the provision of key enablers, would be met from the MOD\u2019s Deployed Military Activity Pool (DMAP).\n \nIn answer to a Parliamentary Question in February 2017 the MOD set the operational costs of the counter-ISIS mission, up to the end of March 2016, at £238.8 million (£21.9 million for 2014-15 and £216.9 million in 2015-16).\n \nDMAP costs for 2014-15 were £23.5 million and £23.7 million for 2015-16. However, not all of those costs are directly attributable to the counter-ISIS campaign.\n \nUp to October 2016, and as part of those overall costs, approximately £63 million has been spent on Brimstone and Hellfire missiles.\n \nRussian involvement in the campaign against Daesh/ISIS\n \nIn September 2015 Russia began forward-deploying troops and other military assets to Humaymim air base in Latakia province on the Mediterranean coast. Estimates of the number of deployed Russian military capabilities varied but what was generally accepted was that Russia had established a powerful strike group in Syria consisting of fast jet combat aircraft, utility and attack helicopters and a small number of T-90 tanks, armoured personnel carriers, artillery units and howitzers.\n \nOn 30 September 2015 Russia launched its first airstrikes in Syria, the first time that Russian forces had undertaken a military operation beyond the boundaries of the former Soviet Union since the end of the Cold War. Russia presented the campaign as a counter-terrorist action to protect religious minorities and to protect the secular government. Russian Foreign Minister Sergei Lavrov said that it was targeting ISIS \u201cand other terrorist groups\u201d in Syria at the invitation of the legitimate Syrian government.\n \nThroughout its entire campaign Russia has been continually criticised for targeting opposition groups, as opposed to ISIS, including moderate opposition forces supported by the US. Russian airstrikes are also estimated to have caused significant civilian casualties, with Russia being accused of deliberately targeting civilian infrastructure such as hospitals.\n \nIn mid-February 2016 the International Syria Support Group reached agreement on a ceasefire that would apply to all parties engaged in hostilities against another party, aside from those directed at ISIS or the al-Nusra front, or Jabhat Fatah al-Sham, as it has been known since dropping its al-Qaeda affiliation in July 2016. Just over two weeks later, and after a five-month air campaign, President Putin announced a somewhat surprise drawdown of \u201cthe main part\u201d of Russian combat forces in Syria, stating that the Russian campaign \u201chad been completed\u201d.\n \nHowever, Russia has retained a significant military presence in Syria, including combat aircraft, attack helicopters and air defence systems.\n \nOngoing support for the Syrian regime\n \nFollowing the February ceasefire agreement, many analysts concurred that there had been a shift in Russian military activity, which appeared to be increasingly focused on ISIS and other groups such as Jabhat Fatah al-Sham. This was a position confirmed by the Pentagon on 18 May 2016 when it stated that \u201cin the last several weeks, a majority of their strikes have been more ISIL focused\u201d.\n \nHowever, that shift in attention appeared to have been relatively short-lived as Russian operations in support of Syrian government forces subsequently came to dominate the strategic picture in Syria, in particular in the besieged city of Aleppo which became the focus of a major assault by Syrian government forces, backed by militias, Iranian ground forces and Russian air power.\n \nThe result has been an increased blurring of the lines between the campaign to defeat ISIS in Syria and Russia\u2019s involvement in the broader civil conflict and its support for the Assad regime.\n \nFocus after the fall of Aleppo\n \nBy mid-December 2016 Syrian forces, backed by Russia, had succeeded in re-taking eastern Aleppo from rebel opposition forces. A subsequent Turkish/Russian-brokered ceasefire agreement, followed by Russian-led peace talks in Astana in January 2017 has been regarded by many as indicative of Russia\u2019s desire to take on the role of power broker in the region.\n \nAs such, the possibility of a drawdown of Russian forces has been widely mooted. With the exception of the withdrawal of Russia\u2019s aircraft carrier in the region, there has, however, been little evidence, to date, of a drawdown; more a change of focus. In recent weeks a battalion of Russian military police has deployed to Aleppo in order to enhance security; while Russian involvement in counter-ISIS operations has increased. Russian warplanes have been conducting airstrikes against ISIS forces in Palmyra, around the eastern Government enclave of Dayr al-Zawr and in conjunction with Turkey in and around the town of al-Bab near the Turkish border.\n \nAt present Russia\u2019s actions, in concert with Syrian government forces, are focused on ISIS targets in eastern Syria and the region north of Aleppo. The question remains, however, as to whether it will increasingly turn its focus towards Raqqa. Coalition plans for the isolation and liberation of Raqqa currently do not envisage Russian participation. However, Russian aircraft are reported to have targeted ISIS positions in Raqqa in recent weeks; while Russian Defence Minister Sergey Shoigu, has reportedly indicated Russia\u2019s willingness to engage in joint operations with the US in the region.\n \n "}
      , "date" : {"_value" : "2017-03-08T11:17:01.0575423+00:00", "_datatype" : "dateTime"}
      , "description" : ["An update on the military campaign in Iraq and Syria is available in CBP8011, Syria and Iraq: update June 2017. This document will no longer be updated but serves as a useful summary of the military campaign against ISIS  to March 2017."], "identifier" : {"_value" : "SN06995"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/37362", "prefLabel" : {"_value" : "International Affairs and Defence Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "ISIS/Daesh: the military response in Iraq and Syria", "topic" : [{"_about" : "http://data.parliament.uk/terms/95492", "prefLabel" : {"_value" : "Armed forces"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95551", "prefLabel" : {"_value" : "Defence policy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95654", "prefLabel" : {"_value" : "Iraq"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95677", "prefLabel" : {"_value" : "Middle East"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95678", "prefLabel" : {"_value" : "Military operations"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95739", "prefLabel" : {"_value" : "Russia"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/709185", "abstract" : {"_value" : "Despite legal protections, pregnancy and maternity discrimination in the workplace is widespread.  Research published in March 2016 by the Department for Business, Innovation and Skills (BIS) and the Equality and Human Rights Commission (EHRC) found, among other things:\n \n Overall, three in four mothers (77%) said they had a negative or possibly discriminatory experience during pregnancy, maternity leave, and/or on return from maternity leave. If scaled up to the general population this could mean as many as 390,000 mothers a year. Around one in nine mothers (11%) reported they felt forced to leave their job. This included those being dismissed (1%); made compulsorily redundant, where others in their workplace were not (1%); or feeling treated so poorly they felt they had to leave their job (9%). If scaled up to the general population this could mean as many as 54,000 mothers a year. If scaled up to the general population this could mean as many as 54,000 mothers a year. If scaled up to the general population this could mean as many as 54,000 mothers a year. One in 25 mothers (4%) left their jobs because of risks not being tackled. One in 25 mothers (4%) left their jobs because of risks not being tackled. One in ten (10%) mothers were discouraged from attending antenatal appointments. This could mean as many as 53,000 mothers a year. \n \nThere have been a number of Westminster Hall debates on this subject. There was a Westminster Hall debate on maternity discrimination on 14 July 2016; see here.  A Library debate pack published for that debate is available here.  Members had also debated the issue previously, on 3 November 2015 [3 November 2015 308WH].\n \nSince those earlier debates, on 31 August 2016, the House of Commons Women and Equality Committee published the report of their inquiry into pregnancy and maternity discrimination.  The report summarised the issue, and its recommendations, as follows:\n \n Shockingly, pregnant women and mothers report more discrimination and poor treatment at work now than they did a decade ago. With record numbers of women in work in 2016, the situation is likely to decline further unless it is tackled effectively now. Urgent action and leadership is needed, but the approach that the Government is taking forward lacks urgency and bite. There is a lack of detail about the Government\u2019s objectives, how and when it expects to achieve them, and how the effectiveness of its approach will be assessed. We welcome the awareness-raising work that the Government is doing with the EHRC and businesses, but it needs to set out a detailed plan outlining the specific actions it will take to tackle this unacceptable level of discrimination. This work must be underpinned by concrete actions to increase significantly compliance by employers and so improve women\u2019s lives. The Government must make changes in laws and protections to ensure a safe working environment for new and expectant mothers, to prevent discriminatory redundancies and to increase protection for casual, agency and zero-hours workers. It must also provide incentives and ensure better enforcement to encourage better employer practice. Currently, the burden of enforcement rests with the individual experiencing discrimination, but the number of women taking enforcement action is low. The Government must take urgent action to remove barriers to justice and should seek ways of reducing the burden on women and making it easier for them to take action. It must also set out how it will monitor whether outcomes are improving for women. A summary of our key recommendations is outlined here. Strategy and leadership The Government should publish a strong, specific communications plan for the awareness-raising and attitude-changing work it has agreed to undertake in response to the EHRC\u2019s recommendations. The plan should include clear timelines and should set out where accountability for implementation will lie. (Paragraph 106) Changes in laws and protections Employers should be required to undertake an individual risk assessment when they are informed that a woman who works for them is pregnant, has given birth in the past six months or is breastfeeding. (Paragraph 44) 3. The right to paid time off for antenatal appointments should be extended to workers. The Government should review the pregnancy and maternity-related rights available to workers and legislate to give greater parity between workers and employees. (Paragraphs 57 and 58) Access to justice The Government should review the three-month time limit for bringing a tribunal claim in maternity and pregnancy discrimination cases and should substantially reduce tribunal fees. (Paragraphs 143 and 146) The Government should monitor access to free, good-quality, one-to-one advice on pregnancy and maternity discrimination issues and assess whether additional resources are required. (Paragraph 157) \n \nThe Government published its response to the Committee\u2019s recommendations on 26 January 2017.\n \nBackground law\n \nEquality law\n \n\u201cPregnancy and maternity\u201d is a protected characteristic under section 4 of the Equality Act 2010.  Broadly speaking, the Act prohibits unfavourable treatment at work due to pregnancy or pregnancy-related illness, during the period between the start of pregnancy and the end of statutory maternity leave. \n \nPregnancy and maternity discrimination is also prohibited in non-work cases.  For example, a café owner must not ask a woman to leave the café because she is breast-feeding her baby.\n \nProtection from dismissal\n \nAlongside the Equality Act, under the Employment Rights Act 1996, an employee will be regarded as unfairly dismissed if the reason or principal reason for the dismissal relates to pregnancy, childbirth or maternity.  Selection for redundancy due to pregnancy or maternity leave is automatically unfair.\n \nMaternity leave and the right to return to one\u2019s job\n \nThe right to maternity leave is set out in Part 8 of the Employment Rights Act 1996 and Part 2 of the Maternity and Parental Leave etc. Regulations 1999 (SI 1999/3312).  There are three types: compulsory maternity leave, ordinary maternity leave and additional maternity leave:\n \n Compulsory maternity leave lasts for two weeks from the date of childbirth (four weeks in the case of factory workers), during which the employer must not permit the mother to work; Ordinary maternity leave lasts for 26 weeks, inclusive of the period of compulsory maternity leave; Additional maternity leave commences on the day after the last day of ordinary maternity leave, and lasts for 26 weeks. \n \nThe distinction between ordinary and additional maternity leave relates to the employee\u2019s right to return to the same job. If the employee returns to work during ordinary maternity leave she is entitled to the same job, with the same terms and conditions. If she returns to work during additional maternity leave she is entitled to return to the same job or, if it is not reasonably practicable for the employer to permit her to return to that job, to another job which is appropriate for her to do in the circumstances.\n \nTime off for ante-natal care\n \nThe right to time off in respect of ante-natal care is provided in Part 6 of the Employment Rights Act 1996.  A pregnant employee/agency worker is entitled to paid time off to attend an ante-natal care appointment made on the advice of a registered medical practitioner, midwife or registered nurse. \n \nThe Children and Families Act 2014 amended the Employment Rights Act 1996, introducing a right to unpaid time off to accompany a pregnant woman \u201cwhen she attends by appointment at any place for the purpose of receiving ante-natal care\u201d. Employees/agency workers with a \u201cqualifying relationship\u201d with the expectant mother or child are entitled to a maximum of two periods of time off, each limited to six and a half hours. The qualifying relationships include, for example, spouses, prospective fathers and persons in enduring family relationships with pregnant women.\n \n "}
      , "date" : {"_value" : "2017-03-08T11:15:59.5699079+00:00", "_datatype" : "dateTime"}
      , "description" : ["There will be a debate in Westminster Hall on the effect of maternity discrimination. This will take place at 9.30am on Wednesday 15 March 2017.  The sponsoring Member is Sharon Hodgson MP."], "identifier" : {"_value" : "CDP-2017-0084"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Effect of Maternity Discrimination", "topic" : [{"_about" : "http://data.parliament.uk/terms/95574", "prefLabel" : {"_value" : "Employment"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/709184", "abstract" : {"_value" : "Please note that the linked papers will be updated, where appropriate, following the Budget Statement of 8 March 2017.\n \nFinancial Sustainability of the NHS in England\n \nHealth and Social Care Integration (England)\n \nAdult Social Care Funding (England)\n \n "}
      , "date" : {"_value" : "2017-03-08T10:52:32.7588919+00:00", "_datatype" : "dateTime"}
      , "description" : ["MPs will debate Budgets for Health and Social Care in Westminster Hall on Tuesday 14 March from 9.30am. Meg Hillier MP will lead the debate. This House of Commons Library debate pack provides key Library publications in this area."], "identifier" : {"_value" : "CDP-2017-0082"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70459", "prefLabel" : {"_value" : "Social and General Statistics Section"}
      }
      , {"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Health and Social Care Budgets", "topic" : [{"_about" : "http://data.parliament.uk/terms/95529", "prefLabel" : {"_value" : "Community care"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95620", "prefLabel" : {"_value" : "Health finance"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/708774", "abstract" : {"_value" : "This paper provides background statistics on prisons and courts in England and Wales ahead of the Second Reading of the Prisons and Courts Bill 2016-17.\n \nCommons Library Briefing Paper SN04334: Prison Population Statistics (currently being updated) explores prison population data for England and Wales in more depth and includes data for the rest of the UK.\n \nPrison Population\n \nAs at 31 December 2016:\n \n The total prison population was 84,307. The most frequent length of sentence being served was typically a sentence over 4 years. Violence against the person (VATP) offences accounted for the highest proportion of prisoners. Sexual, theft and drug offences each accounted for approximately 15% of the reason offenders were in prison. There were just under 10,000 foreign nationals within the prison population. Those originating from the European Union (excluding the UK) accounted for 43% of all foreign nationals in prison and just under 5% of the total prison population. 69% (80) of prison establishments were overcrowded. \n \n \n \nPrison Safety\n \nIn the 12 months to September 2016:\n \n There were just over 25,000 prisoner assault incidents within prisons, a 31% increase the figure to September 2015. There were 6,430 assaults on prison staff, 761 of which were serious. This was an 82% rise on the number of assaults on prison staff in 2006 and was a 40% increase from 2015. There were over 37,750 self-harm incidents. This was an increase of 61% compared to September 2006 and an increase of 23% compared to 2015. In the 12 months to December 2016 there were 354 deaths of prisoners in custody. Around 55% of the deaths were through natural causes, 34% were self-inflicted, 10% were classed as other (including those awaiting for further information on cause of death) and 1% were the result of homicide."}
      , "date" : {"_value" : "2017-03-07T16:11:34.6272189+00:00", "_datatype" : "dateTime"}
      , "description" : ["This paper provides background statistics on prisons and courts in England and Wales ahead of the Second Reading of the Prisons and Courts Bill 2016-17.\n\nCommons Library Briefing Paper SN04334: Prison Population Statistics (currently being updated) explores prison population data for England and Wales in more depth and includes data for the rest of the UK."], "identifier" : {"_value" : "CBP-7892"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70459", "prefLabel" : {"_value" : "Social and General Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Prisons and Courts Statistics, England and Wales", "topic" : [{"_about" : "http://data.parliament.uk/terms/95537", "prefLabel" : {"_value" : "Courts"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95720", "prefLabel" : {"_value" : "Prisons"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/708768", "abstract" : {"_value" : "The Preventing and Combating Violence Against Women and Domestic Violence (Ratification of Convention) Bill is a House of Commons private member\u2019s bill introduced by Eilidh Whiteford (SNP MP for Banff and Buchan) and is sponsored in the House of Lords by Baroness Gale (Labour). The Bill has completed all stages in the House of Commons and is scheduled to have its second reading in the House of Lords on 10 March 2017.\n \nThe Bill seeks to encourage the Government to ratify the Council of Europe Convention on Preventing and Combating Violence Against Women and Domestic Violence (referred to as the Istanbul Convention)[ii], which the UK signed on 8 June 2012 but has yet to ratify. The Bill makes a number of provisions in this regard. It would require the Secretary of State to lay a report before each House setting out the steps required to enable the UK to ratify the Convention, and the timescale within which this is expected to happen. The report would have to be laid as soon as reasonably practicable after the Act came into force. Clause two would require the Secretary of State to lay a report before both Houses each year until ratification, setting out any changes to the timescale contained in previous reports; administrative measures taken by the government to enable the UK to ratify the Convention; legislative proposals brought forward to enable to UK to ratify; and measures to be taken and legislation required to enable the UK to ratify the Convention.\n \nThe Bill would require the first annual report to be laid no later than 1 November 2017."}
      , "date" : {"_value" : "2017-03-07T14:34:11.6362447+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Lords Library briefing provides information on the Preventing and Combating Violence Against Women and Domestic Violence (Ratification of Convention) Bill ahead of its scheduled second reading in the House of Lords on 10 March 2017."], "identifier" : {"_value" : "LIF-2017-0022"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414041", "prefLabel" : {"_value" : "Lords In Focus"}
      }
      , "title" : "Preventing and Combating Violence Against Women and Domestic Violence (Ratification of Convention) Bill: Briefing for Lords Stages", "topic" : [{"_about" : "http://data.parliament.uk/terms/95538", "prefLabel" : {"_value" : "Crime"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95540", "prefLabel" : {"_value" : "Crimes of violence"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95635", "prefLabel" : {"_value" : "Human rights"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95648", "prefLabel" : {"_value" : "International law"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95649", "prefLabel" : {"_value" : "International organisations"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/708767", "abstract" : {"_value" : "The Political Parties (Funding and Expenditure) Bill [HL] is a private member\u2019s bill introduced by Lord Tyler (Liberal Democrat). The Bill received its first reading in the House of Lords on 6 June 2016 and is scheduled to receive its second reading on 10 March 2017.\n \nSetting out the purpose of the Bill, Lord Tyler stated:\n \n This Bill is based on the cross-party draft published by Andrew Tyrie MP, Alan Whitehead MP and Lord Tyler in April 2013, and seeks to fulfil the objectives of the report on this subject by the Committee on Standards in Public Life published in November 2011. The current Bill updates the previous proposals to reflect the various 2015 manifestos commitments of all the main parties seeking to take the big money out of British politics and to regularise the constraints on both party donations and expenditure. \n \nThe Bill comprises of 28 clauses and three schedules. It aims to regulate both the funding and expenditure of political parties. This includes making provisions for the phased introduction of a cap on donations to political parties. The Bill also seeks to count membership fees from trade unions and organisations to political parties as individual donations in prescribed circumstances. In addition, the Bill aims to introduce a limit on non-election expenses incurred by political parties. Further, the Bill outlines the functions of the Electoral Commission, an independent body which regulates political finance in the UK, in enforcing the Bill\u2019s provisions. The provisions would apply to the whole of the United Kingdom.\n \n "}
      , "date" : {"_value" : "2017-03-07T14:23:32.7540646+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Lords Library briefing provides information in support of the House of Lords second reading of the Political Parties (Funding and Expenditure) Bill [HL] on 10 March 2017."], "identifier" : {"_value" : "LIF-2017-0021"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414041", "prefLabel" : {"_value" : "Lords In Focus"}
      }
      , "title" : "Political Parties (Funding and Expenditure) Bill [HL]: Briefing for Lords Stages", "topic" : [{"_about" : "http://data.parliament.uk/terms/95713", "prefLabel" : {"_value" : "Political parties"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/342691", "abstract" : {"_value" : "The VAT liability of sports clubs has proved a long and complex issue. In April 1994 the rules determining the VAT treatment of non-profit-making clubs were amended, following complaints by sports clubs and the European Commission that UK law was incompatible with European VAT legislation. Subsequently in March 1998 Budget, a draft Order was laid to amend these provisions, to prevent the practice of some commercial sports clubs seeking to enjoy the same VAT exemption granted to non-profit-making clubs. This was widely criticised for affecting the VAT position of a number of genuine non-profit-making clubs, and it was allowed to lapse. A revised draft was published in January 1999, with the intention that the Order would take effect from 1 April 1999. Following discussions with interested parties, HM Customs & Excise made further changes before the Order was laid on 20 July 1999. This legislation was debated on 26 October 1999 and finally came into force on 1 January 2000. Following these changes there has been a lot of debate as to how the new rules affect golf clubs - in particular, proprietary - or private profit-making clubs - who have argued that the VAT exemption which non-profit-making members-only clubs may claim is discriminatory."}
      , "date" : {"_value" : "2017-03-07T12:34:55.1396777+00:00", "_datatype" : "dateTime"}
      , "description" : ["This note examines the VAT treatment of sports clubs - in the context of the change made in UK VAT law in 1994 to exempt from VAT certain sport supplies, and subsequent debate as to how these rules have affected golf clubs."], "identifier" : {"_value" : "SN01052"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "VAT and Sports Clubs", "topic" : [{"_about" : "http://data.parliament.uk/terms/95660", "prefLabel" : {"_value" : "Leisure"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95758", "prefLabel" : {"_value" : "Sports and Olympic Games"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95764", "prefLabel" : {"_value" : "Taxation"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/533843", "abstract" : {"_value" : "The Welfare Reform and Act 2016 legislated for the abolition of the Work-Related Activity Component (WRAC) of ESA for new claimants from 3 April 2017. This equates to a reduction of £29.05 a week for claimants in the Work-Related Activity Group (WRAG). Alongside this, the Government announced \"new funding for additional support to help claimants return to work\"\n \nEmployment and Support Allowance\n \nESA is an \"income replacement\" benefit for people who have a health condition or disability which limits their ability to work. As of May 2016 there were just under 2.4 million ESA claimants in Great Britain, including 429,000 in the Work-Related Activity Group.\n \nThere are two forms of ESA:\n \n contributory ESA, for those with a sufficient National Insurance contribution record; and income-related ESA, which is means-tested. \n \nIncome-related ESA will eventually be replaced by Universal Credit; contributory ESA will remain as a separate benefit. The Government currently expects the introduction of Universal Credit to be fully complete by 2022.\n \nA person must undergo a Work Capability Assessment to be eligible for ESA. There are three possible outcomes of a Work Capability Assessment:\n \n the claimant is found \u201cFit for Work\u201d and may instead apply for JSA or Universal Credit; the claimant is placed in the \u201cWork-Related Activity Group\u201d (WRAG) and must undertake \u201cwork-related activity\u201d; the claimant is placed in the \u201cSupport group\u201d and is not required to take part in any work-related activity. \n \nFollowing the assessment, successful ESA claimants receive a standard rate plus an additional amount.\n \nThe standard rate of ESA is currently £73.10 a week, plus either:\n \n £36.20 for claimants in the Support Group, or; £29.05 for claimants in the Work-Related Activity Group. \n \nThese additions are known as the Support Component and the Work-Related Activity Component, respectively.\n \nWhat is happening to the Work-Related Activity Component?\n \nIn Summer Budget 2015, it was announced that the Work-Related Activity Component paid to those in the WRAG would be abolished for new claims from April 2017. The equivalent element in Universal Credit will also be abolished. This will involve a reduction of £29.05 a week (2017-18 rates) and aligns the rate of payment with those claiming Jobseeker\u2019s Allowance (£73.10 a week). Existing claimants will not be affected, while there will be protections for those who may move into the WRAG or Universal Credit equivalent from the Support Group.\n \nThe changes were introduced to \u201cremove the financial incentives that could otherwise discourage claimants from taking steps back to work\u201d. £640 million a year of savings were initially forecast by 2020-21; this was later revised to £450 million a year.\n \nReaction to the changes\n \nThe changes were widely criticised by disability charities. The idea that the WRAC incentivises claimants to not look for work has been particularly disputed.\n \nThe proposals were opposed by opposition parties. Amendments to retain the component (and equivalent in Universal Credit) were tabled and agreed at the Lords Report Stage of the Welfare Reform and Work Act 2016. The Lords vote followed the publication of a review initiated by Members of the House of Lords and supported by disability charities; the \"Halving the Gap?\" review. The review recommended that the Government should not proceed with the removal of the Work-Related Activity Component.\n \nThese amendments were overturned by the Commons. A further amendment requiring the Government to provide analysis of the impact of the changes before introducing them was also proposed by the Lords, and subsequently overturned by the Commons.\n \nMitigating Support\n \nAlongside the changes to the WRAC was an announcement to provide \u201cnew funding for additional support to help claimants return to work\u201d. The Government has since announced a series of measures and funding to deliver this, including £60 million per year rising to £100 million per year for practical employment support, including an additional £15 million in 2017-18 directed at the local Jobcentre Plus Flexible Support Fund, to be set aside specifically for those with limited capability to work.\n \nFurther detail of the additional employment support has been set out in the Government's October 2016 Green Paper, Improving Lives. This was published instead of a previously announced White Paper.\n \nWork and Pensions Committee report\n \nIn its report on the Disability employment gap published on 31 January, the House of Commons Work and Pensions Committee said that if the DWP is to press ahead with the ESA cut, it must first set out a clear plan for identifying where claimants have additional, unavoidable living costs relating to their conditions, and how it will ensure that these costs are covered.  The Committee expects the Government to respond to its report before the lower rate of ESA is due to take effect in April and, if it intends to proceed with the reduction, to explain how this will not be detrimental to its target of halving the disability employment gap."}
      , "date" : {"_value" : "2017-03-07T11:00:28.4896777+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Commons Library briefing paper provides an overview of Employment and Support Allowance (ESA) and details the changes to the Work Related Activity Component that will be introduced from April 2017. The paper also includes information on the mitigating support announced by the Government."], "identifier" : {"_value" : "CBP-7649"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Abolition of the ESA Work-Related Activity Component", "topic" : [{"_about" : "http://data.parliament.uk/terms/95503", "prefLabel" : {"_value" : "Benefits administration"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95504", "prefLabel" : {"_value" : "Benefits policy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95574", "prefLabel" : {"_value" : "Employment"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95749", "prefLabel" : {"_value" : "Sickness, disability and carers' benefits"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95771", "prefLabel" : {"_value" : "Unemployment"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95784", "prefLabel" : {"_value" : "Working age benefits"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/706374", "abstract" : {"_value" : " \n \n\u2022 The purpose of this debate is to discuss financial support available to apprentices, after an unsuccessful amendment to the Technical and Further Education Bill 2016-17 in the House of Lords Committee stage debate on 27 February 2017.\n \n\u2022 The amendment, tabled by Lord Watson of Invergowie, would have enabled eligible families to receive child benefit for children aged under 20 who are undertaking apprenticeships.\n \n "}
      , "date" : {"_value" : "2017-03-07T09:19:04.2705836+00:00", "_datatype" : "dateTime"}
      , "description" : ["This pack has been prepared ahead of the debate on financial support for apprentices taking place in Westminster Hall on 8 March 2017. The subject for this debate has been chosen by Kelvin Hopkins MP."], "identifier" : {"_value" : "CDP-2017-0076"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/17113", "prefLabel" : {"_value" : "Economic Policy and Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Financial support for apprentices", "topic" : [{"_about" : "http://data.parliament.uk/terms/95574", "prefLabel" : {"_value" : "Employment"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95769", "prefLabel" : {"_value" : "Training"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/707167", "abstract" : {"_value" : "Turkey\u2019s 16 April referendum is likely to pass, changing the constitution to give President Recep Tayyip Erdoğan significantly greater powers. Erdogan has been in power (first as Prime Minister and then as President) since 2002, and has made no secret of his ambition. The reforms have already been passed by Turkey\u2019s parliament, with the support of the governing AK Party and the smaller nationalist MHP, but amid angry scenes.\n \nThe referendum comes in the wake of the July\u2019s failed coup. The Government blamed the coup on followers of the exiled Turkish Islamic cleric Fethullah Gülen, and imposed a State of Emergency (renewed most recently in January 2017) which suspends some of the normal functions of the constitution and derogates from many provisions of the European Convention on Human Rights. Under this, the Government has conducted a widespread campaign of media clampdowns, arrests and dismissals: over 40,000 people have been imprisoned and over 120,000 public sector workers \u2013 police, prosecutors, judges, civil servants, academics \u2013 dismissed (though some were later reinstated).\n \nAmong those imprisoned are ten MPs from the pro-Kurdish Peoples\u2019 Democratic Party (HDP), including the party\u2019s two co-leaders (Turkey\u2019s parliament voted to remove legal immunity from them and dozens of other MPs in May 2016). The Government considers the HDP to be linked to the Kurdistan Workers\u2019 Party (PKK), which is recognised as terrorists by the EU, US, and UK. Fighting between the Government and the PKK resumed in the summer of 2015: some of the actions of Turkey\u2019s security forces have been criticised on human rights grounds, while the PKK and its offshoots have been targeting state employees and institutions.\n \nThe increase in tension between the Turkish government and Kurdish militants is related to developments in Syria\u2019s war. Turkish forces have backed Syrian opposition fighters in taking a large area of northern Syria from ISIL, so as to deny it to the Kurds. Meanwhile Kurdish militia \u2013 backed by the US \u2013 have significantly expanded their control across northern Syria.\n \nTurkey and Russia \u2013 who back opposing sides in Syria \u2013 joined Iran to organise a peace conference for Syria in January 2017, and both were involved in negotiating the surrender and evacuation of Aleppo. This thaw in relations follows several setbacks, including Turkey shooting down a Russian bomber in December 2015, and the assassination of the Russian ambassador in Ankara in December 2016.\n \nMeanwhile, EU-Turkey relations, recently focused on security cooperation and restricting the flow of migrants, have deteriorated. Turkey resented a perceived lack of sympathy from the EU after the attempted overthrow of its government. The EU \u2013 already suspicious of perceived authoritarianism in Turkey \u2013 was critical of the post-coup purges and the resumption of fighting with the PKK. In November 2016 the European Parliament passed a non-binding vote to suspend Turkey\u2019s EU accession process, after which Turkey\u2019s Foreign Minister said that the EU was \u2018wasting Turkey\u2019s time\u2019 and its EU Minister said that Turkey would not change its terrorism laws (a key point of contention with the EU).\n \nHowever, the UK and Turkish governments continue to emphasise their strong friendship. In particular, Turkey has thanked Britain for being the first country to send a senior envoy to Turkey in the aftermath of the failed coup (Sir Alan Duncan, on 20 and 21 July). The Foreign Secretary visited Turkey in September 2016, and Prime Minister Theresa May visited in January 2017, agreeing a strategic security partnership and a large defence contract for BAE systems to help Turkey develop its fighter jets.\n \nMeanwhile optimism over the reunification of Cyprus has been rekindled following the election in April 2015 of Mustafa Akinci as President of the unrecognised \u2018Turkish Republic of North Cyprus\u2019. Peace talks resumed in May 2015, and a UN Conference on Cyprus was convened in Geneva on 12 January 2017 with some progress but no final agreement. Challenging issues remain the role of Turkish troops and of the three Guarantor Powers (Turkey, Greece and the UK), details of internal borders, repatriation and property issues.\n \n "}
      , "date" : {"_value" : "2017-03-06T17:31:20.4503573+00:00", "_datatype" : "dateTime"}
      , "description" : ["A Backbench Business debate on \u2018Human rights and the political situation in Turkey\u2019 will be held in Westminster Hall on Thursday 9 March 2017 from 3.00pm. The debate has been initiated by Joan Ryan, David Lammy, Tommy Sheppard and Sir Peter Bottomley."], "identifier" : {"_value" : "CDP-2017-0077"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/37362", "prefLabel" : {"_value" : "International Affairs and Defence Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Human rights and the political situation in Turkey", "topic" : [{"_about" : "http://data.parliament.uk/terms/95593", "prefLabel" : {"_value" : "Europe"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95635", "prefLabel" : {"_value" : "Human rights"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95677", "prefLabel" : {"_value" : "Middle East"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/708290", "abstract" : {"_value" : "Summary\n \nThe Library paper Spring Budget 2017: Background briefing's contains a section looking at recent developments in - and future prospects of - the UK economy. This is a slightly amended version of the summary of that section.\n \nGrowth in the UK economy during the second half of 2016 continued unaffected by the EU referendum result. GDP increased by 0.6% in Q3 2016 compared with the previous quarter and by 0.7% in Q4 2016, supported by robust consumer spending. In 2016 as a whole, GDP growth was 1.8%.\n \n \nGrowth in 2016 was dependent on consumer spending, which increased by 3.1% for the year as a whole, its strongest annual expansion since 2004. Meanwhile, other parts of the economy fared less well. Total investment grew by only 0.5% in 2016, with business investment falling by 1.5%. Exports rose by 1.4%, while imports increased by 2.5%, resulting in net trade subtracting 0.5 percentage points from 2016 growth.\n \n \nConsumers\u2019 appetite to spend, the bedrock of recent economic growth, will be tested by the increase in inflation currently underway and which is anticipated to continue. This is mostly the result of the fall in the pound since the EU referendum (down 12% as of 1 March), causing import prices to rise. Consumer prices were up 1.8% in the year to January, mostly due to higher petrol prices and the period of falling food prices coming to an end. Consumer price inflation is forecast to reach approximately 3% later this year and early next year.\n \n \nRising inflation will eat into consumers\u2019 purchasing power. This is the main reason GDP growth is forecast to slow to 1.4% in both 2017 and 2018 (based on the average of economists\u2019 latest forecasts).\n \n \nWithout unexpectedly higher income growth, an acceleration in household borrowing and/or reductions in savings rates, overall economic growth will need to come from elsewhere to prevent a sharper slowdown. It is unlikely to come from investment, which is forecast to remain weak, and government spending is not likely to provide any meaningful boost to GDP. Instead, the hope \u2013 and expectation \u2013 is that the fall in the pound will boost the performance of UK exporters, thereby contributing to growth in 2017 and 2018.\n \nFor a more detailed look at the UK\u2019s economic situation, please see the Library briefing paper Spring Budget 2017: Background briefing from which the above is taken.\n \n "}
      , "date" : {"_value" : "2017-03-06T15:58:04.8683635+00:00", "_datatype" : "dateTime"}
      , "description" : ["Analysis of the latest UK and international economic indicators"], "identifier" : {"_value" : "CBP-7917"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/17113", "prefLabel" : {"_value" : "Economic Policy and Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Economic Indicators, March 2017", "topic" : [{"_about" : "http://data.parliament.uk/terms/95560", "prefLabel" : {"_value" : "Economic policy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95561", "prefLabel" : {"_value" : "Economic situation"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/705876", "abstract" : {"_value" : "The combination of a growing and ageing population, increasingly complex care needs, reductions in funding to local government and increases in core care costs have placed adult social care services in England under increasing financial pressure.\n \nIn recognition of the funding pressures, the Government has announced new sources of funding for local authorities with responsibility for social care: a social care precept; improved Better Care Fund; and a new Adult Social Care Support Grant. Whilst stakeholders have welcomed the additional funding, they contend that the funding is insufficient to address the scale of the pressures facing the care system.\n \nBetween 2010/11 and 2015/16 Liverpool Council\u2019s outturn net expenditure on adult social care rose by 8% in cash prices and 1% in real terms. For 2016/17 the authority predict that they will need to spend around an addition £10 million on social care.  Based on the Index of Multiple Deprivation 2015, Liverpool was the 4th most deprived out of 326 district or unitary authorities in England. With one of the highest deprivation scores, the potential amount per head that can be raised from the social care precept in Liverpool is relatively low."}
      , "date" : {"_value" : "2017-03-06T12:53:27.9949262+00:00", "_datatype" : "dateTime"}
      , "description" : ["The debate, entitled \"Social care in Liverpool\" and sponsored by Louise Ellman, will take place in Westminster Hall on 7 March at 4.30pm."], "identifier" : {"_value" : "CDP-2017-0069"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/17113", "prefLabel" : {"_value" : "Economic Policy and Statistics Section"}
      }
      , {"_about" : "http://data.parliament.uk/terms/70459", "prefLabel" : {"_value" : "Social and General Statistics Section"}
      }
      , {"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Social care in Liverpool", "topic" : [{"_about" : "http://data.parliament.uk/terms/95518", "prefLabel" : {"_value" : "Children and families"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95519", "prefLabel" : {"_value" : "Children's social services"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95529", "prefLabel" : {"_value" : "Community care"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/444405", "abstract" : {"_value" : "The UN Committee inquiry\n \nAt the end of August 2015, it was revealed in the national press that the UN Committee on the Rights of Persons with Disabilities (CRPD) was to conduct an inquiry into the impact of the UK Government\u2019s policies on the rights of disabled people.\n \nThe inquiry was conducted under the Optional Protocol to the Convention on the Rights of Persons with Disabilities, to which the UK has been a signatory since 2007. The Optional Protocol allows the UN Committee to investigate a State Party if they have received reliable evidence of \u2018grave and systematic violations of the Convention\u2019. The UK is the first country to be investigated by the UN in relation to this Convention.\n \nThe Committee's findings\n \nThe Committee's report, published on 6 October 2016, found that Government reforms had led to \u2018grave and systematic\u2019 violations of the rights of disabled people. The report emphasises the impact of changes to Housing Benefit entitlement, eligibility criteria for Personal Independence Payment (PIP) and social care, and the closure of the Independent Living Fund.\n \nThe Government's response\n \nThe Government published a robust response alongside the publication of the Committee\u2019s report, stating that it \u201cstrongly disagrees\u201d with the findings.\n \nWhat next?\n \nLike other UN human rights conventions, the CRPD does not contain any mechanism that allows the Committee to enforce its recommendations. As the Government\u2019s response to the report rejected all the recommendations made, there are no more official steps in the process.\n \n "}
      , "date" : {"_value" : "2017-03-06T10:35:24.7302777+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library briefing paper provides information on the inquiry by the UN Committee on the Rights of Persons with Disabilities into the impact of Government policies on the rights of disabled people since 2010."], "identifier" : {"_value" : "CBP-7367"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/17113", "prefLabel" : {"_value" : "Economic Policy and Statistics Section"}
      }
      , {"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "The UN Inquiry into the Rights of Persons with Disabilities in the UK", "topic" : [{"_about" : "http://data.parliament.uk/terms/95504", "prefLabel" : {"_value" : "Benefits policy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95529", "prefLabel" : {"_value" : "Community care"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95553", "prefLabel" : {"_value" : "Disability discrimination"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95574", "prefLabel" : {"_value" : "Employment"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95576", "prefLabel" : {"_value" : "Employment schemes"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95582", "prefLabel" : {"_value" : "Equality"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95632", "prefLabel" : {"_value" : "Housing benefits"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95635", "prefLabel" : {"_value" : "Human rights"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95648", "prefLabel" : {"_value" : "International law"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95657", "prefLabel" : {"_value" : "Legal aid"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95676", "prefLabel" : {"_value" : "Mental health"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95749", "prefLabel" : {"_value" : "Sickness, disability and carers' benefits"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95772", "prefLabel" : {"_value" : "United Nations"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95784", "prefLabel" : {"_value" : "Working age benefits"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/707621", "abstract" : {"_value" : "Dietary advice given to women before, during and after pregnancy is intended to support both maternal and infant health, and is based on the best available evidence. This note focuses on the latest UK dietary advice given to women from family planning through pregnancy and into breastfeeding. It examines the science behind the advice, trends in its take up, how it compares with international advice and options for improving take up."}
      , "date" : {"_value" : "2017-03-03T17:16:41.3057415+00:00", "_datatype" : "dateTime"}
      , "description" : ["This note focuses on the latest UK dietary advice given to women from family planning through pregnancy and into breastfeeding."], "identifier" : {"_value" : "POST-PN-0551"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/61081", "prefLabel" : {"_value" : "POST"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/61081", "prefLabel" : {"_value" : "POST"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/346721", "prefLabel" : {"_value" : "POSTnotes"}
      }
      , "title" : "Dietary Advice, Pregnancy & Breastfeeding", "topic" : [{"_about" : "http://data.parliament.uk/terms/95608", "prefLabel" : {"_value" : "Food"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95619", "prefLabel" : {"_value" : "Health education and preventive medicine"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95621", "prefLabel" : {"_value" : "Health services"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/707620", "abstract" : {"_value" : "The Criminal Finances Bill was introduced in the House of Lords on 22 February 2017 and is scheduled to receive its second reading on 9 March 2017. It completed its final stages in the House of Commons on 21 February 2017. The Bill would make provision to tackle money laundering and corruption, recover the proceeds of crime and counter terrorist financing. The Bill consists of four parts:\n \n  Part 1 is divided into five chapters and would make several provisions to help the Government tackle financial crimes, such as money laundering. Chapter 1 would create Unexplained Wealth Orders that would require an individual suspected of involvement in, or association with, serious criminality to explain the origin of assets that appear to be disproportionate to their income. Chapter 1 would also allow disclosure orders\u2014which are currently used to investigate fraud\u2014to be used in money laundering investigations. Chapter 2 focuses on money laundering and would reform the Suspicious Activities Report regime. It also seeks to improve information sharing between entities in the \u2018regulated sector\u2019, for example banks, in order to combat money laundering. Chapter 3 would make provision in relation to civil recovery. It seeks to improve seizure and forfeiture powers, to allow the seizure of money stored in bank accounts and items of personal property, such as precious metals and jewels. The Bill would also provide for the civil recovery of assets belonging to those involved in or profiting from gross human rights violations. Chapters 4 and 5 relate to enforcement powers and a number of miscellaneous provisions. Part 2 would extend the measures in part 1\u2014such as disclosure orders\u2014to apply to terrorism investigations. It would also extend powers under the Terrorism Act 2000 and the Anti-terrorism, Crime and Security Act 2001 to civilian Counter Terrorism Financial Investigators employed by the police. Part 3 would create an offence of corporate failure to prevent tax evasion. If a person acting on behalf of a company criminally facilitates a tax evasion offence by another person, that company would be guilty of the offence, unless they could show reasonable measures were in place to prevent such activity. Part 4 would make a number of new minor and consequential amendments; financial provisions; and set out the territorial extent and commencement arrangements of the Bill\u2019s provisions. \n \n "}
      , "date" : {"_value" : "2017-03-03T16:40:22.398082+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Lords Library briefing provides information on the Criminal Finances Bill 2016\u201317 ahead of its second reading in the House of Lords on 9 March 2017. The Bill would make provisions to tackle money laundering and corruption, recover the proceeds of crime, and counter terrorist finance. It also seeks to make provisions to enable those who violate human rights to have their assets frozen and will create a new offence of a corporate failure to prevent the facilitation of tax evasion."], "identifier" : {"_value" : "LLN-2017-0011"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/346713", "prefLabel" : {"_value" : "Lords Library notes"}
      }
      , "title" : "Criminal Finances Bill: Briefing for Lords Stages", "topic" : [{"_about" : "http://data.parliament.uk/terms/95538", "prefLabel" : {"_value" : "Crime"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95635", "prefLabel" : {"_value" : "Human rights"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95767", "prefLabel" : {"_value" : "Terrorism"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/707614", "abstract" : {"_value" : "Economic situation\n \nGrowth in the UK economy during the second half of 2016 continued unaffected by the EU referendum result. In 2016 as a whole, GDP growth was 1.8%.\n \n \nConsumers\u2019 appetite to spend \u2013 the bedrock of recent economic growth \u2013 will be tested by the increase in inflation currently underway, which is anticipated to continue. This is mostly the result of the fall in the pound since the EU referendum, causing import prices to rise.\n \n \nRising inflation is forecast to reach around 3% later this year, which will eat into consumers\u2019 purchasing power. This is the main reason GDP growth is forecast to slow to 1.4% in both 2017 and 2018 (based on the latest average forecast of economists).\n \n \nWithout unexpectedly higher income growth, an acceleration in household borrowing and/or reductions in savings rates, overall economic growth will need to come from elsewhere to prevent a sharper slowdown. It is unlikely to come from investment, which is forecast to remain weak, and government spending is not likely to provide any meaningful boost to GDP. Instead, the hope \u2013 and expectation \u2013 is that the fall in the pound will boost the performance of UK exporters, thereby contributing to growth in 2017 and 2018.\n \nPublic finances\n \nIn 2015/16 the government had to borrow £72 billion to make up the difference between its spending and its income from taxes and other revenues. Since its 2009/10 peak the UK\u2019s borrowing, often referred to as the deficit, has halved. Despite the improvement, borrowing remains above the levels seen before the 2007-2008 financial crisis. The Office for Budget Responsibility \u2013 the UK\u2019s fiscal watchdog \u2013 forecast in November that borrowing will fall to £22 billion by the end of this Parliament.\n \n \nAt over 80% of GDP, public sector net debt \u2013 largely the stock of borrowing arising from past deficits \u2013 remains relatively high by recent and international standards. The OBR forecast that the debt-to-GDP ratio will begin falling between 2017/18 and 2018/19.\n \n \nThe Government\u2019s objective and targets for the public finances\n \nThe Government would like to reach a budget surplus at some point in the next Parliament. This is its overall objective for the public finances. A surplus is reached when the government spends less than it receives in taxes and other revenues.  \n \nThe Government has targets for government borrowing and debt aimed at achieving its overall objective. The OBR will assess performance against the borrowing and debt targets, which were revised in Autumn Statement 2016, alongside Spring Budget 2017.\n \nMoving to an Autumn Budget\n \nFrom autumn 2017, the Chancellor is moving the Budget from March to the autumn. This is intended to put an end to tax announcements being made twice a year in the Budget and Pre-Budget Report or Autumn Statement. In 2017 there will be both a Spring Budget and an Autumn Budget.\n \nBusiness rates revaluation\n \nThe next revaluation of the business rates paid on commercial properties will come into effect on 1 April 2017. The revaluation will see some businesses pay more rates and some pay less. However, many businesses and sectors have stated that the increases they face will have a damaging effect on their finances. The Government is expected to announce further support to those businesses facing the steepest increases in the Spring Budget.\n \nThe tax-free personal allowance and higher rate threshold\n \nThe Government is committed to raising the income tax-free allowance to £12,500 by the end of this Parliament. It is also committed to raising the point at which people start paying the higher rate of tax to £50,000. The Chancellor may, in the Spring Budget, choose to announce increases over the coming years to take the allowance and threshold closer to the pledged levels.\n \nNHS and adult social care spending pressures\n \nBoth the NHS and adult social care face significant financial challenges. Costs are rising, the population is growing and ageing, and needs are becoming more complex.\n \nAlthough health spending has been protected relative to other public services, there are concerns that increasing demand and costs threaten the financial stability and sustainability of the NHS.\n \nAdult social care hasn\u2019t received similar spending protection, and local government \u2013 who fund social care \u2013 have seen their funding reduced. The Government has taken some action to address the funding pressures. Some stakeholders have questioned whether the action taken is sufficient. \n \nSchool spending pressures\n \nConcerns about the spending pressures faced by schools have been intensified by the planned introduction of a National Funding Formula in England. As with any change of this type there are expected to be winners and losers. Even after taking Government steps to limit the impact into account, some schools will face reductions in cash funding per pupil towards the end of this Parliament.\n \nWelfare changes\n \nA significant number of previously announced changes to welfare will come into effect in April 2017. Most were announced at Summer Budget 2015. Changes include:\n \n limiting support for children in Child Tax Credits and Universal Credit for new claims and births; removing the Work Related Activity Component of Employment Support Allowance for new claims; reducing the Universal Credit taper rate \u2013 the rate at which UC is reduced as a recipients earnings increase \u2013 from 65% to 63%; withdrawing entitlement to Housing Benefit from some 18-21 year olds replacing existing bereavement payments with Bereavement Support Payment for new claims \n \nAmendments to Personal Independence Payment (PIP) eligibility are also due to take effect on 16 March 2017. The changes clarify the regulations and reverse the effect of two recent Upper Tribunal judgments, which interpreted the regulations in ways which the Government believes are contrary to the original policy intent.\n \nThe Government has committed to make \u201cno new cuts\u201d to social security and tax cuts during this Parliament. \n \nThe Government has committed to make \u201cno new cuts\u201d to social security and tax cuts during this Parliament.  \n \nFurther information\n \nThe Library will publish a summary of Spring Budget on the evening of 8 March.\n \nThe Library briefing, The Budget and the annual Finance Bill, discusses the way that Parliament debates the Budget and scrutinises the Finance Bill.\n \nThe Library will publish Economic Indicators and Regional and National Economic Indicators  on 6 March.\n \nLook out for Spring Budget related blogs on the Library\u2019s blog, Second Reading."}
      , "date" : {"_value" : "2017-03-03T15:18:05.6502953+00:00", "_datatype" : "dateTime"}
      , "description" : ["The briefing sets out the background to Spring Budget 2017 which will take place on Wednesday 8 March 2017. The Office for Budget Responsibility (OBR) will publish revised forecasts for the economy and public finances on the same day."], "identifier" : {"_value" : "CBP-7913"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/17113", "prefLabel" : {"_value" : "Economic Policy and Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Spring Budget 2017: Background briefing", "topic" : [{"_about" : "http://data.parliament.uk/terms/95503", "prefLabel" : {"_value" : "Benefits administration"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95504", "prefLabel" : {"_value" : "Benefits policy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95505", "prefLabel" : {"_value" : "Bereavement benefits"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95529", "prefLabel" : {"_value" : "Community care"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95560", "prefLabel" : {"_value" : "Economic policy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95561", "prefLabel" : {"_value" : "Economic situation"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95599", "prefLabel" : {"_value" : "Family benefits"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95620", "prefLabel" : {"_value" : "Health finance"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95632", "prefLabel" : {"_value" : "Housing benefits"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95637", "prefLabel" : {"_value" : "Incomes and poverty"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95651", "prefLabel" : {"_value" : "International trade"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95666", "prefLabel" : {"_value" : "Local government"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95697", "prefLabel" : {"_value" : "Older people"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95724", "prefLabel" : {"_value" : "Public expenditure"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95749", "prefLabel" : {"_value" : "Sickness, disability and carers' benefits"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95764", "prefLabel" : {"_value" : "Taxation"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95784", "prefLabel" : {"_value" : "Working age benefits"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/707613", "abstract" : {"_value" : "The motion below is scheduled to be debated on 7 March 2017.\n \n STANDING ORDERS (PUBLIC BUSINESS) Mr David Lidington   That: (1) In Standing Order No. 83S(3)(c), after the paragraph (4A) treated as inserted in Standing Order No. 83J, insert- \"(4B) In addition, a clause or schedule- (a) relates exclusively to England, Wales and Northern Ireland, and (b) is within devolved legislative competence, if it does nothing other than set one or more of the main rates of income tax for a tax year.\"\"; (2) In Standing Order No. 83S(3)(d), at the end insert \"and\"; (3) In Standing Order No. 83S(3), omit sub-paragraph (f), and the \"and\" preceding it; (4) In Standing Order No. 83T(2)(c), for \", (7) and (12)\" substitute \"and (7)\"; and (5) In Standing Order No. 83U(8), for \"(4A), (7) and (12)\" substitute \"(4B) and (7)\". \n \nStanding Orders Nos 83J-83X were agreed by the House on 22 October 2015. They are the Standing Orders that set out the English votes for English laws (EVEL) procedures. \n \nThe EVEL Standing Orders, as agreed on 22 October 2015, generally required the Speaker to certify clauses, schedules or entire bills that related exclusively to England, or to England and Wales, and were within devolved legislative competence. Members representing seats in England, or England and Wales, have to give (or withhold) their consent to provisions that are certified by the Speaker, as a bill passes through the House.  They do this in legislative grand committees, after Report Stage; and, if necessary, when the House considers Lords amendments.\n \nFor Finance Bills, the criteria for certification were different (see below) because the Scottish Parliament has a number of powers in relation to taxes that the other devolved legislatures do not. Under the Scotland Act 2012 the Scottish Parliament was given the power to set a Scottish rate of income tax.  The same Act also created the Scottish tax on land transactions and the Scottish tax on disposals to landfill.  The Scotland Act 2016 widened the Scottish Parliament\u2019s powers in relation to income tax.  \u201cFor the first time the Scottish Parliament has the power to set all income tax rates and bands (except the personal allowance, which remains reserved) that will apply to Scottish taxpayers\u2019 non-savings, non-dividend (NSND) income for tax year 2017/18\u201d.[1]  It also devolved air passenger duty and the aggregates tax. \n \nStanding Order No 83S sets out how the EVEL procedures apply to Finance Bills, or to a bill, which before second reading contained provisions which would be within the scope of a Finance Bill. Currently:\n \n A clause or schedule which relates exclusively to England, Wales and Northern Ireland is within devolved legislative competence if it would be within the legislative competence of the Scottish Parliament to make any corresponding provision for Scotland in an Act of that Parliament. \n \nReflecting the wider powers for the Scottish Parliament under the Scotland Act 2016 to set all income tax rates, the motion amends the Standing Orders to provide that any clause or schedule that makes changes to main rates of income tax (that is the starting rate, the basic rate and the higher rate[2]) for a tax year \u201crelates exclusively to England, Wales and Northern Ireland, and is within devolved legislative competence\u201d.  In other words, such a provision would have to be certified by the Speaker.  Such a provision would then require consent in a Legislative Grand Committee (England, Wales and Northern Ireland).\n \nThe change to Standing Order No 83U provided for in paragraph (5) of the motion would have the effect of applying the changed provision to the founding motions for the Finance Bill (i.e., the Budget resolutions). A budget resolution relating to income tax would be subject to a double division (under Standing Order No. 83V) and would require a majority both of all Members and of all Members representing constituencies in England, Wales and Northern Ireland.\n \nIf the Standing Orders are amended, they would apply to Budget Resolutions considered at the end of the debate on the Budget which the Chancellor of the Exchequer will present on Wednesday 9 March 2017.\n \nAt Business Questions on 2 March 2017, the Leader of the House, David Lidington, said that the Government would publish an explanatory memorandum on the proposed Standing Order change (see Supporting Documents, below). He also outlined the reasons for the proposed change:\n \n The proposed change to the Standing Orders is to recognise the fact that the Scotland Act 2016 has devolved to the Scottish Parliament the right to set the main rates of income tax. Our own Standing Orders on English votes for English laws therefore need to be adjusted to take account of the fact that we may well in future have resolutions or pieces of legislation relating to main income tax rates that are specific to England, or to England, Wales and Northern Ireland, but not to Scotland, because those matters have been devolved. That is the purpose of the technical change to the Standing Orders.[3] \n \nAn Order of 1 March 2017 allows debate on the Standing Order change to continue for up to one hour.[4]\n \nThe Library briefing papers on EVEL and on the devolution of financial powers to the Scottish Parliament provide some further background:\n \n Devolution of financial powers to the Scottish Parliament: recent developments (SN07077, March 2016) English votes for English laws (CBP 7339, December 2015) \n \n \n \n[1]     Scottish Government, Scottish income tax 2017/18 [last viewed 2 March 2017]\n \n[2]     Income Tax Act 2007, section 6\n \n[3]     HC Deb 2 March 2017 c437\n \n[4]     HC Deb 1 March 2017 c391"}
      , "date" : {"_value" : "2017-03-03T13:27:58.4534632+00:00", "_datatype" : "dateTime"}
      , "description" : ["The Scottish Parliament now has the power to set the main rates of income tax.  A motion to be debated on 7 March 2017 would amend Standing Orders on English votes for English laws to take into account that in future there may be legislation relating to income tax rates that are exclusive to England, Wales and Northern Ireland."], "identifier" : {"_value" : "CDP-2017-0079"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/61055", "prefLabel" : {"_value" : "Parliament and Constitution Centre"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Income tax and English votes for English laws Standing Orders", "topic" : [{"_about" : "http://data.parliament.uk/terms/95552", "prefLabel" : {"_value" : "Devolution"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95705", "prefLabel" : {"_value" : "Parliamentary procedure"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/339116", "abstract" : {"_value" : "This note explains current moves to provide a mechanism for using unclaimed financial assets for charitable purposes, outlines the scale of the issue and provides advice on how constituents can check to see if they can reclaim any 'lost' assets. A more complete account of the issue can be found in Library Research Paper 08/73 which was produced for the passage of the Dormant Bank and Building Society Accounts Bill, in 2008."}
      , "date" : {"_value" : "2017-03-03T12:46:11.5845903+00:00", "_datatype" : "dateTime"}
      , "description" : ["This note explains current moves to provide a mechanism for using unclaimed financial assets for charitable purposes, outlines the scale of the issue and provides advice on how constituents can check to see if they can reclaim any 'lost' assets.  A more complete account of the issue can be found in Library Research Paper 08/73 which was produced for the passage of the Dormant Bank and Building Society Accounts Bill, in 2008."], "identifier" : {"_value" : "SN03027"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Unclaimed financial assets / dormant accounts", "topic" : [{"_about" : "http://data.parliament.uk/terms/95603", "prefLabel" : {"_value" : "Financial services"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/705882", "date" : {"_value" : "2017-03-03T12:27:13.6897444+00:00", "_datatype" : "dateTime"}
      , "description" : ["There will be a debate on beer duty on 9.30am on Tuesday 7th March. It is sponsored by Steve Double MP."], "identifier" : {"_value" : "CDP-2017-0071"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Beer Duty", "topic" : [{"_about" : "http://data.parliament.uk/terms/95764", "prefLabel" : {"_value" : "Taxation"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/705883", "abstract" : {"_value" : "Summary\n \nReasons for receiving slower than advertised broadband speeds\n \nMost broadband packages are advertised with their headline speeds, for example up to 20Mb per second. However, it is unlikely that a customer will be able to receive the headline speed all of the time.\n \nThere are a number of reasons that a customer may not receive the headline broadband connection speed advertised by internet service providers (ISPs). These include:\n \n Where a customer lives: the maximum speed available declines the further the customer is away from the telephone exchange \u2013 with typical copper wiring, the further the broadband signal travels, the slower and more distorted they tend to become; Customer set up: electrical interference; where the router is in comparison to the devices using it; and the quality of the customer\u2019s line can affect broadband speed; Peak times: the number of people using the network at any one time\u2014at peak times (usually evenings) broadband speed may be slower. \n \nMore information on factors affecting broadband speeds is available in Ofcom\u2019s Consumer Guide on Broadband Speeds.\n \nAdvertising broadband speeds\n \nThe Advertising Standards Authority (ASA) is the UK independent regulator of advertising across all media and enforces rules on how headline broadband speed claims are presented to consumers. \n \nIn the UK, the content of advertising, sales promotions and direct marketing across all media, including marketing on websites, is self-regulated by the ASA. It does this by enforcing the Advertising Codes; there are separate codes for non-broadcast and broadcast advertisements. Adverts are expected to be \u201clegal, decent, honest and truthful\u201d. The ASA is independent of both the Government and the advertising industry. It is recognised by the Government and other regulators as the body to deal with complaints about advertising. Its remit includes acting on and investigating complaints about advertisements as well as proactively monitoring and taking action against misleading, harmful or offensive advertisements, sales promotions and direct marketing. If a complaint about an advertisement is upheld, the advertiser must withdraw or amend the advertisement and not use the advertising approach again. All ASA adjudications are published.\n \nThe Library Briefing Paper The Role of the Advertising Standards Authority (23 February 2016) (CPB 6130) provides an overview of the functions and remit of the ASA.\n \nThe Advertising Codes are set by the Committees of Advertising Practice (CAP) and are accompanied by Advertising Guidance (non-broadcast and broadcast). The Broadband speed claims Advertising Guidance explains that headline speed claims are permitted to be advertised if they are achievable by at least 10% of the relevant customer base, where the qualification \u201cup to\u201d is used when presenting the headline broadband speed.\n \nReviewing how broadband speed claims are advertised\n \nIn November 2016, the ASA published independent research into consumers\u2019 understanding of broadband speed claims made in advertisements. The research found that:\n \n Speed is an important factor for a significant proportion of consumers who are making decisions between providers;  Levels of knowledge and understanding of broadband speeds vary, but it is low overall with many not knowing what speed they need to carry out daily online tasks;  Most understand that the higher the number in the ad, the higher the speed of the service, but many are unclear on what this means for them and what speed they would likely achieve;  Most consumers believe they are likely to receive a speed at or close to the headline speed claim when, for many, that is not likely to be the case. \n \nThe ASA has called for a change to the way broadband speed claims are advertised to ensure consumers are not misled and CAP has announced it will review its guidance to advertisers. CAP is expected to report publicly in Spring 2017. ASA\u2019s announcement was supported by the Internet Service Providers\u2019 Association (the UK trade association for ISPs).\n \nOfcom Voluntary Codes of Practice\n \nResidential\n \nAlongside the advertising requirements, Ofcom has asked internet service providers to sign up to a voluntary Code of Practice for residential broadband speeds (updated in 2015). The Code requires ISPs to provide consumers with clear, accurate information on broadband speeds, including the maximum speeds they can achieve, the estimated speed on their line, and factors that may slow down the speed. It also requires that ISPs provide a route of redress when speed performance is poor.\n \nThe following ISPs have confirmed that they have implemented and signed up to the Code:\n \n BT Sky Virgin Media KC EE Talk Talk Vodafone Zen Internet \n \nThis does not guarantee compliance but Ofcom expects signatories to honour the letter and spirit of the Code.\n \nThe following ISPs have confirmed that they intend to sign up to the Code once they are compliant with the requirements:\n \n Hyperoptic Plusnet InTouch Systems The Co-op Post Office \n \n \n \nBusiness\n \nThere is also a Voluntary Business Broadband Speeds Code of Practice (2016), which requires ISPs to provide accurate and transparent speed information on standard business broadband services at point of sale, manage business customers' speed-related problems, and allow customers to exit the contract without penalty if speeds fall below a minimum threshold.\n \nCurrent signatories to the business Code are:\n \n BT Business Daisy Communications KCOM (Hull business) Talk Talk Business Virgin Media XLN Zen \n \nThis does not guarantee compliance but Ofcom expects signatories to honour the letter and spirit of the Code.\n \n \n \n \n \n \n \n "}
      , "date" : {"_value" : "2017-03-03T11:25:37.082723+00:00", "_datatype" : "dateTime"}
      , "description" : ["MPs will debate broadband speeds and advertising in Westminster Hall on Wednesday 8 March from 4.30pm to 5.30pm. Matt Warman MP will lead the debate. \nThis House of Commons Library debate pack provides a summary of the issue, press and parliamentary coverage, and further reading."], "identifier" : {"_value" : "CDP-2017-0072"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      , {"_about" : "http://data.parliament.uk/terms/67716", "prefLabel" : {"_value" : "Science and Environment Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Broadband speeds and advertising", "topic" : [{"_about" : "http://data.parliament.uk/terms/95534", "prefLabel" : {"_value" : "Consumers"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95766", "prefLabel" : {"_value" : "Telecommunications"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/705877", "abstract" : {"_value" : "This debate was triggered by E-petition 129823 which asked Parliament to:\n \n Make it illegal for a company to require women to wear high heels at work \n \n It's still legal in the UK for a company to require female members of staff to wear high heels at work against their will. Dress code laws should be changed so that women have the option to wear flat formal shoes at work, if they wish. Current formal work dress codes are out-dated and sexist. The House of Commons Petitions Committee and Women and Equalities Committee produced a report on this issue on 25th January 2017. The summary of this report states that: We started this inquiry after a petition calling for it to be illegal for a company to require its female staff to wear high heels at work was signed by more than 150,000 people. The petition was started because of an individual\u2019s experience, but it has become clear in the course of our inquiry that this was not an isolated incident\u2014and nor is the problem confined to high heels. We heard from hundreds of women who told us about the pain and long-term damage caused by wearing high heels for long periods in the workplace, as well as from women who had been required to dye their hair blonde, to wear revealing outfits and to constantly reapply make-up. The Government has said that the existing law is clear, and that the dress code that prompted this petition is already unlawful. Nevertheless, discriminatory dress codes remain widespread. It is therefore clear that the existing law is not yet fully effective in protecting employees from discrimination at work. We call on the Government to review this area of the law and to ask Parliament to change it, if necessary, to make it more effective. The relationship between the provisions of the Equality Act 2010 and workplace dress codes is not widely understood. The Government has said that it expects employers to inform themselves about their legal obligations and to comply with the law. This approach is not working. The Government must do more to promote understanding of the law on gender discrimination in the workplace among employees and employers alike. We recommend that the Government substantially increase the penalties available to employment tribunals to award against employers, including the financial penalties. At present, such penalties are not sufficient deterrent to breaking the law. This petition has done a great deal to raise awareness of the law. It has prompted at least one company to change its own dress code. It is now the responsibility of the Government to ensure that the law is both more widely understood and more effective. "}
      , "date" : {"_value" : "2017-03-03T10:21:45.1179789+00:00", "_datatype" : "dateTime"}
      , "description" : ["Helen Jones MP has secured a debate on high heels and workplace dress codes.  This will take place in Westminster Hall at 4.30pm on Monday 6 March 2017."], "identifier" : {"_value" : "CDP-2017-0070"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Debate on high heels and workplace dress codes", "topic" : [{"_about" : "http://data.parliament.uk/terms/95574", "prefLabel" : {"_value" : "Employment"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/707170", "abstract" : {"_value" : "What is the motion?\n \nThe motion, in the names of the Prime Minister, Ben Gummer and Chris Skidmore, is \"that this House endorses the nomination of Sir David Norgrove for appointment as Chair of the United Kingdom Statistics Authority\".\n \nWhy is the motion needed?\n \nThe appointment of the Chair of the UK Statistics Authority is a Crown appointment. The current Chair, Sir Andrew Dilnot, is stepping down at the end of March 2017. \n \nThe Government's preferred candidate to succeed him is Sir David Norgrove. \n \nThe motion is a substantial motion to approve the appointment.\n \nHow has this appointment been scrutinised?\n \nThe Minister for the Cabinet Office, Ben Gummer invited the Public Administration and Constitutional Affairs Select Committee (PACAC) to hold a pre-appointment hearing, which took place on 24 January 2017.\n \nThe Committee then published a report, Appointment of the Chair of the UK Statistics Authority (HC 941, 26 January 2017), which supported the appointment.  The Committee said:\n \n \"We are satisfied that Sir David Norgrove has both the professional competences and personal independence necessary to fulfil this role. His experience in chairing the Low Pay Commission and the Pensions Regulator will stand him in good stead in driving through the changes needed in the UK Statistics Authority, particularly those coming out of the Bean Review. We are convinced that his professional background and skills will allow him to successfully balance the role of overseeing statistics production and the work of the ONS with that of regulating government statistics. As our predecessor Committee, PASC, stated, \"[g]ood quality statistics are essential to the scrutiny of the Government\u2019s work and performance,\" and we expect Sir David to provide robust leadership to drive up the quality of UK statistical output. We wish him every success as the Chair of UKSA and look forward to engaging with him in the future.\" \n \nWhat is the UK Statistics Authority?\n \nThe UK Statistics Authority is an independent body operating at arm\u2019s length from government as a non-ministerial department.\n \nThe Authority\u2019s statutory objective is to promote and safeguard the production and publication of official statistics that serve the public good.\n \nIt has three main functions:\n \n oversight of the UK official statistics system, which includes around 30 central government departments and the devolved administrations, and the promotion, safeguarding and monitoring of quality, comprehensiveness and good practice in relation to all official statistics, wherever produced; assessment of key official statistics against a code of practice for statistics; and governance of the Office for National Statistics (ONS) \u2013 legally a part of the Authority (its executive office) \u2013 the largest producer of official statistics. \n \nThe National Statistician, John Pullinger, is Chief Executive of the Authority.\n \nWho is Sir David Norgrove?\n \nSir David Norgrove was Chair of the Low Pay Commission (May 2009 - December 2016) and of the Pensions Regulator (January 2005 until December 2010).  He is currently Deputy Chair of the Family Justice Board, having previously been Chair.\n \nWhere can I find out more?\n \nSee the Committee's evidence session and report, Appointment of the Chair of the UK Statistics Authority, for further details.\n \n \n \n \n \n "}
      , "date" : {"_value" : "2017-03-02T17:19:10.2530972+00:00", "_datatype" : "dateTime"}
      , "description" : ["This information has been prepared ahead of debate on a motion on the Appointment of the Chairman of the UK Statistics Authority, on Tuesday 7 March 2017 in the House of Commons Chamber."], "identifier" : {"_value" : "CDP-2017-0078"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/17113", "prefLabel" : {"_value" : "Economic Policy and Statistics Section"}
      }
      , {"_about" : "http://data.parliament.uk/terms/70459", "prefLabel" : {"_value" : "Social and General Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Appointment of Chair of the UK Statistics Authority", "topic" : [{"_about" : "http://data.parliament.uk/terms/95760", "prefLabel" : {"_value" : "Statistics policy"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/707168", "abstract" : {"_value" : "International Women\u2019s Day (IWD), which celebrates the social, economic, cultural and political achievement of women, is marked on 8 March each year. The House of Lords is scheduled to hold a debate to mark the day, focused on the role the UK plays in promoting gender equality globally, on Thursday 9 March 2017. Ahead of the debate, this short House of Lords Library briefing provides background information on IWD; summarises the most recent World Economic Forum (WEF) Global Gender Gap Index report which ranked the UK twentieth internationally for gender parity; presents a selection of information on the situation in the UK in relation to the four criteria used in the WEF report\u2014economy, education, health and politics; summarises recent government statements on how the UK is working to promote gender equality globally; and recommends sources of further reading on the subject of gender parity, both in the UK and internationally."}
      , "date" : {"_value" : "2017-03-02T15:27:04.1257779+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Lords Library briefing provides background reading ahead of the debate to mark International Women\u2019s Day scheduled to take place on Thursday 9 March 2017."], "identifier" : {"_value" : "LIF-2017-0020"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414041", "prefLabel" : {"_value" : "Lords In Focus"}
      }
      , "title" : "International Women's Day 2017", "topic" : [{"_about" : "http://data.parliament.uk/terms/95635", "prefLabel" : {"_value" : "Human rights"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95746", "prefLabel" : {"_value" : "Sex discrimination"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/705893", "abstract" : {"_value" : "In December 2016, the Government published a consultation on proposals to ban the manufacture and sale of cosmetics and personal care products containing microbeads in all of the UK by October 2017. The consultation closed on 28 February 2017.\n \nWhat are microbeads and microplastics?\n \nMicrobeads and other microplastics are used in a variety of cosmetic and personal care products such as scrubs, soaps, lotions and toothpastes. They are added to these products for a number of purposes, such as to make the product more abrasive or for decoration.\n \nThese particles of plastic can enter the environment when consumers rinse them down the drain. The plastic can then subsequently be released into rivers and the sea with waste water outflows.\n \nThe scale of the issue: marine microplastic pollution\n \nMicroplastic debris in marine environments is growing in volume. It comes from a number of sources, such as the breakdown of larger pieces of plastic over time and industrial scrubbers used to blast-clean surfaces.\n \nMicrobeads and other microplastics from cosmetics make up a small proportion of. Studies have calculated that 0.1% to 4.1% of marine microplastic pollution in Europe was from cosmetic product sources. 4.1% equates to between 2,400-8,600 tonnes of plastic entering the marine environment per year.\n \nImpacts of microplastics\n \nMicroplastics are likely to have environmental impacts. Studies have shown they can be ingested by marine animals leading to physical harm and reproductive or toxic effects.\n \nThere is evidence to suggest that microplastics are entering the human food chain. On the basis of current evidence microplastics in seafood are not currently thought to represent a human health risk, although uncertainties remain. The Government has said that the Chief Medical Officer will review their impact on human health.\n \nCosmetic microplastic ban\n \nA number of companies are voluntarily phasing out some types of microplastic in cosmetic products in the EU. The voluntary measures taken by industry could reduce cosmetic microplastic use by almost 50% by 2020.\n \nIn the USA a ban on microbeads in cosmetic and personal care products will be phased in over the next few years. There have been calls for a similar ban in the UK and EU to address what is perceived to be an unnecessary source of microplastic pollution.\n \nIn September 2016, the UK Government committed to banning the manufacture and sale of cosmetics and personal care products containing microbeads in all of the UK by October 2017. In December 2016, the Government published a consultation document, which closes on 28 February 2017.\n \nNews of the Government\u2019s proposed ban was welcomed by the Marine Conservation Society. However, some in the industry question the proportionality of a ban given the success of voluntary efforts and the relatively small contribution that cosmetic products make to marine pollution. A recent research report commissioned by the European Union recommended that more information be collected to help determine whether a ban is required or whether the industry is responding adequately to the issue.\n \nFor further information on the use of microplastics and microbeads and plans to ban their use in the UK, please see the Library, Microbeads and microplastics in cosmetic and personal care products"}
      , "date" : {"_value" : "2017-03-02T15:21:14.2411282+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Commons Library Debate Pack is prepared for MPs will participating in a Westminster Hall debate on the proposed ban on microbeads is scheduled for Wednesday 8 March 2017 from 2.30pm to 4pm. The Member in charge is Rebecca Pow MP."], "identifier" : {"_value" : "CDP-2017-0073"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Proposed ban on microbeads", "topic" : [{"_about" : "http://data.parliament.uk/terms/95490", "prefLabel" : {"_value" : "Animals"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95581", "prefLabel" : {"_value" : "Environmental protection"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95593", "prefLabel" : {"_value" : "Europe"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95606", "prefLabel" : {"_value" : "Fisheries"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95608", "prefLabel" : {"_value" : "Food"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95690", "prefLabel" : {"_value" : "North America"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95714", "prefLabel" : {"_value" : "Pollution"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95777", "prefLabel" : {"_value" : "Waste management"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95778", "prefLabel" : {"_value" : "Water"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/705875", "abstract" : {"_value" : "Different parts of the Bill extend to the various nations of the UK. Parts 2 (electric vehicles) and 3 (civil aviation) and clause 22 (laser offence) extend to the whole of the UK. Part 1 (automated vehicles), clause 21 (vehicle testing and fees) and clause 23(1), (3) and (6) (alternative courses for road traffic penalties) extend to the whole of Great Britain. Clause 23(2) (alternative courses for road traffic penalties) also extends to Northern Ireland.\n \nInsurance for automated vehicles\n \nThe application of \u2018intelligence\u2019 to cars is gathering pace and there is a strong push by manufacturers to develop automated vehicles which will drive themselves.  Currently, insurance law is driver-centric: all (human) drivers have to have insurance in order to provide compensation for third parties for personal injury or property damage due to a driving related incident. The Government\u2019s view is that such principles need to be extended to cover automated vehicles when the car is the driver and the \u2018driver\u2019 is sometimes a passenger.\n \nThe intention behind the legislation is to emphasise that if there is an insurance \u2019event\u2019 (accident) the compensation route for the individual remains within the motor insurance settlement framework, rather than through a product liability framework against a manufacturer.\n \nThe Government believes that answering the insurance questions sooner rather than later will encourage manufacturers to develop transport technology in the United Kingdom with the confidence that they can exploit market opportunities.\n \nElectric vehicles\n \nSince 2009 UK governments of all parties have sought to provide a framework in which electric vehicles, or \u2018ultra low emission vehicles\u2019 (ULEVs) can grow. The decarbonisation of both private cars and goods and passenger carrying vehicles is seen as critical to helping the UK achieve its climate change obligations and to improving air quality, particularly in cities such as London.\n \nThe measures in the Bill are intended to help deliver the aim in the Conservative Manifesto commitment for almost every car and van to be a zero emission vehicle by 2050. Taken together, the proposed powers would allow Government to regulate if necessary in the coming years, to improve the consumer experience of electric vehicle charging infrastructure, to ensure provision at key strategic locations like Motorway Service Areas (MSAs), and to require that charge points have \u2018smart\u2019 capability.\n \nATOL\n \nThe Air Travel Organisers\u2019 Licence (ATOL) is a consumer protection scheme for package holidays that include a flight. It is managed by the Civil Aviation Authority (CAA) on behalf of the Secretary of State for Transport. If an ATOL-licensed firm goes out of business, the CAA can refund protected consumers or, if they are already on holiday, ensure their safe repatriation home.\n \nIn recent years, there have been significant changes in the travel market. In particular, consumers are using the internet to \u2018mix and match\u2019 or \u2018dynamically package\u2019 the components of their holiday. In order to meet the needs of the modern consumer, the ATOL scheme was updated in 2012. Following a consultation in 2016, the Government believes that further legislative change is now needed. The measures in the Bill are intended to ensure that ATOL keeps pace with innovation in the travel market and align the scheme with a revised EC Directive on package travel and linked travel arrangements (2015/2302/EU), which must be implemented by 1 January 2018. \n \nAir Traffic Services\n \nNATS Holdings Ltd. (NATS, formerly National Air Traffic Services) is an air navigation service provider in the UK, responsible for providing air traffic services within UK and Eastern North Atlantic airspace. NATS is split into two main business units that provide distinct services. One, NATS (En-Route) plc (NERL), provides en-route air traffic control services and a centralised approach service at the London airports. NERL provides these services pursuant to a licence granted to it by the Secretary of State for Transport under the Transport Act 2000, as amended. It is economically regulated under that licence, by the Civil Aviation Authority (CAA).\n \nThe measures in the Bill are intended to modernise the licensing framework by updating the CAA\u2019s regulatory powers, giving the CAA access to a wider range enforcement tools when regulating NATS, and updating the Government\u2019s powers to extend the licence notice period, thereby promoting NATS\u2019 ability to arrange more efficient financing.\n \nVehicle testing and fees\n \nThe Bill introduces a power for the Secretary of State to designate premises for vehicle testing and cap testing station fees. The Government believes that these changes are necessary to plug the gap in the law and allow authorised testing facilities to charge a pit fee on a statutory footing rather than on a contractual basis.\n \nShining a laser at a vehicle\n \nThe Bill would change the law so that an offence is committed when the actions of an offender result in a pilot, driver, or captain being dazzled or distracted by a laser.\n \nDiversionary courses\n \nThe Bill would provide a specific legal basis for charging for diversionary courses. The Government\u2019s view is that road traffic offenders would not notice any difference as the same range of courses would be offered as before, on the same conditions, for the same fee. The change is a purely technical one, to remove any doubt as to the legal basis for charging.\n \nThis paper will be updated as the Bill progresses through its Parliamentary stages.\n \nFurther information on road/motor vehicle and aviation policy can be found on the transport policy page of the Parliament website.\n \n "}
      , "date" : {"_value" : "2017-03-02T14:52:00.8642191+00:00", "_datatype" : "dateTime"}
      , "description" : ["This paper explains the policy background to and contents and purpose of the Vehicle Technology and Aviation Bill 2016-17 (HC Bill 143).\n\nThe Bill was introduced in the House of Commons on 22 February 2017. It is scheduled to receive Second Reading on 6 March."], "identifier" : {"_value" : "CBP-7872"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      , {"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Vehicle Technology and Aviation Bill 2016-17", "topic" : [{"_about" : "http://data.parliament.uk/terms/95501", "prefLabel" : {"_value" : "Aviation"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95737", "prefLabel" : {"_value" : "Research and innovation"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95738", "prefLabel" : {"_value" : "Roads"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/685683", "date" : {"_value" : "2017-03-02T12:12:00.3414362+00:00", "_datatype" : "dateTime"}
      , "identifier" : {"_value" : "LIF-2017-0014"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414041", "prefLabel" : {"_value" : "Lords In Focus"}
      }
      , "title" : "House of Lords: Largest Votes Recorded, March Update", "topic" : [{"_about" : "http://data.parliament.uk/terms/95628", "prefLabel" : {"_value" : "House of Lords"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95705", "prefLabel" : {"_value" : "Parliamentary procedure"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/345938", "abstract" : {"_value" : "This note looks at women\u2019s participation in the UK labour market and in business.\n \n70.0% of women aged 16-64 were in employment in October-December 2016, the highest proportion since comparable records began in 1971. This compares to a male employment rate of 79.3%.\n \n \n \nThe number of women aged 16 and over working full-time was 8.7 million in October-December 2016, compared to 14.6 million men. The number of women working part-time was 6.3 million, compared to 2.3 million men.\n \n \n \nAn estimated 21% of SMEs were led by women in 2015.\n \n26% of FTSE100 directors were female in June 2016, up from 13% in 2011.\n \n "}
      , "date" : {"_value" : "2017-03-01T15:46:33.6331852+00:00", "_datatype" : "dateTime"}
      , "description" : ["This note looks at women\u2019s participation in the UK labour market and in business."], "identifier" : {"_value" : "SN06838"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/17113", "prefLabel" : {"_value" : "Economic Policy and Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Women and the economy", "topic" : [{"_about" : "http://data.parliament.uk/terms/95561", "prefLabel" : {"_value" : "Economic situation"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95574", "prefLabel" : {"_value" : "Employment"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95707", "prefLabel" : {"_value" : "Pay"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/706378", "abstract" : {"_value" : "Following the Canadian Supreme Court\u2019s decision in Carter v Canada (Attorney General) in 2015, which declared that sections of the Canadian Criminal Code were in violation of an individual\u2019s rights under the Canadian Charter of Rights and Freedoms, change to the Criminal Code exempts certain medical practitioners and individuals from culpable homicide, therefore allowing both voluntary euthanasia and assisted suicide, subject to a number of conditions. \u2018Assisted dying\u2019 or \u2018assisted suicide\u2019 is unlawful in the majority of US states, save for Oregon, Washington, Vermont, California and Colorado, allow adult residents of their state, who are capable of voluntarily making decisions about their health, and are terminally ill with a prognosis of six months, to seek lethal medication for self-administration. Montana provides a defence for physicians on the event they face homicide changes. \n \nSection 2 of the Suicide Act 1961 (as amended by the Coroners and Justice Act 2009) in England and Wales makes it criminally unlawful for an individual to perform an act capable of encouraging or assisting the suicide or attempted suicide of another person, where that individual\u2019s act was intended to encourage, assist or attempt at suicide. There have been a number of challenges to the Suicide Act 1961. In 2014, the Supreme Court considered the state of the law in the context of Article 8 of the European Convention on Human Rights, which ultimately deferred the matter to Parliament for consideration. Thus far, there have been attempted amendments and several private member\u2019s bills in parliament that have been unsuccessful in changing the law."}
      , "date" : {"_value" : "2017-03-01T15:38:51.7403611+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Lords Library briefing sets out the law in Canada and selected states in the United States ahead of the question for short debate on 6 March 2017 on whether recent legislative changes on assisted dying in North America provide an appropriate basis for legislation in England and Wales. It also provides an overview of the law as it currently stands in England and Wales, as well as a brief legal history of the changes and attempts to change it."], "identifier" : {"_value" : "LIF-2017-0019"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414041", "prefLabel" : {"_value" : "Lords In Focus"}
      }
      , "title" : "Assisted Dying Legislation: North America and England and Wales", "topic" : [{"_about" : "http://data.parliament.uk/terms/95538", "prefLabel" : {"_value" : "Crime"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95541", "prefLabel" : {"_value" : "Criminal law"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95547", "prefLabel" : {"_value" : "Death"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95706", "prefLabel" : {"_value" : "Patient rights and complaints"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/345858", "abstract" : {"_value" : "Size of the self-build sector\n \nThe UK has a much lower rate of self-building than other European countries. The sector currently accounts for between 7-10% of completions while in Austria it accounts for around 80%. There is some evidence to suggest that there may be significant unmet demand for self-build in the UK. A survey commissioned by the Building Societies Association (BSA), published in October 2011, suggested that 53 per cent of people in the UK would consider building their own home given the opportunity. Around 100,000 people subscribe to one of the main plot-finding websites.\n \nBarriers\n \nBarriers to self-building have been identified as:\n \n land supply and procurement; access to finance; the planning process; and general regulation and red tape. \n \nGovernment initiatives (England only)\n \nIn Laying the foundations: a housing strategy for England (2011), the Coalition Government set out plans to enable more people to build or commission their own home. Various measures were introduced to ease the path for those wanting to build their own home including (repayable) funding; an exemption from the Community Infrastructure Levy; amendments to planning guidance; and improved access to public sector land. \n \nRichard Bacon\u2019s Self-build and Custom Housebuilding Bill gained Government support in the 2014-15 Parliamentary Session and obtained Royal Assent on 26 March 2015. Since April 2016 local planning authorities in England have been required to establish local registers of custom builders who wish to acquire suitable land on which to build their own home. It also requires local authorities to have regard to the demand on their local register when exercising planning and other relevant functions. The Act extends to Wales but has only been brought into force in England.\n \nA Right to Build\n \nA Government consultation exercise was conducted between October and December 2014: Right to Build: supporting custom and self build: consultation the outcome of which was announced in March 2015: Right to Build: supporting custom and self build: government response to consultation.  The Coalition Government said it would build on the legislative framework provided by the Self-build and Custom Housebuilding Act 2015 to introduce a Right to Build under which local authorities would be required to meet demand on the register by granting development permissions for sufficient serviced plots of land.\n \nA desire to double the number of homes built\n \nThe Conservative Party\u2019s 2015 Manifesto contained a commitment to introduce a Right to Build and double the number of self and custom build homes by 2020. Chapter 2 of the Housing and Planning Act 2016 introduced the \u2018Right to Build\u2019 with effect from 31 October 2016. A custom and self-build toolkit has also been developed.\n \nThe Housing White Paper (February 2017) reasserts the Government\u2019s commitment to support the self/custom build sector.\n \n \n \n \n \n \n \n "}
      , "date" : {"_value" : "2017-03-01T14:58:47.3788923+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library briefing paper describes various initiatives aimed at growing the self-build and custom build housing sectors.  Both self-build and custom build provide routes into home ownership for individuals and groups who want to play a role in developing their own homes. The paper covers England only."], "identifier" : {"_value" : "SN06784"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Self-build and custom build housing (England)", "topic" : [{"_about" : "http://data.parliament.uk/terms/95629", "prefLabel" : {"_value" : "Housing"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95634", "prefLabel" : {"_value" : "Housing supply"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95702", "prefLabel" : {"_value" : "Owner occupation"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/694167", "abstract" : {"_value" : "The text of the motion is:\n \n That this House has considered UK policy on torture and the treatment of asylum claims \n \nThe bid to the Backbench Business Committee may be heard on parliamentlive.tv\n \nTorture has long been prohibited by the common law, as Lord Bingham described in a 2005 House of Lords judgment:\n \n It is \u2026 clear that from its earliest days the common law of England set its face firmly against the use of torture. Its rejection of this practice was indeed hailed as a distinguishing feature of the common law \u2026 . \u2026 In rejecting the use of torture, whether applied to potential defendants or potential witnesses, the common law was moved by the cruelty of the practice as applied to those not convicted of crime, by the inherent unreliability of confessions or evidence so procured and by the belief that it degraded all those who lent themselves to the practice. (A v Secretary of State for the Home Department [2005] UKHL 71 [11]) \n \nThe English Bill of Rights of 1688 provided that \u201ccruell and unusuall punishments\u201d should not be inflicted, and in Scotland torture was prohibited under the Treason Act of 1708.\n \nThe contemporary legal framework prohibiting torture is set out in a number of different international treaties and instruments and in domestic legislation.\n \nArticle 3 of the European Convention on Human Rights (ECHR) states that \u201cNo one shall be subjected to torture or to inhuman or degrading treatment or punishment\u201d. The ECHR is given effect in domestic law by the Human Rights Act 1998, which places an obligation on public authorities to act in compliance with the ECHR.  \n \nUnlike other Convention rights, the prohibition on torture is absolute, meaning that it is not limited by exceptions, and derogations from article 3 are not permitted, even in times of war or public emergency.\n \nThe prohibition in article 3 is closely modelled on article 5 of the Universal Declaration of Human Rights.\n \nThe UK has also ratified the 1984 UN Convention Against Torture and Other Cruel Inhuman or Degrading Punishment (UNCAT). UNCAT defines torture as:\n \n Any act by which severe pain or suffering, whether physical or mental, is intentionally inflicted on a person for such purposes as obtaining from him or a third person information or a confession, punishing him for an act he or a third person has committed or is suspected of having committed, or intimidating or coercing him or a third person, or for any reason based on discrimination of any kind, when such pain or suffering is inflicted by or at the instigation of or with the consent or acquiescence of a public official or other person acting in an official capacity. \n \nAs a matter of domestic criminal law, torture is prohibited by section 134 of the Criminal Justice Act 1988, which defines it as the infliction of severe pain or suffering by a public official in the performance of his public duties.\n \nIn practice, these legal principles tend to arise in certain specific contexts, such as intelligence cooperation with regimes that use torture; the admissibility of evidence obtained through torture in legal proceedings; the extradition or deportation of individuals to jurisdictions that practice torture; and, asylum applications.\n \nHome Office Asylum Policy Instructions guide asylum caseworkers in making decisions on asylum applications. A November 2016 report by Freedom from Torture claimed existing Home Office policy is not being followed and that expert medico-legal reports are poorly handled by caseworkers. Following publication of the report, the Minister for Immigration reiterated the policy guidance and Home Office officials undertook a review of the cases to which it referred."}
      , "date" : {"_value" : "2017-03-01T14:39:17.3505661+00:00", "_datatype" : "dateTime"}
      , "description" : ["A backbench business debate on a motion relating to UK policy on torture and the treatment of asylum claims will be held in Westminster Hall on Thursday 2 March 2017. Dr Tania Mathias, Alistair Carmichael, Dr Lisa Cameron and Kate Green will open and lead the debate."], "identifier" : {"_value" : "CDP-2017-0067"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "UK policy on torture and the treatment of asylum claims", "topic" : [{"_about" : "http://data.parliament.uk/terms/95498", "prefLabel" : {"_value" : "Asylum"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95635", "prefLabel" : {"_value" : "Human rights"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/705260", "abstract" : {"_value" : " \n \nThere will be no debate pack for this wide-ranging debate but the following links may be helpful.\n \nPrevious Debates\n \nLast year\u2019s debate on 2 March 2016 highlighted the First Report from the Welsh Affairs Committee, on Pre-legislative scrutiny of the draft Wales Bill, [HC449]. The motion was moved by Stephen Kinnock with Alun Cairns, the Parliamentary Under-Secretary of State, responding.\n \nThe motion for the 2015 debate on 5 March was moved by Glyn Davies. Stephen Crabb, the Secretary of State for Wales, responded.\n \nWestminster Hall debates on Welsh matters\n \n Leaving the EU: Infrastructure in Wales, 17 Jan 2017 (Debate Pack) The Effect of Leaving the EU: Businesses in Wales, 14 Dec 2016 (Debate Pack) Leaving the EU: Wales, 25 Oct 2016 (Debate Pack) Post Offices in Wales, 13 Sep 2016 Broadband in Wales, 6 Jul 2016 (Debate Pack) and briefing on Rollout of superfast broadband to rural communities Access to Justice: Wales, 15 Dec 2015 (Debate Pack) \n \n \n \nThe Wales Act 2017\n \nThe Wales Act was drawn up to give effect to the Government's policy of establishing a 'reserved powers' model for devolution in Wales. This arose from the second report of the Silk Commission, Empowerment and Responsibility: Legislative Powers to Strengthen Wales, published in March 2014. The Act received Royal Assent on 31 January 2017.\n \nThe Wales Act 2017 page on the Parliament website provides links to the debates in both Houses of Parliament. Follow the link to All Bill documents and scroll down for all the House of Commons Library and House of Lords Library briefings on the Act.\n \nCommons Library briefings\n \nCivil Law\n \nCivil Legal Aid: England & Wales, Scotland and N Ireland compared, Jun 2016\n \n The Legal Aid, Sentencing and Punishment of Offenders Act 2012 (LASPO) made significant changes to the operation of the civil legal aid scheme in England and Wales, both reducing the scope of civil legal aid and changing the financial eligibility criteria. \n \n \n \nConstitution\n \nBrexit: devolved legislature business, A record of Brexit-related business in the devolved legislatures, updated each Monday, Feb 2017. The paper includes a link to:\n \n Oral statement following the Supreme Court ruling on triggering Article 50 by the Counsel General in the National Assembly for Wales \n \nLegislating for Brexit: the Great Repeal Bill, Feb 2017\n \n If the Great Repeal Bill transposes all directly applicable EU law (leaving aside some items that cannot be carried over for logical reasons) it could effectively implement a range of provisions that are within devolved competence (e.g. agriculture). This would require consent from the devolved legislatures, so long as the Sewel Convention is respected. An alternative approach would be to restrict the Bill to reserved matters and leave the devolved legislatures to create their own continuation Bills. The Secretary of State for Scotland has suggested that a legislative consent motion would be sought for the Great Repeal Bill.(See Section 6 of the briefing for more information.) \n \nEuropean Union (Notification of Withdrawal) Bill, Jan 2017\n \n The Supreme Court decided unanimously in the Miller case that the devolved legislatures do not have a legal power to block the Government from triggering Article 50. The Government has said the current Bill does not require a legislative consent motion. \n \n \n \nEconomy\n \nRegional and national economic indicators, Feb 2017\n \n Data summarising the economic situation around the UK. See section 11 for Wales. \n \nRegional and local economic growth statistics\n \n Overview of annual statistics on the economies of the UK including local areas. The landing page for this briefing links to an interactive spreadsheet of data for local areas. \n \n \n \nHousing\n \nComparison of homelessness duties in England, Wales, Scotland and Northern Ireland, Dec 2016\n \n Comparison of the legal duties to tackle homelessness and assist people presenting as homeless in England, Wales, Scotland, Northern Ireland. In this devolved policy area, increasingly divergent approaches are emerging from the four nations. \n \nComparing private rented sector policies in England, Scotland, Wales and Northern Ireland, Aug 2016\n \n Housing is a devolved matter; policy approaches to the private rented sector in the devolved administrations are showing some significant divergences. Both Scotland and Wales have introduced legislation to implement a new framework for the sector. \n \nComparing the Right to Buy in England, Scotland, Wales and Northern Ireland, Jul 2016\n \n The Welsh Government has decided to abolish the Right to Buy. The Legislative Programme for 2016-17 announced that a Bill to abolish the Right to Buy and Right to Acquire will be introduced during the current session. \n \n \n \nTransport\n \nTransport in Wales, Jul 2016\n \n An overview of those transport areas that are reserved to the UK Parliament; those which are devolved to Wales and proposals by the Silk Commission and in the Wales Bill to devolve further powers. \n \n \n \nWelsh Affairs Committee \n \nCurrent Welsh Affairs Committee Inquiries:\n \n Devolution: Lessons for Wales  Inquiry announced 13 September 2016Welsh Affairs Committee inquiry into how devolved and federal governments work successfully in other nations \n \n Broadcasting in Wales: follow-up: S4C funding  Inquiry announced 27 January 2017 Welsh Affairs Committee Broadcasting in Wales follow-up sessions on S4C funding Implications for Wales of the EU referendum result  Inquiry announced 28 July 2016 Welsh Affairs Committee inquiry into the implications for Wales post EU Responsibilities of the Secretary of State for Wales  Inquiry announced 09 September 2015 Welsh Affairs Committee evidence sessions on the responsibilities of the Welsh Secretary Wales and Borders rail franchise  Inquiry announced 20 July 2016 Welsh Affairs Committee inquiry into improvements to rail transport in Wales \n \n \n \n \n \n \n \n "}
      , "date" : {"_value" : "2017-03-01T13:29:06.0113106+00:00", "_datatype" : "dateTime"}
      , "description" : ["A general debate on Welsh Affairs is held each year in the Commons Chamber on, or around, St David\u2019s Day. Since 2010 the Backbench Business Committee has allocated time for the annual debate from its 35 allotted days. The debate in on the motion: \u201cthat this House has considered Welsh Affairs.\u201d"], "identifier" : {"_value" : "CDP-2017-0068"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/61055", "prefLabel" : {"_value" : "Parliament and Constitution Centre"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Welsh Affairs - annual debate on 2 March 2017", "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/705892", "abstract" : {"_value" : "Antimicrobial resistance (AMR) is a significant and increasing threat to public health globally. It is estimated that in the US and Europe alone, antimicrobial-resistant infections currently cause at least 50,000 deaths per year with hundreds of thousands more dying in other areas of the world.\n \nIf we are unable to slow the acceleration of AMR, future consequences will be worse still. The Review on antimicrobial resistance has estimated that 10 million people a year could be dying as a result of AMR by 2050.[1]  The Chief Medical Officer, Professor Dame Sally Davis has said it is possible we will return to a time where 40 per cent of the population die prematurely from infections we cannot treat.[2] \n \nThere is action that can be taken to slow the progression of AMR. Examples of these actions include:\n \n Improving infection control; Ensuring appropriate prescribing and use of antibiotics in both humans and animals; Investing in the research and development (R&D) of new drugs and diagnostic tools; and Ensuring adequate monitoring of prescribing and resistance on a national and international basis. \n \nThe independent review on antimicrobial resistance (the review) was launched by the former Prime Minister, David Cameron in July 2014 and was led by the economist Lord O\u2019Neill of Gatley.[3] The review board aimed to understand the global implications of AMR and propose international solutions for addressing it.[4] It has published a number of reports both on the consequences and actions to tackle antimicrobial resistance. The final report was published in May 2016 and made ten recommendations, these included better surveillance of antimicrobial use and resistance, a global public awareness campaign on this issue, and new approaches to funding medicine and diagnostics development. The Government responded to the report in September 2016. It agreed with a need for improved investment in R&D, and said it would work to gain global support for the recommendations in the report.\n \n[1]     The Review on Antimicrobial Resistance, Antimicrobial Resistance: Tackling a crisis for the health and wealth of nations, December 2014\n \n[2]     Kings Fund, What if antibiotics were to stop working?,\n \n[3]     Department of Health and Prime Minister\u2019s Office, Prime Minister warns of global threat of antibiotic resistance, 2 July 2014\n \n[4]     The Review on Antimicrobial Resistance, Antimicrobial Resistance: Tackling a crisis for the health and wealth of nations, December 2014\n \n \n \n \n \n \n \n "}
      , "date" : {"_value" : "2017-02-28T16:40:02.8350455+00:00", "_datatype" : "dateTime"}
      , "description" : ["This pack has been produced ahead of the debate on the O'Neill review into antibiotic resistance to be held in Westminster Hall on Tuesday 7 March 2017 from 2.30-4pm. The debate will be opened by Kevin Hollinrake MP."], "identifier" : {"_value" : "CDP-2017-0074"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "O'Neill review into antibiotic resistance", "topic" : [{"_about" : "http://data.parliament.uk/terms/95673", "prefLabel" : {"_value" : "Medicine"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/340021", "abstract" : {"_value" : "Most honours awarded today are part of the Order of the British Empire, which was established in 1917. Honours are awarded by the sovereign, with advice from committees of experts and senior Government minister. Any member of the public can now nominate someone for an honour. Almost from the beginning of the modern system, there was controversy about who should receive honours and suggestions of impropriety, particularly in the award of honours for political service.\n \nRevival of political honours\n \nThis briefing provides an introduction to the various types of honours. It sets out the recent revival of the award of honours for parliamentary and political service, under David Cameron as Prime Minister in 2012, with the establishment of the Parliamentary and Political Service Committee.  It also highlights the option of awarding honours on resignation taken by some Prime Ministers. This had not been the practice for a number of years, but resignation honours were awarded by David Cameron in August 2016, the first instance since John Major\u2019s resignation in 1997. Reaction to this is highlighted (section 2).\n \nRemoval of an honour: Forfeiture\n \nIt is possible to remove an honour once awarded, if the recipient is found to have brought the honours system into disrepute. This process is known as forfeiture. In 2016 there have been calls for forfeiture, including as part of a motion in the Commons on 20 October 2016.  This is the first time the House has directly voted to call on the Forfeiture Committee to remove a knighthood. More information is given on the debate and on previous decisions on forfeiture (section 3).\n \nReviews of the honours system\n \nThe current system of honours has been subject to review a number of times since it was established in 1917. These have included a Royal Commission; reviews carried out in private by civil servants; in public by Select Committees and investigations by the police. The changes that have arisen from these reviews have mainly been designed to broaden the range of recipients and to boost public confidence in the integrity of the system. This included the introduction of a system of nomination made by the public, first introduced in 1993. The modern system, with public nomination, has developed so that in the New Year\u2019s Honours 2017, 74% of the recipients were people who have undertaken outstanding work in their communities either in a voluntary or paid capacity. A timeline is included of these reviews, including some suggestions for change which were made, but not carried out (section 4).\n \nFurther information on the processes for nomination of someone and for the award of an honour can be found in Library Briefing paper Constituency Casework: Honours, CBP 7627.\n \nThe paper does not cover the process of nomination for peerages and membership of the House of Lords, as a life peer or political party \u2018working peer\u2019. Further information on appointments to the House of Lords can be found in Library Briefing Paper Peerage creations since 1997, CBP 5867, 3 February 2016. \n \n "}
      , "date" : {"_value" : "2017-02-28T16:30:41.9507206+00:00", "_datatype" : "dateTime"}
      , "description" : ["Honours awarded today are mostly part of the Order of the British Empire, which was established in 1917. Almost from the beginning there was controversy about who should receive honours and suggestions of impropriety, particularly in the award of honours for political service. This briefing provides an introduction to the various types of honours. It sets out the recent revival of the award of honours for parliamentary and political service. It also explains how an honour may be removed and summarises reviews of the system."], "identifier" : {"_value" : "SN02832"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/61055", "prefLabel" : {"_value" : "Parliament and Constitution Centre"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Honours: History and reviews", "topic" : [{"_about" : "http://data.parliament.uk/terms/95514", "prefLabel" : {"_value" : "Central government"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95542", "prefLabel" : {"_value" : "Crown"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95723", "prefLabel" : {"_value" : "Public administration"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/692244", "abstract" : {"_value" : "Fathers Network Scotland ran a \u201cYear of the Dad\u201d campaign in 2016 as a \u201crallying call to services and employers to support dads, embrace family-friendly, inclusive practice and reflect the importance of fathers in child development\u201d, and the campaign included a number of events and publicity material to support it.\n \nEmployment law, which is not devolved, was recently amended to allow shared parental law and shared parental pay for families having or adopting a child. This is on top of existing laws allowing for up to two weeks of paternity leave, as well as unpaid parental leave of up to four weeks a year.\n \nIn all four countries of the UK, unmarried fathers assume parental responsibility for their child if they are registered on the birth certificate.\n \nIn England and Wales, a court considering the contact or residence of a child is to presume that involvement of each parent in the life of the child concerned will further the child's welfare. Noting that the applicable legislation in Scotland is over 20 years old, in its 2016 manifesto the SNP stated that it would \u201creview the legislation to ensure the interests of children and their need to form and maintain relationships with key adults in their lives \u2013 parents, step-parents, grandparents and other family members \u2013 are at the heart of any new statutory measures\u201d."}
      , "date" : {"_value" : "2017-02-28T13:52:34.4204945+00:00", "_datatype" : "dateTime"}
      , "description" : ["The debate, entitled \"Role of fathers in the family unit\" and sponsored by Neil Gray, will take place in Westminster Hall on Wednesday 1 March at 4.30pm."], "identifier" : {"_value" : "CDP-2017-0058"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Role of fathers in the family unit", "topic" : [{"_about" : "http://data.parliament.uk/terms/95516", "prefLabel" : {"_value" : "Child care"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95518", "prefLabel" : {"_value" : "Children and families"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/427337", "abstract" : {"_value" : "This paper provides information on the levels of funding available for capital projects in English schools, as well as on the streams of funding schools may access.  The Priority School Building Programme, implemented by the Coalition Government as a replacement for the previous Building Schools for the Future programme, is discussed in a separate section.\n \nThe paper also includes an overview of the National Audit Office report on capital funding in schools, published in February 2017."}
      , "date" : {"_value" : "2017-02-28T11:02:29.7845022+00:00", "_datatype" : "dateTime"}
      , "description" : ["The levels of funding available for capital projects in English schools, and information on the funding streams schools may access"], "identifier" : {"_value" : "CBP-7375"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70459", "prefLabel" : {"_value" : "Social and General Statistics Section"}
      }
      , {"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "School buildings and capital funding (England)", "topic" : [{"_about" : "http://data.parliament.uk/terms/95740", "prefLabel" : {"_value" : "Schools"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/705301", "abstract" : {"_value" : "What is energy efficiency?\n \nImproving energy efficiency means using less energy (such as electricity, heat and transport fuel) to produce the same output or service. Examples of measures to improve energy efficiency include: insulating a home so that it needs less heating to reach the same temperature; installing a motor that uses less electricity to perform the same role in a manufacturing plant; and inflating car tyres to the correct pressure to reduce drag when driving and cut fuel use.\n \nKey points\n \nThe key points in this briefing are:\n \n The Government will set out future energy efficiency policies and proposals in its Emissions Reduction Plan in early 2017.  Future energy efficiency policy choices will also arise from Brexit. Energy efficiency improvements can reduce fuel poverty and greenhouse gas emissions and improve comfort, health, wellbeing, energy security and economic productivity. Barriers to improvements include financial constraints, misaligned incentives, hassle, poor return on investment, lack of prominence and low confidence in results. Regulatory, economic and behavioural policies could improve UK energy efficiency. There is insufficient evidence to identify which types of policy are most effective. \n \nAcknowledgements\n \nPOSTnotes are based on literature reviews and interviews with a range of stakeholders and are externally peer reviewed. POST would like to thank interviewees and peer reviewers for kindly giving up their time during the preparation of this briefing, including:\n \n Christopher Botten \u2013 Better Buildings Partnership Chris Vinson \u2013 British Gas Patrick Brown \u2013 British Property Foundation Peter Broad \u2013 Citizens Advice Tim Farrell \u2013 Copenhagen Centre on Energy Efficiency Department for Business, Energy and Industrial Strategy Department for Communities and Local Government Department for Transport Ed Matthew \u2013 E3G Richard Warren and Dipali Raniga \u2013 EEF Jenny Holland \u2013 End Fuel Poverty Coalition Steven Fawkes \u2013 Energy Pro Ltd Jo Coleman \u2013 Energy Technologies Institute Mike Foster \u2013 Energy Utilities Alliance Jack Hunter \u2013 European Environmental Bureau John Constable \u2013 Global Warming Policy Foundation Brooke Flanagan \u2013 Greater London Authority Jim Skea \u2013 Imperial College London Michael Sozansky \u2013 Ofgem Richard Howard \u2013 Policy Exchange Ivo Wengraf \u2013 RAC Foundation John Stewart \u2013 Residential Landlords Association Denis Naberezhnykh \u2013 Transport Research Laboratory Lisa Ryan \u2013 University College Dublin Bob Lowe \u2013 UCL Mark Gillott \u2013 University of Nottingham AbuBakr Bahaj \u2013 University of Southampton Jan Rosenow \u2013 University of Sussex"}
      , "date" : {"_value" : "2017-02-27T19:36:23.9052739+00:00", "_datatype" : "dateTime"}
      , "description" : ["This POSTnote outlines the benefits and costs of future improvements in energy efficiency across various UK sectors. It then describes the barriers to energy efficiency measures, outlines options for future energy efficiency policy and summarises analyses of the effectiveness of different policy options."], "identifier" : {"_value" : "POST-PN-0550"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/61081", "prefLabel" : {"_value" : "POST"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/61081", "prefLabel" : {"_value" : "POST"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/346721", "prefLabel" : {"_value" : "POSTnotes"}
      }
      , "title" : "Future Energy Efficiency Policy", "topic" : [{"_about" : "http://data.parliament.uk/terms/95523", "prefLabel" : {"_value" : "Climate change"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95571", "prefLabel" : {"_value" : "Electricity"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95578", "prefLabel" : {"_value" : "Energy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95580", "prefLabel" : {"_value" : "Energy conservation"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95612", "prefLabel" : {"_value" : "Fuel poverty"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95696", "prefLabel" : {"_value" : "Oil, petrol and natural gas"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95738", "prefLabel" : {"_value" : "Roads"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/705300", "abstract" : {"_value" : "This year the global theme is Be Bold for Change, encouraging urgent action to accelerate gender parity. The UN\u2019s IWD theme for 2017 is \u201cWomen in the Changing World of Work: Planet 50:50 by 2030\u201d is focused on the economic empowerment of women in the globalised world. In 2015, the UN introduced the Sustainable Development Goals with a big emphasis on gender equality and social justice. Around the world, organisations, governments and women\u2019s groups come together to mark the past, present and future economic, political and social achievements of women. Hundreds of events are held worldwide throughout March, with some under themes that reflect local gender issues.\n \nGender gap index\n \nBased on the World Economic Forum Gender Gap Index, Iceland had the least disparity between men and women in 2016. The lowest ranked country on the Gender gap index was Yemen, at 144th. The UK was ranked 20th overall (a decrease from 18th last year). (See Table 1, p. 6)\n \nOut-of-school rate\n \nOut-of-school rate measures the proportion of children in school-age who are not enrolled in formal education. Girls are more likely than boys to be excluded from both primary and secondary education. 16% and 22% of girls of school-age worldwide are not formally enrolled in primary and secondary education, respectively (see Chart 1, p. 8).\n \nWomen in employment\n \nUN estimates for 2015 show that the lowest percentage of women in non-agricultural wage employment is in Northern Africa (19%) followed by Southern Asia (21%) and Western Asia (21%). In the UK 64% of women with young children are employed, compared to 62% in EU. (See Chart 2 p. 9 and Table 2, p. 10)\n \nWomen in Parliament and Government\n \nThe global average of women in parliament doubled between 1995 and 2015, from 11.3% in 1995 to 22.7% in 2015. Following the 2015 General Election there are 191 (29%) female MPs in the UK House of Commons. 35% of UK Cabinet Ministers are female (8 of 23) and 26% of Members of the House of Lords are women (207). (Table 3, p11)\n \nMaternal mortality\n \nThe global average of maternal deaths per 100,000 live births was 169 in 2015, compared to 338 in 1990. It is highest in sub-Saharan Africa (where there were 546 maternal deaths per 100,000 live births). (See Table 4, p. 12)\n \nLife expectancy\n \nIn 2015, Japan had the highest life expectancy for women, at 86.8 years, followed by Singapore (86.1 years) and South Korea (85.5 years). The lowest female life expectancy was recorded in Sierra Leone (50.8 years). The average life expectancy for women in UK is 83 years. (See Table 5, p. 12)\n \nGender ratio\n \nIn 2015 United Arab Emirates and Qatar, largely due to work related male immigration, had the lowest gender ratio, with 36 and 37 women per 100 men, respectively. Latvia has the largest proportion of women for every 100 men (118), followed by Lithuania and Curacao (Both 117). There are 104 women for every 100 of men in the UK. (See Table 6, p. 13)\n \nFertility\n \nThe highest fertility rate is in Niger, with average of 7.7 children born per women. On average in the UK there are 1.9 children per woman who lives through her entire child-bearing years. (See Table 7, p.13)\n \nViolence against women\n \nMore than one-third of women (35%) in the world have experienced either physical and/or sexual violence by an intimate partner or non-partner sexual violence.\n \nWomen in the UK\n \nIn 2016, median hourly earnings (excluding overtime) for full-time female employees were £12.82 compared to £14.16 for male. 26.8 % of FTSE 100 company directors in October 2016 were women (up from 13% in 2011); for FTSE 250 companies 21.3% of directors were women (up from 8% in 2011). (See tables 8, 9 and Chart 4, pp. 16 -19)\n \n \n \n "}
      , "date" : {"_value" : "2017-02-27T18:43:38.8168895+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons library briefing gives an introduction to International Women\u2019s Day (IWD), celebrated on the 8th of March. It examines a variety of indicators for women\u2019s equality both in the UK and internationally."], "identifier" : {"_value" : "CBP-7910"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70459", "prefLabel" : {"_value" : "Social and General Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Women around the world: International Women's Day 2017", "topic" : [{"_about" : "http://data.parliament.uk/terms/95518", "prefLabel" : {"_value" : "Children and families"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95582", "prefLabel" : {"_value" : "Equality"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95635", "prefLabel" : {"_value" : "Human rights"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95703", "prefLabel" : {"_value" : "Parliament"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95715", "prefLabel" : {"_value" : "Population"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95723", "prefLabel" : {"_value" : "Public administration"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/693579", "abstract" : {"_value" : "This debate pack has been prepared ahead of the debate on poverty in the Liverpool city region to be held in Westminster Hall on Wednesday 1 March at 2:30pm. The subject for the debate has been chosen by Steve Rotheram MP.\n \nThe House of Commons Library prepares a briefing in hard copy and/or online for most non-legislative debates in the Chamber and Westminster Hall other than half-hour debates. Debate Packs are produced quickly after the announcement of parliamentary business. They are intended to provide a summary or overview of the issue being debated and identify relevant briefings and useful documents, including press and parliamentary material. More detailed briefing can be prepared for Members on request to the Library.\n \n \n \n "}
      , "date" : {"_value" : "2017-02-27T17:52:28.5166204+00:00", "_datatype" : "dateTime"}
      , "description" : ["A debate will be held on poverty in the Liverpool city region in Westminster Hall on Wednesday 1 March at 2.30pm."], "identifier" : {"_value" : "CDP-2017-0064"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/17113", "prefLabel" : {"_value" : "Economic Policy and Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Poverty in the Liverpool city region", "topic" : [{"_about" : "http://data.parliament.uk/terms/95637", "prefLabel" : {"_value" : "Incomes and poverty"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/339009", "abstract" : {"_value" : "Following the implementation of the Data Protection Act 1998, a number of MPs reported difficulties, stemming from the Act, in carrying out their constituency duties. The legal issues involved also applied to other elected representatives such as councillors, MEPs, MSPs.\n \nThe Data Protection (Processing of Sensitive Personal Data) (Elected Representatives) Order 2002 (as amended), designed to resolve these difficulties, came into force on 17 December 2002.\n \nThe order has two main functions that apply where a constituent has contacted a Member of Parliament. The first is to give the Member (or someone acting with their authority) the authorisation necessary under the Data Protection Act 1998 to process sensitive personal information about the constituent in the course of the Member\u2019s \u201cfunctions as a representative\u201d (e.g. constituency casework) without having to establish \u201cexplicit consent\u201d. \n \nSecond, the order allows, but does not require, others (e.g. agencies or organisations) who are contacted by Members to disclose sensitive personal information to them where this is necessary to help with their functions, without having to obtain the explicit consent of the individual concerned.\n \nThe order also authorises the processing of sensitive information about third parties in certain circumstances.\n \nThe Information Commissioner\u2019s Office (ICO) oversees the 1998 Act and has published guidance (2015) for Members of Parliament on constituency casework and the processing of sensitive personal data. The ICO can discuss individual cases - its advice line is 0303 123 1113.\n \nThe Information Rights and Information Security (IRIS) Service at the House of Commons has published guidance (updated March 2015) for Members and their staff on data protection issues. Section 5 looks at consent to process personal data. The House\u2019s Data Protection Officer is also available to discuss individual cases.\n \n "}
      , "date" : {"_value" : "2017-02-27T15:21:03.5254733+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Library Briefing Paper looks at the Data Protection (Processing of Sensitive Personal Data) (Elected Representatives) Order 2002 (SI 2002/2905)."], "identifier" : {"_value" : "SN01936"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Data protection: constituency casework", "topic" : [{"_about" : "http://data.parliament.uk/terms/95546", "prefLabel" : {"_value" : "Data protection"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/692247", "abstract" : {"_value" : "Computer Sciences Corporation (CSC) employs approximately 6,500 staff in the UK and, among other things, provides ICT systems to the public sector.\n \nIn January 2017 CSC announced up to 1,100 redundancies.  This debate pack provides an overview of the background to the announcement and responses from commentators."}
      , "date" : {"_value" : "2017-02-27T11:58:25.0520023+00:00", "_datatype" : "dateTime"}
      , "description" : ["A debate on proposed redundancies at consulting and IT services firm Computer Sciences Corporation, sponsored by Toby Perkins, will be held in Westminster Hall on Tuesday 28 February 2017 at 4.30pm. "], "identifier" : {"_value" : "CDP-2017-0060"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Redundancies at CSC", "topic" : [{"_about" : "http://data.parliament.uk/terms/95574", "prefLabel" : {"_value" : "Employment"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95771", "prefLabel" : {"_value" : "Unemployment"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/692245", "abstract" : {"_value" : "Education is a devolved policy area. As a result, teaching relevant to LGBT issues is covered in different ways in the four countries.\n \nLocal authority maintained schools in England are obliged to teach sex and relationships education (SRE) from age 11 upwards, and must have regard to the Government\u2019s SRE guidance.  Academies and free schools, the majority in secondary education in England, do not have to follow the National Curriculum and so are not under this obligation. Scotland\u2019s Curriculum for Excellence includes relationships, sexual health and parenthood education as part of its health and wellbeing strand. In Wales, all maintained secondary schools are required to include sex education for all registered pupils as part of the basic curriculum of the school. The Department of Education in Northern Ireland requires all grant-aided schools to develop their own policy on how they will address Relationships and Sexuality Education (RSE) within the curriculum."}
      , "date" : {"_value" : "2017-02-27T11:43:52.3013476+00:00", "_datatype" : "dateTime"}
      , "description" : ["A debate on LGBT History Month, sponsored by Richard Arkless, will be held in Westminster Hall on Tuesday 28 February 2017 at 2.30pm. The debate will last for one and a half hours."], "identifier" : {"_value" : "CDP-2017-0059"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "LGBT History Month", "topic" : [{"_about" : "http://data.parliament.uk/terms/95740", "prefLabel" : {"_value" : "Schools"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/340153", "abstract" : {"_value" : " \n \nIt can sometimes be difficult for people living next to anti-social private tenants or owner-occupiers to resolve the problem; for example, private landlords may prefer not tackle their anti-social tenants and it is not possible for neighbours to seek eviction orders against owner-occupiers. As a general rule, private landlords are not responsible for the anti-social behaaviour of their tenants.\n \nReporting ASB\n \nVictims of ASB should report their circumstances to the local Community Safety Partnership and seek professional legal advice on any remedies that might be applicable in their individual circumstances. What amounts to an appropriate remedy will depend on the precise circumstances involved; the victims of ASB often need to keep detailed records of their experiences, particularly if legal action is envisaged.\n \nLocal authority and police powers\n \nLocal authorities and the police have extensive powers under the Anti-Social Behaviour, Crime and Policing Act 2014, together with other legislation, to tackle different types of ASB. These powers range from abatement orders to deal with noise nuisance, to injunctions excluding tenants/owner-occupiers from their homes in cases involving violence or a significant risk of harm. The Home Office published statutory guidance for local authorities on the powers introduced by the 2014 Act in July 2014. The Government has established an anti-social behaviour advisory group with frontline agencies to monitor how the powers introduced by the 2014 Act are being used. It is expected that refreshed guidance will be issued in spring 2017.\n \nIn regard to private rented housing, the Department for Communities and Local Government (DCLG) published a guide for local authorities: Dealing with rogue landlords (August 2012).  Additional guidance was published in March 2015: Improving the Private Rented Sector and Tacking Bad Practice.\n \nTerritorial extent\n \nAlthough this paper covers England, the remedies available for tackling housing related ASB in private properties are largely the same in England and Wales. Welsh Ministers have the power to commence certain specified provisions of the 2014 Act in relation to Wales.\n \n "}
      , "date" : {"_value" : "2017-02-25T19:06:59.804134+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library briefing paper outlines the legal position and potential remedies available where people find themselves living next door to tenants of private landlords or owner-occupiers who exhibit anti-social behaviour. The briefing focuses on the legal position in England."], "identifier" : {"_value" : "SN01012"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Anti-social neighbours living in private housing (England)", "topic" : [{"_about" : "http://data.parliament.uk/terms/95491", "prefLabel" : {"_value" : "Anti-social behaviour"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95629", "prefLabel" : {"_value" : "Housing"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95702", "prefLabel" : {"_value" : "Owner occupation"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95722", "prefLabel" : {"_value" : "Private rented housing"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/340162", "abstract" : {"_value" : "Are landlords liable for their anti-social tenants?\n \nAs a general rule, landlords are not responbile for the anti-social behaviour of their tenants. Section 1 of this paper outlines some legal cases that have tested this proposition.\n \nSocial landlords' policies and procedures\n \nAll social landlords should have a published policy on anti-social behaviour which sets out how they will react and tackle reported instances of anti-social behaviour. The starting point for a tenant of a social landlord who is suffering from anti-social behaviour is, therefore, to obtain a copy of the landlord\u2019s policy on anti-social behaviour. If a landlord is failing to implement their policy this may form the basis of a complaint. More detail is provided in section 2 of the paper.\n \nRemedies\n \nSocial landlords have a number of powers at their disposal to tackle anti-social tenants. The ultimate sanction is the eviction of the tenant but most landlords will seek to remedy the situation before it reaches that stage.\n \nA number of new powers were introduced by the Anti-Social Behaviour, Crime and Policing Act 2014. The Home Office published guidance on the new powers: Statutory guidance for frontline professionals (July 2014). The Government has established an anti-social behaviour advisory group with frontline agencies to monitor how the new powers are being used. It is expected that refreshed guidance will be issued in spring 2017.\n \nThe type of remedies that social landlords can employ include: dispute resolution; injunctions; introductory and demoted tenancies; and eviction.  More detail is provided in section 3 of the paper.\n \nPolicy in Wales, Scotland and Northern Ireland\n \nThis paper focuses on England but most of the existing landlord powers in the Housing Acts of 1985 and 1988 apply in Wales and England. Welsh Ministers have the power to commence certain specified provisions of the Anti-social Behaviour Crime and Policing Act 2014 in relation to Wales and this power has been exercised.  Independent research on the subject of how Welsh social landlords tackle ASB was published in February 2014.  There is also a Wales Housing Management Standard for Tackling Anti-Social Behaviour which is a voluntary standard aimed at local authority housing departments and Registered Social Landlords (housing associations) in Wales.\n \nScottish landlords operate under a different legislative regime. In 2014 the Chartered Institute of Housing in Scotland published a practice briefing on tackling ASB in Scotland which provides an overview of available remedies.\n \nSocial landlords in Northern Ireland also operate under a different legislative regime. The Northern Ireland Housing Executive\u2019s website explains how the NIHE approaches ASB. The website also provides a link to the NIHE\u2019s Policy & procedure statement on anti-social behaviour. \n \n \n \n \n \n \n \n "}
      , "date" : {"_value" : "2017-02-25T17:30:03.9770783+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library briefing paper provides an overview of the remedies available to social landlords to deal with tenants who exhibit anti-social behaviour. The paper focuses on England but some of the same legislation applies in Wales. Scotland and Northern Ireland operate under different legislative regimes."], "identifier" : {"_value" : "SN00264"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Anti-social behaviour in social housing (England)", "topic" : [{"_about" : "http://data.parliament.uk/terms/95491", "prefLabel" : {"_value" : "Anti-social behaviour"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95629", "prefLabel" : {"_value" : "Housing"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95753", "prefLabel" : {"_value" : "Social rented housing"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/693560", "abstract" : {"_value" : "Intellectual property (IP) protection covers copyright, trade marks, patents, design rights and registered designs. The Intellectual Property Office (IPO) is the official government body responsible for IP rights.\n \nIntellectual Property Rights can support growth in the economy through promoting innovation by providing a temporary monopoly to creators and inventors, but can also limit growth in certain circumstances.\n \nUK investment in knowledge, or \"intangible\", assets has beeen greater than investment in tangible assets since the early 2000s. In 2014, just over half of investments in intangible assets were protected by intellectual property rights.\n \nIn December 2016 the IPO published \"fast facts\" on intellectual property and the economy:\n \nOfficial Statistics, Intellectual property fast facts 2017"}
      , "date" : {"_value" : "2017-02-24T18:10:13.5155542+00:00", "_datatype" : "dateTime"}
      , "description" : ["A Westminster Hall debate on the importance of intellectual property to the British economy has been scheduled for 0930hrs on Tuesday 28 February 2017. The Member in charge of this debate is Nigel Adams MP."], "identifier" : {"_value" : "CDP-2017-0063"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/17113", "prefLabel" : {"_value" : "Economic Policy and Statistics Section"}
      }
      , {"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Importance of intellectual property to the British economy", "topic" : [{"_about" : "http://data.parliament.uk/terms/95561", "prefLabel" : {"_value" : "Economic situation"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95643", "prefLabel" : {"_value" : "Intellectual property"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/694159", "abstract" : {"_value" : "EU law on policing and criminal justice cooperation covers five areas:\n \n Mutual recognition Participation in EU agencies Information sharing Substantive criminal law Criminal procedure \n \nThe UK currently has an arrangement whereby it can choose which laws it wishes to adopt, and opt out of others. \n \nIn relation to the substantive criminal law and criminal procedure, the measures that the UK has chosen to adopt essentially affect domestic law. As such they would not necessarily need to be altered as a result of the UK's withdrawal from the EU.\n \nBy contrast, the mutual recognition of decisions, information sharing and participation in agencies involve cooperation between Member States. Therefore, alternative arrangements would have to be put in place of existing measures if the UK wished to maintain similar levels of cooperation.\n \nFurther information\n \nImage copyright\n \niStock\n \nPublication details"}
      , "date" : {"_value" : "2017-02-24T11:38:01.3137732+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library research briefing looks at the implications of Brexit in the field of policing and criminal justice cooperation"], "identifier" : {"_value" : "CBP-7650"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Brexit: implications for policing and criminal justice cooperation", "topic" : [{"_about" : "http://data.parliament.uk/terms/95538", "prefLabel" : {"_value" : "Crime"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95541", "prefLabel" : {"_value" : "Criminal law"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95591", "prefLabel" : {"_value" : "EU law and treaties"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/434175", "abstract" : {"_value" : "Stoke-on-Trent Central - 23 February 2017\n \nThe election was called following the resignation of Tristram Hunt on 23 January 2017. Gareth Snell (Labour Party) was elected MP with a 2,620 (12.4%) majority. \n \nOverview of results\n \n Gareth Snell (Labour Party) - 7,853 (37.1%) Paul Nuttall (UKIP) - 5,233 (24.7%) Jack Brereton (Conservative) - 5,154 (24.3%) Zulfiqar Ali (Liberal Democrats) 2,083 (9.8%) Other (6 candidates) \u2013 847 (4.0%) \n \nMajority of winning candidate - 2,620 (12.4%)\n \nTotal poll - 21,170 (not including invalid votes)\n \nTurnout - 38.1%\n \nCopeland - 23 February 2017\n \nThe election was called following the resignation of Jamieson Reed on 23 January 2017. Trudy Harrison (Conservatives) was elected MP with 44.3% of the vote (a 6.9% majority). \n \nOverview of results\n \n Trudy Harrison (Conservatives) \u2013 13,748 (44.3%) Gillian Troughton (Labour) \u2013 11,601 (37.3%) Rebecca Hanson (Liberal Democrats) \u2013 2,252 (7.2%) Fiona Mills (UKIP) - 2,025 (6.5%) Other (3 candidates) \u2013 1,442 (4.6%) \n \nMajority of winning candidate \u2013 2,147 (6.9%)\n \nTotal poll - 31,068 (not including invalid votes)\n \nTurnout - 51.3% \n \nSleaford and North Hykeham - 8 December 2016\n \nThe election was called following the resignation of Stephen Phillips on 4 November 2016. Caroline Johnson (Conservatives) was elected MP with 53.5% of the vote (a 40.0% majority). \n \nOverview of results\n \n Caroline Johnson (Conservatives) \u2013 17,570 (53.5%) Victoria Ayling (UKIP) \u2013 4,426 (13.5%) Ross Pepper \u2013 3,606 (11.0%) Jim Clarke (Labour) - 3,363 (10.2%) Other (6 candidates) \u2013 3,869 (11.8%) \n \nMajority of winning candidate \u2013 13,144 (40.0%)\n \nTotal poll - 32,834 (not including invalid votes)\n \nTurnout - 37.0% \n \nRichmond Park - 1 December 2016\n \nThe election was called following the resignation of Zac Goldsmith on 25 October 2016. Sarah Olney (Liberal Democrats) was elected MP with 49.7% of the vote (a 4.5% majority). The writ was moved on 27 October.\n \nOverview of results\n \n Sarah Olney (Liberal Democrats) \u2013 20,510 (49.7%) Zac Goldsmith (Independent) \u2013 18,638 (45.1%) Christian Wolmar (Labour) \u2013 1,515 (3.7%) Other (5 candidates) \u2013 620 (1.5%) \n \nMajority of winning candidate \u2013 1,872 (4.2%)\n \nTotal poll - 41,283 (not including invalid votes)\n \nTurnout - 53.4% \n \nBatley and Spen - 20 October 2016\n \nThe election was called following the death of Jo Cox on 16 June 2016. Tracy Brabin has been elected (Labour Party) with 85.8% of the vote. \n \nThe Conservatives, Liberal Democrats, UKIP and Green Party decided not to stand at this election out of respect\n \nOverview of results\n \n Tracy Brabin (Labour Party) \u2013 17,506 (85.8%) Other parties (9 candidates) \u2013 2,887 (14.2%) \n \nTotal poll \u2013 20,393 (not including invalid votes)\n \nTurnout \u2013 25.6%\n \nWitney - 20 October 2016\n \nThe election was called following the resignation of David Cameron on 12 September 2016. Robert Courts (Conservative Party) was elected MP with 45.0% of the vote (a 14.8% majority). The writ was moved on 15 September.\n \nOverview of results\n \n Robert Courts (Conservative Party) \u2013 17,313 (45.0%) Elizabeth Leffman (Liberal Democrats) \u2013 11,611 (30.2%) Duncan Enright (Labour) \u2013 5,765 (15.0%) Larry Sanders (Green Party) \u2013 1,363 (3.5%) Dickie Bird (UK Independence Party) \u2013 1,354 (3.5%) Other (9 candidates) \u2013 1,049 (2.7%) \n \nMajority of winning candidate \u2013 5,702 (14.8%)\n \nTotal poll - 38,455 (not including invalid votes)\n \nTurnout - 46.7%\n \nTooting - 16 June 2016\n \nThe election was called when Sadiq Khan resigned as MP for Tooting on 9 May 2016 after London Mayor election on 5 May 2016. Rosena Allin-Khan (Labour Party) was elected MP with a 6,357 (19.9%) majority. \n \nOverview of results\n \n Rosena Allin-Khan (Labour Party) - 17,894 (55.9%) Dan Watkins (Conservative Party) - 11,537 (36.1%) Esther Obiri-Darko (Green Party) - 830 (2.6%) Alexander Glassbrook (Liberal Democrats) 820 (2.6%) Other (10 candidates) \u2013 918 (2.9%) \n \nMajority of winning candidate - 6,357 (19.9%)\n \nTotal poll - 31,999 (not including invalid votes)\n \nTurnout - 42.8%\n \nOgmore - 5 May 2016\n \nThe election was called after the resignation of Huw Irranca-Davies who switched from Ogmore Westminster MP to become the constituency's Assembly Member (AM). \n \nOverview of results\n \n Christopher Elmore (Labour Party) - 12,166 (52.2%) Glenda Davies (UK Independence Party) - 3,808 (16.3%) Abi Thomas (Plaid Cymru) - 3,683 (15.8%) Alex Williams (Conservative Party) - 2,956 (12.7%) Other (1 candidate) \u2013 702 (3.0%) \n \nMajority of winning candidate - 8,358 (35.8%)\n \nTotal poll - 23,315 (not including invalid votes)\n \nTurnout - 42.4%\n \nSheffield, Brightside and Hillsborough - 5 May 2016\n \nThe election was called after the death of Harry Harpham MP on 4 February 2016. \n \nOverview of results\n \n Gill Furniss (Labour Party) - 14,087 (62.4%) Steve Winstone (UK Independence Party) - 4,497 (19.9%) Mohammed Shaffaq (Liberal Democrats) - 1,385 (6.1%) Spencer Pitfield (Conservative Party) - 1,267 (5.6%) Other (3 candidates) - 1,345 (6.0%) \n \nMajority of winning candidate - 9,590 (42.5%)\n \nTotal poll - 22,581 (not including invalid votes)\n \nTurnout - 33.0%\n \nOldham West and Royton - 3 December 2015\n \nThe election was called after the death of Rt Hon. Michael Meacher MP on 21 October 2015. \n \nOverview of results\n \n Jim McMahon (Labour Party) - 17,209 (62.1%) John Bickley (UK Independence Party) - 6,487 (23.4%) James Daly (Conservative Party) - 2,596 (9.4%) Jane Brophy (Liberal Democrats) - 1,024 (3.7%) Other (2 candidates) \u2013 390 (1.4%) \n \nMajority of winning candidate - 10,722 (38.7%)\n \nTotal poll - 27,706 (not including invalid votes)\n \nTurnout - 40.1%\n \nFurther information\n \nPublication details"}
      , "date" : {"_value" : "2017-02-24T11:27:31.5650691+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library Briefing Paper sets out results of the by-elections held since the 2015 election. Currently there have been 10 by-elections, the latest two were held on 23 February 2017.\n\nFull details are presented in the associated PDF but an overview of the recent by-election results are shown below."], "identifier" : {"_value" : "CBP-7417"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/61055", "prefLabel" : {"_value" : "Parliament and Constitution Centre"}
      }
      , {"_about" : "http://data.parliament.uk/terms/70459", "prefLabel" : {"_value" : "Social and General Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "By-election results since the 2015 General Election", "topic" : [{"_about" : "http://data.parliament.uk/terms/95512", "prefLabel" : {"_value" : "By-elections"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95566", "prefLabel" : {"_value" : "Election results : UK"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/693599", "abstract" : {"_value" : "The NHS and social care systems are facing significant financial challenges as a consequence of an ageing and growing population.\n \nAlthough health spending has been protected relative to other public services, the NHS is required to find £22 billion of annual efficiency savings by 2020/21. There are concerns that increasing demand for health services and pressure on local authority budgets are threatening the financial stability and sustainability of the health and social care systems.\n \nThe House of Commons Library has produced a range of briefings on NHS and social care funding:\n \n The financial sustainability of the NHS in England The structure of the NHS in England Reform of support for healthcare students in England Health and Social Care Integration (England) Adult Social Care Funding (England) The care home market (England) Social care: paying for care home places and domiciliary care (England) Social care: Announcement delaying introduction of funding reform (including the cap) and other changes until April 2020 (England) Social care: how the postponed changes to paying for care, including the cap, would have worked (England) Brexit: impact across policy areas \n \nThe briefing paper NHS Indicators has statistics on the key trends in recent NHS performance. These include:\n \n A&E attendances in 2016 have been 5% higher than in 2015. The number of emergency admissions rose by 4.5% 21% of patients spent more than 4 hours in major A&E departments in Dec 2016, compared with 13% in Dec 2015 and 6% in Dec 2011 Long waits for emergency admissions were 58% higher in 2016 than in 2015, and five times higher than 2011 There were 23% more delayed transfers of care in 2016 than in 2015. Social care delays rose by 37%. Delays due to waits for homecare rose by 45% The waiting list for routine treatment grew 11% to 3.66 million between Dec 2015 and Dec 2016 92% of those waiting for treatment had been waiting for 20 weeks or less - above the target of 18 weeks More cancer waiting times targets continue to be met. The 62-day treatment target (85%) has not been met since Dec 2015 Urgent ambulance calls rose 16% in 2016. The 8-minute ambulance response target (75%) has not been met since May 2015 Waiting times targets for mental health talking therapy treatments continue to be met, with performance improving in October The number of GPs is estimated to have fallen by 3% between 2014 and 2015 In the year to Oct 2016, the number of hospital doctors rose by 1.7% and the number of hospital nurses rose by 0.8% \n \nReports\n \n National Audit Office, Financial sustainability of the NHS, November 2016 National Audit Office, Health and social care integration, February 2017 National Audit Office, Discharging older patients from hospital, May 2016 Public Accounts Committee, Sustainability and financial performance of acute hospital trusts, March 2016 Health Committee, Public health post-2013, September 2016 Health Committee, Impact of the Spending Review on health and social care, July 2016 Local Government Association, Adult social care funding: 2016 state of the nation report, November 2016 The King's Fund - Commission on the Future of Health and Social Care in England (Barker Commission), A new settlement for health and social care, September 2014 \n \nFurther Reading\n \n Health Committee inquiry, Department of Health and NHS finances, October 2016 Letter to Prime Minister from Chairs of Select Committees on NHS and social care funding, 6 January 2017 Secretary of State for Health, Statement to the Commons on mental health and NHS performance update, 9 January 2017 NHS Providers blog, The big questions for the year ahead, January 2017 The King's Fund blog, What now for social care?, December 2016 NHS England, Five Year Forward View, October 2014 BBC News, 'Hospital cuts planned in most of England', 21 February 2017 (analysis of local NHS Sustainability and Transformation Plans) The Guardian, 'Brexit threatens social care jobs and funding', 21 February 2017 \n \nOngoing inquiries\n \n Public Accounts Committee, Integrating health and social care Communities and Local Government Committee, Adult social care Health Committee, Brexit and health and social care Lords Select Committee, Long-term sustainability of the NHS"}
      , "date" : {"_value" : "2017-02-24T10:40:42.9087076+00:00", "_datatype" : "dateTime"}
      , "description" : ["MPs will debate NHS and Social Care Funding on Monday 27 February 2017. This will be an be an Estimates Day debate. This page provides links to relevant Commons Library briefing papers and other reports."], "identifier" : {"_value" : "CDP-2017-0066"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Estimates Day: Health and social care", "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/693598", "abstract" : {"_value" : "Overview\n \nIn its November 2016 report on Intergenerational Fairness, the Work and Pensions Committee said that the UK economy had \"become skewed\", placing the intergenerational contract under strain:\n \n The UK economy has become skewed. Rapid and sustained rises in house prices have concentrated wealth in the hands of those who own property. Far too many young people cannot afford homeownership and instead have to pay costly private rent. Life expectancy has risen faster than anticipated at a time when the large baby boomer cohort, born between 1945 and 1965, are reaching retirement. As the taxes of working people support the retired, the ageing population places strain on those in work. Pensioners have been protected from public spending cuts that have largely been felt by younger groups. Pensioner poverty has been drastically reduced and average pensioner household incomes now exceed those of non-pensioners after housing costs. The millennial generation, born between 1981 and 2000, faces being the first in modern times to be financially worse off than its predecessors. The welfare state has long been underpinned by an implicit social contract between generations. The provision of benefits and public services to the current pensioner population is funded by the taxes of the current working-age population. In turn they expect to receive similar benefits and services when they retire, and so on. The skewing of the welfare state has placed the intergenerational contract under strain. (Work and Pensions Committee, Intergenerational fairness, November 2016, Summary). \n \nIt made recommendations relating to the triple lock and universal pensioner benefits which, it said were \"intended to strengthen the implicit contract between generations that is at the heart of our society.\" (Ibid)\n \nIn response in January 2017, the Government outlined its approach, which was to:\n \n ensure economic security for working people at every stage of their life, including retirement. The Government supports people seeking to return to work, which is the best way out of poverty, and provide individuals with the opportunity to save for a secure retirement. (Intergenerational fairness: Government Response to the Committee's Third Report of Sessions 2016-17, January 2017). \n \nTriple lock\n \nThe Committee recommended that the triple lock should be replaced by a \"smoothed earnings link\" from 2020:\n \n 5.We recommend the Government benchmark the new state pension and basic state pension at the levels relative to average full-time earnings they reach in 2020. The triple lock should then be replaced by an earnings link. In periods when earnings lag behind price inflation, an above-earnings increase should be applied to protect pensioners against a reduction in the purchasing power of their state pension. Price indexation should continue when real earnings growth resumes until the state pension reverts to its benchmark proportion of average earnings. Such a mechanism would enable pensioners to continue to share in the proceeds of economic growth, protect the state pension against inflation and ensure a firm foundation for private retirement saving. The new state pension and basic state pension it replaced would track average earnings growth in the long term. That is more fiscally sustainable and more intergenerationally fair. (Ibid). \n \nIn response, the Government confirmed its commitment to the triple lock for this Parliament. Regarding its impact:\n \n 7.The triple lock has been an invaluable element in addressing the issue of pensioners living in low income households, which peaked in the late 1980s at over 40 per cent. The proportion of pensioners living in low income is now down to 14 per cent. 8.As a result of the triple lock, the value of the full basic State Pension as a proportion of average earnings is at its highest since the late 1980s. 9.As well as the Triple Lock, this Government has successfully introduced the new State Pension which improves State Pension incomes for many lower earners and women; whilst putting it on a sustainable footing. 10.The latest data for the 2016 Autumn Statement shows that spending on pensioners as a percentage of GDP is falling: from 6.1 per cent in 2010, it is forecast to fall to 5.6 per cent in 2020. \n \nFor more detail, see Library Briefing Paper CBP-7812 State Pension triple lock (February 2017).\n \nUniversal pensioner benefits\n \nOn universal pension benefits, the Committee said there was \"no case for future governments to contemplate any increase in the value or range of universal pensioner benefits. They should also not be off limits when spending priorities are set in future Parliaments.\" (Intergenerational fairness, November 2016, Summary). For more detail on the debate on the different benefits, see Library Briefing Paper SN-06354 Pensioner benefits (February 2017).\n \nInformation gap\n \nThe Committee was concerned that there was a dearth of reliable information to inform policy:\n \n There is a dearth of reliable and comprehensive information about the intergenerational distribution of public and private resources. Greater awareness of the intergenerational implications of decisions would make for better informed policy. We recommend the Government make available the necessary information and resources to enable updated research estimating the balance of fiscal contributions and withdrawals by different generations over their entire lifetimes to be carried out. (Intergenerational fairness, November 2016, Summary). \n \nThe Government said it welcomed the work being undertaken by the Intergenerational Commission, would be happy to consider requests to support its work and looked forward to examining the results\".  (Intergenerational fairness: Government Response, January 2017, para 21-23).\n \nInformation about the work of the Integenerational Commission is on its website.\n \n   \n \n \n \n "}
      , "date" : {"_value" : "2017-02-23T17:02:39.4953619+00:00", "_datatype" : "dateTime"}
      , "description" : ["There will be an Estimates Day debate on intergenerational fairness. This will take place in the House of Commons Chamber at 11.30am on Tuesday 28th February."], "identifier" : {"_value" : "CDP-2017-0065"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Intergenerational fairness - Estimates day debate, 28 February 2017", "topic" : [{"_about" : "http://data.parliament.uk/terms/95504", "prefLabel" : {"_value" : "Benefits policy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95708", "prefLabel" : {"_value" : "Pensions"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/693597", "abstract" : {"_value" : "The European Atomic Energy Community (Euratom) was established alongside the European Economic Community (EEC) in the 1950s. The UK became a member of both on 1 January 1973. Euratom is a distinct legal entity from the European Union, but the two bodies have a shared institutional framework.\n \nEuratom was founded to contribute to the formation and development of Europe\u2019s nuclear industries, to guarantee high safety standards and to prevent nuclear materials intended principally for civilian use from being diverted to military use. It provides the basis for the regulation of civilian nuclear activity, implements a system of safeguards to control the use of nuclear materials, controls the supply of fissile materials within EU member states and funds research into nuclear fission and nuclear fusion. Euratom has signed a number of international agreements with third countries on nuclear research (both fission and fusion), the peaceful use of nuclear energy and nuclear safety.\n \nThe Government introduced the European Union (Notification of Withdrawal) Bill in the House of Commons on 26 January 2017. The Bill would give the Prime Minister power to notify the European Council of the UK\u2019s intention to withdraw from the European Union, under the procedure set out in Article 50 of the Treaty on European Union. The Explanatory Notes prepared by the Department for Exiting the European Union state that the Bill also would also provide for the UK to leave Euratom, although Euratom is not mentioned in the Bill itself. The Government\u2019s position is that the way in which Euratom and the EU are uniquely legally joined means that triggering Article 50 also entails giving notice to leave Euratom. This is disputed by some lawyers, who argue that the nexus between the Treaty on European Union and the Euratom Treaty creates a parallel but separate process for leaving Euratom.\n \nAn amendment that would have preserved the UK\u2019s membership of Euratom was defeated at the Bill\u2019s committee stage in the House of Commons. Similar amendments have been tabled for the committee stage in the House of Lords which is scheduled to take place on 27 February and 1 March 2017."}
      , "date" : {"_value" : "2017-02-23T16:29:47.1339095+00:00", "_datatype" : "dateTime"}
      , "description" : ["The Government has stated that leaving the EU also means leaving the European Atomic Energy Community (Euratom). This Lords Library briefing examines what Euratom does and the possible implications of leaving Euratom for the future of the nuclear industry and nuclear research in the UK."], "identifier" : {"_value" : "LLN-2017-0010"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/346713", "prefLabel" : {"_value" : "Lords Library notes"}
      }
      , "title" : "Leaving the European Union: Euratom", "topic" : [{"_about" : "http://data.parliament.uk/terms/95589", "prefLabel" : {"_value" : "EU grants and loans"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95590", "prefLabel" : {"_value" : "EU institutions"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95591", "prefLabel" : {"_value" : "EU law and treaties"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95692", "prefLabel" : {"_value" : "Nuclear power"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95737", "prefLabel" : {"_value" : "Research and innovation"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/686585", "abstract" : {"_value" : "On Monday 27 February 2017, at 4.30pm, Oliver Dowden MP, a member of the Petitions Committee, will lead a debate in Westminster Hall on the motion \"That this House has considered e-petition 176138 relating to attacks on NHS medical staff.\" \n \nThe petition, which calls to \"Make it a specific criminal offence to attack any member of NHS Medical Staff\", has received more than 116,000 signatures.\n \nFigures released by NHS Protect show that there were 70,555 assaults on NHS staff in 2015/16, compared to 67,864 in 2014/15. NHS Protect has published tables showing these figures, broken down by NHS sector and individual health bodies for each year back to 2004/05."}
      , "date" : {"_value" : "2017-02-23T14:21:16.1697216+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library debate pack has been prepared in advance of a debate on e-petition 176138 relating to attacks on NHS medical staff."], "identifier" : {"_value" : "CDP-2017-0050"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Debate on e-petition 176138 relating to attacks on NHS medical staff", "topic" : [{"_about" : "http://data.parliament.uk/terms/95621", "prefLabel" : {"_value" : "Health services"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95623", "prefLabel" : {"_value" : "Health staff and professions"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/693574", "abstract" : {"_value" : "Several \u2018trophy animal\u2019 species are now endangered or becoming threatened; trophy hunting may be at least partly responsible for this. The UK Government have taken actions to combat the problem. The Government also believes that, when carefully managed, hunting can play a part in species preservation.  \n \nWhat is trophy hunting?\n \nTrophy hunters pay a fee to experience the hunting of an animal for the sole purpose of winning a part of its body as a \u201ctrophy\u201d\u2014such as antlers, horns or, in the case of lions, the head or skin. This paper gives some examples relating to the sport of hunting lions. \n \nThe management of the importing of trophies is regulated by UK law which stems from EU regulations and CITES, an international agreement between governments, which provides the legal framework for these measures. Statistics from CITES show an upward trend in the numbers of lion trophies exported over the past five years. Certain species have been moved by CITES to Appendix I, which lists animals that are the most endangered. In some countries stricter controls have been introduced on the importing of such trophies owing to concerns over sustainability.\n \nGovernment position\n \nAlthough the UK Government considers that properly managed hunting can help conservation, it has also stated that it will \u201cban lion trophy imports by the end of 2017\u201d if there are no improvements to the methods of lion hunting in certain countries. \n \nCecil the Lion and illegal poaching\n \nThe killing of Cecil the Lion in Zimbabwe in the summer of 2015 prompted an international outcry and highlighted issues surrouding the sustainability of the wildlife trade. Subsequently certain countries\u2014Autralia, France and the Netherlands\u2014implemented bans on the importing of lion trophies.\n \nIn addition to the issue of the import and export of hunting trophies, there is concern surrounding the illegal poaching of, and trade in, wildlife products. This is a lucrative market which is estimated to be worth between $15 and $20 billion annually. \n \nInternational conferences\n \nThe UK Government has taken a lead in the international response to this issue, hosting the 2014 Illegal Wildlife Trade (IWT) Conference. At this Conference the government declared a commitment to ending the illegal wildlife trade, working with international partners to improve enforcement and reduce demand for products. The UK recently announced that it will host a further IWT Conference in early 2018.\n \nThe sustainability of trophy hunting\n \nIt has been argued that trophy hunting can be a useful wildlife management tool and that banning it would do more harm than good. When properly managed, the money raised by hunting can be reinvested into conservation and biodiversity. The World Wildlife Fund support this approach. However some organisations counter that the sport is \u201ccruel\u201d and the industry is \u201ccorrupt\u201d, with little of the money raised by hunting finding its way into conservation efforts. The organisations say that more money can be raised from tourist safaris than by hunting animals. "}
      , "date" : {"_value" : "2017-02-23T12:17:50.9407436+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library Briefing Paper looks at the issues surrounding trophy hunting, particularly the sport of hunting lions. It examines the impacts of this industry on biodiversity and asks whether it can contribute positively to conservation."], "identifier" : {"_value" : "CBP-7908"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/67716", "prefLabel" : {"_value" : "Science and Environment Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Trophy Hunting: UK and international policy", "topic" : [{"_about" : "http://data.parliament.uk/terms/95489", "prefLabel" : {"_value" : "Animal welfare"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95490", "prefLabel" : {"_value" : "Animals"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95506", "prefLabel" : {"_value" : "Biodiversity"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95651", "prefLabel" : {"_value" : "International trade"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95688", "prefLabel" : {"_value" : "Nature conservation"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95782", "prefLabel" : {"_value" : "Wildlife"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/673361", "abstract" : {"_value" : "This briefing has been prepared ahead of Report stage debate on the Merchant Shipping (Homosexual Conduct) Bill 2016-17, scheduled to occur on 24 February 2017.  The Bill is a Private Members\u2019 Bill (Ballot Bill), sponsored by John Glen MP, with Government support. The Bill completed its Committee stage on 8 February 2017, having received its Second Reading on 20 January 2017.\n \nThe Bill would repeal aspects of the Criminal Justice and Public Order Act 1994 which suggest it would be lawful to dismiss a seafarer for a homosexual act.  That law is in fact of no effect, as such a dismissal would fall foul of equality legislation.  The Bill is therefore primarily of symbolic value."}
      , "date" : {"_value" : "2017-02-23T11:07:23.9942759+00:00", "_datatype" : "dateTime"}
      , "description" : ["The Merchant Shipping (Homosexual Conduct) Bill 2016-17 is due to have its Report stage on 24 February 2017"], "identifier" : {"_value" : "CDP-2017-0003"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Merchant Shipping (Homosexual Conduct) Bill", "topic" : [{"_about" : "http://data.parliament.uk/terms/95574", "prefLabel" : {"_value" : "Employment"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95582", "prefLabel" : {"_value" : "Equality"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/340040", "abstract" : {"_value" : "Around 45 per cent of fares are subject to regulation (by the Secretary of State in England, Welsh Minister in Wales and Scottish Ministers in Scotland). Regulated fares are set by a formula based on the RPI figure for the previous July, and for many years with a degree of flexibility (called the \u2018fares basket\u2019 or \u2018flex\u2019). All other fares are set commercially by train operators.\n \nThe regulated fare increase in England for 2017 is 1.9% (based on an RPI +/-0 formula); the total fare increase was 2.3%. This disguises variations across different routes.\n \nAlmost without exception, when the annual fare increases are announced every year passenger groups express concerns that significant increases could \u2018price people off the railways\u2019 and put a strain on those who use the railways to commute to work, particularly into and out of London. However, it has been the policy of successive governments to rebalance the funding of the railways between passengers and taxpayers: reducing the relative contribution of the latter. A consequence of this is higher fares. The train companies themselves are keen to rebut claims that they are \u2018profiteering\u2019 off higher fares, noting that fares income is spent on upgrades and investment projects and, in some cases, is passed on to the Government as part of the financial package for the franchise.\n \nIn terms of ticketing, successive governments, working with the industry, have made efforts to simplify the fares structure, though some passenger groups feel that it is still too complicated. In recent years, technological improvements combined in some cases with devolved decision making has led to the introduction of \u2018smart\u2019 ticketing across parts of the rail network, though there is concern about a lack of integration between these systems. The Government has also sought to promote \u2018flexible\u2019 ticketing, such as part-time season tickets and other innovations, but progress has been slow.\n \nA statistical overview of rail fare changes since privatisation can be found in HC Library briefing paper Public Transport Fares (CBP7470), 18 January 2016.\n \nInformation on other rail-related matters can be found on the Railways Topical Page"}
      , "date" : {"_value" : "2017-02-23T10:05:09.7553356+00:00", "_datatype" : "dateTime"}
      , "description" : ["This paper explains the rail fares framework, including who sets fares, what constitutes a \u2018regulated\u2019 fare, how regulated fare levels are calculated and it also looks at the question of why fares go up. It also explores changes to ticketing \u2013 including smart and flexible ticketing, travel cards and penalty fares."], "identifier" : {"_value" : "SN01904"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Rail fares and ticketing", "topic" : [{"_about" : "http://data.parliament.uk/terms/95728", "prefLabel" : {"_value" : "Railways"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/692254", "abstract" : {"_value" : "The text of the motion is:\n \n That this House acknowledges the service and sacrifice of the armed forces and police during Operation Banner in Northern Ireland as well as in other theatres of conflict in Iraq, Kosovo and Afghanistan; welcomes the recent decision to close down the Iraq Historical Allegations Team; and calls on the Government to take steps to ensure that current and future processes for investigating and prosecuting legacy cases, whether in Northern Ireland or elsewhere, are balanced and fair.  \n \nThis debate concerns the investigation and prosecution of former members of the armed forces for alleged offences in Northern Ireland during the Troubles. \n \nThe Legacy Investigations Branch (LIB) of the Police Service for Northern Ireland (PSNI) is currently reviewing all deaths attributable to the security situation that occurred in Northern Ireland between 1968 and the Good Friday/Belfast Agreement in 1998. \n \nAny decision by the LIB to prosecute is referred to the Director of Public Prosecutions for Northern Ireland. This is an independent process, without UK Government involvement. \n \nThe DPP for Northern Ireland recently confirmed that investigations into three cases involving former Army personnel had been concluded, and that in two of those cases the decision to prosecute had been taken. The MOD has stated that any member of the military affected by this process will be supported and receive free MOD legal representation.\n \nA debate was held in Westminster Hall on 10 January 2017 on Implementation of the Stormont House Agreement, in which much comment was addressed to the subject of these investigations. The Debate Pack prepared on that occasion, CDP-2017-0008, and the debate itself, will be of interest."}
      , "date" : {"_value" : "2017-02-22T17:06:49.3718735+00:00", "_datatype" : "dateTime"}
      , "description" : ["An Opposition Day debate on a motion relating to Armed forces and investigation and prosecution of historical cases, will be held in the Commons Chamber on Thursday 23 February 2017. The debate will arise on a motion in the name of the Democratic Unionist Party."], "identifier" : {"_value" : "CDP-2017-0061"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      , {"_about" : "http://data.parliament.uk/terms/37362", "prefLabel" : {"_value" : "International Affairs and Defence Section"}
      }
      , {"_about" : "http://data.parliament.uk/terms/61055", "prefLabel" : {"_value" : "Parliament and Constitution Centre"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Armed forces and investigation and prosecution of historical cases", "topic" : [{"_about" : "http://data.parliament.uk/terms/95476", "prefLabel" : {"_value" : "Administration of justice"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95492", "prefLabel" : {"_value" : "Armed forces"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95691", "prefLabel" : {"_value" : "Northern Ireland Assembly"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95712", "prefLabel" : {"_value" : "Police"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/341271", "abstract" : {"_value" : "MPs are often contacted by constituents who want action taken against noisy and/or low flying aircraft or helicopters. The CAA is the relevant enforcement authority; details on how to make a report are given in section 4 of the paper.\n \nAircraft noise is generally exempted from the general noise nuisance controls. This is the case, irrespective of whether an airfield in question is small and unlicensed or a major UK airport.\n \nGenerally, so long as the Rules of the Air Regulations 2015 are being observed, aircraft are protected from action in respect of trespass or nuisance. The Rules of the Air set out low flying rules in accordance with EU Regulation (EU) 923/2012 on the standardised European rules of the air. All helicopters flying in the London (Heathrow) and London City Control Zones are subject to an Air Traffic Control clearance and visibility minima.\n \nMaximum penalties for a breach of the rules vary depending on the offence from a £2,500 fine to two years\u2019 imprisonment.\n \nInformation on other aviation issues including aircraft noise more generally and noise limits for night flights, can be found on the Aviation Topical Page of the Parliament website."}
      , "date" : {"_value" : "2017-02-22T14:54:32.2819403+00:00", "_datatype" : "dateTime"}
      , "description" : ["This short paper summarises the law in respect of helicopter and light aircraft noise; safety when flying low over built up areas; permitted development for landing sites and routes of complaint if an aircraft breaches those rules."], "identifier" : {"_value" : "SN04059"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Nuisance from helicopters and light aircraft", "topic" : [{"_about" : "http://data.parliament.uk/terms/95501", "prefLabel" : {"_value" : "Aviation"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/690172", "abstract" : {"_value" : "The text of the motion is:\n \n That this House has considered the Government\u2019s support for the Syrian refugee crisis; commends the UK on its provision of aid to Syria and the region, the resettlement programmes and support to unaccompanied children in France; acknowledges that in 2016 over 30,000 unaccompanied children arrived by sea in Greece and Italy; notes that only 8 children were transferred from Greece and Italy under the Dublin III Regulation last year and none under the Dubs scheme; expresses disappointment that the Dubs Scheme will be ending after only 350 children benefiting; calls on the Government to work with the Greek and Italian governments to support access to family reunification through Dublin in a timely manner; and calls on the Government to continue to monitor local authority capacity for further transfers of children under the Dubs scheme, consulting with local authorities at least once every financial year. \n \nThe original representation to the Backbench Business Committee may be viewed here. "}
      , "date" : {"_value" : "2017-02-22T11:45:34.617844+00:00", "_datatype" : "dateTime"}
      , "description" : ["A backbench business debate on a motion relating to Unaccompanied children in Greece and Italy will be held in the Commons Chamber on Thursday 23 February 2017. The debate will be opened and lead by Alison McGovern, Heidi Allen, Tom Brake and Anne McLaughlin."], "identifier" : {"_value" : "CDP-2017-0057"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Unaccompanied children in Greece and Italy", "topic" : [{"_about" : "http://data.parliament.uk/terms/95498", "prefLabel" : {"_value" : "Asylum"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/657451", "abstract" : {"_value" : "What is the Istanbul Convention?\n \nThe \u201cIstanbul Convention\u201d is a Council of Europe Convention on preventing and combating violence against women and domestic violence.\n \nThe Convention was adopted by the Council of Europe on 7 April 2011 and opened for signature on 11 May 2011 at the 121st Session of the Committee of Ministers in Istanbul. It came into force on 1 August 2014.\n \nThe UK signed the Convention on 8 June 2012 but has not ratified it. The Government has said that it is committed to ratification but that amendments to domestic law - to take extra-territorial jurisdiction over a range of offences - are necessary before this can be done.\n \nCalls for UK ratification\n \nA February 2015 report by the Joint Committee on Human Rights called on the then Government \u201cto prioritise ratification of the Istanbul Convention\u201d.\n \nThere is an IC Change campaign calling for the Government to ratify the Convention.\n \nWomen\u2019s Aid and Scottish Women\u2019s Aid have both called for ratification.\n \nAmnesty International has said that Governments across Europe should ratify the Convention.\n \nPreventing and Combating Violence Against Women and Domestic Violence (Ratification of Convention) Bill 2016-17\n \nDr Eilidh Whiteford has introduced a Private Members\u2019 Bill requiring the Government to \u201ctake all reasonable steps as soon as reasonably practicable to enable the United Kingdom to become compliant\u201d with the Convention.\n \nThe Bill extends to England and Wales, Scotland and Northern Ireland.\n \nThe Bill had its Second Reading in the House of Commons on 16 December 2016, and Committee stage in one sitting on 1 February 2017. It was not amended. However, the Government signalled its intention to table amendments at Report stage, and gave a brief explanation of what these would be. \n \nThe Bill\u2019s progress can be followed on the Preventing and Combating Violence Against Women and Domestic Violence Bill 2016-17 pages of the Parliament website, along with amendments which have been tabled.\n \nReport stage is on 24 February 2017."}
      , "date" : {"_value" : "2017-02-21T15:43:10.4742365+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library Briefing Paper gives background to Dr Eilidh Whiteford's Private Members' Bill requiring the UK Government to ratify the Council of Europe Convention on preventing and combating violence against women (the \"Istanbul Convention\")."], "identifier" : {"_value" : "CBP-7829"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "UK policy on ratifying the Istanbul Convention on preventing violence against women", "topic" : [{"_about" : "http://data.parliament.uk/terms/95538", "prefLabel" : {"_value" : "Crime"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95540", "prefLabel" : {"_value" : "Crimes of violence"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/688425", "abstract" : {"_value" : "This is how Parliament approves the central police funding allocation for each force every financial year.  \n \nThe pack contains recent press and trade articles and parliamentary material on the subject.  \n \nMore detailed information and advice can be provided by our Police funding specialist: Grahame Allen x2457  \n \nFurther information\n \nThe Police Grant Report (England and Wales) 2017/18\n \n "}
      , "date" : {"_value" : "2017-02-21T15:11:04.4580489+00:00", "_datatype" : "dateTime"}
      , "description" : ["This debate pack has been compiled ahead of the Motion to approve the Police Grant Report (England and Wales) 2017/18 on Wednesday 22 February 2017."], "identifier" : {"_value" : "CDP-2017-0056"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      , {"_about" : "http://data.parliament.uk/terms/70459", "prefLabel" : {"_value" : "Social and General Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Police Grant Report (England and Wales)", "topic" : [{"_about" : "http://data.parliament.uk/terms/95712", "prefLabel" : {"_value" : "Police"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/692246", "abstract" : {"_value" : "Members often receive enquiries from constituents about school-related matters. Many of these can be answered from readily available information on the internet or in standard publications. Where complex issues are raised it may be more appropriate to refer the constituent to specialist bodies and organisations or to a solicitor if legal advice is sought.\n \nThis note gives a very brief overview of the structure of the state-maintained school system in Wales, including an outline of the different categories of schools, as often an answer to a school-related constituency question may depend upon the type of school in question. The note provides brief background and key sources on a selection of issues that are typically raised with Members by constituents. Members who have questions on topics not covered here may contact the Social Policy Section for information.\n \nThe various guidance documents referred to in this briefing are current at the time of writing; however, some sources are updated regularly or from time to time so it is advisable to check the relevant websites.\n \nThis note relates to Wales only. Education is a devolved area and information on school-related issues is available on the websites of the Department for Education, Scottish Government, and the Northern Ireland Department of Education.\n \nThere are also Library briefings:\n \n Constituency casework: schools in England, SN 05396 Constituency casework: schools in Scotland, CBP 07819"}
      , "date" : {"_value" : "2017-02-21T15:00:32.0997787+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Commons Library briefing provides an introduction and reference guide to the key schools-related topics often raised with Members by constituents in Wales."], "identifier" : {"_value" : "CBP-7904"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Constituency casework: schools in Wales", "topic" : [{"_about" : "http://data.parliament.uk/terms/95740", "prefLabel" : {"_value" : "Schools"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/692237", "abstract" : {"_value" : "The Broadcasting (Radio Multiplex Services) Bill is a private member\u2019s bill introduced in the House of Commons by Kevin Foster (Conservative MP for Torbay) on 4 July 2016. The Bill was drafted by the Department for Culture, Media and Sport (DCMS)  and completed its stages in the House of Commons without amendment. The Bill is sponsored in the House of Lords by Baroness Bloomfield of Hinton Waldrist (Conservative) and is scheduled for its second reading on 24 February 2017.\n \nThe Bill seeks to enable community radio stations in the UK to broadcast on the Digital Audio Broadcasting (DAB) radio platform. To enable this, the Bill would create powers to modify the current regulatory framework for the licensing of radio multiplex services, and provide for small-scale radio multiplex services.\n \nAll DAB radio services in the UK are broadcast as \u2018multiplexes\u2019. This is where sound signals from a number of individual radio stations are combined together and transmitted as digital data. Unlike analogue radio (FM and AM), the DAB multiplex can be broadcast from many different transmitters using the same transmission frequency. DAB is therefore a more efficient use of radio spectrum than analogue, and enables more radio services to be delivered to listeners.\n \nRadio multiplex services are licensed by Ofcom and, currently, the licences are awarded either for national coverage or for local county-sized coverage. According to Ofcom, the costs of these carriages are not economical for stations which seek to serve smaller towns or communities.  The Bill would essentially create a third tier in the system of radio multiplexes: new small scale radio multiplexes for sub-county level transmission (or wider transmission where there was no existing local multiplex licensee).\n \nThis briefing provides a short overview of the Bill, its key provisions, and a summary of its passage through the House of Commons."}
      , "date" : {"_value" : "2017-02-21T12:45:45.5146826+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Lords Library briefing provides a short overview of the Broadcasting (Radio Multiplex Services) Bill (HL Bill 99 of 2016\u201317), its key provisions, and a summary of its passage through the House of Commons in advance of the Bill's second reading in the House of Lords on Friday 24 February 2017."], "identifier" : {"_value" : "LIF-2017-0018"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414041", "prefLabel" : {"_value" : "Lords In Focus"}
      }
      , "title" : "Broadcasting (Radio Multiplex Services) Bill: Briefing for Lords Stages", "topic" : [{"_about" : "http://data.parliament.uk/terms/95507", "prefLabel" : {"_value" : "Broadcasting"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/686571", "abstract" : {"_value" : "Background\n \nIn March 2017, the UK will co-host the inaugural Commonwealth Trade Ministers Meeting. The objective will be to reaffirm the commitment of Commonwealth member countries to a \u201ctransparent free and fair multilateral trading system,\u201d and to define an ambitious Commonwealth led \u201cAgenda for Growth\u201d, supporting the target of increasing intra-Commonwealth trade to US$1 trillion by 2020.\n \nTrade statistics\n \nIn 2015, UK exports of goods and services to the Commonwealth were £47.4 billion (9.2% of total UK exports).\n \nIn the same year, UK imports from the Commonwealth were £45.5 billion (8.3% of total UK imports).\n \nUK exports to the Commonwealth peaked at £54.7 billion in 2011 before falling to £47.4 billion in 2015.\n \nUK imports from the Commonwealth peaked at £52.0 billion in 2011 before falling to £45.5 billion in 2015.\n \nThe UK\u2019s trade is heavily focussed on a small number of 51 Commonwealth countries - Australia, Canada, India, Singapore and South Africa accounted for 70% of UK exports to Commonwealth countries and 65% of UK imports from the Commonwealth in 2015.\n \n \n \n "}
      , "date" : {"_value" : "2017-02-21T10:57:21.8565929+00:00", "_datatype" : "dateTime"}
      , "description" : ["A debate will be held on promoting trade with the Commonwealth to in Westminster Hall on Wednesday 22 February at 2.30pm. The subject for debate has been chosen by Jake Berry MP."], "identifier" : {"_value" : "CDP-2017-0049"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/17113", "prefLabel" : {"_value" : "Economic Policy and Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Promoting trade with the Commonwealth", "topic" : [{"_about" : "http://data.parliament.uk/terms/95647", "prefLabel" : {"_value" : "International economic relations"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95651", "prefLabel" : {"_value" : "International trade"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/680743", "abstract" : {"_value" : "In the UK it is no longer an offence for an individual to wear medals or decorations that they were never awarded. This change in the law was a result of the enactment of the Armed Forces Act 2006, which repealed Section 197 of the Army Act 1955 and Section 197 of the Air Force Act 1955, in which the offence was originally specified.\n \nOn 29 June 2016, a Private Members\u2019 Bill, the Awards for Valour (Protection) Bill, was presented to make it an offence, once again, for the wearing or public display \u2013 by a person not entitled to do so \u2013 of medals or insignia awarded for valour, with the intent to deceive.\n \nThis would also align the UK with the many other countries that have similar legislation in force.\n \nIn advance of the Bill\u2019s Second Reading debate, the Defence Committee held an inquiry to examine the problem that the Bill seeks to address, and received evidence from a number of individuals and organisations. In its report, Exposing Walter Mitty: The Awards for Valour (Protection) Bill, the Committee outlined its support for the Bill and agreed that offences should be created to criminalise the deceitful wearing of decorations and medals by \u2018military imposters\u2019.\n \nThe Second Reading debate in the House of Commons took place on 25 November 2016 and received support from both the Government and the Opposition. This Government support came despite opposition to a similar e-petition earlier in 2016.\n \nThe Bill had a Public Bill Committee session on Wednesday 1 February 2017 where the Bill and subsequent amendments were scrutinised line-by-line. The Committee adopted various amendments tabled by the Bill\u2019s sponsor, Gareth Johnson, which sought to narrow the scope of the bill and place greater emphasis upon \u201cthe intent to deceive\u201d. Those awards which would fall under the remit of this bill have now been placed in a new Schedule, which can be amended by the Secretary of State through secondary legislation.\n \nThe Bill is due to have its Report Stage and Third Reading on 24 February 2017.\n \n "}
      , "date" : {"_value" : "2017-02-21T10:19:36.4895585+00:00", "_datatype" : "dateTime"}
      , "description" : ["The Awards for Valour (Protection) Bill, which was presented on 29 June 2016, is sponsored by Gareth Johnson MP. The Bill passed Second Reading in the Commons on 25 November 2016.  Several amendments which narrow the scope of the Bill were adopted in Committee on 1 February 2017. Report Stage and Third Reading is now scheduled for 24 February 2017. The Bill has the full support of the Government and is therefore considered likely to progress."], "identifier" : {"_value" : "CBP-7885"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/37362", "prefLabel" : {"_value" : "International Affairs and Defence Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Awards for Valour (Protection) Bill: Committee Stage Report", "topic" : [{"_about" : "http://data.parliament.uk/terms/95492", "prefLabel" : {"_value" : "Armed forces"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95775", "prefLabel" : {"_value" : "Veterans"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/444013", "abstract" : {"_value" : "The rather fragmented nature of the care home market combined with the fact that local authorities are the largest single purchasers in most parts of the country, means that local authorities have what has been described as monopsony purchasing power (a single buyer, but many sellers).\n \nGiven the pressures facing local authority budgets, they have sought to negotiate lower prices for the care home places they finance; this has prompted care home providers to seek further cross-subsidisation from self-funded residents, in a situation where many care home providers have significant debts and the introduction of the National Living Wage has increased costs.\n \nThe briefing paper also considers the role of the Care Quality Commission (CQC) in monitoring the financial health of strategically important care home providers, and the duties of local authorities in the event of the failure of a provider.\n \nThere is a separate Library briefing paper entitled Social Care Funding (England) which considers the funding for the social care sector, including care homes, and recent Government announcements."}
      , "date" : {"_value" : "2017-02-20T18:28:37.0763969+00:00", "_datatype" : "dateTime"}
      , "description" : ["This note considers the current state of the market for residential care (i.e. care homes)."], "identifier" : {"_value" : "CBP-7463"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "The care home market (England)", "topic" : [{"_about" : "http://data.parliament.uk/terms/95529", "prefLabel" : {"_value" : "Community care"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95697", "prefLabel" : {"_value" : "Older people"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/686609", "abstract" : {"_value" : "This debate is sponsored by Rt Hon Alan Johnson MP on the motion \"Changes in council funding and social care\". \n \nThe debate will take place in Westminster Hall at 9.30am on Wednesday 22 February for one and a half hours. \n \n The following briefings, press releases and reports provide relevant background to the debate.\n \nLibrary and POST briefings\n \nCommons Library Briefing Paper CBP7903, Adult Social Care Funding (England)\n \nCommons Library Briefing Paper CBP7564, State of the care home market (England)\n \nCommons Library Briefing Paper CBP7265, Social care: Announcement delaying introduction of funding reform (including the cap) and other changes until April 2020 (England)\n \nCommons Library Briefing Paper SN1911, Social care: paying for care home places and domiciliary care (England)\n \nParliamentary Office of Science and Technology POST-PN-0532, Integrating Health and Social Care\n \nCommons Library Briefing Paper CBP7873, The Local Government Finance Bill 2016-17\n \nCommons Local government finance in England: Social Indicators page, 15 December 2016\n \nParliamentary material\n \nDebates\n \nNHS and Social Care Funding\n \nHC Deb 11 January 2017 cc335-427\n \nLocal Government Finance Settlement\n \nHC Deb 15 December 2016 cc976-94\n \nSocial Care Funding\n \nHC Deb 12 December 2016 c502-511\n \n \n \nOral Questions\n \nSocial Care Budgets\n \nHC Deb 7 February 2017 cc216-8\n \n \n \nWritten Questions\n \nSocial Services: Finance\n \n10 Feb 2017 | Written questions | Answered | House of Commons | 63025\n \nSocial Services: Finance\n \n02 Feb 2017 | Written questions | Answered | House of Commons | 59989\n \nSocial Services: Council Tax\n \n01 Feb 2017 | Written questions | Answered | House of Commons | 58325\n \nSocial Services: Finance\n \n24 Jan 2017 | Written questions | Answered | House of Commons | 60503\n \nSocial Services: Finance\n \n12 Jan 2017 | Written questions | Answered | House of Commons | 58419\n \nSocial Services: Finance\n \n09 Jan 2017 | Written questions | Answered | House of Commons | 58515\n \nSocial Services: Finance\n \n09 Jan 2017 | Written questions | Answered | House of Commons | 58335\n \n \n \nPress articles\n \nCouncil tax to rise while services cut, says LGA\n \nBBC, 20 February 2017\n \nTory council\u2019s council tax referendum was bought off with Whitehall cash\n \nIndependent, 11 February 2017\n \nCouncils 'at breaking point' due to budget cuts and rising social care bills\n \nGuardian, 10 February 2017\n \nCouncil tax increases: Nearly every town hall in the country planning major changes, survey finds\n \nTelegraph, 10 February 2017\n \nWelsh ministers rule out social care council tax rise\n \nBBC, 8 February 2017\n \nReality Check: Who gets social care and who pays for it?\n \nBBC, 8 February 2017\n \nMinisters move to \u2018shift blame for funding cuts to local councils\u2019\n \nGuardian, 5 February 2017\n \nDirectors call for \u2019emergency\u2019 social care funding\n \nCommunity Care, 1 February 2017\n \n \n \nPress notices\n \nNo sticking-plaster solutions for social care\n \nPublic Finance, 13 February 2017\n \nReport: 2017 State of Local Government Finance survey\n \nLocal Government Information Unit, 10 February 2017\n \nCare Act faces failure - warn councils\n \nLocal Government Association, 31 January 2017\n \nNHS will not be able to cope unless government gets to grip with the social care crisis, warns doctors\u2019 leader\n \nBritish Medical Association, 30 December 2016\n \nCouncil tax rise to pay for care is \u2018a drop in the ocean\u2019\n \nCare and Support Alliance, 15 December 2016\n \nWhat now for social care?\n \nKing\u2019s Fund, 11 December 2016\n \n \n \nFurther Reading\n \nSelect Committees\n \nCommunities and Local Government Committee, Adult social care inquiry, ongoing\n \nHealth Committee, Impact of the Spending Review on health and social care, HC139, 2016-17\n \nPublic Accounts Committee, Adult social care in England, HC518 2014-15\n \nReports\n \nAge UK, Briefing: Health and Care of Older People in England 2017, 16 February 2017\n \nNational Audit Office, Health and social care integration, HC 1011, 8 February 2017\n \nLocal Government Association, Adult social care funding: 2016 state of the nation report, November 2016\n \nKing\u2019s Fund, Nuffield Trust and The Health Foundation, The Autumn Statement - Joint statement on health and social care, 8 November 2016\n \nCare Quality Commission, State of Care Report 2015/16, 12 October 2016\n \nLocal Government Association, The LGA\u2019s submission to the Autumn Statement 2016, 10 October 2016\n \nKing\u2019s Fund and Nuffield Trust, Social care for older people: Home truths, 15 September 2016\n \nAssociation of Directors of Adult Social Services, ADASS Budget Survey 2016, July 2016\n \nNational Audit Office, Adult social care in England: overview, 11 March 2014\n \n "}
      , "date" : {"_value" : "2017-02-20T18:24:50.0286882+00:00", "_datatype" : "dateTime"}
      , "identifier" : {"_value" : "CDP-2017-0051"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Changes in council funding and social care", "topic" : [{"_about" : "http://data.parliament.uk/terms/95529", "prefLabel" : {"_value" : "Community care"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95666", "prefLabel" : {"_value" : "Local government"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/691424", "abstract" : {"_value" : "The Parking Places (Variation of Charges) Bill is a private member's bill, which has completed all of its stages in the House of Commons, and is due to have its second reading in the House of Lords on 24 February 2017. Only three clauses long, the aim of the Bill is to allow local authorities to more easily lower parking charges in areas for which they are responsible. If a local authority wishes to raise charges, then the Bill would require that they consult interested parties. The Bill would apply to England only, and has the support of the Government \n \nUnder current legislation, local authorities must use the same procedure regardless of whether they want to raise or lower parking charges at both off-street and on-street parking places in their area. This includes publishing notice of the variation in a newspaper before the changes come into force; specifying all changes and timing of those changes; with regard to off-street parking, displaying a notice in the parking place; and with regard to on-street parking displaying a similar notice in prominent positions about the road. The Parking Places (Variation of Charges) Bill would amend sections 35C and 46A of the Road Traffic Regulation Act 1984 to allow for a different procedure to be specified by regulation, the purpose of which would be to make it less onerous to lower charges, but require that a local authority must hold a consultation should they wish to raise them."}
      , "date" : {"_value" : "2017-02-20T14:24:56.0184695+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Lords Library briefing provides background reading in advance of the second reading of the Parking Places (Variation of Charges) Bill in the House of Lords on Friday 24 February 2017."], "identifier" : {"_value" : "LIF-2017-0017"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414041", "prefLabel" : {"_value" : "Lords In Focus"}
      }
      , "title" : "Parking Places (Variation of Charges) Bill: Briefing for Lords Stages", "topic" : [{"_about" : "http://data.parliament.uk/terms/95666", "prefLabel" : {"_value" : "Local government"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95738", "prefLabel" : {"_value" : "Roads"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/346136", "abstract" : {"_value" : "Click the thumbnail to view a full-size map of 4-hour waits in major A&E departments in England. This map is also contained in the PDF report (below).\n \n \n \n \n \n \n \n \n \n \n \nA summary of data for England follows:\n \n \n \n \n \n \n \n \n \nA&E Demand\n \nTotal attendance increased by 5.2% compared with 2015 \u2013 equivalent to an average of 3,216 more people attending A&E each day. Attendance at A&E appears to be increasing at a faster rate than population growth.\n \n \n \nPatients spending over 4 hours in A&E\n \nThe number and percentage of patients spending over four hours in A&E has risen in recent years. In 2016, over 16% of patients in type 1 departments spent over 4 hours in A&E \u2013 the highest for over a decade. The target for 95% of all attendees to be discharged, admitted or transferred within 4 hours has not been met in the monthly data since July 2015\n \n \n \nEmergency Admissions\n \nThere were 4.26 million emergency admissions to hospital in 2016 - up 4.5% on the previous year.\n \nLong waits for admission have also become more common, with twelve hour \u2018trolley waits\u2019 - the numbers waiting over 4 hours for admission after a decision to admit \u2013 doubling in 2016 compared with 2015.\n \n \n \nFinding out more\n \nSome data for local NHS providers can be downloaded below. Links to source data can be found on the right of this page. MPs and their staff can contact Library staff for more data for their local areas."}
      , "date" : {"_value" : "2017-02-20T14:13:49.2358616+00:00", "_datatype" : "dateTime"}
      , "description" : ["England's A&E attendances in 2016 were 5.2% higher than in 2015. In 2016 16.2% of patients spent over 4 hours in major A&E departments, compared with 4.8% five years ago. This briefing gives stats on A&E demand, performance and pressure for England, Wales, Scotland and Northern Ireland."], "identifier" : {"_value" : "SN06964"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70459", "prefLabel" : {"_value" : "Social and General Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Accident and Emergency Statistics: Demand, Performance and Pressure", "topic" : [{"_about" : "http://data.parliament.uk/terms/95486", "prefLabel" : {"_value" : "Ambulance services"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95573", "prefLabel" : {"_value" : "Emergency services"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95621", "prefLabel" : {"_value" : "Health services"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/689520", "abstract" : {"_value" : "The European Union (Notification of Withdrawal) Bill was introduced in the House of Lords on 8 February 2017 and is scheduled to have its second reading on 20 and 21 February 2017. It would give the Prime Minister power to notify the European Council of the UK\u2019s intention to withdraw from the European Union, under the procedure set out in Article 50 of the Treaty on European Union. The Explanatory Notes state that the Bill would also provide for the UK to leave the European Atomic Energy Community (Euratom). The Government has stated its intention to trigger Article 50 before the end of March 2017 and it has set out a case for fast-tracking the Bill to meet this timetable.\n \nThe Government has introduced this Bill following a Supreme Court ruling that an Act of Parliament is required to give notice of the UK\u2019s decision to withdraw from the European Union. The Supreme Court also concluded that the Sewel Convention (according to which the Westminster Parliament does not normally legislate with regard to devolved matters except with the agreement of the devolved legislature) does not give rise to a legally enforceable obligation. The Government has stated that the Bill does not contain any provision which gives rise to the need for a legislative consent motion in the devolved legislatures. On 7 February 2017, the Scottish Parliament voted in favour of a motion that the Bill should not proceed, although this has no legal force to block the Bill.\n \nThis briefing summarises the debates that took place on the Bill in the House of Commons. The Bill was given its second reading by 498 votes to 114, a majority of 384. Divisions were held at committee stage on: arrangements for parliamentary scrutiny of the Brexit negotiations; the status of EU nationals in the UK; the role and status of the Joint Ministerial Committee on EU Negotiations; EU funding in Wales; Northern Ireland and the Good Friday Agreement; parliamentary votes to approve deals negotiated with the EU; \u2018resetting\u2019 the UK\u2019s membership of the EU if a deal was not negotiated within two years; the case for a deal to be approved by the British people in a referendum; requiring the Government to report on the economic and financial impact of Brexit; setting statutory negotiating objectives; maintaining EU tax avoidance and evasion measures; the role of Gibraltar in the Brexit process; and the process for leaving Euratom. All of the new clauses and amendments were defeated and the Bill was not amended at committee stage. The Government gave an undertaking that both Houses of Parliament would be given a vote on the withdrawal arrangements and the UK\u2019s future relationship with the European Union before any agreement was concluded, and it expected to hold the vote before the European Parliament debated and voted on the final agreement. However, the Government said that there was \u201cno need\u201d to amend the Bill to reflect this. Keir Starmer described this as a \u201cvery important concession\u201d, but other MPs were less convinced that it represented an advance on what the Government had previously promised. The Bill was given its third reading by 494 votes to 122, a majority of 372.\n \n \n \n "}
      , "date" : {"_value" : "2017-02-20T11:43:30.7610981+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Lords Library briefing provides information on the European Union (Notification of Withdrawal) Bill ahead of its second reading on 20 and 21 February 2017.  The Bill would give the Prime Minister power to notify the European Council of the UK\u2019s intention to withdraw from the European Union, under the procedure set out in Article 50 of the Treaty on European Union."], "identifier" : {"_value" : "LLN-2017-0009"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/346713", "prefLabel" : {"_value" : "Lords Library notes"}
      }
      , "title" : "European Union (Notification of Withdrawal) Bill: Briefing for Lords Stages", "topic" : [{"_about" : "http://data.parliament.uk/terms/95532", "prefLabel" : {"_value" : "Constitution"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95590", "prefLabel" : {"_value" : "EU institutions"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95591", "prefLabel" : {"_value" : "EU law and treaties"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95636", "prefLabel" : {"_value" : "Immigration"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95651", "prefLabel" : {"_value" : "International trade"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95659", "prefLabel" : {"_value" : "Legislative process"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95679", "prefLabel" : {"_value" : "Ministers"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95683", "prefLabel" : {"_value" : "National Assembly for Wales"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95691", "prefLabel" : {"_value" : "Northern Ireland Assembly"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95692", "prefLabel" : {"_value" : "Nuclear power"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95703", "prefLabel" : {"_value" : "Parliament"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95743", "prefLabel" : {"_value" : "Scottish Parliament"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95764", "prefLabel" : {"_value" : "Taxation"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/687699", "abstract" : {"_value" : "Summary\n \nGovernment targets and roll out\n \nSuperfast broadband has been rolled out to much of the country on commercial terms by providers such as BT and Virgin Media. The Government\u2019s policy is to provide funding to support the roll-out of superfast broadband to those areas of the UK where commercial roll-out is not economically viable. This is mostly, but not entirely, in rural areas.\n \nThe Government defines superfast as download speeds greater than 24Mbps (Megabits per second). Ofcom, the communications regulator in the UK, defines it as at least 30Mbps.\n \nBroadband Delivery UK (BDUK), part of the Department for Culture, Media and Sport (DCMS) is responsible for implementing the Government\u2019s policy on superfast broadband roll-out which consists of three stages:\n \n provide superfast broadband coverage to 90% of UK premises by early 2016 and access to basic broadband (2Mbps) for all from December 2015 \u2013 \u201cPhase 1\u201d provide superfast broadband coverage to 95% of UK premises by the end of 2017 \u2013 \u201cPhase 2\u201d explore options to provide superfast coverage to the hardest to reach parts of the UK - \u201cthe final 5%\u201d \n \nIn response to a PQ in January 2017 about its proposals to improve internet access and speeds in rural areas the Government stated that it was:\n \n \u2026 committed to improving access to quality broadband services to as many people in the UK as possible. This is why £1.7 billion of public money is being invested to support improvements in superfast broadband services across the UK. Broadband Delivery UK (BDUK) is committed to bringing superfast broadband access to 95 per cent of UK premises by the end of the year. By 2020, this should reach 97 per cent through a combination of public and commercial investment. To ensure that no one is left behind, the Government is also introducing a new broadband Universal Service Obligation (USO) within this Parliament. The USO will give households and businesses the legal right to request a broadband connection with speeds of at least 10 Megabits, no matter where they live or work.[1] \n \n \n \nUK Coverage\n \nOfcom\u2019s Connected Nations report, published in December 2016, tracks progress in the availability of superfast broadband and provides detailed information on broadband coverage across the UK.\n \nIt noted:\n \n the average download speed for the entire UK is 37Mbps, although speeds available to customers vary considerably; 5% of (about 1.4 million) UK premises are unable to receive speeds faster than 10Mbps; superfast broadband \u2013 speeds greater than 30 Mbps \u2013 is now available in 89% of (over 25 million) UK premises, with take-up of 31%. \n \n   \n \n Further information \n \nOfcom, Connected Nations 2016, 16 December 2016\n \nLibrary Briefing Paper 06643, Superfast Broadband Coverage in the UK, 18 August 2016\n \nPOST - Parliamentary Office of Science and Technology, UK Broadband Infrastructure, 29 May 2015\n \n[1]     PQ HL4671\n \n "}
      , "date" : {"_value" : "2017-02-20T10:51:03.1114341+00:00", "_datatype" : "dateTime"}
      , "description" : ["MPs will debate the rollout of superfast broadband to rural communities in Westminster Hall on Tuesday 21 February 2017 from 2.30 to 4.00pm.  The debate will be led by Alistair Carmichael MP.  This House of Commons Library debate pack provides some background information, statistics, press and parliamentary coverage and suggested further reading."], "identifier" : {"_value" : "CDP-2017-0053"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/67716", "prefLabel" : {"_value" : "Science and Environment Section"}
      }
      , {"_about" : "http://data.parliament.uk/terms/70459", "prefLabel" : {"_value" : "Social and General Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Rollout of superfast broadband to rural communities", "topic" : [{"_about" : "http://data.parliament.uk/terms/95766", "prefLabel" : {"_value" : "Telecommunications"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/344004", "abstract" : {"_value" : "The Government makes treaties\u2026\n \nThe UK Government is responsible for negotiating, signing and ratifying the 30 or so international treaties involving the UK each year.\n \nThe starting point for treaty ratification in the UK is that the Government has the power to make international treaties under its prerogative powers. But this cannot automatically change domestic law or rights, and \u2013 as the Supreme Court recently ruled in the Miller case \u2013 it cannot make major changes to the UK\u2019s constitutional arrangements without Parliamentary authority.\n \n\u2026but Parliament has a limited role\n \nParliament (and/or the devolved legislatures) is therefore involved if domestic law needs to be changed in order to implement a treaty \u2013 but this does not give Parliament the power to approve, reject or amend the treaty itself. It also now has the opportunity to say that a treaty should not be ratified, but it does not have to debate or vote on most treaties.\n \nThis is in contrast to some other countries, where parliaments are involved in treaty-making and may need to give their consent before ratification (often because treaties can automatically be part of domestic law that can be relied on in domestic courts).\n \nThe 2010 Act: new power for the Commons to block ratification\n \nPart 2 of the Constitutional Reform and Governance Act 2010 requires the Government to lay before Parliament most treaties it wishes to ratify, along with an Explanatory Memorandum. This gave statutory form to part of a previous constitutional convention on parliamentary involvement with treaties (the Ponsonby Rule).\n \nThe 2010 Act also for the first time gave parliamentary disapproval of treaties statutory effect, and effectively gave the House of Commons a new power to block ratification. The process is this:\n \n The Government may not ratify the treaty for 21 \u2018sitting days\u2019 (ie days when both Houses were sitting) after it was laid before Parliament. If within those 21 sitting days either House resolves that the treaty should not be ratified, by agreeing a motion on the floor of the House, the Government must lay before Parliament a statement setting out its reasons for nevertheless wanting to ratify. If the Commons resolves against ratification \u2013 regardless of whether the Lords did or not \u2013 a further 21 sitting day period is triggered from when the Government\u2019s statement is laid. During this period the Government cannot ratify the treaty. If the Commons again resolves against ratification during this period, the process is repeated. This can continue indefinitely, in effect giving the Commons the power to block ratification. \n \nNeither House has yet resolved against ratification of a treaty under these provisions, and there are limited options for how they can do so.\n \nDespite looking like a major change, the provisions of the 2010 Act have several exclusions and limitations.\n \nExclusions\n \nSome types of treaty are excluded from the 2010 Act:\n \n exceptional cases Memorandums of Understanding, and treaties that do not require ratification some EU Treaties which already require an Act of Parliament or even a referendum \u2018double taxation\u2019 agreements which require an Order in Council \n \nDevolved executives and legislatures\n \nThe devolved executives and legislatures have very limited involvement in treaties, even though they may be responsible for applying them.\n \nTreaty-making remains the exclusive responsibility of the UK Government, but it has agreed to cooperate on treaty negotiation and implementation\n \nNo requirement for debates or votes\n \nAlthough the 2010 Act puts on a statutory footing Parliament\u2019s opportunity to scrutinise treaties, it does not require Parliament to scrutinise, debate or vote on them (and it rarely does so).\n \nThere have been some calls for a process that results in more debates and votes on treaties, perhaps involving the committees, but Parliament has so far been reluctant to set up new mechanisms for treaties.\n \nThis is in contrast to many other countries where parliamentary approval is required at least for certain defined categories of treaty. Even some other \u2018dualist\u2019 countries have incorporated some kind of parliamentary scrutiny of treaties, for example Australia which has a dedicated Joint Standing Committee on Treaties.\n \nParliament can only oppose (or tacitly accept) a treaty in full \u2013 it cannot amend treaties.\n \nParliament cannot amend treaties\n \nThere is no general requirement or mechanism for parliamentary scrutiny of (non-EU) treaties while the Government is negotiating them. So Parliament is not usually involved at the stage when changes could still be made to the text of a treaty.\n \nThis is fairly typical; the US is rare in allowing the Senate Committee on Foreign Relations to propose amendments to treaties.\n \nThere have been several proposals for parliamentary involvement before signature, to minimise disagreements when it comes to ratification, but there is also considerable opposition to such ideas.\n \nHowever, Brexit has re-awakened the debate on how Parliament should be involved with treaties. Many of the proposed amendments to the European Union (Notification of Withdrawal) Bill concerned Parliament\u2019s role in the negotiating process or approving the final agreement. Although none of them passed, the Government did agree to give Parliament a vote on a withdrawal agreement before it is signed. And the likelihood of subsequent treaties having a major effect domestically, for instance on trade, might reignite calls for more parliamentary scrutiny of treaties.\n \nFurther information\n \nImage copyright\n \nPress Association\n \nPublication details"}
      , "date" : {"_value" : "2017-02-17T17:53:26.7387554+00:00", "_datatype" : "dateTime"}
      , "description" : ["Parliament now has a statutory role in ratifying treaties. As this Commons Library briefing paper explains, the Government must lay most treaties before Parliament for 21 sitting days before it can ratify them, and the Commons can block ratification indefinitely.  However, there is no statutory requirement for a debate or vote, and parliament cannot amend treaties."], "identifier" : {"_value" : "SN05855"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/37362", "prefLabel" : {"_value" : "International Affairs and Defence Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Parliament's role in ratifying treaties", "topic" : [{"_about" : "http://data.parliament.uk/terms/95532", "prefLabel" : {"_value" : "Constitution"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95591", "prefLabel" : {"_value" : "EU law and treaties"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95648", "prefLabel" : {"_value" : "International law"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95703", "prefLabel" : {"_value" : "Parliament"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/687263", "abstract" : {"_value" : "Purchase of distressed assets by Cerberus Capital Management\n \nGeorge Kerevan will introduce a two hour Westminster Hall debate about the role played by this financial group in the restructuring of the nationalised assets of UK banks following the financial crash of 2007.  This issue has been returned to on numerous ocassions by the Treasury Select Committee.  It focuses particularly on the purchase of the assets of the previous Northern Rock Bank.\n \nThe sale was looked at by the National Audit Office who commented that:\n \nIn November 2015 the government disposed of £13.3 billion former Northern Rock mortgages and loans to a consortium led by US private equity group, Cerberus. According to a report today by the National Audit Office, when judged against the Government\u2019s objective to shrink the balance sheet swiftly the deal was value for money. This transaction represents the government\u2019s largest-ever financial asset sale.\n \nThe sale, conducted by the UK Asset Resolution (UKAR) which is owned by HM Treasury, comprised of £11.9 billion of mortgages from the Granite debt financing vehicle within Northern Rock Asset Management (NRAM) and additional loans (£1.4 billion). The taxpayer received £5.5 billion in cash while Cerberus took on nearly £8 billion in liabilities. Some 270,000 mortgages and loans were sold in the deal.\n \nThe NAO Report can be found here.\n \nThe Library will produce a briefing or material for the debate and this page will be updated when it is made available. You can be notified when this takes place by emailing papers@parliament.uk."}
      , "date" : {"_value" : "2017-02-17T15:13:23.7782951+00:00", "_datatype" : "dateTime"}
      , "description" : ["Purchase of distressed assets by Cerberus Capital Management."], "identifier" : {"_value" : "CDP-2017-0052"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Purchase of distressed assets by Cerberus Capital Management.", "topic" : [{"_about" : "http://data.parliament.uk/terms/95602", "prefLabel" : {"_value" : "Financial institutions"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95603", "prefLabel" : {"_value" : "Financial services"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/424754", "abstract" : {"_value" : "The current charging system for water in England and Wales is based on a mix of metered charging and the rateable value of the property being charged. Individual customers can check their water bills to see how they are being charged for water.\n \nAs at 5 March 2014, 41% of customers in England and 34% of customers in Wales paid for water by a meter.\n \nCan a domestic customer choose to have a water meter?\n \nDomestic customers who currently pay on an unmeasured (unmetered) basis have the legal right at any time to give their water company a notice requiring them to fix charges by reference to the volume of water supplied (i.e. on a metered basis). Tenants also have a right to ask for a meter but it is recommended that they ask permission from their landlord first. If a tenancy agreement is for less than 6 months a tenant must ask permission from their landlord.\n \nA water company is not obliged to give effect to the customer's notice if it is not reasonably practicable to do so, or if it is unreasonably expensive.\n \nCan a water company insist on the installation of a water meter?\n \nIn practice, a water company can install a water meter and charge on that basis, if the household customer:\n \n uses an automatic watering device (such as a garden sprinkler); automatically fill a swimming pool or pond; has a large bath; uses a reverse osmosis softening unit; has a power shower; is the new occupier of a property (provided an unmetered bill has not already been sent to that occupier); or lives in an area which has been determined by the Secretary of State to be an area of serious water stress and subject to a metering programme as part of a plan to maintain secure water supplies. \n \nIt is at the discretion of the water company to decide which type of meter it proposes to use (e.g. whether it is a smart meter), as long as they comply with relevant UK and EU requirements.\n \nWater companies are allowed to do this because the Water Industry Act 1991 (as amended) includes provisions to allow water companies to install water meters and require that the water is paid for on that basis. This right is only restricted when certain conditions or circumstances set out in the W\u200bater Industry (Prescribed Conditions) Regulations 1999\u200b\u200bapply.\n \nDoes this mean there is compulsory metering in some parts of the country?\n \nNo water company is required to introduce compulsory metering. The legislation simply gives water companies the power to choose to use metering as a way of managing water resources in their area.\n \nWhich areas are classified as in \"serious water stress\"?\n \nThe water company water stress designations were updated in July 2013, using up-to-date evidence for determining the level of water stress for areas in England and Wales. The following water company areas were classified as areas of serious water stress by the Environment Agency and Natural Resources Wales (2013 classifications):\n \n Affinity Water Anglian Water Essex and Suffolk Water South East Water Southern Water Sutton and East Surrey Water Thames Water \n \nThe Secretary of State may revoke or modify any determination at any time.\n \nCan a customer refuse to have a water meter?\n \nIf one of more of the conditions for metering outlined above applies to a customer, the water company is allowed to install a meter and charge on that basis. A customer cannot refuse a meter in these circumstances.\n \nDevolved Administrations\n \nThis Briefing Paper relates to England only, unless otherwise specified.\n \nFor information on water meters in Wales, detailed advice is available from the Citizens Advice Page on Water Meters and the Welsh Water page on water meters and guidance on having a water meter.\n \nFor information specific to Scotland, detailed advice is available from the Citizens Advi\u200bce Page on Water Meters and the Scottish Water page on water meters.\n \nFor information on water meters in Northern Ireland, please refer to the NI Water statement on water meters and the CCWater for Northern Ireland page on water charging."}
      , "date" : {"_value" : "2017-02-17T13:08:54.4565996+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library Briefing Paper explains the powers that customers and water companies have in opting for charging with water meters. It also provides an overview of the relevant Government policy and legislation."], "identifier" : {"_value" : "CBP-7342"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Water meters: the rights of customers and water companies", "topic" : [{"_about" : "http://data.parliament.uk/terms/95773", "prefLabel" : {"_value" : "Utilities"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95779", "prefLabel" : {"_value" : "Water industry"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/686568", "abstract" : {"_value" : "State visits are formal visits to the UK by Heads of State from overseas, with the aim of strengthening relationships. There are usually two state visits to the UK each year. The Queen has hosted 109 state visits, from King Gustaf VI Adolf and Queen Louise of Sweden in 1954 to Colombian President Juan Manuel Santos and his wife Maria in November 2016. The full list of state visits during the Queen\u2019s reign is available on the royal website.\n \nTwo US Presidents have made state visits during the Queen\u2019s reign, Barack Obama (2011) and George W Bush (2003). Each of them was in the third year of his first term at the time of the visit. The most frequent state visits have been from France (5), and Germany, Italy, Saudi Arabia and Mexico (4 each). Most other countries have had either one or two state visits.\n \nThe invitation to Mr Trump to make a state visit to the UK was conveyed by Prime Minister Theresa May during her trip to Washington in late January 2017. A potential visit was reported in November 2016, and was flighted in terms of building the so-called \u201cspecial relationship.\u201d The invitation is for a visit this year, and July has been mooted as a likely date, although no official date has yet been announced.\n \nThe invitation to Mr Trump has become controversial, especially given his announcement almost immediately after Mrs May\u2019s visit of an executive order halting the US refugee programme for 120 days, indefinitely banning Syrian refugees and barring entry to the USA to nationals of seven Muslim-majority states for 90 days. That policy has been suspended as a result of legal action, although the administration is seeking to reverse that position.\n \n "}
      , "date" : {"_value" : "2017-02-16T16:42:20.1810273+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Debate Pack has been prepared ahead of the debate on two e-petitions, numbers 171928 and 178844, relating to the proposed state visit by President Trump. The debate will be held on Monday 20 February 2017."], "identifier" : {"_value" : "CDP-2017-0048"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/37362", "prefLabel" : {"_value" : "International Affairs and Defence Section"}
      }
      , {"_about" : "http://data.parliament.uk/terms/61055", "prefLabel" : {"_value" : "Parliament and Constitution Centre"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "E-petitions 171928 and 178844 relating to a state visit by President Donald Trump", "topic" : [{"_about" : "http://data.parliament.uk/terms/95609", "prefLabel" : {"_value" : "Foreign and Commonwealth Office"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95690", "prefLabel" : {"_value" : "North America"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95703", "prefLabel" : {"_value" : "Parliament"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/687272", "abstract" : {"_value" : "Sir William Cash will introduce a Westminster Hall debate about the future of the London Stock Exchange Group (LSEG) in Westminster Hall on 21 February from 4.30pm to 5.30pm.\n \nThis is in the context of uncertainty around the City of London post - Brexit and, more immediately, the ongoing proposed merger between the LSEG and Deutsche Borse. The merger has been approved by the shareholders of both organisations and, currently, the main obstacle to this merger appears to be EU competition authority approval. There is a full chronology of the merger process with accompanying official documents and other material on the LSEG website here."}
      , "date" : {"_value" : "2017-02-16T16:17:49.4027325+00:00", "_datatype" : "dateTime"}
      , "description" : ["Parliamentary debate 21/2/17: Future of the London Stock Exchange"], "identifier" : {"_value" : "CDP-2017-0054"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Future of the London Stock Exchange", "topic" : [{"_about" : "http://data.parliament.uk/terms/95530", "prefLabel" : {"_value" : "Companies"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95531", "prefLabel" : {"_value" : "Competition"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95602", "prefLabel" : {"_value" : "Financial institutions"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/417828", "abstract" : {"_value" : "Although the incumbent, Hassan Sheikh Mohamud, was the favourite to win ahead of the presidential vote, he was decisively defeated by 184 votes to 80.\n \nPower was transferred to President Farmajo on 16 February.  His formal inauguration is scheduled for 22 February. A dual US-Somali citizen, Farmajo was the prime minister of Somalia between 2010 and 2011. During his campaign he promised to renew the fight against corruption and indicated that he would be open to talks with al-Shabaab. He has a reputation for competence that will now be put to the test.\n \nAfrica Confidential described the process of creating a new parliament as \u201cextremely tortuous and drenched in bribery and violence\u201d and reserved judgement on whether it will be a \u201cstepping stone towards one person, one vote democracy\u201d when the next election season arrives in 2020 (as was originally the hope about the elections that have just finished). Much the same has been alleged of the presidential contest.\n \nAs always in Somalia, clan interests and alliances played a major role in deciding the (s)election outcome, as did the involvement of foreign powers. This will remain the case under President Farmajo, who comes from the Darod clan. Most now expect that, in order to ensure balanced clan representation, his prime minister will come from the Hawiye clan. More broadly, the new government will need to be sufficiently \u201cinclusive\u201d of all the larger clans if it is to have credibility.\n \nThe credibility of Somalia\u2019s new government will depend on its ability to deliver security. Al-Shabaab was unable to prevent the (s)electoral process from taking place. However, Africa Confidential claims that many of the Elders involved who came from areas where al-Shabaab is strong have repudiated their involvement on returning home and apologised for participating in it. Their apologies have reportedly been accepted provided they also pay $300 to al-Shabaab, significantly boosting its coffers. If true, this suggests that President Farmajo\u2019s political base remains distinctly fragile.\n \nAl-Shabaab continued to launch regular attacks on the Somali security forces and civilians while the (s)electoral process was taking place. A suicide bombing attack on a Mogadishu hotel in January reportedly killed between 15 and 20 civilians. In January 2017 al-Shabaab attacked a Kenyan military camp and reportedly killed at least 21 soldiers (Kenya claims that nine of its soldiers and dozens of terrorists died). The fact that Kenya has national elections later this year makes their troops a particularly attractive target for al-Shabaab at the moment.\n \nGiven the continuing weakness of the Somali National Army, the new president will be keen to see the African Mission in Somalia (AMISOM), whose multinational forces have been supporting the Somali Federal Government, play an effective role. The force has also suffered some set-backs over the last year or so. Last year, Ethiopia withdrew its troops from the mission. For now, Kenya remains committed to it.\n \nPresident Farmajo will also be hoping that a decision by the Kenyan Government to close the Dadaab refugee camp, where 200,000 Somalis currently live, is shelved. Earlier this month, a Kenyan court ruled the decision was illegal. The Kenyan Government has said it intends to appeal against the verdict.\n \nThe problems facing AMISOM may open the way for the talks with al-Shabaab that President Farmajo has suggested he would like to see. But talks do not look imminent. It may be that the authorities will start by trying to draw those who are al-Shabaab \u2018by convenience\u2019 into negotiations, rather than target hardliners.\n \nPresident Farmajo also faces a big challenge in consolidating the country\u2019s emerging federal system. His predecessor failed to finish a constitutional review process that might have given it a more resilient underpinning. For now, the division of powers between the centre and the regional states remains opaque.\n \nPerhaps the most urgent challenge facing the new president is the severe drought that is affecting Somalia. In January 2017 the UN Humanitarian Coordinator for Somalia said that five million Somalis \u2013 about half the population \u2013 do not have enough to eat.\n \nIn February, the UK Government\u2019s Envoy for the Horn of Africa, Sir Nicholas Kay, said that hundreds of thousands of Somalis could die in the next few month unless there is action to address the threat of famine. However, the crisis has not yet officially been declared a famine.\n \n "}
      , "date" : {"_value" : "2017-02-16T13:29:42.2353721+00:00", "_datatype" : "dateTime"}
      , "description" : ["Somalia has just completed a long and much-delayed (s)electoral process to create a new parliament and elect a new president. Mohamed Abdullahi Mohamed (known as Farmajo) was elected the country\u2019s president by parliament on 8 February 2017. President Farmajo faces many daunting challenges."], "identifier" : {"_value" : "CBP-7298"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/37362", "prefLabel" : {"_value" : "International Affairs and Defence Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Somalia: February 2017 update", "topic" : [{"_about" : "http://data.parliament.uk/terms/95479", "prefLabel" : {"_value" : "Africa"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95609", "prefLabel" : {"_value" : "Foreign and Commonwealth Office"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95635", "prefLabel" : {"_value" : "Human rights"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95646", "prefLabel" : {"_value" : "International development"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95650", "prefLabel" : {"_value" : "International politics and government"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/689904", "abstract" : {"_value" : "The Criminal Finances Bill was introduced by the Government on 13 October 2016. It contains measures aimed at improving the Government\u2019s ability to recover the proceeds of crime; prevent the financing of terrorism; and tackle money laundering and tax evasion.\n \nLibrary Briefing Paper CBP 7739 Commons Library Analysis of the Criminal Finances Bill provides an analysis of the Bill as originally introduced.\n \nThe Bill had its Second Reading on 25 October 2016. There were six sittings of the Public Bill Committee, including two evidence sessions. The amendments made in Committee were mostly of a technical nature and were uncontroversial. They included:\n \n Expanding the definition of \u201ccash\u201d in the Proceeds of Crime Act 2002 and the Anti-Terrorism, Crime and Security Act 2001 to including gaming vouchers and casino tokens for the purposes of civil recovery; The extension of new freezing, seizure and forfeiture powers to immigration officers; and The creation of an accreditation regime for civilian counter-terrorism financial investigators."}
      , "date" : {"_value" : "2017-02-16T10:31:53.7759692+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Paper provides a guide to the Second Reading and Committee stage of the Criminal Finance Bill currently before the Commons.  The Bill has broad cross party support and very few changes were made to it during Committee."], "identifier" : {"_value" : "CBP-7825"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      , {"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Criminal Finances Bill: Committee Stage Report", "topic" : [{"_about" : "http://data.parliament.uk/terms/95538", "prefLabel" : {"_value" : "Crime"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95602", "prefLabel" : {"_value" : "Financial institutions"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95764", "prefLabel" : {"_value" : "Taxation"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/689507", "abstract" : {"_value" : "The number of people claiming Jobseeker\u2019s Allowance or claiming Universal Credit and required to seek work was 745,000 in January 2017, down 42,400 from December.\n \nThe unemployment rate was 4.8% in October-December 2016. The ILO measure of unemployment was 1.60 million people, slightly lower than the previous quarter and 97,000 fewer than the year before.\n \nThe number of people in employment was 31.84 million in October-December 2016, 37,000 more than the previous quarter and 302,000 more than the year before. The employment rate was 74.6%, the highest since comparable records began in 1971. \n \nAverage weekly total pay in Great Britain increased by 2.6% in the three months to December 2016 compared with the previous year. Regular pay (excluding bonuses) also grew by 2.6%. CPI inflation averaged 1.2% over this period.\n \n "}
      , "date" : {"_value" : "2017-02-15T11:52:49.1630076+00:00", "_datatype" : "dateTime"}
      , "description" : ["This paper was formerly called \"Unemployment by Constituency\". It contains claimant count figures for parliamentary constituencies, as well as a summary of the latest labour market statistics for the UK as a whole."], "identifier" : {"_value" : "CBP-7900"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/17113", "prefLabel" : {"_value" : "Economic Policy and Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "People claiming unemployment benefits by constituency, January 2017", "topic" : [{"_about" : "http://data.parliament.uk/terms/95561", "prefLabel" : {"_value" : "Economic situation"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95574", "prefLabel" : {"_value" : "Employment"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95771", "prefLabel" : {"_value" : "Unemployment"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/424766", "abstract" : {"_value" : "July 2016: the killing of Burhan Wani\u2026\n \nOn 8 July 2016, Burhan Wani, a 22 year-old leader of the armed group Hizbul Mujahedin, was killed by the Indian security forces. Wani had been highly active on social media and had been called the \u201cTwitter terrorist\u201d. Tens of thousands attended his funeral, at which clashes broke between the security forces and protestors. The security forces fired live ammunition into the crowd, killing several people. One police officer was also killed.\n \n\u2026 triggers mass protest, deaths and a lock-down\u2026\n \nSince Wani\u2019s death, the Kashmir Valley has seen its biggest outbreak of protest and violence since 2010. The authorities have declared a succession of curfews and closed down mobile phone services and the media. Protestors have organised a series of general strikes and there have been regular public rallies against Indian rule. Schools, colleges and universities have also been closed throughout. The economy has been badly hit. Funerals have often led to further clashes between protestors and the security forces.\n \nThe Union Government sent 2,000 additional forces to the Kashmir Valley. But, as protests intensified, it was also forced to create an expert panel to look into alternatives to the use of supposedly \u2018non-lethal\u2019 pellet guns, which have caused serious injuries to protestors, by the security forces. The use of these weapons has been controversial for some time. The authorities have subsequently said that alternatives will be introduced, but they have not said to date what they would be. There have been reports that chili powder shells are now being used instead.\n \nBy mid-October 2016 at least 91 civilians had been killed, thousands arrested and thousands more injured. Around the same time, it was claimed that at least 434 people had been detained under the Public Safety Act, which provides for detention for up to six months without trial of people who pose a threat to state security. It was also reported that 1,000 people had so far sustained eye injuries from pellets.\n \nOver the last month or so, there have been fewer street protests. This may be more to do with the fact that it has been deep mid-winter, rather than any calming of the situation. But there were a couple of well-observed general strikes last week to mark the anniversaries of the hanging of two Kashmiri separatist leaders, Muhammad Afzal Guru and Mohammed Maqbool Bhat.\n \nAt the time of writing, the opposing forces on the ground appear to be in a \u2018stand-off\u2019, with both sides waiting for the other to blink and with few ideas circulating about how permanently to reduce tensions. Levels of protest could rise again when spring arrives.\n \n\u2026 and a flaring up of tension between India and Pakistan\u2026\n \nAs clashes increased following the death of Burhan Wani, a war of words also broke out between India and Pakistan, with the former reiterating its accusation that the Pakistani army provides support to pro-separatist armed militants. Within a month or so the war of words had escalated into firing bullets and shells at each other across the Line of Control. Infiltration and attacks by armed militants, which India accuses Pakistan of supporting, also increased.\n \nIn mid-September 2016, militants attacked an army base at Uri, killing 19 Indian soldiers \u2013 the army\u2019s worst loss of life for 14 years. This provoked outrage across India and at the end of that month India retaliated with what it called \u201csurgical strikes\u201d against militant camps on the Pakistani side of the Line of Control, killing at least a dozen. Pakistan has disputed that the strikes even happened. On 7 October, the Indian army reported that it had killed seven armed militants who had attempted unsuccessfully to enter a military encampment in Kupwara District.\n \nThere were growing fears of a major escalation in conflict between the two countries. India has reportedly moved thousands of civilians from the border areas and has strengthened its fortifications. Pakistan\u2019s defence minister said that his country\u2019s nuclear weapons were \u201cnot just showpieces\u201d. A senior BJP figure said that India will no longer responded proportionately to attacks, saying \u201cfor one tooth, the complete jaw\u201d. Some Indian commentators have speculated that there could be another \u2018Mumbai-style\u2019 attack deep inside India by armed militants.\n \nMeanwhile, Prime Minister Modi called Pakistan the \u201cmother ship of terrorism\u201d and declined to attend a regional summit that was due to be held in Islamabad. The summit was eventually cancelled. He sought to mobilise other countries behind India\u2019s stance, trying to get a sympathetic statement from the other members of the BRICS (Brazil, Russia, India, China, South Africa) group at its summit last year. Pakistan engaged in its own diplomatic lobbying \u2013 for example, sending parliamentarians to the UN, European Parliament and foreign capitals in the hope of persuading other governments to exert more pressure on India.\n \nIn recent weeks, the biggest killer of Indian soldiers along the Line of Control has probably been avalanches. The total death toll by this means reached 20 soldiers by the end of January. But clashes between the Indian security forces and armed militants have continued. On 4 February, the Indian army reported that it had killed two armed militants who had been planning an attack in Srinagar. On 12 February there was a gun battle between security forces and militants in which at least eight people died \u2013 four militants, two soldiers and two civilians. There were more clashes on 14 February, in which at least three soldiers and four armed militants were reportedly killed. Both India and Pakistan continue to accuse the other of firing across the Line of Control.On 14 February, four Pakistani soldiers were reportedly killed by their Indian counterparts following an exchange of fire.\n \nWhen the Pakistani authorities placed Lashkar-e-Taiba leader Hafiz Saeed under house arrest in January, some hoped that this might open the way for a relative thaw in India-Pakistan relations. However, in mid-February, a senior Indian official was reported as saying that currently India had no interest in beginning peace talks.\n \n\u2026 as well as renewed debate about how to break the impasse\u2026\n \nCommentators have argued that events over the last six months or so reflect the anger that has long been \u201csimmering beneath Kashmir\u2019s uneasy calm.\u201d\n \nCritics allege that the response of the Indian authorities to the latest upsurge of protest and violence shows that they continue to prefer military responses to a political solution in Indian-administered Kashmir.\n \nSome are again also asking why the Union Government continues to be so resistant to lifting the Armed Forces (Special Powers) Act in Jammu and Kashmir \u2013 emergency legislation which has long given the security forces immunity from prosecution and which is detested by many Kashmiris.\n \nFor many on the Indian side, the \u2018root cause\u2019 that needs to be addressed first is Pakistan\u2019s support for terrorism. Only then will a solution be possible.\n \n\u2026 there has been a relatively low-key response from Western governments\n \nThe previous US Administration called on India and Pakistan to find a solution to the Kashmir issue through \u201cmeaningful dialogue\u201d \u2013 a reiteration of the US\u2019s longstanding position.\n \nIn the run-up to the presidential election in November 2016, Donald Trump offered to mediate between the parties to the Kashmir conflict. Before taking office on 20 January, then Vice-President Elect Mike Pence said that the future President Trump\u2019s \u201cextraordinary deal-making skills\u201d could help to resolve the conflict. Any mediation role would be a break with past US policy. But no initiatives have been announced since the new US Administration took office.\n \nThe UK Foreign Secretary, Boris Johnson, issued a public statement condemning the attack on the Indian army base at Uri in mid-September 2017.\n \nOn 19 January 2017 there was a backbench business debate on Kashmir in the Commons. At the end of the debate, FCO Minister Alok Sharma reiterated the UK's long-held position on the need for dialogue, but that the UK had no direct role to play in ending the conflict.\n \nIn August 2016, the Office of the UN High Commissioner for Human Rights expressed its \u201cregret\" over India and Pakistan\u2019s refusal to accede to its request to send a team to Indian-administered and Pakistan-administered Kashmir to investigate alleged human rights abuses on both sides of the Line of Control. Pakistan subsequently reversed its position. India, which has long opposed international involvement on the issue, has not done so."}
      , "date" : {"_value" : "2017-02-15T11:45:18.7554385+00:00", "_datatype" : "dateTime"}
      , "description" : ["This briefing covers events in Indian-administered Kashmir since 8 July 2016, which have been characterised by a dramatic upsurge in protest and violence on the ground \u2013 what some are calling the \u201cworst crisis in a generation\u201d."], "identifier" : {"_value" : "CBP-7356"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/37362", "prefLabel" : {"_value" : "International Affairs and Defence Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Kashmir: February 2017 update", "topic" : [{"_about" : "http://data.parliament.uk/terms/95497", "prefLabel" : {"_value" : "Asia"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95609", "prefLabel" : {"_value" : "Foreign and Commonwealth Office"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95635", "prefLabel" : {"_value" : "Human rights"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95650", "prefLabel" : {"_value" : "International politics and government"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95767", "prefLabel" : {"_value" : "Terrorism"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/339663", "abstract" : {"_value" : "Aviation noise is a source of constant annoyance to those who live under airport flight paths and for those subject to lower levels of disturbance caused by low flying smaller aircraft and helicopters. This form of noise pollution is explicitly excluded from general noise nuisance legislation.\n \nThe noise impacts of aviation on individuals and communities have been subject to a number of reports in recent years, some of which are summarised here. There have also been efforts to properly map and monitor noise, including the development of online live data sites which can be used by the public as well as industry.\n \nSuggested measures to tackle noise vary from more controls and restrictions, to charges and better airspace and aircraft design. Some of these measures are exercised by international bodies and the UK Government while others are in the control of the industry \u2013 particular airports. There are also proposals for a new Independent Commission on Civil Aviation Noise (ICCAN), which would help develop airspace and noise policies and act as a guarantee to local people that their noise concerns would be heard.\n \nFinally, for those affected there is the possibility of compensation, particularly in the form of funds for insulation; there will be specific schemes, possibly funded by a new noise charge, at Heathrow should it receive planning permission to build a third runway.\n \nThis paper deals with commercial airports and aircraft. For those affected by the separate issue of nuisance from low flying and recreational aircraft or helicopters, information can be found in HC Library briefing paper SN4059. Information on other aviation issues can be found on the Aviation Topical Page of the Parliament website."}
      , "date" : {"_value" : "2017-02-13T16:05:45.4370699+00:00", "_datatype" : "dateTime"}
      , "description" : ["This paper briefly looks at the impacts of aviation noise on those who live underneath flight paths and close to airports and explains the various measures put forward to tackle noise pollution, including flight restrictions and charges; better airspace design, and quieter aircraft."], "identifier" : {"_value" : "SN00261"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Aviation noise", "topic" : [{"_about" : "http://data.parliament.uk/terms/95501", "prefLabel" : {"_value" : "Aviation"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95714", "prefLabel" : {"_value" : "Pollution"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/689102", "abstract" : {"_value" : "The Homelessness Reduction Bill is a private member\u2019s bill introduced by Bob Blackman (Conservative MP for Harrow East). It has completed all its stages in the House of Commons and received first reading in the House of Lords on 30 January 2017. The Bill is scheduled to have its second reading on 24 February 2017. This briefing provides a short overview of the contents of the Bill, its progress through the House of Commons and external commentary.   \n \nThe Bill aims to refocus local authority efforts on the prevention of homelessness. It places duties on local housing authorities to intervene at earlier stages in order to prevent homelessness and to take reasonable steps to help those who become homeless to secure accommodation. The Bill also requires local housing authorities to provide new homelessness services to people in their area, expanding on the categories of people they are required to help find accommodation.\n \nAccording to the Office for National Statistics (ONS), local authorities accepted 14,930 households as being statutorily homeless between 1 July and 30 September 2016. This represented a fall of one percent on the previous quarter but up two percent on the same quarter of last year. The ONS also report that the total number of households in temporary accommodation as of 30 September 2016 was 74,630, representing a 55 percent increase on the low of 48,010 on 31 December 2010."}
      , "date" : {"_value" : "2017-02-13T15:41:57.8830168+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Lords Library briefing provides background reading in advance of the second reading of the Homelessness Reduction Bill in the House of Lords on Friday 24 February 2017."], "identifier" : {"_value" : "LIF-2017-0016"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414041", "prefLabel" : {"_value" : "Lords In Focus"}
      }
      , "title" : "Homelessness Reduction Bill: Briefing for Lords Stages", "topic" : [{"_about" : "http://data.parliament.uk/terms/95626", "prefLabel" : {"_value" : "Homelessness"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/687752", "abstract" : {"_value" : "Library briefing\n \nDefence Estate Strategy, Commons Briefing papers CBP-7862, 12 January 2017\n \nThe Ministry of Defence holds one of the largest estates in the country and plans to reduce it in size by 30% by 2040. This Commons Library briefing paper outlines the Government's plans and critical analysis by the National Audit Office.\n \nFurther information\n \nA Better Defence Estate, Ministry of Defence, November 2016\n \nThe better defence estate strategy aims to support military capability by providing a smaller but better estate for the armed forces and their families out to 2040 and beyond.\n \nIt is a detailed, long term plan to reduce the defence built estate by 30% and provides a framework for the geographical lay down of our forces in the UK for at least a generation.\n \nThe strategy has been developed in partnership with military leaders and sets out where investment will be concentrated and where sites will be sold to deliver a significantly smaller estate which is more efficient and better enables military capability.\n \nDelivering the defence estate, National Audit Office, HC 782, Session 2016-17, 15 November 2016\n \nThe MoD has developed a strategy that identifies the estate it needs and the 25% of its estate it can dispose of by 2040. However, the strategy and current funding levels allow only for a partial reversal of the decline in the condition of the remaining estate. There is a significant risk that the poor condition of the estate will affect the Department\u2019s ability to provide the defence capability needed.\n \nStrategic Defence and Security Review: Army\n \nWritten Statement, 15 December 2016\n \nDefence Estate\n \nOral Statement, 7 November 2016\n \n "}
      , "date" : {"_value" : "2017-02-09T15:43:50.8735013+00:00", "_datatype" : "dateTime"}
      , "description" : ["This material has been collated ahead of the Westminster Hall debate on 'A Better Defence Estate Strategy', to be held on Tuesday 21 February 2017 at 9.30am. The debate has been initiated by Mrs Helen Grant MP."], "identifier" : {"_value" : "CDP-2017-0055"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/37362", "prefLabel" : {"_value" : "International Affairs and Defence Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "A Better Defence Estate Strategy", "topic" : [{"_about" : "http://data.parliament.uk/terms/95492", "prefLabel" : {"_value" : "Armed forces"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95549", "prefLabel" : {"_value" : "Defence equipment and procurement"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95551", "prefLabel" : {"_value" : "Defence policy"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/686599", "abstract" : {"_value" : "The Government published its housing white paper, Fixing our broken housing market on 7 February 2017. Its publication was preceded by a statement in the House of Commons about it from the Secretary of State with contributions from a range of Members. The Government is consulting on the proposals in the white paper and responses can be submitted until 2 May 2017.\n \nPlanning for housing\n \nAs well as a range of policies aimed at helping to diversify the housing market and helping people to afford a home, the white paper also focusses heavily on changes that can be made to planning law and policy. The Library briefing paper, Planning for housing provides further information about the existing policies on how local authorities are expected to calculate their housing supply, as well as the circumstances in which they are expected to provide an extra buffer in their calculations.\n \nGreen belt\n \nThe white paper also sets out that the existing protection for the green belt remains unchanged and emphasises that authorities should amend Green Belt boundaries only when they can demonstrate that they have examined fully all other reasonable options for meeting their identified development requirements. Further information on existing green belt protection is available from the Library briefing paper, Green belt.\n \nPlanning for the right homes in the right places\n \nThe first chapter of the white paper contains measures on \u201cplanning for the right homes in the right places\u201d. Some of the key proposals under this heading include:\n \n A further consultation to be published on making changes to the National Planning Policy Framework (NPPF) directing local authorities to prepare a statement of common ground, setting out how they intend to work together to meet housing requirements that cut across authority boundaries. Enabling spatial development strategies produced by new combined authorities or elected Mayors to allocate strategic sites for development. A further consultation to be published on introducing a standardised approach for local authorities in assessing housing requirements. The outcome will be reflected in changes made to the NPPF. Introducing legislation to allow locally accountable New Towns Development Corporations to be set up in order to better support new garden towns and villages. Revising the NPPF to make clear that plans and development proposals should make \u201cefficient use of land and avoid building homes at low densities.\u201d \n \nBuilding homes faster\n \nAnother chapter of the white paper is concerned with \u201cbuilding homes faster\u201d. Some of its key proposals include:\n \n Amending the NPPF to give local authorities the opportunity to have their housing land supply agreed on an annual basis and fixed for a one year period, in order to create more certainty about when an adequate land supply exists. Authorities taking advantage of this will have to provide a 10% buffer on their 5 year land supply. Increasing nationally set planning fees, and consulting further on allowing authorities that are performing well on housing delivery to increase fees further. A further consultation to be published on introducing a fee for making a planning appeal, so as to deter unnecessary planning appeals and reduce delay. Examining the options for reforming developer contributions (Community Infrastructure Levy and section 106 obligations), with an announcement on this expected in the autumn Budget 2017. Subject to further consultation large housebuilders would be required to publish aggregate information on build out rates. Seeking views on whether an applicant\u2019s track record of delivering previous similar housing schemes should be taken into account by local authorities taking decisions on housing development. A further consultation on simplifying the completion notice process to allow a local authority to serve a completion notice on a site before the commencement deadline has elapsed, but only where works have begun, in order to dissuade developers from making a token start on work on site to keep the planning permission alive. Changing the NPPF to introduce a housing delivery test which will highlight whether the number of homes being built is on target. If delivery then falls below specified thresholds an extra buffer would be added onto the five-year land supply and further thresholds would then allow the presumption in favour of sustainable development to apply automatically. \n \nInitial reactions to the housing white paper\n \nA number of organisations have published their response to the white paper online. These include:\n \n Local Government Association, Councils respond to Housing White Paper, 7 February 2017 London Councils, London Councils statement on Housing White Paper, 7 February 2017 Royal Town Planning Institute, Housing White Paper: RTPI response, 7 February 2017 Town and Country Planning Association, Government commits to a new generation of new communities, 7 February 2017 Campaign to Protect Rural England, Housing White Paper: CPRE reaction, 7 February 2017 Joseph Rowntree Foundation, Response to Housing White Paper, 7 February 2017 Home Builders\u2019 Federation, White paper reflects key role private house builders have in addressing \u2019broken housing market\u2019, 7 February 2017 National Housing Federation, Federation response to Housing White Paper, 7 February 2017 Nathaniel Lichfield & Partners, NLP\u2019s review of the White Paper, 8 February 2017 Savills, What the Housing White Paper means for the planning system, 7 February 2017 \n \nOther documents published alongside the white paper\n \nAlongside the white paper, the Government also published a number of responses to outstanding consultations and select committee reports. A new consultation on planning and affordable housing for build to rent was published and the Government also published the report submitted by the Community Infrastructure Review Group.\n \nThe Local Plans Expert Review Group response to select committee inquiry and summary of responses\n \n Government response to the Communities and Local Government Select Committee inquiry into the report of the Local Plans Expert Group. In September 2015 the Government asked the Local Plans Expert Group (LPEG) to examine what measures or reforms might be helpful in ensuring the efficient and effective production of Local Plans. The group reported and the Government consulted seeking views on the group\u2019s recommendations. The Communities and Local Government Select Committee undertook a short inquiry into LPEG\u2019s report. This document is the response to the select committee and contains a summary of the representations received on the LPEG\u2019s recommendations. \n \nGovernment responses to consultations on: implementation of planning changes; upward extensions; and the rural planning review\n \n Summary of responses to the technical consultation on implementation of planning changes, consultation on upward extensions and Rural Planning Review Call for Evidence \n \nThe rural planning review call for evidence sought views on how the planning system was operating in rural areas and invited ideas about how the planning system could be improved to support sustainable rural life and businesses. As well as providing a summary of the responses to this call for evidence and the Government\u2019s response, the response document also seeks views on extending the thresholds for agricultural permitted development rights to help farmers, and on a new agricultural to residential permitted development right to help provide housing for rural workers.\n \nThe Government\u2019s response also contains the formal response to the upwards extensions in London consultation which sought views on proposals to deliver more homes in London by allowing a limited number of additional storeys on existing buildings through a permitted development right, local development orders or development plan policies.\n \nFinally, the Government\u2019s response also contains the response to the technical consultation on implementation of planning changes which contained the detailed proposals to support certain provisions of the Housing and Planning Act 2016.\n \nChanges to the NPPF consultation response\n \n Proposed Changes to National Planning Policy Framework (Dec 2015) - Summary of Consultation Responses. \n \nThis provides the government\u2019s response to the consultation document which sought views on proposed changes to national planning policy. It covered the following areas:\n \n broadening the definition of affordable housing to expand the range of low cost housing opportunities increasing the density of development around commuter hubs to make more efficient use of land in suitable locations supporting sustainable new settlements, development on brownfield land and small sites and delivery of housing agreed in Local Plans supporting delivery of starter homes \n \nGovernment response to select committee report on making changes to the NPPF\n \n The Government response to the Communities and Local Government Committee Third Report of Session 2015\u201316 on the Department for Communities and Local Government\u2019s consultation on National Planning Policy. \n \nConsultation on planning and affordable housing for build to rent\n \nA new consultation was also published on Planning and Affordable Housing for Build to Rent. The consultation seeks views on planning measures to support an increase in Build to Rent schemes across England. This includes changing the NPPF to support and to increase the number of new Build to Rent homes, and the provision of Affordable Private Rent homes as the main form of affordable housing provision on Build to Rent schemes. The consultation closes on 1 May 2017.\n \nCommunity Infrastructure Levy Review\n \nThe Government also published the final report of the Community Infrastructure Levy (CIL) Review Group, Independent report: Community Infrastructure Levy review: report to government, which was submitted to the Government in October 2016."}
      , "date" : {"_value" : "2017-02-08T15:44:07.708271+00:00", "_datatype" : "dateTime"}
      , "description" : ["The Government's housing white paper, published on 7 February 2017, contains proposals for a number of planning reforms. This page summarises some of the key planning proposals from it and contains links to initial reactions to it. It also brings together some of the other documents published at the same time as the white paper."], "identifier" : {"_value" : "CBP-7896"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/67716", "prefLabel" : {"_value" : "Science and Environment Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Planning reform in the housing white paper", "topic" : [{"_about" : "http://data.parliament.uk/terms/95711", "prefLabel" : {"_value" : "Planning"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/686596", "abstract" : {"_value" : "Buhari is approaching the second anniversary of his inauguration as President of Nigeria in May 2015. At the time of his first anniversary in power, commentators were writing that \"Nigerians are impatient for the gains they voted for and have little appetite for further pain [\u2026] confidence in President Muhammadu Buhari, elected a year ago on a wave of hope, is evaporating.\"\n \n20 months into his time in office, has President Buhari been able to reverse this loss of confidence? The short answer is \u2018no\u2019. His position is not yet beyond repair \u2013 but matters are not being helped by mounting uncertainty about the state of the president\u2019s health.\n \nHow ill is the president?\n \nNigeria\u2019s political culture is rumour-ridden at the best of times. Buhari\u2019s recent announcement that he was going on a two-week holiday to the UK led to renewed claims that he was seriously ill and might have to step down early \u2013 or was even dead. A few days ago, it was announced that the president was extending his current stay in the UK for medical treatment. Nigerians are understandably jumpy - not least because a previous president, Umaru Yar\u2019Adua, died in office as recently as 2010. Amidst worrying signs of government drift, the odds on Buhari standing for a second term seem rapidly to be lengthening.\n \nSecurity and corruption: progress and problems\n \nThere has been some progress on security and corruption. Boko Haram has been pushed out of most of the territory which it controlled in Northeast Nigeria since President Buhari took office and is seen by some as \u201con the back foot\u201d. The last six months or so have seen them lose most, if not all, the territory they held in the Sambisa Forest in Borno State, which had been an important rear-base for them. Some of the Chibok girls have been freed.\n \nIn May 2016, not long after the former Prime Minister David Cameron had described the country as \u201cfantastically corrupt\u201d, the British Government said that it was giving Nigeria £40 million over the next four years to help in the fight against Boko Haram and was planning to train almost 1,000 Nigerian military personnel for deployment in counter-insurgency operations.\n \nOn anti-corruption, a wave of arrests have been made against former office-holders from the presidency of Buhari\u2019s predecessor, Goodluck Jonathan (for example, former National Security Advisor Sambo Dasuki, whose trial has begun, and former Petroleum Minister, Diezani Allison-Madueke, yet to stand trial) and several major investigations launched.\n \nHowever, critics claim that there have also been blots on the government\u2019s copybook on the security and anti-corruption fronts. They argue that some the steps taken on anti-corruption have been politically-motivated, rather than \u2018without fear or favour\u2019. As is often the case in Nigeria, investigations are proceeding at a snail\u2019s pace.\n \nMeanwhile, the Nigerian security forces remain prone to committing human rights abuses but continue to enjoy impunity. A more fundamental criticism is that Buhari has not yet got to grips with the interlocking \u2018root causes\u2019 of violence \u2013 poverty, inequality, marginalisation and corruption \u2013 in Nigeria, whether in the North or elsewhere, and appears disinterested (with the possible exception of the oil-rich Niger Delta) in seeking negotiated settlements. There have also been criticisms of the performance of the authorities in response to the humanitarian crisis in Northeastern Nigeria.\n \nCracks in the ruling coalition\n \nThe biggest new challenge to emerge during the second half of 2016 (if we leave aside steadily mounting concerns about Buhari\u2019s health) were cracks in the fractious coalition of interests that makes up the ruling party, the All Progressives Congress (APC).\n \nThe main division to emerge (it was never far from the surface) is that between Buhari\u2019s faction and those loyal to former Lagos State Governor and APC \u2018Kingmaker\u2019 Bola Tinubu, who is reportedly in cahoots with former Vice-President Atiku Abubakar. According to Africa Confidential, this faction is now actively contemplating setting up a separate party, coined the \u2018Mega Party\u2019. This party would bring together APC-ers disillusioned with Buhari and sections of the former ruling party, the People\u2019s Democratic Party, which is also faction-ridden.\n \nThe economy in dire straits\n \nAs a large producer and exporter of oil, Nigeria\u2019s economy has been badly hit by the sharp fall in the price of oil in 2014. Government revenues have fallen, resulting in cuts to government expenditure, while the value of total exports have fallen significantly given that oil and gas make up around 90% of Nigeria\u2019s exports.\n \nIn addition, the government was forced to abandon its currency peg which fixed the naira to the dollar despite spending billions of dollars from its foreign exchange reserves to try and prop it up. The naira fell from about N197 per $1 to N280 in June 2016, and is currently around N300 according to the official exchange rate. However, it appears that the currency was not allowed to fully float, meaning that government intervention is still occurring. During 2016 there was a serious foreign exchange shortage and consumer price inflation rose rapidly.\n \nAll of these factors mean that full-year growth in 2016 is therefore likely to be negative for the first time since 1991. The IMF estimates GDP contracted by 1.5% in 2016, compared with growth of 2.7% in 2015. It does, however, forecast growth of 0.8% in 2017 and 2.3% in 2018. The outlook is supported by the oil price being higher than a year ago, boosted in part by a deal by OPEC members to restrict oil supply.\n \nThe longer-term challenges facing Nigeria\u2019s economy remain in place. Despite efforts by the Buhari administration to clamp down on corruption, it still remains a big problem. In addition, broader conditions for conducting business remain poor. The poor quality of infrastructure, low education levels, security worries, and high poverty levels are additional barriers to faster growth in the long-term.\n \nFor deeper historical, political and economic background, see the Library\u2019s January 2015 briefing, Nigeria 2015: analysis of election issues and future prospects\n \n \n \n \n \n \n \n \n \n \n \n "}
      , "date" : {"_value" : "2017-02-08T15:33:15.9579754+00:00", "_datatype" : "dateTime"}
      , "description" : ["This briefing reviews the current political and economic situation in Nigeria under President Muhammadu Buhari."], "identifier" : {"_value" : "CBP-7897"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/17113", "prefLabel" : {"_value" : "Economic Policy and Statistics Section"}
      }
      , {"_about" : "http://data.parliament.uk/terms/37362", "prefLabel" : {"_value" : "International Affairs and Defence Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Nigeria: February 2017 update", "topic" : [{"_about" : "http://data.parliament.uk/terms/95479", "prefLabel" : {"_value" : "Africa"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95609", "prefLabel" : {"_value" : "Foreign and Commonwealth Office"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95635", "prefLabel" : {"_value" : "Human rights"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95647", "prefLabel" : {"_value" : "International economic relations"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95650", "prefLabel" : {"_value" : "International politics and government"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95651", "prefLabel" : {"_value" : "International trade"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95767", "prefLabel" : {"_value" : "Terrorism"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/686584", "abstract" : {"_value" : "Prime Minister Shinzo Abe is dominant at home but faces continued challenges in boosting economic growth, which has more or less flat-lined for two decades now.\n \nSome analysts have suggested that Abe\u2019s approval ratings could go down over the course of 2017 if he mishandles the proposed referendum to change Japan\u2019s Constitution or if the economy loses the fragile momentum it currently has. A fraying of the US-Japan alliance could also affect his popularity. But the likelihood must be that he will end the year in as strong a position as he began it.\n \nEfforts to amend the Constitution\n \nAbe favours amending Article 9 of the Constitution, under which Japan renounces the right to wage war to settle international disputes. He and his supporters want Japan to be able to exercise a right to \u2018collective self-defence\u2019, thereby playing a greater supporting role in military operations around the world being conducted by its allies.\n \nTo do this he requires legislation approving the new wording to be passed in both the lower and upper houses by a two-thirds majority, and a majority vote in favour of the new wording in a national referendum. Following the 2016 upper house elections, there is now potentially a two-thirds majority in both chambers for such an amendment, but a referendum vote in favour is far from guaranteed. So Abe is yet to take the plunge.\n \nRelations with China\n \nThe most important foreign relationships for Japan continue to be with China and the US. In the case of China, the main source of tension between them remains their territorial dispute in the East China Sea. As far as Japan is concerned, China has been carrying out serial acts of provocation, sending a steady stream of naval vessels and airplanes into or close to Japanese territorial waters. Talks to establish a \u2018hotline\u2019 between the two countries to help prevent conflict have so far been unsuccessful. The two are also at loggerheads over issues like the South China Sea and visits by Japanese politicians to the Yasukuni Shrine in Tokyo, which honours (amongst others) 14 Class A Japanese war criminals from World War II.\n \nRelations with the US\n \nThe new US Administration has confirmed that the Senkaku Islands are covered by the 1960 US-Japan Security Treaty, under which the US has pledged to come to Japan\u2019s defence if its security is attacked. This is notwithstanding the fact that the US does not take a position on the sovereignty of the islands (this is also the UK position). The US supports the efforts of the Japanese Government to amend the country\u2019s Constitution so that its military can play a more active role in the world.\n \nNonetheless, there remains an underlying anxiety in Japan that the US might one day begin to loosen these ties. These were intensified by the statements made by Donald Trump during the US election campaign, when he suggested that the US might withdraw its troops from Japan unless it bore more of the costs of stationing US forces and that Japan might need to develop its own nuclear weapons capability in future.\n \nThe new US administration has already withdrawn from the Trans-Pacific Partnership (TPP), to which Japan was highly committed (see also below). On the plus side, the new Secretary of Defence, James Mattis, has already indicated that the US has no immediate plans to ask Japan to pay more towards the costs of the US military presence.\n \nJapan will welcome the new administration\u2019s less enthusiastic view of relations with China \u2013 but does not want to see the kind of confrontation between the two countries that could destabilise the international order, let alone the Asia-Pacific region. Unlike President Trump, Japan is not interested in challenging the \u2018One China\u2019 policy.\n \nRelations with the UK\n \nThe UK\u2019s vote to leave the EU has left Japan less confident about future relations. The UK Government has sought to reassure Japan. In recent years, the two countries have had an increasingly close defence and security relationship.\n \nEconomic performance\n \nAs already mentioned, Shinzo Abe\u2019s domestic political fortunes depend heavily on the country\u2019s economic performance. Abe has been the architect of what is known as \u2018Abenomics\u2019, which is comprised of three strands, or arrows \u2013 an aggressive monetary policy, fiscal stimulus and structural reforms. These policies are intended to address the main shortcomings of the Japanese economy as described above: weak growth, entrenched deflation and high debt, as well as the country\u2019s declining \u2013 and ageing \u2013 population.\n \nGDP growth accelerated somewhat in 2016, and the outlook for 2017 remains relatively positive. In January 2017, the IMF estimated 2016 growth at 0.9% and forecast growth of 0.8% in 2017; higher than most estimates of the economy\u2019s trend growth rate of around 0.5% (given Japan\u2019s falling population among other things).\n \nNevertheless, for growth to be more sustainable, consumer spending will need to be a bigger contributor to growth. However, for that to happen wages will need increase at a faster rate than at present, particularly if consumer price inflation does eventually pick up (which would eat into real, inflation-adjusted, wage growth).\n \nThe final arrow of Abenomics \u2013 structural reform \u2013 is probably the most important (and difficult to implement) over the longer-term. It is made up of reforms to the labour market and deregulating some sectors of the economy. This is particularly important given the demographic challenges of an ageing population and the expected decline in the population over the coming decades.\n \nOverall, most commentators think that the reform measures announced to date have not met the lofty expectations that the Abe Government set in 2013. Writing in mid-2016, The Economist said: \u201cProgress has been incremental, at best, prizing breadth over depth\u201d.\n \nThe Trans-Pacific Partnership\n \nAnother element of Japan\u2019s growth strategy was the decision to join discussions on setting up the TPP, a free-trade area for 12 countries (including the US but not China) bordering the Pacific Ocean. The Japanese Cabinet Office estimated in 2013 that joining the TPP could boost Japanese GDP by 0.7% in a decade. In February 2016, a deal was formally agreed between the 12 nations accounting for around 40% of the world economy.\n \nHowever, now that the US has pulled out, what happens next to the TPP is up in the air. It is possible that the TPP in a new guise without the US may be adopted, although there may be limited appetite for that, particularly in Japan given Prime Minister Abe\u2019s description of the TPP without the US as \u201cmeaningless\u201d."}
      , "date" : {"_value" : "2017-02-08T14:17:48.6616825+00:00", "_datatype" : "dateTime"}
      , "description" : ["Politically dominant at home despite the continuing sluggishness of the Japanese economy, Prime Minister Shinzo Abe faces serious challenges in charting a positive way forward on relations with the US under the new Trump Administration and with China, where their territorial dispute over the East China Sea continues to cast a deep shadow. This briefing surveys the outlook for Japan during 2017 both at home and abroad."], "identifier" : {"_value" : "CBP-7895"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/17113", "prefLabel" : {"_value" : "Economic Policy and Statistics Section"}
      }
      , {"_about" : "http://data.parliament.uk/terms/37362", "prefLabel" : {"_value" : "International Affairs and Defence Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Japan: February 2017 update", "topic" : [{"_about" : "http://data.parliament.uk/terms/95497", "prefLabel" : {"_value" : "Asia"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95609", "prefLabel" : {"_value" : "Foreign and Commonwealth Office"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95647", "prefLabel" : {"_value" : "International economic relations"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95648", "prefLabel" : {"_value" : "International law"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95650", "prefLabel" : {"_value" : "International politics and government"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95651", "prefLabel" : {"_value" : "International trade"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/686581", "abstract" : {"_value" : "Banks and other financial institutions are required to conduct enhanced customer due diligence when dealing with people identified as PEPs. This is intended to help trace and put a stop to the financing of terrorism. It has been argued that, in some cases, financial institutions have declined to handle accounts of UK PEPs as a result. This process of withdrawing financial services for PEP\u2019s has been described as \u2018de-risking\u2019.\n \nThe current anti-money laundering rules are set out in Money Laundering Regulations 2007, which implement the EU\u2019s Third Money Laundering Directive in the UK. The Fourth Money Laundering Directive states that the enhanced due diligence measures, current required for foreign PEPs, should be extended to domestic PEPs. This directive has yet to be agreed in the European Parliament. The UK Government has stated its intention to implement new money-laundering regulations by June 2017."}
      , "date" : {"_value" : "2017-02-08T14:04:50.5900375+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Lords Library briefing outlines the current anti-money regulations in regards to Politically Exposed Persons (PEPs), and proposed reforms."], "identifier" : {"_value" : "LIF-2017-0015"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414041", "prefLabel" : {"_value" : "Lords In Focus"}
      }
      , "title" : "Politically Exposed Persons: Current Regime and Reforms", "topic" : [{"_about" : "http://data.parliament.uk/terms/95602", "prefLabel" : {"_value" : "Financial institutions"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95603", "prefLabel" : {"_value" : "Financial services"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95733", "prefLabel" : {"_value" : "Regulation"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/686580", "abstract" : {"_value" : "In July 2011, the Culture, Media and Sport Committee published a report on Football Governance. The report focused on the game in England. It acknowledged the success of the Premier League and the Football League but also pointed out that this success had been accompanied by \u201cfinancial instability and increasing levels of debt, which remains a serious problem throughout the football pyramid\u201d. The report recommended, among other things, reform of the Football Association. The Committee said that almost all of its recommendations for reforming football governance could be achieved through agreement between the football authorities. However it also said that the Government should consider introducing legislation if substantive progress wasn\u2019t made.\n \nThe Committee published a follow\u2013up report (HC 509 2012-13) in January 2013. This said that the football authorities had not done enough on governance reforms and that the Government \u201cshould introduce legislation as soon as practically possible\u201d.\n \nIn May 2013, the then Government responded to the Committee\u2019s report and agreed on the need for legislation.\n \nNo legislation has been introduced.\n \nThe Culture, Media and Sport Committee is again looking at football governance:\n \n (\u2026) The Culture, Media and Sport Committee has repeatedly urged the football authorities to improve self-governance. Although the Committee's recommendations have been backed by successive Sports Ministers and progress has been promised by the FA, in practice very little has changed: the governance of football is cumbersome, and power lies with the clubs, especially in the Premier League. Real reform in relation to the ownership of clubs, transfers of players, the influence of fans, the role of agents and investment in the grassroots-amongst other issues-has stalled. \n \nThe Chair of the Committee, Damian Collins, has secured a Backbench Business debate on the governance of the Football Association.  This will take place on 9 February 2017 and will be on the following motion:\n \n That this House has no confidence in the ability of the Football Association (FA) to comply fully with its duties as a governing body, as the current governance structures of the FA make it impossible for the organisation to reform itself; and calls on the Government to bring forward legislative proposals to reform the governance of the FA. \n \nThe Committee\u2019s website includes the following comment from Mr Collins:\n \n \"The current Minister for Sport told the Committee that The FA had been given six months from publication of the Government\u2019s guidance in October 2016 to demonstrate that it was willing to improve governance, otherwise public money would be withdrawn from The FA and distributed to football through other means. We do not believe that The FA will comply voluntarily: it can survive easily without the Government\u2019s contribution of money to grassroots sport, and there are powerful vested interests that refuse to accept the right of all those involved in football to play a role in the governance of the sport. We are therefore preparing a draft Bill to bring the structure of The FA, especially its Board and Council, more into line with modern company practice and the Government\u2019s guidelines for sports bodies.\""}
      , "date" : {"_value" : "2017-02-08T13:45:18.4736858+00:00", "_datatype" : "dateTime"}
      , "description" : ["A backbench business debate on a motion relating to Governance of the Football Association will be held in the Commons Chamber on Thursday 9 February 2017.  \nThe debate will be led by Damian Collins MP, Chair of the Culture, Media and Sport Committee, and by Christian Matheson MP and Andrew Bingham MP."], "identifier" : {"_value" : "CDP-2017-0046"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Governance of the Football Association", "topic" : [{"_about" : "http://data.parliament.uk/terms/95758", "prefLabel" : {"_value" : "Sports and Olympic Games"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/390038", "abstract" : {"_value" : "Student support funding has evolved over the decades.  Student maintenance grants were first introduced in 1962- these grants provided students with funding to cover fees and living costs.  Overtime the system has changed. In 1990 student loans for maintenance were introduced and the value of grants was gradually reduced. In 1998 students became liable for the payment of upfront tuition fees.  Student grants were abolished under the Labour government in 1999, but were subsequently re-introduced by that government in 2006 when a new system of higher variable tuition fees was brought in. For more detail on changes in maintenance support see the briefing paper The value of student maintenance support\n \nThe most significant development in student finance in recent years has been the raising of tuition fees to £9,000 per year by the Coalition government in 2010.  The new system of fees and the increase in student loan funding has brought into focus the whole issue of the sustainability of higher education funding. \n \nIn the Summer Budget 2015 the government announced its intention to abolish grants and replace them with increased maintenance loans.  This change could have an impact on student perceptions of the value of higher education, efforts to widen participation in higher education and on long-term public finances.\n \nThe proposed changes to maintenance grants and loans are contained in the Education (Student Support) (Amendment) Regulations 2015.  The accompanying explanatory memorandum sets out the changes that would be made under the regulations. The memorandum explains that for students on incomes of £25,000 or less, the loan for living costs in 2016-17 will be 10.3% higher than the combined maximum maintenance grant and loan in 2015-16:\n \n New full-time students starting to attend their courses in the 2016/17 academic year \u20182016 cohort students\u2019, will not qualify for a means-tested maintenance grant. They will instead qualify for an increased loan for living costs, which for most 2016 cohort students on household incomes of £25,000 or less will be 10.3% higher than the maximum maintenance grant and loan for living costs package available for low income students in the 2015/16 academic year. (page 3) \n \nFor students with incomes above £25,000 the loan for living costs in 2016 will be means-tested down to a minimum non-means tested loan. The minimum loan for new students in 2016-17 will be increased by forecast inflation (2.41%) when compared with the minimum loan for living costs in the 2015-16 academic year.\n \nOther changes made to the student support package by the amendment regulations include:\n \n Replacing special support grant with loans. In 2015-16, students on household incomes of £42,620 or less and eligible for certain benefits were entitled to a special support grant and an increased living costs loan. The amendment regulations replace the special support grant with loans. The explanatory memorandum states that the loan for new students in 2016-17 who have household incomes of £25,000 or less will be 2.41% higher (forecast inflation) than the combined maximum special support grant and loan package for eligible students in 2015-16. For incomes above £25,000, the loan for living costs for new students in 2016-17 will be means-tested down to a minimum non-means tested loan, which will be increased by forecast inflation (2.41%) when compared to 2015-16. Replacing special support grant for students over 60 with loans. In 2015-16 students aged over 60 on household incomes of £42,620 or less qualified for special support grant. They did not qualify for loans towards living costs. The amendment regulations replaces the special support grant for new students in 2016-17 with loans. Increasing the maximum loan for living costs for continuing students by forecast inflation (2.41%). The maximum loans for long-courses and for students undertaking a sandwich year will also be increased by forecast inflation. The maximum maintenance grant and special support grant will be maintained at the same level as 2015-16 for continuing students in 2016-17. \n \nAn outline of these changes is also provided on pages 17-23 of the following publication from the Department for Business, Innovation and Skills: Higher Education: Student Finance Equality Analysis \u2013 The Education (Student Support) (Amendment) Regulations 2015. This document also provides an equality analysis of the changes.\n \nThe amendment regulations are subject to the negative resolution procedure. They were considered on Thursday 14 January 2016 by the Third Delegated Legislation Committee.  The Committee divided on the question of whether the regulations had been considered; the vote was affirmative by ten votes to eight.\n \nThe Opposition subsequently tabled a prayer to annul the regulations:\n \n \u201cThat an humble Address be presented to Her Majesty, praying that the Education (Student Support) (Amendment) Regulations 2015 (S.I., 2015, No. 1951), dated 29 November 2015, a copy of which was laid before this House on 2 December 2015, be annulled.\u201d (EDM 829, 2015-16) \n \nAn Opposition Day debate was held on student maintenance grants and on the regulations on 19 January 2016.  The vote to abandon the policy to remove maintenance grants was lost by 292 votes to 306.  A vote to annul the regulations was also lost by 292 votes to 306.  "}
      , "date" : {"_value" : "2017-02-08T10:13:52.024516+00:00", "_datatype" : "dateTime"}
      , "description" : ["The Summer Budget 2015 announced that grants would be replace with increased maintenance loans from 2016/17.  This change could have an impact on efforts to widen participation in higher education and on long-term public finances."], "identifier" : {"_value" : "CBP-7258"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70459", "prefLabel" : {"_value" : "Social and General Statistics Section"}
      }
      , {"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Abolition of maintenance grants in England from 2016/17", "topic" : [{"_about" : "http://data.parliament.uk/terms/95625", "prefLabel" : {"_value" : "Higher education"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95761", "prefLabel" : {"_value" : "Students"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/685689", "abstract" : {"_value" : "Summary\n \nJanuary 2017 provided more evidence of the UK\u2019s steady economic growth in   (seemingly unaffected by the EU referendum result), the continued weakness of the pound and rising prices. Is there anything missing? Oh yes, Brexit\u2026\u2026\u2026a speech, a court case, a Bill, a vote in parliament, and a White Paper .\n \nBrexit gets going\n \nJust in case you have been living under a rock for the last few weeks: January saw the wheels on the Brexit juggernaut begin to roll. The Prime Minister gave a speech setting out the Government\u2019s objectives for negotiations, which were later built into a White Paper. The Supreme Court ruled that the Government would need an Act of Parliament to trigger Article 50. The process of getting the required Act began when the European Union (Notification of Withdrawal) Bill passed its first vote in the House of Commons.\n \nThe White Paper ruled out continued membership of the EU Single Market. Instead the UK will pursue a free trade agreement  with the EU, which would involve \u201cthe freest possible trade in goods and services\u201d. On the customs union, the Government wants the UK to be able to negotiate its own trade deals. This would mean leaving the EU\u2019s common external tariff. However, \u201ca customs agreement\u201d with the EU will be sought. Leaving the customs union will mean rules of origin checks are likely to be reintroduced for goods entering the EU from the UK, these checks come with a financial and time cost.\n \n2016: a year of consistent economic growth\n \nGetting back to the economy: in Quarter 4 (October \u2013 December) of 2016, the UK economy grew by 0.6% compared with the previous 3 months \u2013 the same rate of growth as in the previous two quarters. Strong consumer spending continues to support growth in the services sector, as ONS\u2019 chief economist notes:\n \n Strong consumer spending supported the expansion of the dominant services sector and although manufacturing bounced back from a weaker third quarter, both it and construction remained broadly unchanged over the year as a whole. \n \nThe UK economy grew by 2.0% in 2016, similar to growth of 2.2% in 2015.\n \n \nEconomists are feeling better about 2017\n \nThe Bank of England now expects the UK\u2019s economy to grow by 2.0% in 2017. In its previous forecast \u2013 made in November 2016 \u2013 the Bank was predicting growth of 1.4% in 2017. The Banks\u2019s growth forecasts for 2018 and 2019 have also been increased, although in both years growth of less than 2% is expected.\n \nIn general, forecasters appear to be feeling relatively more positive about 2017. Among forecasters surveyed by HM Treasury the average growth forecast for 2017 rose to 1.4% in January, compared with an average of 1.2% in December.\n \nThe pound continues to be weak and prices are rising\n \nEchoing all of our economic updates since the EU referendum, the value of the pound remains lower than it was prior to the referendum result. Measured against a basket of currencies, the pound was 13.1% lower in January 2017 than the same period a year ago. This makes imports more expensive and exports cheaper.\n \nContinuing its recent upward trend, consumer prices \u2013 as measured by the Consumer Price Index \u2013 were up 1.6% in December 2016 compared with a year ago. Economists expect inflation to rise further in coming months, as higher import prices push up costs for producers who, in turn, may pass some of this on to consumers.\n \n \nConfidence indicators for both the manufacturing and services sectors were positive in January. However, rising costs are putting pressure on firms in both sectors, suggesting consumer prices will rise further in the coming months.\n \nGovernment borrowing less than previously thought\n \nThe ONS provided the government with positive news when it lowered its estimate of government borrowing thus far in 2016/17. Commentators have suggested that this puts government borrowing on course to be below the OBR\u2019s November 2016 forecast. The OBR, however, caution that the final three months of the financial year are the biggest for receipts, and the biggest sources of forecast uncertainty.\n \n "}
      , "date" : {"_value" : "2017-02-07T18:07:05.8591428+00:00", "_datatype" : "dateTime"}
      , "description" : ["Analysis of the latest UK and international economic indicators"], "identifier" : {"_value" : "CBP-7893"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/17113", "prefLabel" : {"_value" : "Economic Policy and Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Economic Indicators, February 2017", "topic" : [{"_about" : "http://data.parliament.uk/terms/95560", "prefLabel" : {"_value" : "Economic policy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95561", "prefLabel" : {"_value" : "Economic situation"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/345059", "abstract" : {"_value" : "This briefing paper deals with the position in England and Wales.\n \nResponsibility for arranging a funeral\n \nIf a deceased person left a will and appointed executors, they have the primary responsibility for arranging the funeral. Where there is no will, the person who would be entitled to administer the estate (usually the closest relative) would generally have this responsibility.  In practice, it is often family members or friends who arrange the funeral, sometimes on behalf of, and with the specific authority of, the executors.  \n \nThe local authority or NHS may sometimes have a duty to organise and pay for a funeral.  This is where it appears that no other suitable arrangements have been or are being made.  Local authorities do not have power to reimburse funeral costs where a third party has already arranged the funeral.\n \nIt is sometimes possible to arrange a funeral at short notice, for example, to meet religious requirements. It is necessary to notify the coroner before the body of a deceased person may be moved abroad for a funeral.\n \nPaying for a funeral\n \nReasonable funeral expenses are payable out of the deceased\u2019s estate in priority to the payment of any unsecured debts or liabilities. Anyone who arranges the funeral will generally be responsible for paying the funeral directors, so it is important to establish where the money will come from, especially if there is insufficient property in the deceased\u2019s estate to pay for the funeral. \n \nThe cost of a funeral\n \nThe insurance company Sun Life publishes an annual report on the \u201ccost of dying\u201d. Their report on the Cost of Dying 2016 was published in September 2016.  It estimated that the average cost of a basic funeral was £3,897 (up from £3,693 in the 2015 report), but with considerable regional variations.  This cost includes the fees for the funeral director, the fee for cremation or burial, the doctor\u2019s fees, and clergy/officiate fees.\n \nThe Royal London has also published reports on the cost of funerals - most recently, in November 2016, Signs of Life\u2026as direct cremations emerge.  This report found that, in 2016, the average cost of a funeral was £3,675, a reduction of £27 on the 2015 figure.   \n \nThe Money Advice Service has an online guide, How much does a funeral cost? This includes information about direct cremation and how to find a local low cost provider. Noting that a cremation usually costs less than a burial, the guide also provides information about how to reduce the cost of a funeral.\n \nSocial Fund Funeral Payments\n \nPayments from the Social Fund can be made to claimants of means-tested benefits and tax credits to help meet the costs of a funeral. The rules governing access to Social Fund Budgeting Loans have now been changed to provide additional help to low income families facing funeral costs, although these are repayable.\n \nThis briefing paper complements Library briefing SN01419, Social Fund Funeral Payments, which provides more detailed information about the Funeral Payments Scheme.\n \n "}
      , "date" : {"_value" : "2017-02-07T16:58:44.828056+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library briefing paper considers who is responsible for arranging and paying for a funeral in England and Wales.  It also considers the cost of a funeral and ways of reducing this"], "identifier" : {"_value" : "SN06242"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Arranging and paying for a funeral", "topic" : [{"_about" : "http://data.parliament.uk/terms/95547", "prefLabel" : {"_value" : "Death"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95613", "prefLabel" : {"_value" : "Funerals"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/685684", "abstract" : {"_value" : "The West Bank and Gaza have been occupied by Israel since 1967, and are collectively known as the Occupied Palestinian Territories (OPTs). Before the 1967 war, the West Bank was part of Jordan whilst Gaza was part of Egypt.\n \nFollowing the beginning of the occupation in 1967, many Israelis moved into purpose-built Jewish settlements in the West Bank and Gaza (though the settlements in Gaza were demolished by the Israeli Government in 2005, and the settlers forcibly evacuated). When the West Bank was divided into Areas A, B and C in the mid-1990s, areas containing Jewish settlements were generally classed as Area C, and hence remained under Israeli control.\n \nThe UN Security Council in December adopted resolution 2334 which states settlements have \u2018no legal validity\u2019:\n \n Reaffirms that the establishment by Israel of settlements in the Palestinian territory occupied since 1967, including East Jerusalem, has no legal validity and constitutes a flagrant violation under international law and a major obstacle to the achievement of the two-State solution and a just, lasting and comprehensive peace; Reiterates its demand that Israel immediately and completely cease all settlement activities in the occupied Palestinian territory, including East Jerusalem, and that it fully respect all of its legal obligations in this regard. \n \nThe UK Government voted in favour of the resolution. In the weeks since the Resolution the Israeli Government has announced plans to construct several thousand new settlement homes. The Foreign Office has condemned \u201cthe increased pace of settlement activity\u201d and says such action makes a two-state solution \u201cmuch harder to achieve.\u201d\n \nThe Government has also condemned demolitions of Palestinian buildings which the Israeli authorities say lack building permits. Data collected by UN OCHA suggests that Israel demolished or seized over 1,000 Palestinian-owned structures in the West Bank and Jerusalem in 2016, the highest number since recording began in 2009.\n \nBenjamin Netanyahu met Prime Minister Theresa May in London on 6 February 2017 where they discussed the establishment of a new UK-Israel Trade Working Group, Iran and the Middle East Peace Process."}
      , "date" : {"_value" : "2017-02-07T15:40:03.4395384+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Debate Pack has been prepared ahead of the debate on 'Israeli settlements in the occupied Palestinian territories', to be held on Thursday 9 February 2017. The subject for the debate has been chosen by the Backbench Business Committee, following a representation by Sir Desmond Swayne, Mark Williams, Chris Bryant, Tommy Sheppard and Dr Tania Mathias."], "identifier" : {"_value" : "CDP-2017-0047"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/37362", "prefLabel" : {"_value" : "International Affairs and Defence Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Israeli settlements in the Occupied Palestinian Territories", "topic" : [{"_about" : "http://data.parliament.uk/terms/95635", "prefLabel" : {"_value" : "Human rights"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95648", "prefLabel" : {"_value" : "International law"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95677", "prefLabel" : {"_value" : "Middle East"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/649326", "abstract" : {"_value" : "Support for looked after and previously looked after children (Clauses 1 to 3)\n \nClause 1 would introduce seven \u201ccorporate parenting principles\u201d that local authorities \u201cmust have regard to\u201d in respect of currently looked after children (i.e. children subject to a care order or in local authority accommodation for a continuous period of more than 24 hours), as well as certain former looked after children. Clause 2 would require a local authority to publish its \u201clocal offer\u201d setting out the statutory services available to care leavers, and Clause 3 would allow all former relevant children aged under 25 years, as opposed to those in education or training as is currently the case, to continuing support from a personal adviser on request.  During the Lords\u2019 consideration of the Bill, it was agreed that the matter of children\u2019s mental health should be specifically stated in the corporate parenting principles.  In respect of the local offer, the Government accepted it should include information on relationships.\n \nEducation of looked after and previously looked after children (Clauses 4 to 7)\n \nLocal authorities and maintained schools in England currently have a range of statutory duties in relation to supporting the education of looked after children. Clauses 4 to 7 of the Bill would extend many of these duties to previously looked after children who have left care through adoption, Special Guardianship Order, or Child Arrangements Order. They would also place academy schools under similar statutory duties to maintained schools. In general, these clauses have been welcomed and were only subject to minor amendment during the Bill\u2019s House of Lords stages, although the Government gave a number of undertakings. It committed, for example, to bringing forward amendments during the Commons Stages of the Bill to ensure that qualifying children adopted from overseas were covered by the measures. During the Commons Committee Stage, the Government tabled amendments to bring children adopted internationally within the scope of the Bill\u2019s education provisions, and these were agreed without a vote.\n \nAdoption (Clauses 8 and 9)\n \nClause 8 extends the \u201cpermanence provisions\u201d in relation to a care plan for a child in care to include so that when a court is making decisions about the long term placement of children it includes an assessment of the child\u2019s current and future needs, including any current and future needs resulting from the impact of harm that a child has suffered (or are likely to have suffered). Clause 9 would amend the existing adoption provisions so that any relationship with a prospective adopter is among the matters to which a court or adoption agency must have regard to.\n \nSecure accommodation transfers (Clause 10 and Schedule 1)\n \nClause 10 will provide a legislative basis for the transfer of children to secure accommodation in Scotland from England and Wales, and vice versa.  Schedule 1 amends existing legislation in this respect.\n \nChild safeguarding (Clauses 12 to 31)\n \nClauses 12 to 15 would establish a new national Child Safeguarding Practice Review Panel, whose chair and members would be appointed by the Secretary of State. The Panel would review serious child safeguarding cases in England which \u201craise issues that are complex or of national importance\u201d.\n \nClauses 16 to 23 would replace the structure of existing Local Safeguarding Children Boards (LSCBs) with new local arrangements for safeguarding and promoting the welfare of children, a central feature of which will be there are only three safeguarding partners \u2013 local authority, and the NHS Clinical Commissioning Groups (CCGs) and police forces falling within that local authority area, although they could choose to invite other agencies. They will be responsible for undertaking local child safeguarding practice reviews in respect of serious cases which raise issues of importance to the local area.  During Lords consideration, the Government agreed that the focus of such reviews should be on what improvements can be made, rather than \u201clessons learned\u201d which was considered to be too broad.\n \nClauses 24 to 28 would establish child death review panels, composed of a local authority and the CCGs within that local authority area, and would review the death of a child in the local authority (and may do so even if the child was not normally resident there).\n \nPowers to test different ways of working (Clauses 32 to 39)\n \nThis Chapter was inserted at Commons Committee Stage, after similar provisions were removed at Lords Report Stage following a division.\n \nClauses 32 to 39 would allow a local authority to apply to the Secretary of State if they wished to test different ways of working under children\u2019s social care legislation. The Secretary of State would be able to make regulations allowing one or more local authorities or combined authorities to be exempt from certain legislation, or for the legislation to be modified in respect of that authority.  However, those regulations may not be used so as to remove any prohibition on a local authority in England arranging for functions to be carried out by a body whose activities are carried on for profit.\n \nPre-employment protection of whistleblowers (Clause 40)\n \nAt present, whistleblower law protects workers from being subjected to detriment for making public interest disclosures, but does not prohibit discrimination against job applicants who are known to have blown the whistle at a previous employer.  Clause 40 of the Bill would provide a power for the Secretary of State to extend whistleblower protections to persons who apply to work in \u201cchildren\u2019s social care positions\u201d, as defined in the Bill.  A similar power currently exists in relation to workers in the health service, enacted following calls to strengthen whistleblowing protections in the wake of the events at Mid-Staffordshire NHS Foundation Trust.\n \nPower to secure proper performance and combined authorities (Clause 41)\n \nClause 41 extends the Secretary of State\u2019s existing power to secure \u201cproper performance\u201d to combined authorities.\n \nRegulation of Social Workers (Clauses 42 to 67)\n \nSocial work regulation is a devolved matter. Social workers in England are currently regulated alongside 15 other health and care professions by the Health and Care Professions Council (HCPC). HCPC\u2019s role is to protect the public by ensuring that only qualified and competent practitioners are allowed to practice as social workers.\n \nPart 2 (Clauses 42 to 67 and Schedules 3 and 4) of the Bill creates a new independent regulator of social workers in England called Social Work England. The overarching objective of the regulator in exercising its functions will be the protection of the public. It will have a remit to: keep a register of social workers in England; set social work professional, education and training standards; and determine an individual social worker\u2019s fitness to practice.\n \nThe Bill enables the Secretary of State, by way of regulations, to make certain provisions regarding the regulation of social work in England. Provisions may include: requirements for keeping a register of social workers; prohibitions or restrictions in connection with the carrying out of social work; arrangements for assessing whether a person meets professional standards; provision about disciplinary action; the creation of offences in connection with social work regulation; conferring powers on the regulator to charge fees; and the transfer of property, rights and liabilities from HCPC to the new regulator. Regulations under Part 2 are subject to consultation and the affirmative resolution procedure.\n \nThe Bill also enables the Secretary of State to determine and publish improvement standards for social workers in England, and it allows for the responsibility to approve courses for Approved Mental Health Professionals and Best Interest Assessors to transfer to the new regulator. The Secretary of State will be required to commission an independent review of the operation of Part 2 within five years of the new regulator being established."}
      , "date" : {"_value" : "2017-02-07T14:55:19.4016408+00:00", "_datatype" : "dateTime"}
      , "description" : ["This paper analyses the Children and Social Work [HL] ahead of Commons Report Stage.  The Bill concerns children in care and care leavers, safeguarding children arrangements, powers for local authorities to test different ways of working, and the regulation of social workers among other matters."], "identifier" : {"_value" : "CBP-7800"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70459", "prefLabel" : {"_value" : "Social and General Statistics Section"}
      }
      , {"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Children and Social Work [HL] Bill 121: analysis for Commons Report Stage", "topic" : [{"_about" : "http://data.parliament.uk/terms/95518", "prefLabel" : {"_value" : "Children and families"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95519", "prefLabel" : {"_value" : "Children's social services"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95665", "prefLabel" : {"_value" : "Local authorities: education"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95666", "prefLabel" : {"_value" : "Local government"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95740", "prefLabel" : {"_value" : "Schools"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/343444", "abstract" : {"_value" : "The State Pension\n \nThe State Pension for people who reached State Pension age (SPA) before 6 April 2016 has two main elements. The basic State Pension (bSP), based on a person\u2019s National Insurance contribution record, and the additional State Pension, which is partly earnings-related. Different uprating arrangements apply to each:\n \n The statutory requirement is to increase the bSP at least in line with earnings (Social Security Administration Act 1992, s150A). However, the Government is committed to increasing it according to the \u201ctriple lock\u201d \u2013 the highest of earnings, prices or 2.5 per cent (HM Treasury, Summer Budget 2015, para 1.139). In April 2017, the full amount of the bSP will rise from £119.30 to £122.30 pw. The statutory requirement is to increase the additional State Pension at least in line with prices (Social Security Administration Act 1992, s150 (1)). Since 2011, the measure of prices used has been the Consumer Prices Index (CPI). In April 2016, the additional State Pension was frozen \u2013 reflecting the fact that CPI inflation was slightly negative (-0.1%) over the 12 months to September 2015. In April 2017, it will increase by one percent. \n \nA new State Pension (nSP) was introduced from 6 April 2016 for people reaching SPA from that date. Its starting rate was £155.65pw in 2016/17 (SI 2016/227). \n \nThe legislation requires the nSP to be uprated at least in line with earnings (Pensions Act 2014, Sch 12 (19)). However, the Government is committed to applying the triple lock, at least until 2020 (HC Deb 23 November 2016 c906). In April 2017, it is to rise to £159.55 pw (HCWS287, 28 November 2016).\n \nPension Credit\n \nFor people who reached SPA before 6 April 2016, Pension Credit has two elements: the Guarantee Credit, which provides a minimum level of income; and the Savings Credit, which aims to provide an additional amount for people aged 65 and over who have made some provision for their retirement. The legislation requires the Standard Minimum Guarantee in Guarantee Credit to be uprated at least in line with earnings. In the years 2010/11 to 2015/16, it was increased by the cash rise in the bSP (i.e; by more than earnings) to ensure that \u201cthe benefits of the triple lock uprating\u201d were passed on to the poorest pensioners (see for example, HM Treasury, Autumn Statement 2014, para 1.235).\n \nThe other elements of Pension Credit can be uprated by such a percentage as the Secretary of State thinks fit (Social Security Administration Act 1992, s150 (1)).\n \nSavings Credit has been removed for people reaching State Pension age from 6 April 2016. People who reached State Pension age before that date may still be eligible. However, measures have been taken to reduce the amount payable in recent years \u2013 often through the combination of reductions in the maximum and increases in the threshold of income taken into account to calculate it (PQ226249 9 March 2015).\n \nThe rates of social security benefits \u2013 including the State Pension and Pension Credit - for 2017/18 are in the draft Social Security Benefits Uprating Order 2017.\n \nOther relevant Library Briefing Papers include: CBP-07812 State Pension triple lock (February 2017); SN-01457 Frozen overseas pensions (May 2016); SN-07414 The new State Pension \u2013 transitional questions (August 2016)."}
      , "date" : {"_value" : "2017-02-07T10:30:39.0903915+00:00", "_datatype" : "dateTime"}
      , "description" : ["Looks at the current policy on uprating the State Pension and Pension Credit"], "identifier" : {"_value" : "SN05649"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "State Pension Uprating", "topic" : [{"_about" : "http://data.parliament.uk/terms/95708", "prefLabel" : {"_value" : "Pensions"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/342095", "abstract" : {"_value" : "The old State Pension\n \nThe State Pension for people who reached State Pension age before 6 April 2016 had two tiers:\n \n The basic State Pension \u2013 to which people built entitlement on the basis of their National Insurance record; and The additional State Pension \u2013 which was partly earnings-related. \n \nFrom the time the additional State Pension was introduced in 1978, it was possible to contract-out of it into a pension scheme that meets certain criteria.  Where an employee was contracted-out scheme, they and their employer paid a reduced rate of National Insurance (NI), designed to reflect the cost of providing the benefits foregone. Between 1978 and 1997, contracted-out schemes were required to provide a Guaranteed Minimum Pension (GMP). Since 1997, a different test has applied but contracted-out schemes still have to provide a GMP for rights accrued between 1978 and 1997.\n \nPension schemes are required to index GMP rights accrued between 1988 and 1997, in line with prices, subject to a 3% cap. The increase required by schemes each year is provided for in a Statutory Instrument - the Guaranteed Minimum Pension Increase Order. \n \nThere is a link between the GMP and the additional State Pension in that, when a person reaches pensionable age, the total amount of GMP is subtracted from the total amount of additional state pension built up between 1978 and 1997, and any net amount is paid. This is referred to as a \u2018contracted-out deduction\u2019. It reflects the fact that reduced National Insurance (NI) was paid during the period of contracting out in return for meeting legislative requirements. This calculation is performed each year that the pension is payable.\n \nThe effect of these arrangements is that, although schemes are not required to provide increases on the GMP on rights accrued between 1978 and 1988 (or in excess of 3% on rights accrued between 1988 and 1997), the additional State Pension built up during that period is subject to increases. When the contracted-out deduction is subtracted from the additional state pension, the remaining additional state pension includes an increase linked to prices. The effect is that, an amount broadly equivalent to the GMP, but which is in fact additional state pension is subject to an increase (HC Deb, 6 January 2014, c51W).\n \nThe new State Pension\n \nUnder the Pensions Act 2014. a new single-tier State Pension (nSP) was introduced for future pensioners from 6 April 2016. The NAO described the implications for people who had been contracted-out as follows:\n \n 9 The new state pension ends contracting out. From April 2016 the government will replace the basic and additional state pensions with a new single state pension. Employers will no longer be able to contract their pension schemes out of the state pension scheme. Working-age people will have their existing state pension entitlement adjusted for previous periods of contracting out and transferred to the new state pension scheme. Occupational pension scheme providers will continue to revalue any Guaranteed Minimum Pensions that people have built up (paragraphs 2.6 to 2.11). 10 For people retiring after 6 April 2016, the government will no longer take account of inflation increases to Guaranteed Minimum Pensions when uprating people\u2019s new state pension. Scheme providers will continue to uprate occupational pensions \u2013 including part of Guaranteed Minimum Pensions \u2013 in accordance with scheme rules and statutory requirements. The changes mean any Guaranteed Minimum Pensions that people have accrued between 1978 and 1988 will not be uprated, and the scheme provider will only uprate Guaranteed Minimum Pensions built up between 1988 and 1997 to a maximum of 3% each year. People who have already started claiming their state pension will be unaffected (paragraphs 2.19 to 2.21). (NAO, The impact of state pension reforms on people with Guaranteed Minimum Pensions, HC 907, March 2016). \n \nIt concluded that the impact on of these reforms on individuals would depend on a number of factors:\n \n 17 The uprating of Guaranteed Minimum Pensions is a complicated area. The impact of reforms on individuals will depend on a number of factors including their age, employment history, earnings and future inflation. Some people are likely to lose out and they have not been able to find the information they need. 18 We are concerned that the Department has limited information about who is affected by the impact of pension reforms on Guaranteed Minimum Pensions. It is now seeking to improve how it communicates the impact of pension reforms, and will need to help people identify how they are affected and provide them with accurate and more complete information so that they can make informed decisions about their future pension arrangements (Ibid). \n \nPublic service pensions\n \nThe arrangements in place before 6 April 2016 ensured that public servants received indexation on their GMP, while preventing double increases. (HM Treasury guidance, May 2001).\n \nBecause the mechanism in the old State Pension for providing full indexation of GMPs, is not part of the new State Pension, the Government had to consider how to deliver on commitments by previous governments that public service pensions would be fully indexed. In March 2016, it announced that those reaching State Pension age between 6 April 2016 and 6 December 2018 would receive a fully-indexed public service pension for life. (HM Treasury press release, 1 March 2016).\n \nIn November 2016, it launched a consultation on how to address the issue in the longer term. It aimed to consider two issues:\n \n How best to avoid the introduction of unequal payments to men and women in the public service schemes that will result from the abolition of AP. There are legal requirements to pay men and women equal pensions in respect of pensionable service after 16 May 1990, and the old arrangements were designed to deliver equalisation by way of increases to AP Whether, following the introduction of the new State Pension, the public service pension schemes should pay full indexation on GMP earned while a member of a public service pension scheme, for someone who reaches SPa after 5 December 2018. \n \nThe deadline for responses is 20 February 2017."}
      , "date" : {"_value" : "2017-02-06T18:37:16.2291125+00:00", "_datatype" : "dateTime"}
      , "description" : ["Between 1978 and 1997, contracted-out defined benefit pension schemes were required to provide a Guaranteed Minimum Pension (GMP). This note looks at the arrangements for index-linking GMP rights for people reaching State Pension age before and after 6 April 2016 and for members of public service pension schemes"], "identifier" : {"_value" : "SN04956"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Guaranteed Minimum Pension (GMP) increases", "topic" : [{"_about" : "http://data.parliament.uk/terms/95708", "prefLabel" : {"_value" : "Pensions"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/685142", "abstract" : {"_value" : "All information presented is accurate as at this date unless otherwise stated. Key findings include:\n \n The total membership of the House was 839. Of this total, 805 Members were eligible to attend. The majority of Members\u201484.1 percent\u2014sat by virtue of a life peerage conferred under the Life Peerages Act 1958. Excepted hereditary peers accounted for 10.8 percent of the membership. Of the eligible membership: Conservatives comprised the largest party or group, with 253 Members (31.4 percent). Labour Members comprised the second largest party or group, with 203 Members (25.2 percent). Men made up 74.3 percent and women made up 25.7 percent of the House. This compares with 74.4 percent and 25.6 percent respectively as at 11 March 2016. The mean average age was 69; the median average age was 70; and the modal average age was 74. This is unchanged from 11 March 2016.  Most Members in each party or group, except the Bishops, fell into the 70\u201379 age band. 40 Members were aged under 50 and 13 Members were aged 90 or over. This compares with 34 Members aged under 50 and 16 Members aged 90 or over as at 11 March 2016.  \n \nSection one includes tables which detail the composition of the House. Table 1.1 details the composition of the House by party/group affiliation and membership type; Table 1.2 by party/group affiliation and gender; and Table 1.3 by type of peerage and gender. Section two provides information about the age profile of the House. Section 2.1 provides information on average ages. Table 2.2 provides a snapshot of the membership of the whole House by age bands. Table 2.3 breaks this information down by party/group affiliation. Table 2.4 lists those Members aged under 50; and Table 2.5 lists those Members aged 90 and over. Table 2.6 lists those Members who were aged under 40 when they received a life peerage. Section three includes tables which list various categories of current Members by length of membership of the House. Table 3.1 lists the 50 longest continuously serving Members of the House who were eligible to participate in the proceedings. Table 3.2 lists life peers who had served as Members of the House for 30 years or more; and Table 3.3 lists all female peers who have served as Members of the House for 20 years or more. Section four directs interested readers to the House of Lords Library briefing Membership of the House of Lords: Ethnicity, Religion and Disability (12 June 2014). \n \nThis briefing updates the House of Lords Library Note House of Lords: Statistical Profile of Membership (23 March 2016), which provided information on the membership of the House as at 11 March 2016."}
      , "date" : {"_value" : "2017-02-06T17:13:57.5861703+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Lords Library briefing presents a range of information about the membership of the House of Lords as the House was composed on Friday 27 January 2017."], "identifier" : {"_value" : "LLN-2017-0008"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/346713", "prefLabel" : {"_value" : "Lords Library notes"}
      }
      , "title" : "House of Lords: Statistical Profile of Membership\u2014January 2017", "topic" : [{"_about" : "http://data.parliament.uk/terms/95628", "prefLabel" : {"_value" : "House of Lords"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95675", "prefLabel" : {"_value" : "Members of the Lords"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/339028", "abstract" : {"_value" : "Aircraft noise is an ongoing concern for people who live near to, or under the flight path for an airport. At designated airports the relevant authority (the Secretary of State for Transport in the case of England and Wales, Scottish Minister in Scotland) can mitigate the problem by limiting the number of flights and the type of aircraft that fly into and out of airports during the early morning (from 2300 to 0700). These are generally referred to as \u2018night flights\u2019.\n \nThe current regime expires in October 2017 and in January 2017 the Government published its proposals for new limits to operate between 2017 and 2022. The key points are:\n \n reducing the total noise quota at Heathrow Airport by at least 43% in the winter and 50% in the summer; reducing noise quotas at Gatwick by at least 17% in the winter and 21% in the summer; setting a strict cap at existing levels for the number of night flights from Heathrow and Gatwick; and ending exemptions for almost 1,700 night flights operating out of Stansted by including these in the new cap, setting a strict limit which the airport cannot exceed. \n \nCampaign groups at the three airports have given the proposals a mixed reaction and are calling for tougher restrictions to be put in place, particularly in the long term.\n \nThe proposals for the new regime period end well before the earliest estimated date for the opening of a new runway at Heathrow (mid-2020s). In the longer term Heathrow will have to commit to an outright ban on night flights if it hopes to expand.\n \nThis paper does not cover non-designated airports, where the responsibility for managing night flights and enforcing noise limits rests with the airport operator; often there will be consultation with local communities and, where applicable, local councils. \n \nInformation on other aviation issues, including aircraft noise and Heathrow expansion, can be found on the Aviation Topical Page"}
      , "date" : {"_value" : "2017-02-06T13:25:19.4373308+00:00", "_datatype" : "dateTime"}
      , "description" : ["This paper explains how the night flight regimes at the UK\u2019s three designated airports, Heathrow, Gatwick and Stansted, are set and what the current proposals are for the period 2017-22."], "identifier" : {"_value" : "SN01252"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Night flights at Heathrow, Gatwick & Stansted", "topic" : [{"_about" : "http://data.parliament.uk/terms/95501", "prefLabel" : {"_value" : "Aviation"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95581", "prefLabel" : {"_value" : "Environmental protection"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/682478", "abstract" : {"_value" : "Housing policy is a devolved matter. This briefing focuses on the situation in England but provides links to relevant policy information in the devolved administrations. The private rented sector (PRS) is now the UK\u2019s second largest tenure after owner occupation. The Localism Act 2011 gave English local authorities the power to discharge their duty towards statutorily homeless households in the PRS, previously households had been able to refuse this as a rehousing option.   In the context of increasing levels of statutory homelessness and rough sleeping in England, the PRS has assumed more importance as a means of securing accommodation for homeless households (discharge of duty) and as temporary accommodation for households waiting for a final offer of suitable accommodation. However, the ending of an assured shorthold tenancy was cited as the cause of homelessness in 17,900 cases (31% of the total) accepted by English local authorities in 2015/16. There is evidence to suggest that homeless and vulnerable people face particular barriers to accessing and retaining accommodation in the PRS. The key issues include: affordability; landlords\u2019 reluctance to rent to Housing Benefit recipients; lack of security of tenure; poor housing quality; and lack of support for vulnerable people.  "}
      , "date" : {"_value" : "2017-02-06T11:41:15.6730543+00:00", "_datatype" : "dateTime"}
      , "description" : ["There will be a Westminster Hall debate on 'Private renting solutions for homeless and vulnerable people' on Wednesday 8th February 2017. This Commons Library debate pack provides background information on the use of the PRS to prevent and relieve homelessness."], "identifier" : {"_value" : "CDP-2017-0043"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Private renting solutions for homeless and vulnerable people", "topic" : [{"_about" : "http://data.parliament.uk/terms/95626", "prefLabel" : {"_value" : "Homelessness"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95722", "prefLabel" : {"_value" : "Private rented housing"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/685127", "abstract" : {"_value" : "The Debate Pack has been updated to take into account the publication on 7 February 2017 of the following:\n \n Department for Communities and Local Government Housing White Paper Fixing our broken housing market Department for Communities and Local Government Government response to the consultation on upward extensions in London \n \nFocus of the debate\n \nJohn Penrose MP, who secured this debate, has indicated that the focus of it will be about making it easier for urban property owners to build up to the level of other buildings in the same block without needing planning permission. Mr Penrose has campaigned on this issue since 2013 and has argued that relaxing planning rules would make homes more affordable given the opportunity to increase supply, protect the environment by reducing the pressure to build on greenfield sites and help to regenerate town centres.[1]\n \nConsultation proposals for upward extensions in London\n \nUnder current planning rules, full planning permission must be sought for extensions which increase the height of buildings. In the HM Treasury\u2019s July 2015 Productivity Plan, Fixing the foundations: Creating a more prosperous nation, the Government proposed to remove the need for planning permission, in London, for upwards extensions for a limited number of stories up to the height of an adjoining building. This would only apply where neighbouring residents did not object. In cases where objections were received, the application would be considered in the normal way, focussed on the impact on the amenity to neighbours.[2] The aim of this was stated as to \u201creduce the need to \u2018build out\u2019, helping to provide homes for Londoners while protecting the countryside.\u201d\n \nOn 18 February 2016 the Government published a consultation on Upward extensions in London in conjunction with then Mayor of London. Three mechanisms were put forward to incentivise the use of upward extensions:\n \n a new permitted development right; local development orders; and new London Plan policies. These would not be mutually exclusive mechanisms and the consultation document indicated they could work together. \n \nA government response to the consultation was published on 7 February 2017, alongside the housing white paper, Fixing our broken housing market. The Government\u2019s response confirmed its support for the consultation principle of upward extensions:\n \n We welcome the support for the principle of upward extensions to existing premises to provide more homes in London. The responses have confirmed that there is potential to deliver more homes by increasing densities on brownfield land. It is clear that building up has a role to play in meeting the need for new homes across the country, not just in London, and the Housing White Paper proposes a package of measures to support building at higher densities and using land more efficiently for development. Our intention is therefore to take forward the policy option through the National Planning Policy Framework to support the delivery of additional homes by building up.[3] \n \nA new permitted development right\n \nPermitted development rights allow for development to take place without the need to obtain full planning permission. On the new permitted development right, the consultation document proposed that its use should be conditional on new self-contained additional housing units being provided. It also set out restrictions about how far upwards the new permitted development right would allow extensions to buildings to go:\n \n 2.9 We are proposing a new permitted development right in London to allow additional storeys to be built on an existing building, up to the height of an adjoining roofline. We propose that the new right could provide for up to two additional storeys to be added to an existing building, where the roofline of the adjoining premises is a minimum of two storeys taller (see paragraph 3.6 - 3.8 below). A single storey could be added where the roofline of the adjoining premises is one storey taller. This will help to manage the impact of the development on the area. 2.10 We are proposing that a permitted development right could apply where the development would be above a range of uses, such as existing residential use, both flats and houses, retail and other high street uses, and offices. \n \nThe consultation document proposed there would be a neighbour consultation requirement:\n \n 2.11 We are proposing that a permitted development right could provide for a neighbour consultation scheme, similar to that introduced in May 2013 for the permitted development right for larger single storey rear extensions to dwelling houses. This could provide an opportunity for neighbours to comment on the development proposals, including on the impact on the amenity of their property. Amenity is a long-established concept in planning, and may include matters such as light, privacy and overlooking. Only where neighbours raise objections would the Local Planning authority have to consider the impact of the proposed development on their amenity. 2.12 Prior approval could also allow for consideration of other impacts of a permitted development at a local level. As well as the standard matters associated with permitted development rights for change of use to residential use, it may include matters such as space standards to ensure the quality of the development, and method and hours of construction. \n \nUnder the proposals the new permitted development right would not apply in a number of protected areas including to listed buildings, and sites of special scientific interest.\n \nLocal development orders\n \nA Local Development Order (LDO) is a tool to allow a Local Planning Authority to introduce new permitted development rights. An LDO is made by a local planning authority and gives a grant of planning permission to specific types of development within a defined area. They streamline the planning process by removing the need for developers to make a planning application to a local planning authority\n \nIn the consultation it was proposed that London boroughs could use existing powers to bring forward LDOs which would grant planning permission for upward extensions in specific areas.\n \nLondon Plan policies\n \nThe consultation document also proposed that the Mayor of London could bring forward new planning policies to support additional storeys for new dwellings when reviewing the London Plan. \u201cThis could be linked to existing policies for areas of intensification, including town centres, already set out in the London Plan.\u201d[4]\n \nUpward extensions outside of London\n \nIn the March Budget 2016 the Government announced that \u201cfollowing the consultation on building up in London and to help increase densities on brownfield land and reduce the need to \u2018build out\u2019, the government will consult with city regions on extending similar powers as part of devolution deals.\u201d[5]\n \nOn 7 February 2017 the Government published its housing white paper, Fixing our broken housing market. The white paper contains proposals to amend planning policy in respect of addressing the scope for where buildings can be extended upwards:\n \n 1.53 To help ensure that effective use is made of land, and building on its previous consultations, the Government proposes to amend the National Planning Policy Framework to make it clear that plans and individual development proposals should: \n \n make efficient use of land and avoid building homes at low densities where there is a shortage of land for meeting identified housing requirements; address the particular scope for higher-density housing in urban locations that are well served by public transport (such as around many railway stations); that provide scope to replace or build over low-density uses (such as retail warehouses, lock-ups and car parks); or where buildings can be extended upwards by using the \u2018airspace\u2019 above them; ensure that the density and form of development reflect the character, accessibility and infrastructure capacity of an area, and the nature of local housing needs; and take a flexible approach in adopting and applying policy and guidance that could inhibit these objectives in particular circumstances; for example, avoiding a rigid application of open space standards if there is adequate provision in the wider area \n \n 1.54 The Government would welcome ideas on how planning policy can further encourage more innovative uses of land in areas of high housing need, including considering new permitted development rights. Consultation questions are set out in the annex.[6] \n \nThe consultation question annex to the white paper asks:\n \n What are your views on the potential for delivering additional homes through more intensive use of existing public sector sites, or in urban locations more generally, and how this can best be supported through planning (using tools such as policy, local development orders, and permitted development rights)?[7] \n \nResponse to upward extension proposals\n \nThe Government\u2019s response to the Upward extensions in London consultation summarises the consultation responses but does not publish them in full. It sets out that respondents were supportive of the principle of building up to deliver more homes but there were mixed views about the proposed mechanisms to do so.[8]\n \nSome of the responses published on online provide further information about this mixture of views.\n \nFor example, the Planning Officers Society response is that it \u201ccannot support this proposal at all.\u201d It has argued that there is little evidence that planning permission is a hurdle for such extensions, that upward extensions are often very challenging structurally, and that their appearance would impact on the built environment.[9]\n \nThe Government\u2019s advisor on historic environment matters, Historic England, raised concerns that the new permitted development right could lead to unsustainable development and would be detrimental to the quality of London\u2019s historic environment because the type of building the right would apply to is \u201cill-defined and likely to be ill-suited to delivering additional residential units.\u201c[10]\n \nIn contrast, the British Property Federation (BPF) welcomed the proposals stating that \u201cit will help developers to think more innovatively and efficiently about the space above shops, offices and other residential property\u201d. It did however, note that it is \u201cunlikely to deliver a significant amount of new homes.\u201d[11]\n \nThe Council of Mortgage Lenders agreed that building upward on existing premises could be a viable option to increase housing supply. It highlighted, however, a need to consider and monitor impacts including on the value of the new property (and the sustainability of that value) and also the value of existing properties beneath, which \u201cis particularly relevant where those properties are mortgaged.\u201d[12]\n \nOther low cost housing issues\n \nFor further information about other low cost housing issues and policies see Library briefing papers:\n \n What is affordable housing? (CBP07747) Tackling the under-supply of housing in England (CBP07671) \n \nThe Library has also developed a housing supply statistics tool which allows users to view and compare local-level housing information. It aims to answer questions such as:\n \n How much social housing is there in my area? How many new homes were built in my area last year, and how does this compare with other local authorities? How many new affordable homes have been provided near me? \n \n \n \n \n \n[1]     John Penrose MP website, Build Up Not Out [downloaded on 1 February 2017]\n \n[2]     HM Treasury, Fixing the foundations: Creating a more prosperous nation, July 2015, paras 9.20 and 9.21\n \n[3]     HM Government, Summary of responses to the technical consultation on implementation of planning changes, consultation on upward extensions and Rural Planning Review Call for Evidence, 7 February 2017, para 9.10\n \n[4]     HM Government, Upward extensions in London, 18 February 2016, para 2.19\n \n[5]     HM Government, Budget 2016, 16 March 2016, para 2.289\n \n[6]     HM Government, Fixing our broken housing market, 7 February 2017\n \n[7]     HM Government, Fixing our broken housing market, 7 February 2017\n \n[8]     HM Government, HM Government, Summary of responses to the technical consultation on implementation of planning changes, consultation on upward extensions and Rural Planning Review Call for Evidence, 7 February 2017, para 9.2\n \n[9]     Planning Officers\u2019 Society, POS response to consultation on upward extensions in London, April 2016\n \n[10]    Historic England, DCLG and Mayor of London consultation on upward extensions in London Historic England Submission, 15 April 2016\n \n[11]    British Property Federation, Upward extension proposals will encourage \u201cinnovation and efficiency\u201d in the capital, 18 February 2016\n \n[12]    Council of Mortgage Lenders, CML response to DCLG consultation on upward extensions in London, 7 April 2016\n \n "}
      , "date" : {"_value" : "2017-02-06T10:51:10.6451795+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Debate pack has been prepared for the debate on Low cost housing to take place in Westminster Hall on Wednesday 8 February 2017 at 9:30am. The subject for debate has been chosen by John Penrose, MP for Weston-super-Mare"], "identifier" : {"_value" : "CDP-2017-0045"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/67716", "prefLabel" : {"_value" : "Science and Environment Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Low cost housing", "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/342454", "abstract" : {"_value" : "Living former Members\n \nTable 1 contains information on former Members who are still living. MPs are listed with: any titles at the time they ceased to be an MP and the party they belonged to at the time; their date of birth, start and end dates for each constituency they served; and their total length of service.\n \nPlease note: This information has been taken principally from published sources and is correct to the best of our knowledge.\n \nFormer Members who have died since the 2015 General Election\n \nTable 2 lists former MPs who have died since the 2015 General Election and have been removed from the list of living former Members.\n \nFurther information\n \nMore detailed information on MPs who served between 1979 and 2010, including ministerial posts and party allegiance, covering their time in the UK Parliament and other legislatures, can be found in the Commons Library Briefing on Members 1979-2010.\n \nAssociation of Former Members of Parliament\n \nA list of recently deceased members of the Association of Former Members of Parliament is available on the DODS PoliticsHome website.\n \nFeedback\n \nAny comments, corrections or suggestions for new lists should be sent to: Parliamentary Information Lists Editor, Parliament & Constitution Centre, House of Commons Library, London SW1A 0AA.\n \n "}
      , "date" : {"_value" : "2017-02-03T17:15:13.5997681+00:00", "_datatype" : "dateTime"}
      , "description" : ["A list of known living former MPs as at 3 February 2017"], "identifier" : {"_value" : "SN05324"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/61055", "prefLabel" : {"_value" : "Parliament and Constitution Centre"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Living Former Members of the House of Commons", "topic" : [{"_about" : "http://data.parliament.uk/terms/95674", "prefLabel" : {"_value" : "Members of Parliament"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/439231", "abstract" : {"_value" : "Current financial support and plans for reform\n \nCurrently students accepted on an NHS-funded course in England that leads to professional registration as a nurse, midwife or other allied health professional are usually eligible for an NHS Bursary to help with the costs of studying.\n \nFor new full-time students starting in 2016-17 the NHS Bursary consists of the following elements:\n \n A non-means tested grant of £1,000 per year (pro-rata for part-time students) A means tested bursary to help with living costs of up to:  £3,191 for students living away from home and in London £2,643 for students living away from home and outside London £2,207 for students living at home. Other bursary elements such as extra week\u2019s allowances for courses that run for longer than 30 weeks and 3 days each academic year, and practice placement expenses. \n \nStudents who qualify for a bursary also have the costs of their tuition paid directly to their higher education institution by the NHS.  Healthcare students may also apply for a non-income assessed reduced rate maintenance loan from Student Finance England.\n \nThis briefing applies to the Bursary Scheme in place for eligible students studying in England. Students ordinarily resident in Scotland, Wales and Northern Ireland who are studying in England may be eligible for a bursary under this scheme.  Different schemes are in place for students studying in Scotland, Wales and Northern Ireland.\n \nWithdrawal of bursary for new students starting in England in September 2017 \u2013 nursing, midwifery and allied health professions\n \nFrom August 2017, new students on most nursing, midwifery and allied health professions pre-registration courses will not be entitled to an NHS Bursary. Instead, they will be able to apply for mainstream student finance in the form of repayable student loans. Some additional funding and transitional bursary funding will be made available to particular groups.\n \nThe changes will only affect new students; they will not apply retrospectively to those who began their course in 2016 or earlier.\n \nThe Government has said it expects the reform to provide up to 10,000 additional nursing and health professional training places over the course of this Parliament; it has also said that the cap on the number of student places for nursing, midwifery and allied health professions will be removed.\n \nThe reforms were originally announced in the Autumn Statement 2015. The Government consulted on the proposals between April and June 2016, and published its consultation response in July 2016.\n \nThese changes will not apply to NHS bursaries for medical and dental students.\n \nApplications for nursing in 2017\n \nThe first data on applicants under the reformed support system cover the period to mid\u2011January 2017. Up to that point there were 10,000 fewer applicants from England, a fall of 23%.\n \n "}
      , "date" : {"_value" : "2017-02-03T15:01:39.1292218+00:00", "_datatype" : "dateTime"}
      , "description" : ["This note explains the changes to funding for students on NHS funded courses in England, that lead to professional registration as nurses, midwives, or other allied health professionals as announced in the Spending Review and Autumn Statement 2015. From August 2017 NHS bursaries which provide tuition fee funding, grants and living cost support, will largely be replaced by funding through the standard student support package of loans. The paper provides background to the changes."], "identifier" : {"_value" : "CBP-7436"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70459", "prefLabel" : {"_value" : "Social and General Statistics Section"}
      }
      , {"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Reform of support for healthcare students in England", "topic" : [{"_about" : "http://data.parliament.uk/terms/95625", "prefLabel" : {"_value" : "Higher education"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95761", "prefLabel" : {"_value" : "Students"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/683963", "abstract" : {"_value" : "The European Union (Notification of Withdrawal) Bill was introduced in the House of Commons on 26 January 2017 and received its second reading on 31 January and 1 February 2017. The Bill would give the Prime Minister power to notify the European Council of the UK\u2019s intention to withdraw from the European Union, under the process set out in Article 50 of the Treaty on European Union. \n \nThis briefing summarises the second reading proceedings in the House of Commons. The House divided on a reasoned amendment tabled by the Scottish National Party (SNP) to deny the Bill its second reading. The amendment was defeated by 336 votes to 100, a majority of 236.\n \nThe Bill was given its second reading by 498 votes to 114, a majority of 384. Of the MPs who voted, the Conservatives (with the exception of Kenneth Clarke), the Democratic Unionist Party, the Ulster Unionist Party and UKIP voted in favour of the Bill. The SNP, the Liberal Democrats, the Social Democratic and Labour Party, Plaid Cymru and the Green Party voted against it. Despite the Party\u2019s three-line whip to support the Bill, Labour\u2019s vote was split, with 167 Labour MPs voting in favour of the Bill and 47 voting against it.\n \nThere was also a division on the programme motion, which allocated three days (6, 7 and 8 February 2017) for the Bill\u2019s committee stage and third reading. The programme motion was agreed to by 329 votes to 112, a majority of 217.\n \nDuring the first day of the second reading debate, MPs from all sides of the House questioned the Government about when it would publish the white paper that had been promised by Theresa May at Prime Minister\u2019s Questions on 25 January 2017. Mrs May announced on 1 February, before the second day\u2019s debate on the Bill began, that the white paper would be published the following day. On 2 February 2017, the Government published its white paper, The United Kingdom\u2019s Exit From, and New Partnership With, the European Union. \n \nThe Bill\u2019s remaining Commons stages are scheduled to take place on 6\u20138 February 2017. The Bill\u2019s second reading in the House of Lords is scheduled for 20 February 2017. For background information about the Bill, see House of Lords Library, European Union (Notification of Withdrawal) Bill (30 January 2017) (a concise five-page briefing) and House of Commons Library European Union (Notification of Withdrawal) Bill (30 January 2017) (a more detailed 50-page briefing)."}
      , "date" : {"_value" : "2017-02-03T14:56:26.3409538+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Lords Library briefing summarises the second reading proceedings in the House of Commons on the European Union (Notification of Withdrawal) Bill that took place on 31 January and 1 February 2017."], "identifier" : {"_value" : "LIF-2017-0013"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414041", "prefLabel" : {"_value" : "Lords In Focus"}
      }
      , "title" : "European Union (Notification of Withdrawal) Bill: Summary of Commons Second Reading Debate", "topic" : [{"_about" : "http://data.parliament.uk/terms/95532", "prefLabel" : {"_value" : "Constitution"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95552", "prefLabel" : {"_value" : "Devolution"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95591", "prefLabel" : {"_value" : "EU law and treaties"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95659", "prefLabel" : {"_value" : "Legislative process"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95679", "prefLabel" : {"_value" : "Ministers"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95703", "prefLabel" : {"_value" : "Parliament"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/683961", "abstract" : {"_value" : "A spate of seagull attacks across the country, led the then Prime Minister David Cameron to call for a \u201cbig conversation\u201d on the issue. All gull species currently enjoy protected status in the UK, but some people have called for a cull to remove gulls in problem areas.   \n \nWildlife protections\n \nAnimal welfare is a devolved issue. Gulls currently enjoy protected status in the UK; all species of are protected under the Wildlife and Countryside Act 1981 and the Wildlife (Northern Ireland) Order 1985. This makes it illegal to intentionally or, in Scotland and Northern Ireland, recklessly injure or kill any gull or damage or destroy an active nest or its contents.\n \nAll \u201cseven breeding gull species in the UK are birds of conservation concern\u201d according to the RSPB. The herring gull is red listed due to severe declines in its national breeding population, and the other species are amber listed for differing reasons. Only, the Mediterranean gull population is not in decline.\n \nDealing with problem gulls \n \nNatural England advises that:\n \n In many cases the problems [with gulls] can be avoided or kept to tolerable levels by local authorities and landowners taking preventative measures such as installing netting or wire over vulnerable roosting areas, keeping food storage and waste facility areas secure and discouraging deliberate feeding of birds by the public. \n \nCouncils are allowed to issue licences for birds to be disposed of or nests to be destroyed where there is no other satisfactory solution, and there is a risk to public health or safety. There are slight differences in the licensing arrangements in England, Wales, Scotland and Northern Ireland, though all adhere to the EU Birds Directive.\n \nA gull cull?\n \nCurrently, DEFRA\u2019s approach to managing gull populations is through licensing and effective long-term management. However, some people have called for a cull to remove gulls in urban areas.\n \nThere is some public support for a cull. In the summer of 2015, YouGov surveyed 1,746 people on their support for a cull on seagulls. This revealed that: \u201cby a small margin British people tend to support the idea of a gull cull (44% support, 36% oppose), while in rural areas support reaches 50%. Most people aged 60 or over (53%) also support a cull, but 18-24s oppose one by a majority (53%).\u201d\n \nThe RSPCA is opposed in principle, to killing or taking wildlife and would instead advocate the use of non-harmful methods of deterrence where possible.\n \nWales\n \nIn 2015, the then Minister for Natural Resources explained that he felt that the powers in place for local authorities to take action were sufficient, but that the Department would look at what else could be done:\n \n We have been very careful, on balance, to make sure that we manage protected species, but I think there are already powers in place for local authorities to take action. It is something I\u2019ve asked my team to give me some further advice on, because I do recognise, actually, some of the activities in urban settings, particularly in Cardiff, where there are some wild birds that take their actions on innocent bystanders as you walk past their nests. \n \nScotland\n \nIn 2010, Dumfries and Galloway Council, the Scottish Government and Scottish Natural Heritage published a report which examined gull deterrence using Peregrine Falcons. This study found that falcons could act as a deterrence, and made a number of recommendations. In answer to a PQ in September 2015, Environment Minister Aileen McLeod explained that she \u201choped that local authorities across Scotland will be able to implement the recommendations in this report, and learn from measures.\u201d\n \nNorthern Ireland\n \nThe Northern Ireland Government states that \u201cChoosing the right course of action is essential as it is illegal to intentionally harm or kill any wild bird species.\u201d It goes on to say that not all of the measures you can take are lasting solutions, and recognises that in some circumstances local authorities may need to reduce gull numbers for public health reasons."}
      , "date" : {"_value" : "2017-02-03T14:02:18.059056+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library debate pack has been produced ahead of the debate on seagulls in coastal towns and cities. \nThe debate will be in Westminster Hall on Tuesday 7 February 2017, 2.30-4pm. \nThe Member in charge is Oliver Colvile MP.  \nDebate packs are intended to provide useful information for Members, including press and parliamentary material, on issues relating to the debate."], "identifier" : {"_value" : "CDP-2017-0044"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Seagulls in coastal towns and cities", "topic" : [{"_about" : "http://data.parliament.uk/terms/95489", "prefLabel" : {"_value" : "Animal welfare"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95490", "prefLabel" : {"_value" : "Animals"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95506", "prefLabel" : {"_value" : "Biodiversity"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95536", "prefLabel" : {"_value" : "Countryside"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95581", "prefLabel" : {"_value" : "Environmental protection"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95669", "prefLabel" : {"_value" : "Marine environment"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95688", "prefLabel" : {"_value" : "Nature conservation"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95750", "prefLabel" : {"_value" : "Small businesses"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95777", "prefLabel" : {"_value" : "Waste management"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95782", "prefLabel" : {"_value" : "Wildlife"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/683958", "abstract" : {"_value" : "The Serious Fraud Office (SFO) is an independent Government department responsible for investigating and prosecuting suspected offences involving serious and complex fraud, including bribery and corruption.  It covers England, Wales and Northern Ireland.  The SFO is superintended by the Attorney General in accordance with the principles set out in the Protocol between the Attorney General and the Prosecuting Departments. The SFO was created by the Criminal Justice Act 1987 and was established in 1988.\n \nThe SFO has a core budget which is supplemented by additional funding.  This additional funding includes so-called \u201cblockbuster\u201d funding, which is used to enable the SFO to take on big cases where the annual expenditure is expected to exceed an agreed percentage of its core budget.  The SFO\u2019s website provides details of current and recent funding settlements.\n \nThe SFO has described this funding arrangement as \u201ca workable mechanism which allows the SFO to respond flexibly to a demand-led workload\u201d.\n \nHowever, in a 2016 report into the SFO\u2019s governance arrangements, HM Crown Prosecution Service Inspectorate identified some concerns with the blockbuster funding approach. The report acknowledged that the blockbuster model gave the SFO flexibility to expand and contract its workforce, but suggested that it also gave rise to \u201csignificant staffing concerns\u201d.\n \nThe report concluded that the current funding model was not providing the best value for money, and that more efficiency could be achieved by raising core funding.  If core funding were increased, then the cost level at which blockbuster funding could be applied for could also be increased and the need to resort to additional funds would be significantly reduced.\n \n "}
      , "date" : {"_value" : "2017-02-03T12:59:59.1166347+00:00", "_datatype" : "dateTime"}
      , "description" : ["A Westminster Hall debate on the Funding of the Serious Fraud Office has been scheduled for 0930hrs on Tuesday 7 February 2017. The Member in charge of this debate is Stephen Timms MP."], "identifier" : {"_value" : "CDP-2017-0040"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Funding of the Serious Fraud Office", "topic" : [{"_about" : "http://data.parliament.uk/terms/95538", "prefLabel" : {"_value" : "Crime"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/683957", "abstract" : {"_value" : "The active removal of GHGs from the atmosphere, referred to as negative emissions, could be achieved using a variety of techniques. GGR techniques mainly focus on the removal of carbon dioxide (CO2) from the atmosphere, rather than other GHGs. The most promising GGR techniques include:\n \n Enhancing natural land sinks (Box 1). Increasing tree cover and improving forest management, increasing the amount of carbon stored in soil and ocean sediments, and restoring peatlands have all been suggested as GGR approaches. Transferring CO2 to geological storage (Box 2). CO2 can be taken from the atmosphere, directly or via plants, and pumped into underground storage in geological formations. Studies suggesting that CO2 stored in geological formations could be secure for 100,000 years.  \n \nKey points in this POSTnote include:\n \n It may be difficult to achieve net zero emissions in the second half of the century without Greenhouse Gas Removal (GGR) from the atmosphere. If successfully developed, some unproven GGR techniques, such as Bioenergy with Carbon Capture and Storage (BECCS), could be employed earlier to help meet carbon targets cost-effectively. However, there is risk of relying on as yet unproven GGR techniques to meet future carbon targets. Uncertainties include their scalability, effects on land use, financial viability and social acceptability. There is little policy on GGR. Future policies could support the development or deployment of GGRs or their integration into emissions accounting frameworks. \n \nAcknowledgements\n \nPOSTnotes are based on literature reviews and interviews with a range of stakeholders and are externally peer reviewed. POST would like to thank interviewees and peer reviewers for kindly giving up their time during the preparation of this briefing, including:\n \n Professor Kevin Anderson, Tyndall Centre for Climate Change, University of Manchester Mike Childs, Friends of the Earth* Almuth Ernsting, Biofuelwatch Dr Clair Gough, Tyndall Centre for Climate Change, University of Manchester* Alexandra Jenkins, DfT Cathy Johnson, BEIS* Beth O'Connell, BEIS* John Lanchbery, RSPB Lord Oxburgh, House of Lords* Dr Glen Peters, Centre for International Climate and Environmental Research Oslo (CICERO)* Professor Pete Smith, University of Aberdeen* Dr Steve Smith, CCC* Owain Tucker, Shell* Matt Willey & Jens Wolf, Drax* Dr Phil Williamson, NERC, University of East Anglia* \n \n*Denotes people who acted as external reviewers of the briefing"}
      , "date" : {"_value" : "2017-02-03T11:43:35.7224951+00:00", "_datatype" : "dateTime"}
      , "description" : ["The 2015 Paris Agreement called for a balance between sources of Greenhouse Gas (GHG) emissions and their removal by 2100 to halt global temperature rise. This POSTnote explains why Greenhouse Gas Removal (GGR) techniques may be required to achieve this goal, outlines the benefits of and concerns about them, and considers policy options."], "identifier" : {"_value" : "POST-PN-0549"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/61081", "prefLabel" : {"_value" : "POST"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/61081", "prefLabel" : {"_value" : "POST"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/346721", "prefLabel" : {"_value" : "POSTnotes"}
      }
      , "title" : "Greenhouse Gas Removal", "topic" : [{"_about" : "http://data.parliament.uk/terms/95523", "prefLabel" : {"_value" : "Climate change"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95736", "prefLabel" : {"_value" : "Renewable energy"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/672668", "abstract" : {"_value" : "There are several types of intellectual property (IP) protection including patents, trade marks and design rights. IP rights can sometimes be used by a trader or business to threaten a rival without justification. Statutory protection has developed so that an aggrieved person can take action against someone making threats. They might obtain:\n \n an injunction to prevent more threats being made; or a declaration that the threats are unjustified. \n \nThey might also claim damages for loss caused by the threat.\n \nThe Law Commission has referred to a case where eBay removed bikes from its website after another seller claimed to have registered the design of the bikes. The designs were not in fact registered. The claimant in the case obtained an order to stop any further threats being made, and was able to resume trading.\n \nA Law Commission review of unjustified threats to IP rights found, among other things, that the threat of infringement proceedings can cause commercial damage to businesses. IP litigation is also perceived as being expensive and disruptive. A draft Bill was published by the Law Commission in October 2015.\n \nThe Intellectual Property (Unjustified Threats) Bill [HL] 2016-17 was introduced in the House of Lords on 19 May 2016.\n \nAs the Bill is a Law Commission Bill, it is subject to particular parliamentary procedures. These are described in a Library Briefing Paper, The Law Commission and Law Commission Bill Procedures.\n \nThe Bill received cross-party support in the Lords. A number of Government amendments were agreed to at the Bill\u2019s Report Stage.\n \nThe Bill was introduced in the House of Commons on 13 December 2016. It was debated in a Second Reading Committee on 16 January 2017 where it was broadly welcomed by Labour and the SNP. The Bill was not amended in Public Bill Committee on 24 January 2017.\n \nThe Bill would reform the law of unjustified, or groundless, threats as it applies to patents, trade marks and designs. It would extend to the whole of the UK. \n \n \n \n \n \n \n \n \n \n "}
      , "date" : {"_value" : "2017-02-02T16:35:42.4857957+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library Paper looks at the Intellectual Property (Unjustified Threats) Bill [HL] 2016-17."], "identifier" : {"_value" : "CBP-7866"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      , {"_about" : "http://data.parliament.uk/terms/67716", "prefLabel" : {"_value" : "Science and Environment Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Commons Library Analysis of the Intellectual Property (Unjustified Threats) Bill [HL] 2016-17", "topic" : [{"_about" : "http://data.parliament.uk/terms/95643", "prefLabel" : {"_value" : "Intellectual property"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/671442", "abstract" : {"_value" : "The Broadcasting (Radio Multiplex Services) Bill 2016-17 is a Private Members\u2019 Bill, introduced by Kevin Foster on 4 July 2016. The Bill had its second reading on 13 January 2017. It was not amended in Public Bill Committee (31 January) and will have its remaining stages on 3 February 2017.\n \nThe Department for Culture, Media and Sport (DCMS) is supporting the Bill and has prepared Explanatory Notes.\n \nIn the UK, Digital Audio Broadcasting (DAB) radio services are broadcast as \u201cmultiplexes\u201d. This means that sound signals from a number of individual radio stations are combined together and transmitted as digital data.\n \nAt present, up to 400 local commercial and community radio stations are not carried on the DAB digital radio platform. This is the problem that the Bill seeks to address.\n \nOfcom regulates DAB multiplex services under Part 2 of the Broadcasting Act 1996 (as amended by the Communications Act 2003).\n \nThe Bill, which has one substantive clause, would give the Secretary of State the power to amend the conditions for DAB multiplex licensing in order to \u201ccreate a new, lighter touch regulatory framework appropriate for the licensing of small scale (DAB) radio multiplexes\u201d.\n \nThe Bill would extend to England and Wales, Scotland and Northern Ireland."}
      , "date" : {"_value" : "2017-02-02T13:41:27.7839656+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library Briefing Paper looks at the Broadcasting (Radio Multiplex Services) Bill 2016-17."], "identifier" : {"_value" : "CBP-7861"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Commons Library Analysis of the Broadcasting (Radio Multiplex Services) Bill 2016-17", "topic" : [{"_about" : "http://data.parliament.uk/terms/95507", "prefLabel" : {"_value" : "Broadcasting"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/601897", "abstract" : {"_value" : "The Government will publish a National Shipbuilding Strategy in 2017. Its purpose will be \u201cto place UK naval shipbuilding on a sustainable long-term footing\u201d. The strategy is expected to outline the Government\u2019s plans for two new classes of frigates for the Navy which are needed in the 2020s.\n \nA Government-commissioned report published in November 2016 criticised the way in which the Ministry of Defence develops and buys new surface ships and recommended a \u2018sea change\u2019 in naval procurement. The report was written by Sir John Parker. The strategy will include the Government\u2019s responses to the report\u2019s proposals.\n \nNew surface ships\n \nThe Ministry of Defence is in the middle of an ambitious recapitalisation programme for its naval surface fleet. The Government plans to spend about £19bn over the next decade on surface ships for the Royal Navy and Royal Fleet Auxiliary. A substantial portion of this is for the Navy\u2019s new frigates, oft-described as the backbone of the fleet.\n \nThe Royal Navy designates a class of frigates/destroyers as a Type. The Navy has a fleet of thirteen frigates, all Type 23s, which will begin to leave service from 2023 onwards.\n \nPlans to replace the fleet changed significantly in 2015 when the Government dropped proposals to replace them on a one-to-one basis with the yet to be built Type 26 frigates. Only eight Type 26 frigates will be ordered and instead a new class of General Purpose Frigates, unofficially known as the Type 31s, will be developed.\n \nBAE Systems is the prime industry partner for naval warships and submarines. The Government has confirmed, subject to contract, that steel will be cut on the Type 26 in summer 2017. This will be at BAE\u2019s two remaining shipyards, both located on the Clyde. The Government\u2019s plans for the design and build of the Type 31 class are still at the early stages.\n \n   \n \nThe aim of the shipbuilding strategy\n \nThe Government announced it will publish a new National Shipbuilding Strategy in the 2015 Strategic Defence and Security Review. The strategy will \u201cwill lay the foundations for a modern and efficient sector capable of meeting the country\u2019s future defence and security needs.\u201d\n \nConcerns about recruiting and retaining the highly skilled workers needed to build warships is one of the factors driving the strategy. As is the Government\u2019s policy of building complex warships in the UK. Options for designing the new type 31 to be exportable will also be examined.\n \nTiming of the publication\n \nThe 2015 Strategic Defence and Security Review (SDSR) set a publication date of 2016 for the strategy. Sir John Parker was appointed as the independent chair of the strategy and was expected to the Government by the Autumn Statement in November 2016.\n \nThe Parker report\n \nSir John Parker delivered his report to the Government ahead of the Autumn Statement but his report was not published until 29 November, six days after the Autumn Statement. Upon publication it transpired this was not the National Shipbuilding Strategy, as might have been inferred from Government comments, but an 'independent report to inform the National Shipbuilding Strategy'. The Government announced its response to the report will form the National Shipbuilding Strategy which it will publish in sprin 2017.\n \nParker made a total of 34 recommendations which, he said, amounted to a 'sea change' in how the MOD acquires surface ships. This included a new approach to procurement, in-building exportability to the design process and harnessing the 'renaissance in shipbuilding' in UK regional shipyards to build the Type 31 class.\n \nParliamentary scrutiny\n \nThe Defence Committee published its report on naval procurement and the national shipbuilding strategy (HC 221, 2016-17) on 21 November 2016. The Government's response was published in mid-January 2017.\n \nA debate on shipbuilding on the Clyde was held on 25 April 2016 and on the Type 26 frigates and the Clyde on 18 October 2016. Members have asked a number of oral and written questions about the Navy's frigates and the strategy. A debate on the strategy will be held in Westminster Hall on 8 February 2017.\n \nNote on this briefing paper\n \nThis briefing paper was first published on 14 October 2016. It was revised and updated to reflect the Parker report in December. The briefing paper now starts with an examination of the naval shipbuilding sector, followed by an overview of the Navy's plans for new frigates, offshore patrol vessels and logistics ships. It then looks at Government descriptions of the shipbuilding strategy and a summary of and reaction to Sir John Parker's report. It was updated again to incorporate the Government's response to the Defence Committee.\n \n \n \n \n \n \n \n \n \n "}
      , "date" : {"_value" : "2017-02-02T11:07:33.5846403+00:00", "_datatype" : "dateTime"}
      , "description" : ["The Government will publish a National Shipbuilding Strategy in 2017. This House of Commons briefing paper examines the Type 26 and Type 31 programmes and Sir John Parker's report."], "identifier" : {"_value" : "CBP-7737"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/37362", "prefLabel" : {"_value" : "International Affairs and Defence Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "The Royal Navy's new frigates and the National Shipbuilding Strategy: February 2017 update", "topic" : [{"_about" : "http://data.parliament.uk/terms/95549", "prefLabel" : {"_value" : "Defence equipment and procurement"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95550", "prefLabel" : {"_value" : "Defence expenditure"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95551", "prefLabel" : {"_value" : "Defence policy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95640", "prefLabel" : {"_value" : "Industry"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95748", "prefLabel" : {"_value" : "Shipping"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/341055", "abstract" : {"_value" : "What are Special Advisers?\n \nSpecial advisers are temporary civil servants employed to help ministers on matters where it would be inappropriate for permanent civil servants to become involved. They provide assistance from a standpoint that is more politically committed and politically aware than would be available to a minister from the permanent Civil Service.\n \nThe role of special advisers has been the subject of intense scrutiny for over a decade, with ongoing debate around the role and status of special advisers, and also their numbers and cost.\n \nHow many Special Advisers are there?\n \nThere were 83 special advisers in post in December 2016. This was down from the 92 departmental special advisers in post in December 2015. In November 2014 there were 103 special advisers in post \u2013 the highest there have been since governments has been releasing annual transparency figures.\n \nThe reduction in number of special advisers between 2015 and 2016 has fallen mostly on departments. The Prime Minister, Theresa May, has 32 special advisers, the same number that David Cameron had in December 2015.\n \nThe pay bill for special advisers for 1 April 2015 to 13 July 2016 was £9.2 million. In addition, £1.7 million was spent on severance pay.\n \nThe estimated pay bill for the period 14 July 2016 to 31 March 2017 is £4.9 million.\n \nThere is no statutory limit on the number of special advisers, but successive editions of the Ministerial Code have restricted the number of advisers most Ministers may appoint. The 2016 Ministerial Code states:\n \n With the exception of the Prime Minister, Cabinet Ministers may each appoint up to two special advisers. The Prime Minister may also authorise the appointment of one special adviser by Ministers who regularly attend Cabinet. Where a Minister has additional responsibility additional advisers may be allowed. \n \nDo the Special Adviser numbers tell the whole story?\n \nUnder section 16 of the Constitutional Reform and Governance Act 2010, the Government are required to release an annual report on special advisers, including the number in post. Because the figures are released annually (usually toward the end of the year), there is never a complete and consistent set of annual statistics. Those released each year are those in post at a given date, which may not be the total number of special advisers in post that year.\n \nThe number of special advisers are effectively controlled by the Prime Minister, and there have been a number of exceptions to the broad principle of one or two special advisers per Minister. Prime Ministers and Chancellors have always had more special advisers (George Osborne had six in post on 17 December 2015), while a number of other Ministers, including the Foreign Secretary, currently have more than two.\n \nThe Chancellor of the Exchequer has also appointed special advisers to the Council of Economic Advisers (4 in these posts as of 17 December 2015). These appear to be exempt from the restriction on the number of advisors, as they are listed separately to No 10 and departmental advisers in data releases. Gordon Brown did the same while he was Chancellor.\n \nThe informal cap on special adviser numbers has also been circumvented by appointing individuals as time-limited civil servants. The Civil Service Recruitment Principles have several exemptions to the broad principle of appointment through fair and open competition. One of these exemptions allows for the appointment of individuals to the Civil Service for a time-limited period where there is a pressing need. It is argued by some that many of these time-limited civil servants are special advisers in all but name.\n \nCode of Conduct for Special Advisers\n \nThe Special Advisers\u2019 Code of Conduct sets out guidance and rules for the work of special advisers. This is supplemented by the model contract for special advisers, which sets out principal terms and conditions of employment and includes a section on conduct and confidentiality.\n \nA revised Code of Conduct was published on 21 December 2016. The Code states that special advisers are employed to serve \u201cthe Prime Minister and the Government as whole, not just their appointing Minister\u201d. This provision had first been included in the 2010 Code to reflect the realities of a coalition government but has remained part of the updated Code.\n \nBoth the Ministerial Code and the Special Advisers' Code of Conduct make clear that the management and conduct of special advisers, including discipline, rests with the Minister who made the appointment.\n \nWhat is covered in this briefing paper?\n \nThis Briefing Paper summarises developments since 2000, including the introduction of legislation by the Brown Government to govern their appointment and conduct in the Constitutional Reform and Governance Act 2010. This gave a statutory underpinning to the Code of Conduct for Special Advisers first introduced in 2001, and the Order in Council which governs their role as temporary civil servants.\n \nThis Briefing Paper also looks at trends in numbers of special advisers, the code of conduct for special advisers, incidents during the 2010 Parliament involving special advisers, and Extended Ministerial Offices for ministers."}
      , "date" : {"_value" : "2017-02-02T09:29:29.6275945+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Commons Briefing Paper sets out details of roles and responsibilities of special advisers and information about the number of special advisers.  It also explains how the role has developed and includes details of some recent incidents involving special advisers."], "identifier" : {"_value" : "SN03813"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/61055", "prefLabel" : {"_value" : "Parliament and Constitution Centre"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Special Advisers", "topic" : [{"_about" : "http://data.parliament.uk/terms/95514", "prefLabel" : {"_value" : "Central government"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95522", "prefLabel" : {"_value" : "Civil Service"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95679", "prefLabel" : {"_value" : "Ministers"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/682494", "abstract" : {"_value" : "This briefing has been prepared ahead of second reading on the Child Poverty in the UK (Target for Reduction) Bill 2016-17, scheduled to occur on 3 February 2017. This Bill is a Private Members\u2019 Bill (Ballot Bill), sponsored by Dan Jarvis MP.\n \nThe Bill places a duty on the Secretary of State to meet four targets for child poverty by some target date (to be specified). The targets are based on a relative low income measure, a combined low income and material deprivation measure, an absolute low income measure and a persistent poverty measure. The Bill also allows the Secretary of State to introduce, via statutory instrument, targets relating to other measures to be met by the target date.\n \nThe four measures and targets specified in the Bill are the same as those used in the Child Poverty Act 2010 (although the Child Poverty Act stated the targets were to be met by 2020/21). The targets in the Child Poverty Act were subsequently removed by the Welfare Reform and Work Act 2016, although it had been clear for some time that the targets would not be met. In its 2015 State of the Nation Report, the Social Mobility and Child Poverty Commission observed that the targets \u201cwill be missed by a country mile\u201d.\n \nThe Welfare Reform and Work Act 2016 instead introduced a duty on Ministers to report annually on two \u2018life chances\u2019 indicators, relating to children in workless households and educational attainment. During the 2010-15 Parliament, Ministers had repeatedly signalled their intention to introduce improved poverty measures.\n \nDuring the passage of the Welfare Reform and Work Act, David Cameron\u2019s Government announced it would publish a life chances strategy, covering other non-statutory indicators in addition to the indicators in the Act. The life chances strategy was originally expected in spring 2016 but it now appears it will not be published. However, the Government has announced it will publish a Social Justice Green Paper in 2017."}
      , "date" : {"_value" : "2017-02-01T17:44:26.0309922+00:00", "_datatype" : "dateTime"}
      , "description" : ["This briefing has been prepared ahead of second reading on the Child Poverty in the UK (Target for Reduction) Bill 2016-17, scheduled to occur on 3 February 2017. This Bill is a Private Members\u2019 Bill (Ballot Bill), sponsored by Dan Jarvis MP."], "identifier" : {"_value" : "CBP-7891"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/17113", "prefLabel" : {"_value" : "Economic Policy and Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Child Poverty in the UK (Target for Reduction) Bill, 2016-17", "topic" : [{"_about" : "http://data.parliament.uk/terms/95637", "prefLabel" : {"_value" : "Incomes and poverty"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/682493", "abstract" : {"_value" : "New breeding techniques have developed rapidly in recent years, allowing plant breeders to introduce new, or modify existing, traits. There is debate over whether some of these techniques constitute genetic modification (GM) as defined in EU Directive 2001/18 and are thus subject to the various EU GM regulations. This note outlines some of the new techniques, their applications and the regulatory challenges they raise."}
      , "date" : {"_value" : "2017-02-01T17:05:12.0325431+00:00", "_datatype" : "dateTime"}
      , "description" : ["This note outlines some of the new plant breeding techniques developed recently and looks at their applications and the regulatory challenges they raise"], "identifier" : {"_value" : "POST-PN-0548"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/61081", "prefLabel" : {"_value" : "POST"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/61081", "prefLabel" : {"_value" : "POST"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/346721", "prefLabel" : {"_value" : "POSTnotes"}
      }
      , "title" : "New Plant Breeding Techniques", "topic" : [{"_about" : "http://data.parliament.uk/terms/95481", "prefLabel" : {"_value" : "Agriculture"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95608", "prefLabel" : {"_value" : "Food"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95618", "prefLabel" : {"_value" : "Genetics"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95737", "prefLabel" : {"_value" : "Research and innovation"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/682491", "abstract" : {"_value" : "What is 'Helen's Law'?\n \n\u2018Helen\u2019s Law\u2019 refers to a proposal that the law should be changed to prohibit the release on parole of offenders who were convicted of murder and have failed to reveal the location of the body of their victim.\n \nThe campaign for \u2018Helen's Law\u2019 is led by Marie McCourt whose daughter, Helen, was murdered in 1988. Ian Simms, who was convicted of Helen\u2019s murder, has to date not revealed the location of her body.\n \nThe change.org petition calling for Helen\u2019s Law has been presented to the Government by Marie McCourt, and has over 390,000 signatures.\n \nThe Ten Minute Rule Bill\n \nConor McGinn introduced the Unlawful Killing (Recovery of Remains) Bill 2016-17  under the \"Ten Minute Rule\".  It was given a first reading on 11 October 2016. \n \nAmongst other proposals, the Bill would deny parole to murderers for as long as they refuse to disclose the whereabouts of their victim\u2019s remains.\n \nThe Bill has not yet been published.  In theory, it is due to receive its Second Reading on 3 February 2017,  but it may well not be reached.  Mr McGinn has called for the Government to support his proposal or incorporate it into its legislative programme.\n \nThe Government's response\n \nThe Government has written to the Parole Board asking it to review its guidelines on the issue. This is part of a wider review of Parole Board guidance, the results of which have not yet been published. The Government also points out that courts and the Parole Board already take refusal to reveal the location of victims\u2019 remains into account in sentencing and parole decisions."}
      , "date" : {"_value" : "2017-02-01T16:33:43.7709473+00:00", "_datatype" : "dateTime"}
      , "description" : ["\u2018Helen\u2019s Law\u2019 refers to a proposal that the law should be changed to prohibit the release on parole of offenders who were convicted of murder and have failed to reveal the location of the body of their victim. A petition to change the law has received 390,000 signatures. This Briefing Paper looks the proposal and the Government's response."], "identifier" : {"_value" : "CBP-7890"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "\"Helen's Law\" - Parole for murderers who conceal the whereabouts of their victims' remains", "topic" : [{"_about" : "http://data.parliament.uk/terms/95541", "prefLabel" : {"_value" : "Criminal law"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95720", "prefLabel" : {"_value" : "Prisons"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/682488", "abstract" : {"_value" : "Announcement of the Family Test\n \nDavid Cameron announced the introduction of the Family Test in a speech in August 2014:\n \n I said previously that I wanted to introduce a family test into government. Now that test is being formalised as part of the impact assessment for all domestic policies. Put simply that means every single domestic policy that government comes up with will be examined for its impact on the family. \n \nDWP Guidance\n \nIn October 2014 the Department for Work and Pensions (DWP) published guidance on implementing the Family Test.  The Test consists of five questions policy makers need to consider:\n \n What kinds of impact might the policy have on family formation? What kind of impact will the policy have on families going through key transitions such as becoming parents, getting married, fostering or adopting, bereavement, redundancy, new caring responsibilities, or the onset of a long-term health condition? What impacts will the policy have on all family members\u2019 ability to play a full role in family life, including with respect to parenting and other caring responsibilities? How does the policy impact families before, during and after couple separation? How does the policy impact those families most at risk of deterioration of relationship quality and breakdown? \n \nThe application of the Family Test must be documented and the guidance asks Departments to consider publishing the outcomes but it is not a requirement. Very few Family Tests have been published to date.\n \nImplementation of the Family Test\n \nMPs have asked numerous Parliamentary Questions about how the Test is being implemented, how many assessments have been carried out, and whether assessments will be published.\n \nIn March 2016 Implementing the Family Test: A review of progress one year on was published by The Family and Childcare Trust, Relate, and Relationship Foundation supported by 14 other charities. The organisations had written to 14 relevant Government Departments asking about the guidance they had issued on implementing the Family Test, and assessments they had carried out or published since its introduction in October 2014. The report contains the responses and questions the commitment of some Departments to implementing the Family Test.\n \nCalls for the Family Test to be a statutory requirement\n \nThere have been calls from some MPs, the Centre for Social Justice, and the Relationship Alliance, to make the Family Test a statutory requirement. This was the intention of Caroline Ansell\u2019s Private Member\u2019s Bill (PMB) which was introduced during the 2015-16 Parliamentary Session. The Government has resisted these calls, arguing that it would reduce the Test to a tick box exercise. Priti Patel, the Minister for Employment, set out the Government position during the Second Reading debate on Caroline Ansell\u2019s PMB:\n \n Placing the family test on a legislative footing, however, runs the risk of turning the test into a tick-box exercise across Government Departments, when our ambition is to work across government with Departments to embed the benefits of thinking about policy from a family perspective at all stages of policy development, not just complying with legislative requirements. \n \n "}
      , "date" : {"_value" : "2017-02-01T15:26:27.1351208+00:00", "_datatype" : "dateTime"}
      , "description" : ["The Family Test was introduced in 2014 in England. All new domestic laws and government policies must face the Family Test to make sure they support strong and stable families. The DWP has published departmental advice on carrying out the Family Test. The Family Test is not a statutory requirement and publishing the results is encouraged but not required. Relatively few Family Test results have been published leading to criticism that the policy is not yet successfully embedded in all Government Departments."], "identifier" : {"_value" : "CBP-7714"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "The Family Test", "topic" : [{"_about" : "http://data.parliament.uk/terms/95514", "prefLabel" : {"_value" : "Central government"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95518", "prefLabel" : {"_value" : "Children and families"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/682485", "abstract" : {"_value" : "Alcohol harm encompasses a broad range of health, social, and financial impacts that can affect individuals, families and society as a whole.\n \nPublic Health England published its review on the evidence on the public health burden of alcohol in England in December 2016. This reported that \u201camongst those aged 15 to 49 in England, alcohol is now the leading risk factor for ill-health, early mortality and disability and the fifth leading risk factor for ill-health across all age groups.\u201d\n \nMany indicators of alcohol-related harm have increased in recent years, and those dying from alcohol related disease die over 20 years earlier than the average age of death:\n \n In recent years, many indicators of alcohol-related harm have increased. There are now over 1 million hospital admissions relating to alcohol each year, half of which occur in the lowest three socioeconomic deciles. Alcohol-related mortality has also increased, particularly for liver disease which has seen a 400% increase since 1970, and this trend is in stark contrast to much of Western Europe. In England, the average age at death of those dying from an alcohol-specific cause is 54.3 years. The average age of death from all causes is 77.6 years. More working years of life are lost in England as a result of alcohol-related deaths than from cancer of the lung, bronchus, trachea, colon, rectum, brain, pancreas, skin, ovary, kidney, stomach, bladder and prostate, combined.Despite this burden of harm, some positive trends have emerged over this period, particularly indicators which relate to alcohol consumption among those aged less than 18 years, and there have been steady reductions in alcohol-related road traffic crashes.[1] \n \nThe report highlights the wide ranging impacts of alcohol use- this can affect the individual themselves, their family and children, the local community and wider society. Poorer communities seems to be disproportionately affected by alcohol harm.\n \nA recent report produced by the APPG on Alcohol Harm highlighted the impacts of alcohol harm on the emergency services.  It reported that over 50% of police officers say that alcohol related incidents make up most of their workload, and over 70% of attendances at A&E on a weekend are alcohol related.[2]\n \nThe PHE review reported that the economic burden of alcohol is substantial. Estimates show that the annual cost is between 1.3% and 2.7% of GDP.  It also reports on the difficulties in accurately assessing the impacts of the wide variety of costs- for example there are few studies produced on the costs to people other than the drinker. \n \nThe review proposes a number of local and national policies to tackle alcohol harm. These include controls on prices of alcohol, marketing restrictions and regulating availability.\n \nAn update to the alcohol strategy?\n \nIn their submission to the Backbench Business Committee, the Members tabling the debate said that this could give an opportunity to enquire about an update to the Government\u2019s alcohol strategy.[3]\n \nThe current strategy was published in 2012[4] and focused on targeting binge drinking culture and alcohol related violence.  It committed to a consultation on minimum unit pricing (MUP) on alcohol and to look at a number of other measures to tackle excessive drinking and alcohol-related crime. These included making the mandatory licensing conditions more effective, particularly those regulating irresponsible sales and promotions. More information is provided in the Government webpages on alcohol policy (2010-15) and licencing. The taxation elements of the strategy apply across the UK, but other parts relating to policing, licencing and pricing only apply in England and Wales\n \nThe Scottish Government\u2019s Alcohol Framework for Action was published in 2009, this includes measures aiming to reduce alcohol consumption, and improve treatment and support.[5]  A Scottish Government webpage provides more information on alcohol policy.\n \nInformation about alcohol policy in Northern Ireland is provided on a Department of Health webpage.\n \nParliamentary Question responses have stated that the Government is working to achieve the outcomes in the 2012 strategy and there are no plans to publish an update. [6] \n \nAn October 2016 Parliamentary Question response from the then Parliamentary Under - Secretary of State for Health, Lord Prior of Brampton provides an overview of government policy aimed at reducing admissions to hospital with conditions relating to alcohol use:\n \n The new UK Chief Medical Officers\u2019 Low Risk Drinking Guidelines provide the public with the most up to date scientific information to help people make informed decisions about their own drinking. A copy of the guidelines is attached. The Department and Public Health England (PHE) will be reviewing the advice on higher risk drinking, in light of the new guidelines, at a United Kingdom level through a consensus process in partnership with the Devolved Administrations. PHE is using its One You campaign to motivate people to take steps to improve their health through tackling the main risk factors such as smoking, inactivity, obesity, and alcohol. One You provides a Drinks Tracker app to help drinkers identify risky behaviour and lower their alcohol consumption. Local government has been given the responsibility to improve people\u2019s health. This includes responsibility for tackling problem drinking and commissioning appropriate prevention and treatment services for their local population\u2019s needs. Over the next five years, we will invest more than £16 billion in local government public health services. NHS England\u2019s NHS Five Year Forward View commits the National Health Service to support national action on alcohol. The National Commissioning for Quality and Innovation (CQUIN) payments framework was set up in 2009-10 to encourage services providers to continually improve the quality of care provided to patients and to achieve transparency. To help deliver their commitment to reduce harmful alcohol consumption NHS England has published a CQUIN to incentivise interventions to reduce risky behaviours, and prevent ill health through alcohol and tobacco consumption. This has a number of components, including alcohol screening, brief advice and referral to specialist services. CMO Low Risk Drinking Guidelines (PDF Document, 323.19 KB) [7] \n \nMinimum Unit Pricing\n \nThe UK Government have said that the introduction of minimum unit pricing remains under review pending the \u201coutcome of the legal case between the Scotch Whisky Association and the Scottish Government and the impact of the implementation of this policy in Scotland.\u201d [8]  In May 2012 the Scottish Government passed legislation that would enable it to introduce MUP in Scotland. An intended price of 50p has not yet been implemented as the Scottish Whisky Association is challenging the legislation in the European and Scottish courts.\n \nThe December 2016 PHE evidence review looked at MUP and said that \u201cempirical evidence and modelling studies have shown that setting a minimum price for alcohol can reduce alcohol-related harm while saving health-care costs.\u201d[9]  Following the publication of the PHE review, 43 representatives of medical organisations and charities wrote to the Chancellor of the Exchequer, Phillip Hammond, calling on him to take action in the Budget to address alcohol prices.[10]\n \nFor more information on Minimum Unit Pricing, the Library briefing paper may be useful:\n \nhttp://researchbriefings.parliament.uk/ResearchBriefing/Summary/SN05021\n \nFor more information on alcohol statistics, the Library briefing may be useful:\n \nhttp://researchbriefings.parliament.uk/ResearchBriefing/Summary/CBP-7626\n \n \n \n[1]     PHE, The Public Health Burden of Alcohol and the Effectiveness and Cost-Effectiveness of Alcohol Control Policies An evidence review, December 2016\n \n[2]     APPG on Alcohol harm, The Frontline Battle An Inquiry into the Impact of Alcohol on Emergency Services by the All-Party Parliamentary Group on Alcohol Harm, December 2016\n \n[3]     Backbench Business Committee, MPs debate tackling alcohol harm, 27 January 2017\n \n[4]     The Government\u2019s Alcohol Strategy, 2012\n \n[5]     Scottish Government, Alcohol Framework for Action, 2009\n \n[6]     HC Written Question 12330, Alcoholic Drinks, October 2015\n \n[7]     HL Written Question: HL2376, 31 October 2016\n \n[8]     HL Deb 6 December 2016 c600 \n \n[9]     PHE, The Public Health Burden of Alcohol and the Effectiveness and Cost-Effectiveness of Alcohol Control Policies An evidence review, December 2016\n \n[10]    Letter to the Chancellor of the Exchequer, December 2016"}
      , "date" : {"_value" : "2017-02-01T14:49:59.3519016+00:00", "_datatype" : "dateTime"}
      , "description" : ["This pack has been prepared ahead of the debate to be held in Westminster Hall on Thursday 2 February 2017 at 1.30pm on tackling alcohol harm. The subject for the debate has been selected by the Backbench Business Committee and the debate will be opened by Fiona Bruce MP, Bill Esterson MP and Liam Byrne MP."], "identifier" : {"_value" : "CDP-2017-0041"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Tackling alcohol harm", "topic" : [{"_about" : "http://data.parliament.uk/terms/95484", "prefLabel" : {"_value" : "Alcoholism"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95619", "prefLabel" : {"_value" : "Health education and preventive medicine"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/682475", "abstract" : {"_value" : "What is Openreach?\n \nOpenreach is the infrastructure division of BT Group established in 2006. The BT Group comprises a number of other lines of business, including Consumer and Business and Public Sector (each selling and providing broadband and fixed voice services to the end consumer). \n \nThe current \u2018functional separation\u2019 of Openreach took place after Ofcom\u2019s Telecoms Strategic Review in 2005. At that time Ofcom accepted a series of binding undertakings from BT, which involved the establishment of Openreach as a functionally separate unit, instead of referring BT to the Competition Commission, which could have recommended that the company was split up. This approach took the parts of BT\u2019s operations described as a \u2018natural monopoly\u2019 \u2013 including the access and backhaul infrastructure \u2013 and created a new company unit with separate management and incentive structures.\n \nOpenreach is responsible for installing and maintaining the UK\u2019s main telecoms network used by all telecoms providers, including BT's retail divisions. This means that Openreach does not sell phone, broadband or TV services direct to retail customers. Instead, it works on behalf of service providers (such as Sky, TalkTalk and BT) to maintain the local access network that covers retail customers. More information is available on Openreach\u2019s webpage Openreach explained.\n \nWhat is Ofcom?\n \nOfcom is the communications regulator in the UK. This means that it regulates the fixed-line telecoms, mobile, TV, radio, video-on-demand, postal services and the airwaves over which wireless devices operate.\n \nOfcom\u2019s principal statutory duty is to further the interests of citizens and consumers, including (where appropriate) by promoting competition. This is set out in the Communications Act 2003 as follows:\n \n Section 3(1): \"It shall be the principal duty of Ofcom, in carrying out their functions; (a) to further the interests of citizens in relation to communications matters; and (b) to further the interests of consumers in relevant markets, where appropriate by promoting competition. \n \nMore information is available on Ofcom\u2019s webpage What is Ofcom?\n \nOfcom review: legal separation of Openreach from the BT Group\n \n2015: Strategic Review of Digital Communications\n \nIn March 2015, Ofcom announced a Strategic Review of Digital Communications, which focused on five main areas, including the increased independence of Openreach from BT Group .\n \nThis was followed by a discussion document in July 2015 and the publication of Ofcom\u2019s Initial conclusions from the Strategic Review of Digital Communications in February 2016.\n \nIn its initial conclusions, Ofcom set out concerns that BT Group\u2019s current model of functional separation failed to remove sufficiently BT\u2019s ability to discriminate against retail competitors, meaning that the risks to competition remained and continuing the status quo was not an option.\n \nFor detailed information and an overview of Ofcom\u2019s strategy at that time, please see Ofcom\u2019s Initial conclusions from the Strategic Review of Digital Communications (pg 60 onwards).\n \nJuly 2016: consultation on strengthening Openreach's independence\n \nIn July 2016, Ofcom set out its concern that as BT Group ran the national network (through Openreach) as well as its own retail business, BT had the incentive and ability to favour its own retail business when making strategic decisions about new network investments by Openreach. This was accompanied by a consultation on Strengthening Openreach\u2019s strategic and operational independence. The consultation was responded to by about 94,000 people (some 90,000 of which were identical responses generated by an online campaign).\n \nThe main concerns and calls for action related to:\n \n Calling for action to improve the UK\u2019s telecoms infrastructure, including the full, structural separation of BT retail from Openreach; Concerns about slow broadband speeds; Concerns about the availability of fibre broadband; Concerns about the quality of service from major service providers. \n \nBT\u2019s voluntary proposals were published alongside the July 2016 Ofcom Consultation.\n \nAll non-confidential responses to the consultation were also published.\n \nNovember 2016: formal notification to require legal separation of Openreach from BT\n \nOn 29 November 2016, Ofcom announced that it would proceed with a formal notification to require the legal separation of Openreach from BT as BT had \u201cfailed to offer voluntary proposals that address our [Ofcom\u2019s] competition concerns\u201d.\n \nThe competition concerns broadly related to creating a more independent Openreach which works in the interests of all providers, without favouring BT. Ofcom summarised its proposals as follows:\n \n Our current view is still that an effective and robust form of legal separation, with Openreach as a wholly-owned subsidiary of BT, is likely to achieve the greatest improvements for everyone in the shortest amount of time. Therefore, this is the approach with which we are minded to proceed. Our model will include proposals to publicly scrutinise and monitor its effectiveness against several measures of success. The most direct will be whether Openreach Board decisions are taken independently, without undue influence from BT Group. If Ofcom\u2019s monitoring suggests that legal separation is not delivering sufficient benefits for the wider telecoms industry and its customers, we will return to the question of structural separation \u2013 fully breaking up the companies. \n \nDetailed information on the background to this announcement, including Ofcom\u2019s views and proposals are available in the Ofcom press release (29 November 2016).\n \nGovernment view\n \nA PQ response in December 2016 provided the following view from Government on this announcement:\n \n Ofcom has now announced how it plans to implement its recommendations for the relationship between BT Group and Openreach. We are clear that a more independent Openreach is needed to benefit consumers and the UK\u2019s digital infrastructure. We welcome Ofcom\u2019s determination to tackle these issues, to give certainty to consumers, industry and investors in the UK\u2019s broadband infrastructure to improve service and the level of investment. \n \nNext steps\n \nThe planned action requires notification to the European Commission and further progress is expected in 2017. In November 2016, Ofcom noted:\n \n We remain open to further voluntary proposals from BT that address these outstanding concerns. However, we are now preparing a notification to the European Commission to require the changes to increase Openreach\u2019s independence. We have already discussed this with the European Commission and expect to consult publicly on a submission to the Commission in the early part of next year. We then intend to proceed quickly to submit a detailed plan to the Commission and, subject to its decision, implement the reforms of Openreach so the UK can benefit as soon as possible.  "}
      , "date" : {"_value" : "2017-02-01T09:59:18.1271998+00:00", "_datatype" : "dateTime"}
      , "description" : ["A House of Commons Library summary of the proposed separation of BT and Openreach, following the Ofcom announcement in November 2016 that it would proceed with a formal notification to require the legal separation of Openreach from BT Group."], "identifier" : {"_value" : "CBP-7888"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/67716", "prefLabel" : {"_value" : "Science and Environment Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "BT and Openreach", "topic" : [{"_about" : "http://data.parliament.uk/terms/95766", "prefLabel" : {"_value" : "Telecommunications"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/681490", "abstract" : {"_value" : "The International Day of Zero Tolerance for Female Genital Mutilation aims to raise awareness of the practice and work towards the elimination of female genital mutilation, which is recognized internationally as a violation of the human rights of girls and women; reflects deep-rooted inequality between the sexes, and constitutes an extreme form of discrimination against women. In July 2014, the UK and UNICEF co-hosted the first Girl Summit, aimed at mobilising domestic and international efforts to end FGM within a generation. FGM has been a criminal offence in the UK since the Prohibition of Female Circumcision Act 1985 (later replaced by the Female Genital Mutilation Act 2003). Despite it being a criminal offence, the first criminal prosecution did not take place until 2014 when a doctor was alleged to have performed FGM, but acquitted after trial. The House of Commons Home Affairs Committee\u2019s latest report, Female Genital Mutilation: Abuse Unchecked, 15 September 2016, makes recommendations to encourage more successful prosecutions."}
      , "date" : {"_value" : "2017-01-31T16:41:35.1774284+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Lords Library Briefing provides background information on the United Nations International Day of Zero Tolerance for Female Genital Mutilation."], "identifier" : {"_value" : "LIF-2017-0012"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414041", "prefLabel" : {"_value" : "Lords In Focus"}
      }
      , "title" : "International Day of Zero Tolerance for Female Genital Mutilation, 6 February 2017", "topic" : [{"_about" : "http://data.parliament.uk/terms/95479", "prefLabel" : {"_value" : "Africa"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95497", "prefLabel" : {"_value" : "Asia"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95540", "prefLabel" : {"_value" : "Crimes of violence"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95635", "prefLabel" : {"_value" : "Human rights"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95747", "prefLabel" : {"_value" : "Sexual offences"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/681453", "abstract" : {"_value" : "There has been rising international concern over the declining population of African savanna elephants. In the UK, the Government announced plans to ban the sale of \u2018worked\u2019 ivory produced since 1947 in September 2016. Internationally, the Conference of Parties to the Convention on International Trade in Endangered Species of Wild Flora and Fauna (CITES) accepted a non-binding resolution to phase out domestic ivory markets in October 2016.\n \nE-petition: Shut down the domestic ivory market in the UK\n \nAn e-petition on Parliament\u2019s website with over 100,000 signatures calls on the Government to \u2018Shut down the domestic ivory market in the UK\u2019:\n \n The Conservatives pledged to shut down the UK\u2019s domestic ivory market in their manifesto for the past two elections. 30,000 African Elephants are slaughtered a year for their tusks yet, the government has still not outlawed the trade. From 2009 to 2014, 40% of UK customs seizures were ivory items. Many African nations, the US, France and even China have committed to outlawing the markets. There are only around 450,000 African Elephants left, in another six years there will be almost half this amount if governments continue to turn a blind eye; the UK are putting Elephants at risk from extinction. If there were not a market, then the elephants would no longer be in danger. The UK needs to set an example that the only tusks of value are those on a live Elephant, before they cease to exist. \n \nOn 17 January 2017, the Petitions Committee decided to schedule a debate in Westminster Hall on the motion \u201cThat this House has considered e-petition 165905 relating to the domestic ivory market in the UK\u201d on Monday 6 February 2017 at 4.30pm.\n \nSavanna elephant population\n \nThe \u201csharp upward trend\u201d in poaching since the mid-2000s is thought to have peaked in 2011. However, between 2007 and 2014 the savanna elephant population declined by 30 percent, largely due to poaching. A recent census of the savanna elephant population found that \u201celephants are struggling both inside and outside parks.\u201d\n \n1989 ban on international ivory trade\n \nAn international agreement in 1989 to effectively ban international trade in ivory was brought in under the CITES. This agreement listed African elephant ivory on Appendix I to the Convention, meaning trade in ivory was limited to \u201cexceptional circumstances.\u201d This did not affect legal domestic markets, which were allowed to continue\u2014and did so in many countries.\n \nThe Control of Trade in Endangered Species (Enforcement) Regulations 1997 (as amended) enforces CITES in the UK and provides for criminal offences. Under the regulations, the maximum penalty upon conviction is a two year prison sentence, a level five fine (£5,000), or both.\n \nUK ban on modern day ivory sales\n \nOn 21 September 2016, the Government announced plans to ban the sale of \u2018worked\u2019 ivory produced since 1947. Ornaments and works of art dating prior to 1947 are classified as \u2018antique\u2019 and trade in them will be permitted. DEFRA plan to consult with environmental groups, industry and other relevant parties to establish how and when such a ban could be introduced, as well as any necessary exemptions \u201cearly in 2017\u201d.\n \nThe Government has been criticised by several conservation groups for not going far enough in the ban.\n \nInternational actions\n \nIn October 2016, the 17th CITES Conference of Parties accepted a non-binding resolution to phase out domestic ivory markets. This was praised by conservation groups, such as the Wildlife Conservation Society (WCS).\n \nIn September 2015, then US President Barack Obama and China\u2019s President Xi Jinping together pledged to enact \u201cnear complete bans\u201d on the import and export of ivory. In June 2016 the US Government introduced new regulations and at the end of 2016, China announced that it would introduce a ban on all ivory trade and processing activities by the end of 2017.\n \nFrance is another country which has recently introduced a \u201cnear complete ban\u201d on ivory trading.\n \nCommons Library Briefing Paper\n \nFor further information, please see the Commons Library Briefing Paper CBP7875: Trade in ivory: UK and international policy and regulation (pdf)."}
      , "date" : {"_value" : "2017-01-31T13:19:22.5458263+00:00", "_datatype" : "dateTime"}
      , "description" : ["The Petitions Committee have scheduled a debate in Westminster Hall on Monday 6 February 2017 at 4.30pm on the motion \u201cThat this House has considered e-petition 165905 relating to the domestic ivory market in the UK\u201d.\nLuke Hall MP, a member of the Petitions Committee, will lead the debate.\nPetition to Parliament and Government Response from DEFRA (Department for Environment, Food and Rural Affairs):\nhttps://petition.parliament.uk/petitions/165905"], "identifier" : {"_value" : "CDP-2017-0034"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Domestic Ivory Market in the UK", "topic" : [{"_about" : "http://data.parliament.uk/terms/95479", "prefLabel" : {"_value" : "Africa"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95489", "prefLabel" : {"_value" : "Animal welfare"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95490", "prefLabel" : {"_value" : "Animals"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95538", "prefLabel" : {"_value" : "Crime"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95593", "prefLabel" : {"_value" : "Europe"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95649", "prefLabel" : {"_value" : "International organisations"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95650", "prefLabel" : {"_value" : "International politics and government"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95651", "prefLabel" : {"_value" : "International trade"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95759", "prefLabel" : {"_value" : "Standards"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/681452", "abstract" : {"_value" : "World Cancer Day has been marked on 4 February each year since 2000, when it was established at the World Summit Against Cancer for the New Millennium held in Paris that year. It is an initiative of the Union for International Cancer Control (UICC), a membership organisation of over 950 organisations in more than 150 countries that works to reduce the global cancer burden, promote greater equity and integrate cancer control into the world health and development agenda. The initiative is supported by the World Health Organisation (WHO) and International Agency for Research on Cancer (IARC).\n \nThe theme for World Cancer Day 2016\u201318 is \u2018We can. I can\u2019. The UICC has stated that events taking place in this cycle will explore how \u201ceveryone\u2014as a collective or as individuals\u2014can do their part to reduce the global burden of cancer\u201d.\n \nIn 2016, the United Nations outlined the following information as part of its campaign to support the World Cancer Day initiative: \n \n Cancer is a leading cause of death worldwide, accounting for 8.2 million deaths in 2012. Lung, stomach, liver, colon and breast cancer cause the most cancer deaths each year. The most frequent types of cancer differ between men and women. About 30 percent of cancer deaths are due to the five leading behavioural and dietary risks: high body mass index, low fruit and vegetable intake, lack of physical activity, tobacco use, alcohol use. Tobacco use is the most important risk factor for cancer causing 22 percent of global cancer deaths and 71 percent of global lung cancer deaths. Cancer causing viral infections such as HBV/HCV and HPV are responsible for up to 20 percent of cancer deaths in low and middle income countries. About 70 percent of all cancer deaths in 2008 occurred in low and middle income countries. Deaths from cancer worldwide are projected to continue rising, with an estimated 13.1 million deaths in 2030. \n \nThe most recent statistical bulletin on cancer registration statistics published by the Office for National Statistics included the following main findings relating to cancer registrations in England in 2014: \n \n The number of new cancer registrations in England was 296,863 in 2014; an increase of 4,183 registrations from the same point in 2013. More cancers were registered in males (150,832) than females (146,031). Across the majority of cancer sites more males are diagnosed with cancer than females. This is a persistent feature of the data, reported in previous registration years. The age-standardised incidence rates for newly diagnosed cancers were 670.8 per 100,000 males and 546.1 per 100,000 females. The rate takes into account the different age structures between males and females. Breast (15.6 percent), prostate (13.4 percent), lung (12.6 percent) and colorectal (11.5 percent) cancer continue to account for over half of the malignant cancer registrations in England for all ages combined. Cancer is a disease of the elderly, as approximately 12 percent of the population are aged 70 and above and account for 50.2 percent of the total cancers registered in 2014. Generally, the cancer incidence rates increase over time, while mortality rates decrease, reflecting the general increase in cancer survival as reported in the latest cancer survival estimates."}
      , "date" : {"_value" : "2017-01-31T13:06:13.1762073+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Lords Library briefing provides information on World Cancer Day, marked on 4 February each year, and recent estimates of the incidence of cancer both globally and in England."], "identifier" : {"_value" : "LIF-2017-0011"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414041", "prefLabel" : {"_value" : "Lords In Focus"}
      }
      , "title" : "World Cancer Day, 4 February 2017", "topic" : [{"_about" : "http://data.parliament.uk/terms/95554", "prefLabel" : {"_value" : "Diseases"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95619", "prefLabel" : {"_value" : "Health education and preventive medicine"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/681451", "abstract" : {"_value" : "The House of Lords Reform Bill [HL] is a private member\u2019s bill introduced by Baroness Jones of Moulsecoomb (Green Party). The Bill received its first reading on 26 May 2016 and is scheduled to receive its second reading on 3 February 2017. The Bill seeks to exclude excepted hereditary peers from the House of Lords, and would introduce regional elections to select 292 Members to sit and vote in the House. These elected Members would serve eight-year terms, with half being elected every four years. The Bill would not change the right of life peers and Lords Spiritual to sit and be appointed to the House, but would remove their right to vote. Setting out the purpose of the Bill, Baroness Jones stated:\n \n Democratic reform of the House of Lords is leftover business from the 1999 House of Lords Act and has been attempted in each of the last three parliaments. In addition, it is promised by all the main political parties and will be inevitable within the next 5 to 15 years. My Bill gives the present House of Lords the chance to design its own reform, rather than having something imposed upon it by a future House of Commons. It would introduce elected members and remove the remaining hereditary peers, but would allow all life peers and bishops to remain as non-voting members of the reformed House with all their other rights and privileges intact."}
      , "date" : {"_value" : "2017-01-31T13:02:19.7062498+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Lords Library briefing provides information in support of the House of Lords consideration of the House of Lords Reform Bill [HL]."], "identifier" : {"_value" : "LIF-2017-0010"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414041", "prefLabel" : {"_value" : "Lords In Focus"}
      }
      , "title" : "House of Lords Reform Bill [HL]: Briefing for Lords Stages", "topic" : [{"_about" : "http://data.parliament.uk/terms/95628", "prefLabel" : {"_value" : "House of Lords"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95675", "prefLabel" : {"_value" : "Members of the Lords"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/681450", "abstract" : {"_value" : "The Prevent strategy, part of the Government\u2019s wider counter-terrorism strategy CONTEST, seeks to deal with those individuals and groups promoting division and hatred, and with the factors that predispose individuals or groups to respond to terrorist ideologies. Inherited from the previous Labour Government, the strategy was recast in 2011 under the Coalition Government in order to separate out the community based integration work from the more direct counter-terrorism activities. Under Prevent public sector organisations are subject to a duty to prevent people from being drawn into terrorism. This duty was recently placed on a statutory footing by the Counter-Terrorism and Security Act 2015, together with guidance setting out how different sectors should play their part in implementing the strategy.\n \nPrevent has been the subject of criticism and the decision to impose a statutory duty on public sector organisations has been particularly controversial. \n \n "}
      , "date" : {"_value" : "2017-01-31T12:55:49.77424+00:00", "_datatype" : "dateTime"}
      , "description" : ["A Westminster Hall debate on the Implementation of the Prevent Strategy has been scheduled for 1430hrs on Wednesday 1 February 2017."], "identifier" : {"_value" : "CDP-2017-0036"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Implementation of the Prevent Strategy", "topic" : [{"_about" : "http://data.parliament.uk/terms/95583", "prefLabel" : {"_value" : "Ethnic groups"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95740", "prefLabel" : {"_value" : "Schools"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95767", "prefLabel" : {"_value" : "Terrorism"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/681448", "abstract" : {"_value" : " \n \nThe European Commission defines environmental crime as \u201cacts that breach environmental legislation and cause significant harm or risk to the environment and human health\u201d. However, there is no universally agreed definition. It has been linked to other types of serious crime, including the drugs and arms trade, human trafficking, and, according to Interpol, the funding of terrorist organisations. Environmental crimes are often considered a low priority by governments, as effects are generally indirect. Europol has identified two primary categories of environmental crime in Europe:\n \n Waste crime, which covers improper disposal of waste in breach of national or international law. Wildlife crime, which covers harm to wildlife within that country, as well as the illegal wildlife trade, which is any trade in prohibited wildlife or plant material. \n \nEnvironmental crime also incorporates illegal resource extraction - including fishing - pollution, and fraud around sustainability and carbon trading permits. Other crimes may be more significant outside of the EU. UK law on aspects of both of these crimes is derived from transnational treaties that are written into EU law. Wildlife and waste crime are the focus of this POSTnote.\n \nKey points in this POSTnote include:\n \n Environmental crime undermines the ability of governments to manage their resources. The two main crime types in Europe are waste and wildlife crime, which are high profit and low risk for criminals. Measures to address environmental crime are under resourced in comparison to other types of crimes worldwide. Preventing and prosecuting environmental crimes can be challenging because of difficulties in detection, law enforcement, and prosecution. It is currently unclear whether the UK will transpose relevant EU legislation into UK law after Brexit, or simply become a signatory of the related international treaties. \n \nAcknowledgements\n \nPOSTnotes are based on literature reviews and interviews with a range of stakeholders and are externally peer reviewed. POST would like to thank interviewees and peer reviewers for kindly giving up their time during the preparation of this briefing, including:\n \n Professor Richard MacRory, UCL* Daniel Challender, IUCN Pangolin specialist group * Fiona Underwood, University of Reading * Gareth Enticott, Cardiff University* Alison Hoare, Chatham House Andrew Plumptre, WCS Andrew Lemieux, NSCR* Joanna Hill, UCL Ray Purdy, Space Evidence* Lisa Tompson, UCL Rosaleen Duffy, University of Sheffield* Lorraine Elliot, ANU Tanya Wyatt, Northumbria University* Jim Baird, Glagow Caledonian University Davyth Stewart \u2013 Interpol * Elizabeth Mrema \u2013 UNEP Roux Raath, WCO Martin Sims, Chief Inspector, NWCU * Carl Brunch INECE Miroslav Angelov, European Commission* David Read, DEFRA* Mark Moseley, MET police* Paul Ballinger, DEFRA* Juliette Young, CEH Colin Church, CIWM* Werner Gowitzke, Europol* Laith Yaseen, EA Matthew Markus, Pembient Madelon Willemsen, TRAFFIC Sam Corp, ESA* Nicola Cunningham, EA* Bob Mead, EA* Neil Douglas, RSPB* Bob Elliot, RSPB \n \n*Denotes people who acted as external reviewers of the briefing."}
      , "date" : {"_value" : "2017-01-31T11:02:44.0307458+00:00", "_datatype" : "dateTime"}
      , "description" : ["Environmental crime is generally used to describe any illegal activity that harms the environment. It can also have serious human health and social impacts. This POSTnote outlines the different types of environmental crime and options for tackling them."], "identifier" : {"_value" : "POST-PN-0547"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/61081", "prefLabel" : {"_value" : "POST"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/61081", "prefLabel" : {"_value" : "POST"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/346721", "prefLabel" : {"_value" : "POSTnotes"}
      }
      , "title" : "Environmental Crime", "topic" : [{"_about" : "http://data.parliament.uk/terms/95489", "prefLabel" : {"_value" : "Animal welfare"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95506", "prefLabel" : {"_value" : "Biodiversity"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95538", "prefLabel" : {"_value" : "Crime"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95581", "prefLabel" : {"_value" : "Environmental protection"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95688", "prefLabel" : {"_value" : "Nature conservation"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95767", "prefLabel" : {"_value" : "Terrorism"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95777", "prefLabel" : {"_value" : "Waste management"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95782", "prefLabel" : {"_value" : "Wildlife"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/681446", "abstract" : {"_value" : "The Armed Forces Covenant is a statement of the moral obligation which exists between the nation, the Government and the Armed Forces. It was published in May 2011 and its core principles were enshrined in law, for the first time, in the Armed Forces Act 2011. It applies to all three services.\n \nThe Covenant articulates the view that the nation has a moral obligation to members of the Armed Forces Community in return for the sacrifices they make. Specifically, the Covenant outlines two core principles:\n \n No disadvantage: no current or former member of the armed forces, or their families, should be at a disadvantage compared to other citizens in the provision of public and commercial services. Special consideration: special consideration is appropriate in some cases, particularly for those who have been injured or bereaved. \n \nThe Armed Forces Act 2011 does not create legally enforceable rights for Service personnel but it does require the Secretary of State for Defence to report to Parliament each year on the progress made with respect to the Covenant.\n \nOn 15 December 2016 the Government published its latest annual report on the Armed Forces Covenant. It highlights all of those areas where progress has been achieved over the last year and outlines some key priorities for the future, including the delivery of contracted veteran\u2019s mental health services in England from 2017 and publishing the outcome of research into the support provided to the families of Reservists."}
      , "date" : {"_value" : "2017-01-31T10:28:38.3202569+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Debate Pack has been prepared ahead of the 'General debate on the Armed Forces Covenant Report 2016', to be held on Thursday 2 February."], "identifier" : {"_value" : "CDP-2017-0039"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/37362", "prefLabel" : {"_value" : "International Affairs and Defence Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "General debate on the Armed Forces Covenant Report 2016", "topic" : [{"_about" : "http://data.parliament.uk/terms/95492", "prefLabel" : {"_value" : "Armed forces"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95551", "prefLabel" : {"_value" : "Defence policy"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/679851", "abstract" : {"_value" : "The European Union (Notification of Withdrawal) Bill was published on 26 January 2017 and will be debated in the House of Commons from 31 January to 8 February 2017. This House of Commons Library briefing paper analyses the Bill and its context; the current version includes new information on Euratom and on the proposed amendments. \n \nWhat does the Bill do?\n \nThe Bill offers Parliament its first opportunity to give legal effect to the result of the 23 June 2016 referendum, in which 52% of those who voted called for the UK to leave the EU.\n \nThe Bill is very short: its one operative clause would provide the UK Government with the legal authority to issue notice to the European Council, under Article 50 of the Treaty on European Union (TEU), that the UK has decided to withdraw from the EU.\n \nBut it would start a process that would require the UK to enact much more legislation for when the EU Treaties no longer apply to the UK.\n \nThe Government considers that the Bill would also allow the Prime Minister to trigger withdrawal from the European Atomic Energy Community (Euratom), although whether that would happen automatically at the same time as EU withdrawal is unclear.\n \nThe Government is hoping that the Bill will become law in time for it to meet its deadline of 31 March 2017 for triggering Article 50, and so it has fast-tracked the Bill.\n \nIs it \u201cbombproof\u201d?\n \nThe Government has drafted the Bill very tightly, which makes it hard for changes to be made that might, for instance, delay or subvert the Government\u2019s plans for Brexit.\n \nBut there has nevertheless been much discussion about possible amendments. Several have already been tabled, for instance to require the Government to provide information to Parliament on the negotiations, and to require Parliament\u2019s approval before the Government concludes a withdrawal agreement. Some Members are seeking to prevent the Bill from even passing its second reading, on various grounds.\n \nWhy is the Bill needed?\n \nThe Bill is the Government\u2019s response to the Supreme Court\u2019s judgment in the case of Miller, given on 24 January 2017. The Supreme Court ruled, by a majority of 8 to 3, that it would not be legal for the Government to use prerogative powers to issue the Article 50 notice: instead, primary legislation was required.\n \nThe central reason for the ruling was that giving notice inevitably triggers major changes to domestic law at the end of the two-year exit negotiation period stipulated by Article 50. This is because the EU Treaties would then no longer apply in the UK, whatever legislation was enacted in Parliament. Such a momentous change to the UK\u2019s constitutional arrangements, the Court decided, could not be brought about \u201cby ministerial action alone\u201d. The authority of primary legislation is required before the Government can take that action.\n \nThis Bill, if it is passed, will represent Parliament\u2019s authorisation for the UK to leave the European Union. The majority judgment outlined that the form of the legislation is \u201centirely a matter for Parliament\u201d. The joint view of the eight justices of the Court was the length of the statute bears no relevance to its constitutional importance, and that the decision to opt for a very short Bill, would not \u201cundermine its momentous significance\u201d.\n \nThe majority added that the European Referendum Act 2015 did not provide the legislative authority for the Government to give effect to the decision to leave the EU taken in the June 2016 referendum.\n \nHow else could Parliament be involved?\n \nThere are many other opportunities for Parliamentary involvement in Brexit, with varying implications, at different stages \u2013 before triggering Article 50; whilst amending domestic law for when the EU Treaties no longer apply; when scrutinising the withdrawal negotiations; and on conclusion of a withdrawal agreement:\n \n The Government has agreed to publish a White Paper on its negotiating strategy, although when and what it will contain are not clear, as well as to hold a number of Parliamentary debates before triggering Article 50. This Bill represents the first of many changes to the statute book that will need to be made in order to give legal effect to the decision to leave the EU. Legislating for Brexit, through both primary and secondary legislation, is likely to be a multi-stage project. The next stage will be The Great Repeal Bill, which may also be followed by further consequential primary and secondary legislation. This activity will all need to be coordinated with the process of negotiating the terms of the UK\u2019s withdrawal with the EU under Article 50. Both of those processes can only begin once this Bill is passed and the notification of the decision to leave is provided. The Secretary of State for Exiting the EU, David Davis, has committed to ensuring that Members of Parliament are \u201cat least as well informed as the European Parliament (EP) as negotiations progress\u201d. It is not yet clear how well-informed the EP will be, but under an inter-institutional agreement with the European Commission, it has for instance been granted access to the \u201cconsolidated negotiating texts\u201d of the Trans-Atlantic Trade and Investment Partnership (TTIP) negotiations. The Government has also agreed to put the final withdrawal agreement to a vote in both Houses of Parliament before it comes into force. However, the implications of a \u2018no\u2019 vote are unclear, and Parliament is unlikely to be able to recommend changes to the agreement at that point. \n \nBy way of comparison, the UK\u2019s three bids to join the then European Economic Community (EEC) in the 1960s and early 1970s gave rise to six Government Papers on the legal, constitutional, historic, political, social and economic aspects of EEC membership. There were several days of debate on the principle of joining the Community, as well as debates on White Papers and the European Communities Bill itself.\n \nCould the Article 50 notice be revoked?\n \nThe UK Courts have not ruled on whether notice given under Article 50 can be revoked.\n \nIf notice is irrevocable, authorising the Government to issue it would effectively commit Parliament to approving the final withdrawal agreement, seeking a renegotiation if practicable, or leaving the EU without any agreement.\n \nA case in the Irish High Court might lead to a reference to the Court of Justice of the EU on whether Article 50 notice can be revoked. There is still the possibility of the UK courts making such a referral.\n \nWhat about withdrawing from the EEA?\n \nWhen withdrawing from the EU, the Government also intends to withdraw from the single market and the European Economic Area. But questions have been raised about how this might be done.\n \nAnother legal case is seeking to determine whether legislation similar to this Bill is also needed to leave the EEA, which has its own withdrawal process.\n \nDevolution issues\n \nThe Supreme Court decided unanimously in the Miller case that the devolved legislatures do not have a legal power to block the Government from triggering Article 50.\n \nThe Government has said the current Bill does not require a legislative consent motion. But Scotland\u2019s First Minister, Nicola Sturgeon, has said that her government would nevertheless table one, in order to give the Scottish Parliament a symbolic vote on triggering Article 50.\n \nThe Secretary of State for Scotland has suggested that a legislative consent motion would be sought for the Great Repeal Bill."}
      , "date" : {"_value" : "2017-01-30T18:01:17.4676914+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Library briefing analyses the short Bill that offers Parliament its first opportunity to give legal effect to the result of the EU referendum by providing the UK Government with authority to trigger Article 50 on leaving the EU."], "identifier" : {"_value" : "CBP-7884"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/37362", "prefLabel" : {"_value" : "International Affairs and Defence Section"}
      }
      , {"_about" : "http://data.parliament.uk/terms/61055", "prefLabel" : {"_value" : "Parliament and Constitution Centre"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "European Union (Notification of Withdrawal) Bill", "topic" : [{"_about" : "http://data.parliament.uk/terms/95552", "prefLabel" : {"_value" : "Devolution"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95590", "prefLabel" : {"_value" : "EU institutions"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95591", "prefLabel" : {"_value" : "EU law and treaties"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95648", "prefLabel" : {"_value" : "International law"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95659", "prefLabel" : {"_value" : "Legislative process"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95692", "prefLabel" : {"_value" : "Nuclear power"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95703", "prefLabel" : {"_value" : "Parliament"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/528710", "abstract" : {"_value" : "Following a declining trend between 2005 and 2012, the proportion of men and women drinking in the past week in Great Britain has remained stable over the past three years of available data.\n \nMen continue to be more likely to drink than women and young adults drink less frequently than older age groups. However, young adults are more likely to exceed daily benchmarks regarding alcohol consumption.\n \nIn 2014, 8% of children aged 11-15 in England drank alcohol in the last week; this was the lowest level recorded since a peak of 27% in 1996. Most pupils who drank in the last week had done so on one or two days (63% and 25% respectively). On the days they did drink, 45% drank more than four units of alcohol on average.\n \nAlcohol-related conditions were responsible for 104,030 hospital admissions in England in 2014/15. In 2014/15 there were 35,059 alcohol-related stays for patients resident in Scotland.\n \nThere were 8,680 alcohol related deaths in the UK in 2014. Alcoholic liver disease was the most common cause of death."}
      , "date" : {"_value" : "2017-01-30T17:00:16.0933801+00:00", "_datatype" : "dateTime"}
      , "description" : ["This note provides a summary of statistics on drinking alcohol among adults in Great Britain and children in England. Data on alcohol related hospital admissions in England and Scotland and alcohol related deaths in England is also shown."], "identifier" : {"_value" : "CBP-7626"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70459", "prefLabel" : {"_value" : "Social and General Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Statistics on Alcohol", "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/680751", "abstract" : {"_value" : "The Child Contact Centres (Accreditation) Bill [HL] [http://www.publications.parliament.uk/pa/bills/lbill/2016-2017/0025/17025.pdf] is a private member\u2019s bill introduced by Baroness McIntosh of Pickering (Conservative). The Bill had its first reading in the House of Lords on 6 June 2016 and is scheduled to receive its second reading on 3 February 2017. The Bill would make it a requirement for any child contact centre or organisation that offers facilities or services for child contact\u2014when children of separated families make contact with non-resident parents and sometimes other family members\u2014to be accredited by the National Association of Child Contact Centres (NACCC). The NACCC is a registered charity and describes itself as a supporting membership body for around 350 child contact centres and services located throughout England, Wales, Northern Ireland, the Channel Islands and the Republic of Ireland.  Under the provisions in the Bill, accreditation, or re-accreditation, would only be extended to centres that adhere to relevant NACCC standards. The Bill would insert sections into the Children Act 1989 and the Children Act 2004, and would extend to England only.\n \nBaroness McIntosh has described the Bill\u2019s context and intentions as follows:\n \n NACCC has set national standards and had accredited child contact centres in a private law setting for 25 years. NACCC has ensured robust quality standards in terms of the training of staff and volunteers and in developing processes for safe delivery of contact, which is in the best interests of the child. Since 2007 these standards, which operate in private law settings, have been revised with input and approval from the relevant government departments and [the Children and Family Court Advisory and Support Service] Cafcass. For more than a decade there has been a judicial protocol issued by the President of the Family Division [of the High Court] that states when making orders for arrangements for children (contact orders), courts must only refer to a NACCC accredited centre. NACCC has an independent standards board chaired by Sir Mark Hedley, a former high court judge in the Family Division. As the number of children involved in the public law system where their care is the responsibility of the local authority\u2014\u2018looked after children\u2019\u2014increases, and local authorities have a statutory obligation under section 34 of the Children Act 1989 to promote contact between children and their parents and relevant others, it is essential to make certain that these same high standards of practice that operate in the private law sector are met in a public law setting. This Bill will ensure that any child contact centre or organisation that offers facilities or services for child contact must be accredited by NACCC."}
      , "date" : {"_value" : "2017-01-30T16:35:28.7826533+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Lords Library briefing provides information in support of the House of Lords consideration of the Child Contact Centres (Accreditation) Bill [HL] on 3 February 2017."], "identifier" : {"_value" : "LIF-2017-0009"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414041", "prefLabel" : {"_value" : "Lords In Focus"}
      }
      , "title" : "Child Contact Centres (Accreditation) Bill [HL]: Briefing for Lords Stages", "topic" : [{"_about" : "http://data.parliament.uk/terms/95600", "prefLabel" : {"_value" : "Family law"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/678291", "abstract" : {"_value" : "In August 2016, the Government launched its consultation on the creation of an early years national funding formula.  Among the issues the new funding formula sought to address included that \u201csome councils \u2026 unfairly differentiate the funding rates that they pay to different types of providers which leads to a non-level playing field between those from the maintained sector and those from the private/voluntary sector. This matters to 30 hours delivery, as the majority of 30 hours places will need to be delivered by the private/voluntary sector\u201d.\n \nIn response to the consultation, analysis by the National Association of Head Teachers (NAHT) \u201cshows that hundreds of nursery schools across England, which are most often in areas of high social deprivation, would be forced to close if the government doesn\u2019t adjust its proposals\u201d. After the consultation had closed in September 2016, an E-Petition was submitted on 3 November 2016 entitled \u201cSave State-Funded Nursery Schools\u201d.\n \nIn December 2016, the DfE published the Government response to the consultation.  On maintained nurseries, it was announced that the £55 million of annual additional funding would be extended from the original timeframe of two years in the consultation document to \u201cat least\u201d the end of the current Parliament."}
      , "date" : {"_value" : "2017-01-30T15:45:24.1277362+00:00", "_datatype" : "dateTime"}
      , "description" : ["This debate pack has been prepared ahead of the Westminster Hall debate on funding for maintained nursery schools, to be held on Wednesday 1 February 2017. The debate has been tabled by Helen Jones MP."], "identifier" : {"_value" : "CDP-2017-0033"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Funding for maintained nursery schools", "topic" : [{"_about" : "http://data.parliament.uk/terms/95718", "prefLabel" : {"_value" : "Pre-school education"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/680745", "abstract" : {"_value" : "The Regulation of Health and Social Care Professions Etc Bill [HL] is a private member\u2019s bill introduced by Lord Hunt of Kings Heath (Labour). The Bill received its first reading in the House of Lords on 26 May 2016, and is scheduled to have its second reading on 3 February 2017. The Bill would require the Government to bring forward legislation giving effect to the recommendations of the Law Commission, Scottish Law Commission and Northern Ireland Law Commission in their report Regulation of Health Care Professionals: Regulation of Social Care Professionals in England, April 2014, Cm 8839. The report included a draft bill to reform the legal framework around the regulation of health care professionals. The legislation would have to be introduced within three months of the day on which the Act is passed. Clause 1(2) of the Bill would require the Secretary of State to confirm that in their view the introduced bill is substantially based on the draft bill prepared by the Law Commissions. Lord Hunt introduced a bill of the same name in the 2015\u201316 session."}
      , "date" : {"_value" : "2017-01-30T15:16:06.4372356+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Lords Library briefing provides information in support of the House of Lords consideration of the Regulation of Health and Social Care Professions Etc Bill [HL] 2016-17 on 3 February 2017."], "identifier" : {"_value" : "LIF-2017-0008"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414041", "prefLabel" : {"_value" : "Lords In Focus"}
      }
      , "title" : "Regulation of Health and Social Care Professions Etc Bill [HL]: Briefing for Lords Stages", "topic" : [{"_about" : "http://data.parliament.uk/terms/95623", "prefLabel" : {"_value" : "Health staff and professions"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/345578", "abstract" : {"_value" : "This note lists Cabinet meetings held away from Downing Street. Regional Cabinet meetings were introduced by Gordon Brown in 2008 and continued under the Coalition Government. Theresa May held her first regional Cabinet meeting in the north-west in January 2017.\n \nPrior to 2008, Cabinet meetings outside London were extremely rare.\n \nCabinet guidance \n \nThe following is taken from the Cabinet Manual, a guide to laws, conventions and rules on the operation of government:\n \n 4.7 The Prime Minister determines and regulates the procedures of Cabinet, including when and where meetings take place. Cabinet currently meets in the Cabinet Room in 10 Downing Street every Tuesday morning while Parliament is sitting. Regional Cabinets can also take place, where the weekly Cabinet meeting is held in a location outside London. The agenda for Cabinet usually includes Parliamentary business, domestic and foreign affairs, and topical issues. The proceedings of Cabinet and Cabinet committees are recorded by the Cabinet Secretariat. The minutes produced are the official record of discussion and the decisions made. For more information, see paragraphs 4.34 and 4.35 on Cabinet minutes and paragraphs 4.51 and 4.52 on the Cabinet Secretariat. \n \nMore information on the Cabinet and the workings of Government can be found on the Cabinet Office website: How Government works.\n \nFeedback\n \nPlease send any comments, corrections or suggestions for new lists to: Parliamentary Information Lists Editor, Parliament & Constitution Centre, House of Commons, London SW1A OAA.\n \n "}
      , "date" : {"_value" : "2017-01-30T13:18:31.0312652+00:00", "_datatype" : "dateTime"}
      , "description" : ["A list of Cabinet meetings held away from Downing Street."], "identifier" : {"_value" : "SN06601"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/61055", "prefLabel" : {"_value" : "Parliament and Constitution Centre"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Regional cabinet meetings", "topic" : [{"_about" : "http://data.parliament.uk/terms/95514", "prefLabel" : {"_value" : "Central government"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95679", "prefLabel" : {"_value" : "Ministers"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/680739", "abstract" : {"_value" : "The European Union (Notification of Withdrawal) Bill was introduced in the House of Commons on 26 January 2017. This two-clause Bill would give the Prime Minister the power to notify the European Council of the UK\u2019s intention to withdraw from the European Union under the terms of Article 50 of the Treaty on European Union. It does not contain an obligation to exercise this power, and it is does not specify any deadline or timescale for exercising it. This is a separate piece of legislation from the Great Repeal Bill which the Government intends to introduce in the next Queen\u2019s Speech to repeal the European Communities Act 1972.\n \nThe Bill has been introduced following a judgment by the Supreme Court on 24 January 2017, reached by a majority of eight to three, which held that an Act of Parliament is required to authorise ministers to give notice of the UK\u2019s decision to withdraw from the EU. The Supreme Court rejected the Government\u2019s argument that this could be done by exercising a prerogative power.\n \nJeremy Corbyn, Leader of the Labour Party, has issued a three-line whip for his MPs not to block the Bill, but Labour has tabled a number of amendments intended to allow a \u201cmeaningful\u201d vote in Parliament on the Brexit deal, to establish a number of \u201ckey principles\u201d it wants the Government to see to negotiate during the process, and to ensure \u201crobust and regular\u201d parliamentary scrutiny. The Liberal Democrats have said they will seek to amend the Bill to secure a referendum on the terms of the UK\u2019s future relationship with the European Union. The Scottish National Party (SNP) said that its MPs would introduce a reasoned amendment to reject the Bill, and would also table 50 amendments to the Bill.\n \nTheresa May has acceded to calls from the Labour Party and others to publish a white paper on the Government\u2019s objectives for the Brexit negotiations, but the date of its expected publication is not yet known.\n \nDevolution issues have also been raised with regard to the triggering of Article 50. The Supreme Court ruled unanimously that the Sewel Convention\u2014according to which the Westminster Parliament does not normally legislate with regard to devolved matters except with the agreement of the devolved legislature\u2014does not give rise to a legally enforceable obligation. The Government has stated that the Bill \u201cdoes not contain any provision which gives rise to the need for a legislative consent motion in the Scottish Parliament, the National Assembly for Wales or the Northern Ireland Assembly\u201d. However, Nicola Sturgeon, Scotland\u2019s First Minister, said that her Government would bring forward a legislative consent motion on the Bill to ensure that the Scottish Parliament had the opportunity to vote on whether or not to consent to the trigger of Article 50. Plaid Cymru announced that they would also seek to table a legislative consent motion in the National Assembly for Wales.\n \nThe Government expects the Bill to pass through both Houses of Parliament and gain royal assent before 31 March 2017, the deadline Mrs May has set out for triggering Article 50. The Government intends to fast-track the Bill to achieve this. It is scheduled to have its second reading in the House of Commons on 31 January and 1 February, to be considered in committee of the whole House on 6, 7 and 8 February, and to complete its remaining stages in the Commons on 8 February before coming to the House of Lords. A number of Labour MPs have expressed dissatisfaction with the length of time allocated to the Bill, but it has been reported that Jeremy Corbyn does not intend to oppose the programme motion.\n \n "}
      , "date" : {"_value" : "2017-01-30T12:12:23.5566807+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Lords Library briefing provides information on the European Union (Notification of Withdrawal) Bill which was introduced in the House of Commons on 26 January 2017, following the Supreme Court judgment that legislation was required to authorise the triggering of Article 50."], "identifier" : {"_value" : "LIF-2017-0007"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414041", "prefLabel" : {"_value" : "Lords In Focus"}
      }
      , "title" : "European Union (Notification of Withdrawal) Bill", "topic" : [{"_about" : "http://data.parliament.uk/terms/95532", "prefLabel" : {"_value" : "Constitution"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95552", "prefLabel" : {"_value" : "Devolution"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95591", "prefLabel" : {"_value" : "EU law and treaties"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95659", "prefLabel" : {"_value" : "Legislative process"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95679", "prefLabel" : {"_value" : "Ministers"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95703", "prefLabel" : {"_value" : "Parliament"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/340151", "abstract" : {"_value" : "Local authorities' duties\n \nLocal authorities in England do not have a duty to secure accommodation for all homeless people.  Those who approach an authority for help who are deemed to be homeless but not in priority need, may find themselves sleeping rough.  Rough sleepers are one of the most vulnerable groups in society; studies have found strong correlations between homelessness and a multiplicity, and increased severity, of both physical and mental health conditions. Rough sleepers are over 9 times more likely to commit suicide than the general population; on average rough sleepers die at age 47 (age 43 for women).\n \nGovernment initiatives\n \nSuccessive Governments have put in place initiatives to tackle rough sleeping.  The Rough Sleepers Initiative operated between 1990 and 1999 until it was replaced by Labour\u2019s Homelessness Action Programme. Over the years some ambitious targets have been set; for example, Labour set a target in 1999 to achieve a two thirds reduction in rough sleeping by 2002. No One Left Out (Labour, 2008) set a target of ending rough sleeping \u201conce and for all\u201d by 2012.\n \nCrisis commissioned the Centre for Housing Policy at the University of York to conduct a review of single homelessness in the UK between 2000 and 2010. The study, A review of single homelessness in the UK,  (2011) provides an overview of the history, causes and policy responses to single homelessness, and assesses how successful these policies have been in tackling the issue. The study suggested some policy responses for the next decade.\n \nThe current Government has continued with the approach initiated under the Coalition and which was piloted in London: No Second Night Out. A key aim is to ensure that no-one new to the streets sleeps out for a second night. A Ministerial Working Group has been established to prevent and reduce homelessness. The Minister, Marcus Jones, is currently responsible for homelessness at the Department for Communities and Local Government (DCLG).\n \nRough sleeping is still increasing\n \nDespite these considerable efforts, the official rough sleeper counts have risen in each year since new methodology was introduced in autumn 2010. The most recent statistics published on 25 January 2017 recorded a 132% increase in the number of people sleeping rough in England since 2010. Existing programmes have recorded successes in helping individuals to exit rough sleeping, but the flow on to the streets continues. The UK Statistics Authority declared DCLG\u2019s Rough Sleeping statistics to not to meet the standard to be regarded as National Statistics in December 2015.\n \nRough sleeping is at its most severe in London. The latest financial year report from the Combined Homelessness and Information Network (CHAIN) database, CHAIN Street to Home Annual Report 2015-16, shows that a total of 8,096 rough sleepers were contacted by outreach workers or building-based teams in London during 2015/16 compared to 7,581 contacts in 2014/15; representing an increase of 7%.\n \nFactors identified as contributing to the ongoing flow of new rough sleepers to the streets include: welfare reforms, particularly reductions in entitlement to Housing Benefit/Local Housing Allowance; reduced investment by local authorities in homeless services; and flows of non-UK nationals who are unable to access benefits.\n \nOrganisations working in the sector have called for a commitment to end rough sleeping; an effective safety net; and for a long-term homelessness strategy backed by investment to deliver it.  There is support for legislation to extend the priority need categories to cover all homeless people.\n \nCommunities and Local Government Select Committee Inquiry\n \nOn 17 December 2015 the Communities and Local Government Select Committee launched an inquiry into the causes of homelessness, as well as the approach taken by national and local government to prevent and tackle homelessness. The Committee\u2019s final report was published on 18 August 2016. The Committee did not support the abolition of priority need categories, but did express interest in the Welsh model, whereby local authorities have a duty to try to prevent anyone threatened with homelessness from actually becoming homeless under the Housing (Wales) Act 2014.\n \nThe Homelessness Reduction Bill 2016-17\n \nBob Blackman\u2019s Homelessness Reduction Bill 2016-17, which is progressing through Parliament, has gained Government and cross-Party support. The Bill, should it obtain Royal Assent, will refocus English local authorities on efforts to prevent homelessness. New duties will be introduced for English local authorities to assist all eligible applicants at risk of homelessness, and to relieve homelessness where it cannot be prevented. The new duties stop short of requiring authorities to actually provide housing for homeless non-priority households.\n \nOther relevant Library briefings\n \nSeparate briefing papers cover statutory homelessness in England (01164) and the placement of statutorily homeless households in temporary accommodation (02110). For an overview of statistical indicators see: Homelessness: Social Indicators (02646). For a range of homelessness statistics for local authorities see local authority homelessness statistics (England) (07586).\n \nThere are now significant variations in approaches to homelessness in Scotland and Wales \u2013 these variations are outlined in Comparison of homelessness duties in England, Wales, Scotland and Northern Ireland (07201). See also: Rough sleepers: access to services and support (England) and Rough Sleepers and Anti-Social Behaviour (England).\n \n \n \n \n \n \n \n "}
      , "date" : {"_value" : "2017-01-27T16:01:02.8840262+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Commons Library Briefing Paper provides background information on the problem of rough sleeping and outlines Government policy on this issue."], "identifier" : {"_value" : "SN02007"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70459", "prefLabel" : {"_value" : "Social and General Statistics Section"}
      }
      , {"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Rough sleeping (England)", "topic" : [{"_about" : "http://data.parliament.uk/terms/95626", "prefLabel" : {"_value" : "Homelessness"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95629", "prefLabel" : {"_value" : "Housing"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/679656", "abstract" : {"_value" : "On 17 January 2017, the Prime Minister, Theresa May, made a speech at Lancaster House outlining the Government\u2019s position on the UK\u2019s future once it leaves the European Union. As part of these remarks, Mrs May stated that the Government would not be pursuing continued membership of the EU\u2019s single market, or membership (in its current form) of its customs union.\n \nCustoms unions are extensions of conventional free trade agreements (FTAs), where parties to the agreement have agreed to provide each other with trade benefits such as reduced or removed tariffs. In addition to this basic premise, customs unions apply a common external tariff across its members. Therefore, goods imported into one member of a customs union should attract the same tariffs as those imported into another. Customs unions can help facilitate trade between their members by removing the need for complex \u2018rules of origin\u2019 for goods imported into the trade area from third countries. Members of the World Trade Organisation are able to establish customs unions (and free trade agreements) in accordance with article XXIV of the General Agreement on Tariffs and Trade.\n \nAdvocates of customs unions contend that there are a number of reasons as to why a country may prefer to pursue a customs union over a free trade agreement, including a desire to further facilitate trade, but also in some cases as a first step towards closer political or economic cooperation. However, customs unions can face a range of challenges. For example, it can be a politically and economically complex process to agree a common external tariff and member countries generally forfeit their ability to set their own trade policies.\n \nThe European Union is the most comprehensive functioning customs union in the global economy. This extends into the single market, which provides further harmonisation of standards to facilitate the four freedoms: freedom of movement of goods, capital, services and people. However, a number of other customs unions operate outside of the EU, examples include the Caribbean Community (CARICOM).\n \nThis briefing provides information on how customs unions operate, how they differ from free trade agreements, and how they interact with World Trade Organisation rules on most-favoured-nation status. The briefing also examines the arguments advanced for why countries may wish to join customs unions and also political and practical criticisms customs unions might face. A summary of the EU\u2019s customs union is also presented alongside an explanation of its relationship to the \u2018single market\u2019. Finally, a list of other customs unions which operate around the world is provided, alongside a map compiled from data from the World Trade Organisation\u2019s Regional Trade Agreements Information System. It does not consider the arguments for and against the UK remaining in the EU customs union."}
      , "date" : {"_value" : "2017-01-27T15:30:23.9072532+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Lords Library briefing provides information on customs unions in light of the UK\u2019s decision to leave the EU."], "identifier" : {"_value" : "LLN-2017-0007"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/346713", "prefLabel" : {"_value" : "Lords Library notes"}
      }
      , "title" : "Leaving the European Union: Customs Unions - An Introduction", "topic" : [{"_about" : "http://data.parliament.uk/terms/95591", "prefLabel" : {"_value" : "EU law and treaties"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95647", "prefLabel" : {"_value" : "International economic relations"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95651", "prefLabel" : {"_value" : "International trade"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/678963", "abstract" : {"_value" : "This document contains press coverage, parliamentary material, reports and Library briefing relevant to the Westminster Hall debate, on pay restraint for Agenda for Change NHS staff, scheduled for Monday 30 January 2017 at 4.30pm.\n \nThe Petitions Committee has scheduled this debate following an e-petition, started on petition.parliament.uk, which has received over 100,000 signatures:\n \n E-petition 168127: Demand an end to the pay restraint imposed on agenda for change NHS staff Agenda for change staff including nursing, midwifery, healthcare assistants and associated healthcare professionals have suffered a pay restraint since 2010. Losing approximately 14% in real terms of their pay, staff are struggling nationwide and many have been pushed into poverty. \n \nThe debate will be led by Catherine McKinnell MP, a member of the Petitions Committee, on the motion \"That this House has considered e-petition 168127 relating to pay restraint for Agenda for Change NHS staff.\"\n \nRead full petition and Government response"}
      , "date" : {"_value" : "2017-01-27T13:03:32.9827964+00:00", "_datatype" : "dateTime"}
      , "description" : ["Commons Library debate pack for the Westminster Hall debate on pay restraint for Agenda for Change NHS staff, scheduled for Monday 30 January 2017 at 4.30pm."], "identifier" : {"_value" : "CDP-2017-0038"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Pay restraint for Agenda for Change NHS staff", "topic" : [{"_about" : "http://data.parliament.uk/terms/95620", "prefLabel" : {"_value" : "Health finance"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95621", "prefLabel" : {"_value" : "Health services"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95623", "prefLabel" : {"_value" : "Health staff and professions"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/595346", "abstract" : {"_value" : "What is Attendance Allowance?\n \nAttendance Allowance is a social security benefit for older people with care needs, first introduced in 1971. It is non-contributory, non-means-tested, and tax free.  It can be claimed from aged 65 onwards, and is payable at two rates, depending on the person\u2019s care needs (£55.10 a week or £82.30 a week, at 2016-17 rates).\n \nAs of May 2016, 1.45 million people were receiving Attendance Allowance in Great Britain, with 878,000 (61%) receiving the higher rate. Of the 1.45 million recipients, 1.0 million \u2013 more than two-thirds \u2013 were aged 80 or over.  More women than men receive Attendance Allowance \u2013 943,000 compared with 505,000.  Total expenditure on Attendance Allowance in Great Britain in 2016-17 is forecast at £5.5 billion.\n \nDecember 2015 announcement\n \nIn December 2015 the Government announced that it would consider \u201cgiving more responsibility to councils in England, and to Wales, to support older people with care needs \u2013 including people who, under the current system, would be supported through Attendance Allowance.\u201d The proposal was put forward within the context of proposed wider changes to local government finance and powers, including allowing local councils to retain 100% of business rates collected in their area, while at the same time devolving additional responsibilities to local authorities.\n \nThis was followed up with a consultation launched in July 2016 on the business rates reform. As part of this, the Government sought views on a range of functions and responsibilities that could be funded locally from retained business rates.  This included Attendance Allowance, although no further details of what devolution might involve were given. \n \nResponses from stakeholders\n \nOrganisations representing local government voiced opposition to the proposal to devolve responsibility for Attendance Allowance citing, among other factors, the additional cost pressures it would place on local authorities. Organisations representing older people, disabled people, and welfare rights advisers also called on the Government not to go ahead with transferring responsibility for AA to local councils.\n \nRelevance to Scotland, Wales and Northern Ireland\n \nUnder the Scotland Act 2016, Attendance Allowance and other disability benefits are devolved to the Scottish Parliament, so any changes following on from the current proposals would not have affected Scotland. The situation for Wales and Northern Ireland was less clear.  The Government initially stated that it was considering devolving responsibility for AA to local authorities in England and Wales, but more recent comments referred to England only and the business rates consultation covered England alone.  Social security in Northern Ireland is devolved, but there is a long-standing policy of maintaining parity with Great Britain in social security arrangements.\n \nDecision not to implement the proposals\n \nFollowing concerns raised by local government stakeholders, the Communities and Local Government Secretary Sajid Javid announced in January 2017 that Attendance Allowance would no longer be considered as part of the business rates reforms."}
      , "date" : {"_value" : "2017-01-27T11:52:25.3927617+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library Briefing Paper covers developments since the Government's announcement in December 2015 that it would consider \u201cgiving more responsibility to councils in England, and to Wales, to support older people with care needs \u2013 including people who, under the current system, would be supported through Attendance Allowance.\u201d The proposal was dropped by the Government in January 2017.  This paper gives background information on the Government\u2019s proposals, the decision not to proceed with any changes, and reaction from local government and other stakeholders."], "identifier" : {"_value" : "CBP-7729"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "The future of Attendance Allowance", "topic" : [{"_about" : "http://data.parliament.uk/terms/95504", "prefLabel" : {"_value" : "Benefits policy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95529", "prefLabel" : {"_value" : "Community care"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95666", "prefLabel" : {"_value" : "Local government"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95697", "prefLabel" : {"_value" : "Older people"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95749", "prefLabel" : {"_value" : "Sickness, disability and carers' benefits"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/678964", "abstract" : {"_value" : "This note summarises the major pieces of trade union legislation introduced under the 1979 - 1997 Conservative governments, and that enacted under Labour governments between 1997 and 2010.  Most of this legislation is consolidated in the Trade Union and Labour Relations (Consolidation) Act 1992 as amended.\n \nBoth the Coalition Government (2010-2015) and the current Conservative Government (2015 - ) have made further significant amendments to trade union law, which are discussed in the Library\u2019s briefing on the Trade Union Bill 2015-16, now the Trade Union Act 2016."}
      , "date" : {"_value" : "2017-01-26T16:26:07.9196446+00:00", "_datatype" : "dateTime"}
      , "description" : ["A summary of trade union legislation enacted between 1979 and 2010."], "identifier" : {"_value" : "CBP-7882"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Trade union legislation 1979-2010", "topic" : [{"_about" : "http://data.parliament.uk/terms/95574", "prefLabel" : {"_value" : "Employment"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/678299", "abstract" : {"_value" : "The tolling regime on the M4 Severn crossings has remained pretty much the same since the Severn Bridges Act 1992 enabled the Government to award a concession to Severn River Crossing plc. The company\u2019s remit was to build a second bridge and maintain both bridges for the concession period. The Act authorised Severn River Crossing (SRC) to increase tolls annually in line with inflation but did not permit any variation in the times when tolls apply or the proportional relationship between prices for different classes of vehicle.\n \nNow that the concession\u2019s end is drawing close politicians have the first opportunity in a generation to change the tolling regime.\n \nFinancing\n \nUnder the terms of the concession agreement SRC took on existing outstanding debt of £122 million in 1992 prices and construction costs of £330 million (excluding VAT). In return SRC is authorised to collect tolls from both Crossings to meet its financial obligations.\n \nThe concession agreement is valid until SRC has generated a defined amount of revenue or for a maximum of 30 years (whichever comes sooner). The defined amount of revenue is currently set at £1.029 billion in July 1989 prices, and this figure is expected to be reached in late 2017 or early 2018, at which time the ownership of the bridges will return to the UK Government.\n \nIn an October 2015 letter to the chairman of the Welsh Affairs Select Committee, David T C Davies, the Transport Minister said that SRC had paid HMRC £154.2 million in VAT between 2010 and 2014.\n \nGovernment proposals for change\n \nThe National Assembly for Wales last year voted for the Severn tolls to be abolished entirely but the Welsh Government does not have the power to deliver this because the crossings are not devolved.\n \nOn 13 January the UK Government began a consultation on the tolls\u2019 future, including price reductions of at least 50% for all users. This would involve replacing the current toll of £6.70, for cars and other category 1 vehicles, with a charge of £3.00 as well applying this reduced category 1 charge to small buses and vans currently within category 2 and subject to a toll of £13.40. The toll for large vehicles under category 3 is proposed to be reduced from £20.00 to £10.00.\n \nOther options under consideration include a free-flow electronic charging system, although the DfT acknowledges that many road users would prefer to continue paying at booths. Charges could be levied in both directions (currently the charges only apply to westbound traffic) and they could be removed altogether at night.\n \nThe payment currently required to use the Crossings is a toll which increases annually in line with inflation. The UK Government is proposing to replace this by introducing a Charging Order under section 167 of the Transport Act 2000 which will \u201cchange the legal status of the payment\u2026from a toll to a road user charge\u201d. It suggests that this change of status will enable it to \u201creduce the amount users pay more easily.\u201d According to the Welsh Assembly Research Service Assembly Members have expressed concerns over proposals for road user charging and its legal basis. The Cabinet Secretary for Economy and Infrastructure, Ken States, stated in a debate on 17 January that it is a \u201cvery complicated and complex area of legal work\u201d and that the Welsh Government supports abolition of the toll on an economic basis alone.\n \n Lessons from Dartford? This is previous what happened on the Dartford Crossing. In 2003 the ownership of the Crossing reverted back to the Government and it replaced the toll with a road charge under the 2000 Act. The local councils do not get any money from the toll. A 2009 FOI response from the Department for Transport explained their reasons for this. In November 2012 the Highways Agency published detailed proposals to introduce post-payment and enforcement measures that would support the introduction of \u2018free-flow\u2019 charging at the crossing. To support this change the Department published detailed proposals to provide \u201cfair and effective enforcement of free-flow road user charging\u201d: HA, Introducing post-payment periods and enforcement measures for \u2018free-flow\u2019 charging at the Dartford-Thurrock River Crossing: Consultation document, November 2012; and DfT, Road user charging scheme regulations: consultation, November 2012. Section 5 of the Government\u2019s May 2012 Impact Assessment on the introduction of free flow sets out their estimates of the cost of such a scheme (installation, running costs etc.). \n \n \n \nThe freight industry had previously welcomed the idea of reducing the tolls. Ian Gallagher, the Freight Transport Association (FTA)\u2019s Head of Policy for the South West and Wales, said: \u201cFTA has been pressing for these tolls to be reduced or scrapped altogether so is success for fairness and a big win for our members \u2026 This is a vital connecting route and any reduction in charges will be of huge economic benefit to hauliers who regularly use the bridges\u201d.\n \nThe South Wales Argus reported that although the majority of residents in Monmouthshire and South East Wales see the toll reductions as positive, there are some who are worried about the impact the cuts could have. Some councillors said that as well as the potential positive of bringing tourism into Monmouthshire, the cheaper prices could alternately mean people may travel to larger shopping centres in England, such as Bristol\u2019s Cribbs Causeway. Chepstow town councillor Hilary Beach expressed concerns that the reductions could have an effect on house prices: \u201cEven with the bridge toll prices at the moment there are people who are coming across from Bristol to buy houses. We are already short of housing and we need affordable housing here. It could have a huge effect if house prices go up\u201d.\n \nFurther reading\n \n Recent Parliamentary statements, questions and debates can be found via Parliamentary search. There is further analysis, including debates about the merits of abolishing the tolls and the view from Wales, in the National Assembly for Wales Research Service\u2019s excellent blog post Proposed toll reductions for the Severn Crossings, 20 January 2017. The UK Government\u2019s proposals and the draft charging order can be found via DfT, Severn crossings: proposed toll reductions, 13 January 2017. Further background can be found in multi-year work by the Welsh Affairs Select Committee, particularly its detailed 2010 report; oral and written follow up work in 2013-14 and an oral evidence session in July 2016."}
      , "date" : {"_value" : "2017-01-25T17:11:50.1779807+00:00", "_datatype" : "dateTime"}
      , "description" : ["This debate will take place between 2.30 and 4.00 pm on 31 January in Westminster Hall. The Member who secured the debate is Jessica Morden MP (Lab., Newport East)."], "identifier" : {"_value" : "CDP-2017-0035"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Parliamentary debate 31/1/17: Future operation of the Severn Bridges", "topic" : [{"_about" : "http://data.parliament.uk/terms/95738", "prefLabel" : {"_value" : "Roads"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/678288", "abstract" : {"_value" : "These are changes largely required as a consequence of the abolition of the paper driving licence counterpart in June 2015. Since abolition there has been no need for a driving licence to be produced for an endorsement to be recorded against a driver\u2019s driving record, as this can be done electronically on the person\u2019s driver record, which is held by the DVLA. The only need for a licence to be produced or surrendered is therefore where the driver may be sentenced to disqualification, or is actually disqualified.\n \n "}
      , "date" : {"_value" : "2017-01-25T14:16:25.5998341+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Bill is essentially intended to update the law in relation to the production and surrender of driving licences, making changes principally to the Road Traffic Offenders Act 1988 and to the Road Traffic (New Drivers) Act 1995, with consequential adjustment of other statutes affected."], "identifier" : {"_value" : "CBP-7879"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Road Traffic Offenders (Surrender of Driving Licences Etc) Bill", "topic" : [{"_about" : "http://data.parliament.uk/terms/95738", "prefLabel" : {"_value" : "Roads"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/677753", "abstract" : {"_value" : "The Counter-Terrorism and Security Act 2015 (Amendment) Bill 2016-17 was presented to Parliament on Wednesday 29 June 2016.  Its Second Reading is scheduled to take place in the Commons on 27 January 2017.\n \nThe Bill\n \nThe Bill is a Private Member\u2019s Bill presented by Lucy Allan, who was 19th in the Ballot for this session.  It would repeal provisions in the Counter-Terrorism and Security Act 2015 requiring teachers, carers and responsible adults to report signs of extremism or radicalisation amongst children in primary school, nursery school or other pre-school educational settings.\n \nThe Bill would insert a new section 26A into the Act, which would provide an exemption to the section 26 duties to have due regard to the need to prevent people from being drawn into terrorism for primary schools, nursery schools, and other pre-school educational settings.\n \nThe announcement of the Bill on Lucy Allan\u2019s website stated that the existing provision \u201cplaces an unnecessary burden on educational, caring and other responsible persons in carrying out their respective roles.\u201d[1]\n \nExtent\n \nThe Bill extends to England and Wales, and Scotland.\n \nThe Counter-Terrorism and Security Act 2015\n \nPart 5 of the Counter-Terrorism and Security Act 2015 (the CTSA 2015) , which received Royal Assent on 12 February 2015, contains provisions to prevent people being drawn into terrorism and effectively puts the Prevent strategy on a statutory footing.\n \nThe Government has produced guidance (issued under section 29 of the CTSA 2015) for specified authorities, which they must have regard to when complying with the duty. There are two versions of the guidance: one for authorities in England and Wales, and one for authorities in Scotland.\n \nThe guidance for England and Wales states:\n \n The authorities specified\u2026 are subject to the duty to have due regard to the need to prevent people from being drawn into terrorism. Being drawn into terrorism includes not just violent extremism but also non-violent extremism, which can create an atmosphere conducive to terrorism and can popularise views which terrorists exploit. Schools should be safe spaces in which children and young people can understand and discuss sensitive topics, including terrorism and the extremist ideas that are part of terrorist ideology, and learn how to challenge these ideas. The Prevent duty is not intended to limit discussion of these issues. Schools should, however, be mindful of their existing duties to forbid political indoctrination and secure a balanced presentation of political issues.[2] \n \nThe guidance for Scotland states:\n \n We would expect local authority arrangements in relation to the Prevent duty to be applied to schools. [\u2026] Risks to young people are often multidimensional. Local authorities would be expected to demonstrate an awareness of Prevent in their work to implement the Getting it right for every child (GIRFEC) approach. Curriculum for Excellence and arrangements for recognising and realising children\u2019s rights are also relevant. For example, Curriculum for Excellence highlights the importance of global citizenship and engaging young people in a healthy, democratic society.[3]  \n \nBoth sets of guidance provide advice on other issues, such as staff training.\n \nSeparate advice for schools and childcare providers in England on the Prevent duty has also been published by the Department for Education.\n \nJoint Committee on Human Rights report\n \nIn July 2016, the Joint Committee on Human Rights published a report on counter-extremism which included discussion both of the Prevent strategy in schools and the proposals for inspection of out-of-school settings.\n \nThe Committee stated that it was not possible to deliver a definitive verdict on Prevent in schools at this stage, but noted concerns about the impact of the strategy, citing a story of a four-year-old nursery pupil \u201cwho was referred to Luton Council after he had drawn a picture of what was initially described by the nursery as a \u2019cooker bomb\u2019 but which turned out to be a cucumber,\u201d and also myths that could be produced about the strategy, such as those that had grown up around another incident where an eight-year-old boy wrote in his homework \u2018I live in a terrorist house\u2019 and the police subsequently visited his home \u2013 a visit that was in fact prompted by a section where the boy had written \u2018I don\u2019t like it when my uncle beats me\u2019.  The action was a child safeguarding investigation rather than part of counter-extremism measures.  The Committee stated:\n \n It is too early to reach any definitive conclusions on the success of the Prevent Duty in schools. Anecdotal evidence suggests that there may be some cause for concern about the impact of the Duty and the Government would be well-advised to ensure that referrals are made in a sensible and proportionate fashion. However, we also accept that it is very easy for dangerous myths to be spread about Prevent. The only way for these to be dispelled is for there to be rigorous and transparent reporting about the operation of the Prevent Duty.[4] \n \nThe Government response, published in October 2016, defended the current position:\n \n Protecting pupils from the risk of radicalisation should be seen as part of schools\u2019 wider safeguarding duties. It is important to understand the risk of radicalisation as a safeguarding risk that is similar in nature to protecting children from other harms. We agree with the Committee that it is important that referrals are made in a sensible and proportionate fashion. That is why the Department\u2019s advice and guidance on the Prevent Duty make clear that if teachers have concerns about any pupils they should follow normal safeguarding procedures and act proportionately. There are no mandatory reporting requirements under the Duty. We recognise the importance of dispelling myths and improving understanding of Prevent, and are working proactively to communicate its positive impact and encourage balanced reporting by the press. We are also working closely with schools and local communities to improve understanding of the duty and make clear that it is about safeguarding young people from the dangers of being drawn into terrorism. The Department for Education\u2019s recent teachers\u2019 omnibus survey shows that 83 per cent of school leaders are confident in how they should implement the Prevent duty.[5] \n \nHome Affairs Committee report\n \nThe Home Affairs Committee report, Radicalisation: the counter-narrative and identifying the tipping point, published in August 2016, included discussion of concerns about the Prevent strategy in schools that were raised by witnesses during the course of the inquiry, surrounding:\n \n Stigmatising and alienating segments of the population and affecting the discussion of terrorism, raising rather than reducing the dangers of extremism Whether the teacher training currently available is sufficient A lack of clarity in the guidance to schools around Prevent training A focus on an \u201cangry young men\u201d susceptible to extremism that did not address the evolving nature of extremism Potential confusion between extremist and socially conservative practices[6] \n \nThe Committee recommended that the Home Office should appoint an independent panel to reassess the Prevent training being provided to education and other professionals, to ensure they have the confidence to be able to deliver their Prevent duties.[7]\n \nThe Government has not yet responded to this report.\n \nFurther reading\n \n The Library briefing Counter-extremism policy in English schools, CBP 7345, provides an overview of the requirements on schools in countering extremist ideology and the potential for pupils to be radicalised, and related topics. The Library briefing Counter-extremism policy: an overview, CBP 7238, discusses the area more widely Educate Against Hate, What are school leaders\u2019 responsibilities under the Prevent duty? LSE, The Prevent duty: Difficult decisions for teachers in identifying radicalisation and extremism, 20 December 2016 BBC News, Prevent scheme 'fundamental' to fighting terrorism, 27 December 2016 Schools Week, MPs and peers demand review of Prevent duty, 22 July 2016 Rights Watch UK, Preventing Education? Human Rights and UK Counter Terrorism policy in schools, July 2016 \n \n \n \n[1]     Lucy Allan MP, Lucy presents Private Member\u2019s Bill to Parliament, 29 June 2016\n \n[2]     HM Government, Revised Prevent Duty Guidance: for England and Wales, July 2015, pg 10-11\n \n[3]     HM Government, Revised Prevent Duty Guidance: for Scotland, July 2015, pg 11\n \n[4]     Joint Committee on Human Rights, Counter-extremism, July 2016, session 2016-2017, HC 105, HL 39, para 49-50\n \n[5]     Joint Committee on Human Rights, Government Response to the Committee\u2019s Second Report of Session 2016-17: Counter-extremism, HC 756, pg4-5\n \n[6]     Home Affairs Committee report, Radicalisation: the counter-narrative and identifying the tipping point, HC 135, para 60-66\n \n[7]     Ibid., para 69"}
      , "date" : {"_value" : "2017-01-24T17:23:31.7098394+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library Briefing Paper provides background to the Counter-Terrorism and Security Act 2015 (Amendment) Bill 2016-17, and related issues."], "identifier" : {"_value" : "CBP-7878"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Counter-Terrorism and Security Act 2015 (Amendment) Bill 2016-17", "topic" : [{"_about" : "http://data.parliament.uk/terms/95718", "prefLabel" : {"_value" : "Pre-school education"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95740", "prefLabel" : {"_value" : "Schools"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95767", "prefLabel" : {"_value" : "Terrorism"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/677699", "abstract" : {"_value" : "This Commons Library Briefing provides background and analysis on the creation of the Green Investment Bank by the Government and the ongoing debate around its proposed privatisation.\n \nThe Green Investment GIB (GIB) was set up by the Government to increase the level of green infrastructure investment in the UK following the recommendations of the Green Investment GIB Commission in 2010. The Commission highlighted the \u201curgent need for a new public financial institution to unlock the investment needed for the UK to deliver a timely transition to a low carbon economy\u201d. The GIB was set up in 2012 with £3bn of Government funding, but after three years of existence its privatisation was announced in June 2015.\n \nCreation of the GIB\n \nThe March 2011 Budget included the announcement that the GIB would have an initial investment of £3bn and would not be allowed to raise its own capital until at least 2015. The GIB would carry out a wide range of transactions \u2013 including equity, debt and risk mitigation products \u2013 which were expected to catalyse an additional £15 billion of investment in green infrastructure by 2014/15.\n \nThe headquarters for the GIB, Edinburgh and London, were announced in March 2012. The Government created an interim body to operate while waiting for EU state aid approval, Green Investments UK. which would have £775 million available to invest from April 2012. The European Commission approved state aid for the GIB on 17 October 2012. It was then officially launched in November 2012.\n \nGreen Purposes Enshrined in Law\n \nLegislation that would enshrine the \u2018green\u2019 purpose of the GIB, providing powers for it to operate including funding, and ensuring its operational independence from Government were announced in the Queens Speech in 2012. The Enterprise and Regulatory Reform Act 2013 sets out the statutory basis for the \u201cgreen purposes\u201d of the GIB and the process by which it could become fully independent of government. \n \nGIB Performance\n \nIn November 2015 the GIB announced that it had backed projects with a total value of more than £10bn.[1]  The 2015-16 annual report summarised progress to date, including commitments to invest £2.6bn in 79 UK green infrastructure projects, worth a total of £10.6bn.The GIB reported a profit of £9.9m and a projected portfolio return increased to 10% per annum.\n \nGIB Privatisation\n \nThere has been ongoing debate about how the GIB\u2019s ability to raise capital should be expanded. Following speculation, the Government announced on 25 June 2015 in a written statement that the GIB would be privatised, with further details to follow in due course. In October 2015 the Government set out that it would have to remove all public sector controls to allow the GIB to raise capital without affecting public sector net debt classification by the National Audit Office. This raised concerns for many about the whether the GIB would keep its green purposes in the long term \n \nThe Government subsequently introduced amendments to the Enterprise Bill in the Lords to this effect. During the Lord\u2019 stages a successful opposition amendment created an independent board of trustees who would be responsible for agreeing any changes to the green purposes.  A previous report December 2015 report from the Environmental Audit Committee on the GIB privatisation proposals had supported this approach.  The amendment was removed but the Government announced the creation of a non-statutory special share instead, aimed at preserving the GIB\u2019s green purposes. The GIB also announced the launch of the privatisation process on its website on 2 March 2016. In October 2016 it announced the nominations of five special shareholder trustees, whose posts would be created once privatisation goes ahead.\n \nPreferred bidder\n \nFrom October 2016 there was extensive speculation in the press that the preferred bidder would be Macquarie, a global investment GIB, although this was not confirmed by the Government. As a result of there were concerns raised in Parliament regarding the restrictions that any proposed buyer should have on selling the GIB assets, and whether the proceeds from any sales would continue to be invested in low carbon projects. In response the Secretary of State for Climate Change and Industry, Nick Hurd, made clear that there could not be any restrictions placed on the sale of assets but that one of the Government priorities is to \u201cprotect the integrity of the green purpose of the organisation. What we want to hear from bidders is their plan for future investment.\u201d\n \nThe Environmental Audit Committee also wrote to Ministers on 17 January 2016, inviting them to give evidence on the sale of the GIB and expressing concern that the registration of several new companies by GIB could lead to the GIB being broken up once sold.  Since the Parliamentary debate there have been reports that the Government may be reconsidering the various options for a sale of the GIB.\n \nParliamentary Questions on Green Investment Bank\n \n2017 Questions on Green Investment Bank\n \nHouse of Commons Briefing paper\n \nGreen Investment Bank: Proposed Sale\n \n \n \n[1] GIB, UK Green Investment Bank helps mobilise £10bn of capital into UK green Infrastructure, 25 November 2015"}
      , "date" : {"_value" : "2017-01-24T16:19:28.5255192+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Debate pack has been prepared for the debate on the Sale of the Green Investment Bank to take place in Westminster Hall on Wednesday 25 January 2017 at 4:30pm. The subject for debate has been chosen by Michelle Thomson, MP for Edinburgh West"], "identifier" : {"_value" : "CDP-2017-0032"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/67716", "prefLabel" : {"_value" : "Science and Environment Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Sale of the Green Investment Bank", "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/344139", "abstract" : {"_value" : "A Commons Library Briefing on the creation of the Green Investment Bank by the Government and the ongoing debate around its proposed privatisation.\n \nThe Green Investment GIB (GIB) was set up by the Government to increase the level of green infrastructure investment in the UK following the recommendations of the Green Investment GIB Commission in 2010. The Commission highlighted the \u201curgent need for a new public financial institution to unlock the investment needed for the UK to deliver a timely transition to a low carbon economy\u201d. The GIB was set up in 2012 with £3bn of Government funding, but after three years of existence its privatisation was announced in June 2015.\n \nCreation of the GIB\n \nThe March 2011 Budget included the announcement that the GIB would have an initial investment of £3bn and would not be allowed to raise its own capital until at least 2015. The GIB would carry out a wide range of transactions \u2013 including equity, debt and risk mitigation products \u2013 which were expected to catalyse an additional £15 billion of investment in green infrastructure by 2014/15.\n \nThe headquarters for the GIB, Edinburgh and London, were announced in March 2012. The Government created an interim body to operate while waiting for EU state aid approval, Green Investments UK. which would have £775 million available to invest from April 2012. The European Commission approved state aid for the GIB on 17 October 2012. It was then officially launched in November 2012.\n \nGreen Purposes Enshrined in Law\n \nLegislation that would enshrine the \u2018green\u2019 purpose of the GIB, providing powers for it to operate including funding, and ensuring its operational independence from Government were announced in the Queens Speech in 2012. The Enterprise and Regulatory Reform Act 2013 sets out the statutory basis for the \u201cgreen purposes\u201d of the GIB and the process by which it could become fully independent of government. \n \nGIB Performance\n \nIn November 2015 the GIB announced that it had backed projects with a total value of more than £10bn.[1]  The 2015-16 annual report summarised progress to date, including commitments to invest £2.6bn in 79 UK green infrastructure projects, worth a total of £10.6bn.The GIB reported a profit of £9.9m and a projected portfolio return increased to 10% per annum.\n \nGIB Privatisation\n \nThere has been ongoing debate about how the GIB\u2019s ability to raise capital should be expanded. Following speculation, the Government announced on 25 June 2015 in a written statement that the GIB would be privatised, with further details to follow in due course. In October 2015 the Government set out that it would have to remove all public sector controls to allow the GIB to raise capital without affecting public sector net debt classification by the National Audit Office. This raised concerns for many about the whether the GIB would keep its green purposes in the long term \n \nThe Government subsequently introduced amendments to the Enterprise Bill in the Lords to this effect. During the Lord\u2019 stages a successful opposition amendment created an independent board of trustees who would be responsible for agreeing any changes to the green purposes.  A previous report December 2015 report from the Environmental Audit Committee on the GIB privatisation proposals had supported this approach.  The amendment was removed but the Government announced the creation of a non-statutory special share instead, aimed at preserving the GIB\u2019s green purposes. The GIB also announced the launch of the privatisation process on its website on 2 March 2016. In October 2016 it announced the nominations of five special shareholder trustees, whose posts would be created once privatisation goes ahead.\n \nPreferred bidder\n \nFrom October 2016 there was extensive speculation in the press that the preferred bidder would be Macquarie, a global investment GIB, although this was not confirmed by the Government. As a result of there were concerns raised in Parliament regarding the restrictions that any proposed buyer should have on selling the GIB assets, and whether the proceeds from any sales would continue to be invested in low carbon projects. In response the Secretary of State for Climate Change and Industry, Nick Hurd, made clear that there could not be any restrictions placed on the sale of assets but that one of the Government priorities is to \u201cprotect the integrity of the green purpose of the organisation. What we want to hear from bidders is their plan for future investment.\u201d The Environmental Audit Committee also wrote to Ministers on 17 January 2016, inviting them to give evidence on the sale of the GIB and expressing concern that the registration of several new companies by GIB could lead to the GIB being broken up once sold. Since the Parliamentary debate there have been reports that the Government may be reconsidering the various options for a sale of the GIB.\n \n \n \n[1] GIB, UK Green Investment Bank helps mobilise £10bn of capital into UK green Infrastructure, 25 November 2015\n \n "}
      , "date" : {"_value" : "2017-01-24T16:14:02.6112734+00:00", "_datatype" : "dateTime"}
      , "description" : ["A Commons Library Briefing on the creation of the Green Investment Bank by the Government and the ongoing debate around its proposed privatisation."], "identifier" : {"_value" : "SN05977"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/67716", "prefLabel" : {"_value" : "Science and Environment Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Green Investment Bank: Proposed Sale", "topic" : [{"_about" : "http://data.parliament.uk/terms/95510", "prefLabel" : {"_value" : "Business support"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95523", "prefLabel" : {"_value" : "Climate change"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95571", "prefLabel" : {"_value" : "Electricity"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95578", "prefLabel" : {"_value" : "Energy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95580", "prefLabel" : {"_value" : "Energy conservation"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95581", "prefLabel" : {"_value" : "Environmental protection"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95602", "prefLabel" : {"_value" : "Financial institutions"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95736", "prefLabel" : {"_value" : "Renewable energy"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/675979", "abstract" : {"_value" : "In recent months there have been reports of serious disturbances in a number of prisons across England and Wales.  The Government has published a White Paper Prison Safety and Reform, which acknowledges a recent decline in prison safety.  Steps taken so far include rolling out new tests for psychoactive drugs and increasing staffing levels  Legislation is expected early in 2017.\n \nBackground on some of the underlying issues is provided in Library Briefing Paper 7467, Safety in Prisons in England and Wales, 30 November 2016. \n \nA Debate pack has been published via this page which assembles press and parliamentary material on the subject.\n \nThe motion for the debate was not published at the time of writing. \n \n \n \n "}
      , "date" : {"_value" : "2017-01-24T15:39:12.022546+00:00", "_datatype" : "dateTime"}
      , "description" : ["An Opposition Day debate (19th allotted day) on the subject of prisons has been scheduled for Wednesday 25 January 2017."], "identifier" : {"_value" : "CDP-2017-0026"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Prisons", "topic" : [{"_about" : "http://data.parliament.uk/terms/95720", "prefLabel" : {"_value" : "Prisons"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/341888", "abstract" : {"_value" : "Why can\u2019t a Member resign their seat?\n \nUnder a Resolution of the House of 2 March 1623, Members of Parliament cannot directly resign their seats. Deaths, disqualification, elevation to Peerage, dissolution or expulsion are the only causes by which a Member\u2019s seat can be vacated. Therefore, a Member wishing to resign has to be appointed to a paid office of the Crown, which automatically disqualifies the Member from holding a seat in the House of Commons.\n \nThere are currently two nominal offices of profit under the Crown:\n \nCrown Steward and Bailiff of the three Chiltern Hundreds of Stoke, Desborough and Burnham;\n \nCrown Steward and Bailiff of the Manor of Northstead.\n \nFurther information on the current procedure and its historical context can be found in the Commons briefing: Resignation from the House of Commons."}
      , "date" : {"_value" : "2017-01-24T14:35:49.653678+00:00", "_datatype" : "dateTime"}
      , "description" : ["This note lists known appointments to the Crown Steward and Bailiff of the Chiltern Hundreds and the Manor of Northstead since the 1945 General Election."], "identifier" : {"_value" : "SN04731"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/61055", "prefLabel" : {"_value" : "Parliament and Constitution Centre"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Appointments to the Chiltern Hundreds and Manor of Northstead Stewardships since 1946", "topic" : [{"_about" : "http://data.parliament.uk/terms/95627", "prefLabel" : {"_value" : "House of Commons"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95674", "prefLabel" : {"_value" : "Members of Parliament"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/677692", "abstract" : {"_value" : "The decline of the Russian military during the 1990s was regarded as a natural consequence of the fall of the Soviet Union, a crippled Russian economy and a political leadership searching for identity. Many of Russia\u2019s military assets were allowed to fall into disrepair; while the modernisation of capabilities, or attempts at reform, were minimal. Of what military industry remained in Russia, inefficiency and corruption were rife and it suffered from over-capacity and a lack of research and development investment in advanced weapons systems.\n \nVladimir Putin\u2019s election as President in 2000 precipitated a fundamental shift in Russian society, its politics, its economy and ultimately within its military. Under his leadership there has been a revival of national self-confidence and pride, a renewed sense of strategic entitlement with regard to Russia\u2019s \u2018near abroad\u2019, and belief in Russia\u2019s right to be a great power globally. The military, and in particular its strategic nuclear deterrent, has consistently been viewed as the ultimate symbol of that status. An extensive rearmament programme has been the consequence.\n \nRussian defence expenditure since 2001\n \nIn the early years of Putin\u2019s Presidency a buoyant Russian economy, due in large part to high oil and gas prices, resulted in large real terms increases for defence.\n \nThe 2008 global economic crisis did precipitate a reduction in defence spending, although this proved to be short-lived and the upward trajectory in defence spending continued after 2009. By 2015 the Russian defence budget was R3.1 trillion (4.2% of GDP). More than triple that of a decade earlier.\n \nIncreasing economic uncertainty in 2016 resulted in a 2% fall in the defence budget to R3 trillion. However, the Russian government pledged that the State Armament Plan (SAP) would be protected from cuts. For now the Kremlin appears committed to the modernisation of its military forces, regardless of its economic situation.\n \nProgramme of military modernisation\n \nIn the early years Putin\u2019s modernisation agenda focused on increasing the professionalisation of the armed forces and improving the terms and conditions of personnel. The Putin administration also pushed for reform and consolidation within the military-industrial complex, which had suffered in the post-Soviet period. The majority of funding for rearmament was channelled into research and development, as opposed to the acquisition of new capabilities.\n \n State Armament Plan 2007-2015 \n \n In 2007 the Russian government set out its rearmament agenda. It outlined plans to spend approximately R5 trillion on a weapons modernisation programme that would replace 45% of its entire arsenal by 2015. 70% of that funding would be spent on the procurement of new capabilities and the maintenance of existing assets, while the remaining 30% would be earmarked for military research and development.\n \nRussia\u2019s nuclear triad was one of the biggest beneficiaries of this ambitious modernisation programme, along with the Russian navy. The aim was to achieve \u201cthe world\u2019s second largest [navy] by 2027\u201d. Efforts to revitalise the Russian shipbuilding industry were considered fundamental to this plan.\n \n 2008 programme of military reform \n \n In October 2008 the government announced a wide ranging programme of military reform which was intended to establish a more efficient and combat ready forces by 2020. As part of that plan the rearmament programme was to be speeded up. Enabled by large real term increases in the defence budget, the objective was to achieve a level of advanced weaponry equating to 30% of Russia\u2019s total military assets by 2015 and 70% by 2020. Russia\u2019s strategic nuclear forces, the revitalisation of the Navy and addressing the capability weaknesses identified by the Georgia conflict were identified as priorities.\n \n State Armament Plan 2011-2020 \n \n In 2011 a new plan for the period 2011-2020 was announced. Building on the previous State Armament Programme, it allocated R19 trillion over the entire period, an almost four-fold increase on the previous armament plan. The aim of bringing the level of advanced weaponry to 70% by 2020 was still a key objective, with nuclear forces and the Russian Navy the largest recipients. The significant levels of additional spending, however, allowed the rearmament plan to be expanded.\n \nProgress against the State Armament Plan\n \nWhile the priorities of the State Armament Plan have not radically altered over the last decade, arguably the pace of rearmament has not, in reality, reflected aspirations.\n \nThe overriding conclusion of many analysts is that the rearmament programme is unlikely to achieve all of its goals within its stated timeframe of 2020. However, it has also been acknowledged that there is no accepted definition of \u201cmodern\u201d technologies and Russia may simply move the goalposts in order to achieve its goals.\n \n Complicating issues \n \n The pace of rearmament has been affected by a number of factors:\n \n The longstanding inability of the military-industrial complex to meet the demands of the rearmament programme, particularly in the shipbuilding sector. The impact of defence inflation and corruption on a defence budget already affected by low oil prices and an unpredictable economy. The imposition of sanctions following Russia\u2019s annexation of Crimea in 2014 which has impacted Russia\u2019s ability to source Western hardware and components. Ukraine had previously also been a major supplier to the Russian armed forces, playing a significant role in the manufacture of transport aircraft, power propulsion units for ships and strategic missiles. \n \nA programme of import substitution measures, aimed at offsetting the impact of Western sanctions, was adopted by the Military-Industrial Commission in May 2014. The cost of the programme has not been revealed but its aim is to substitute 90% of components that were previously sourced from NATO and EU countries, by 2018.\n \n How far has rearmament progressed? \n \n Given the problems in defence budgeting and the domestic military-industrial complex, it is only within the last few years that the rearmament programme is considered to have begun showing tangible results.\n \nIn December 2015 the Russian Defence Ministry suggested its target of 30% modernised weaponry by 2015 had been met. By December 2016, 58.3% of Russian military equipment was categorised as modern.\n \nNuclear forces - In December 2016 Russia\u2019s nuclear forces were equipped with 60% modern armaments. In the last decade Soviet-era ICBM have gradually been phased out and replaced with the Topol-M ICBM and the RS-24 Yars ICBM which has MIRV (multiple target) capability. While 57% of ICBM remain Soviet-era capabilities, estimates have put delivery of the Topol-M and RS-24 Yars ICBM at 40 per year. The replacement programme is thus scheduled for completion by 2022. A new rail-based ICBM, has reportedly been delayed until at least 2020 due to budgetary pressures.\n \nModernisation of the Russian Navy\u2019s SSBN fleet has also been a priority since 2008. Acquisition of a new class of 8-10 SSBN, equipped with a new submarine-launched ballistic missile, is currently ongoing. The programme is several years behind schedule, however, due to initial problems with the missile system. Three Borei class SSBN had subsequently entered service by early 2016. The remaining SSBN of the class are expected to have some modifications and have been designated the Borei-A. The programme is expected to be completed in the mid-late 2020s.\n \nModernisation of the Tu-160 and Tu-95 strategic bomber fleet is also currently underway which will allow them to remain in service until the late 2020s-early 2030s.\n \nRevitalisation of the Navy - Alongside the refurbishment and modernisation of legacy platforms, the aspiration is to achieve a new general purpose force comprising 50 major surface ships (including six aircraft carrier), and a fleet of 20 multi-purpose submarines. 50% of the Navy\u2019s allocation of funding under the SAP 2011-2020 was intended for new construction.\n \nYet, it is widely acknowledged that the Navy\u2019s modernisation ambitions will take time to come to fruition. The naval shipbuilding industry has suffered from years of neglect and under investment; while the Ukraine crisis and the imposition of sanctions is starting to have an effect. The refurbishment of existing naval vessels is progressing, albeit at a slower, and more expensive, pace than originally envisaged. Although several new frigates, corvettes and submarines have already entered service, delivery of new vessels is behind schedule.\n \nThe timeframe for the aircraft carrier programme has also proven to be completely unrealistic. Despite initial suggestions work on the future carrier programme is yet to start. Design work is now expected to be completed by 2020, with construction and entry into service planned for 2021-2030.\n \nIn December 2016 the Minister for Defence suggested that the level of modern armaments in the naval fleet was 47%.\n \nAerospace Forces - In December 2016 modern equipment in the Aerospace Force was estimated to account for 66% of assets, a rise of 14% on the previous year. Priorities have been the delivery of new and modernised aircraft and the equipping of missile defence regiments with the S-400 missile defence system.\n \nEffort to modernise Russia\u2019s fast jet capabilities have centred round the large scale procurement of tactical aircraft such as the Su-30, Su-34 and Su-35, and the development of a fifth generation fighter, the T-50, which is intended to be a competitor to the US F-22 Raptor and the F-35. That programme is behind schedule due to problems in the aircraft\u2019s development and testing programme. It is now expected to be accepted into service in 2017, with deliveries of the aircraft commencing in 2018. However, only 12 aircraft of the planned 56 are expected to be procured by 2020.\n \nIn the last five years Russia has also made huge leaps in unmanned technologies. In 2011 Russia possessed only 180 UAV systems. That figure now stands at 2,000. The majority of those platforms have been assigned to land and airborne forces with Aerospace Force capabilities limited to intelligence, surveillance and reconnaissance. It currently has no combat UAV capability, although \u20ac9 billion has been earmarked for combat UAV programmes by 2020.\n \nGround forces- Modernisation of Russian ground forces in the last few years has largely focused on organisational changes and efforts to increase readiness, professionalisation, manning and leadership. As a result there has been little qualitative or quantitative improvement to equipment. Significant progress in these other areas has, however, allowed for a change in tactics, most recently demonstrated by Russia\u2019s \u2018hybrid\u2019 operation in Ukraine in 2014.\n \nMuch of the \u2018modernised\u2019 equipment that the Army has received has been upgraded versions of older models. In December 2016 approximately 42% of assets operated by Russian ground forces were considered to be modern. However, a number of substantial upgrade and acquisition programmes are now starting to come to fruition, and in particular with regard to armoured fighting vehicles. Russia aims to reduce the number of variants in service and field an entirely new generation of armoured fighting vehicles, including new tanks, within the timeframe of the SAP.\n \nLooking forward \u2013 the State Armament Plan 2018-2025\n \nThe next State Armament Plan had been expected to cover the period 2016-2025. Given the ongoing uncertainty in Russia\u2019s economy, it is now expected to be published in 2017 and will cover the period 2018 to 2025.\n \n Defence expenditure \n \n The Russian Ministry of Defence has requested approximately R24 trillion for its 2018-2025 State Armament Plan. That funding is currently under negotiation, however, as the Ministry of Finance seeks to make 12% cuts in government spending by 2018.\n \nGiven President Putin\u2019s commitment to rearmament it is widely expected that funding for the SAP will be ring fenced within the context of these cuts, however, and that the MOD will receive the majority of its funding request.\n \n Expectations for the 2018-2025 SAP \n \n The SAP has always been regarded as ambitious, given Russia\u2019s prevailing economic and domestic circumstances, and expectations for SAP 2018-2025 are no different. The current SAP has already seen many programmes delayed or scaled down and this trend is expected to continue. Should the reality fail to match aspirations, the predominance of nuclear forces is deemed likely to continue and the question then becomes which conventional programmes or areas of capability will be prioritised?\n \nNuclear forces- The modernisation of Russia\u2019s nuclear forces has long been identified as a priority within the SAP and that is not expected to change. Beyond existing upgrade and rearmament programmes work has already begun on a next generation long-range strategic nuclear bomber (PAK-DA). A prototype is expected in the early 2020s, with production scheduled to begin in 2023 and entry into service around 2030.\n \nHowever, suggestions that the Ministry of Defence could re-establish the Tu-160 production line has led many to speculate over the future of the PAK-DA programme and whether, given its expense, the Ministry of Defence will be forced prioritise one of the two programmes. Given the importance of nuclear forces in Russian strategic thinking, others have argued that the air force\u2019s nuclear programmes are more likely to stay intact, albeit delayed, at the expense of conventional air force projects such as the T-50 future combat aircraft.\n \nFurther vessels of the Borei-A class SSBN are expected within the 2020-2030 timeframe. Work is also expected to begin post-2020 on a fifth-generation SSBN, and equivalent SLBM. Production and entry into service of that next generation SSBN has been earmarked for 2031-2050.\n \nNavy next steps - Revitalisation of the Navy has been a key priority in the last two SAP and, thus far, there has been little indication that this will change. Construction of a new destroyer with advanced strike, air defence and missile defence capabilities and a new fleet of multi-role combat ships have been identified as priorities in the 2021-2030 timeframe. Russia has also recently indicated its intent to construct its own amphibious assault ships, after the French Mistral programme was cancelled in 2015.\n \nConstruction on a new fifth-generation multi-purpose submarine is also expected to begin in the next few years. Equipped with an air independent propulsion system, these new submarines will be capable of submerging for weeks at a time and will be much stealthier than existing submarines in the Russian fleet.\n \nWhether the Navy will sustain its current level of funding, however, has started to be questioned by many commentators.\n \nAerospace Force - Serious delays in the T-50 future combat aircraft programme have already led to speculation that the full complement of aircraft will not be achieved within the 2020 timeframe. Over the period of the next SAP the scope of the programme could feasibly be scaled back, particularly if the decision is taken to prioritise the strategic role.\n \nGround forces - The main task for the next SAP is to continue the roll-out of the armoured fighting vehicles replacement programme. Production of the new T-14 main battle tank has been extended out to 2025; while other variants of AFV, based on the Armata platform, are also expected to be prioritised. Mass production of the T-15 heavy infantry fighting vehicle will continue; the Kurganets system is expected to enter production in 2019; while large-scale delivery of the Bumerang is scheduled to begin at the same time, ensuring that all of these new armoured vehicle programmes continue well into the next decade."}
      , "date" : {"_value" : "2017-01-24T13:18:20.0986215+00:00", "_datatype" : "dateTime"}
      , "description" : ["Over the last decade Russia has been implementing an extensive rearmament programme. Its aims are considered to be ambitious within the context of Russia's economic situation and the status of its domestic military-industrial base. What has been achieved thus far, and is the rearmament programme likely to realise its aims by 2020?"], "identifier" : {"_value" : "CBP-7877"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/37362", "prefLabel" : {"_value" : "International Affairs and Defence Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Russia's Rearmament Programme", "topic" : [{"_about" : "http://data.parliament.uk/terms/95549", "prefLabel" : {"_value" : "Defence equipment and procurement"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95739", "prefLabel" : {"_value" : "Russia"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/677691", "abstract" : {"_value" : "The Rehabilitation of Offenders Act 1974 (1974 Act) aims to support the rehabilitation of reformed offenders by providing specific periods\u2014subject to the sentence passed or disposal administrated\u2014after which cautions and convictions become \u2018spent\u2019, and an individual is regarded as rehabilitated. The Bill aims to reduce the rehabilitation periods of various sentences, and introduce a rehabilitation period for sentences exceeding four years (48 months), which are currently never \u2018spent\u2019. There have been criticisms of the 1974 Act and previous governments have attempted to make changes. The most recent changes were made by section 139 of the Legal Aid, Sentencing and Punishment of Offenders Act 2012 which reduced the rehabilitation periods for both custodial and non-custodial sentences and increased the upper limit to include sentences of up to four years (and applying retrospectively)."}
      , "date" : {"_value" : "2017-01-24T12:23:14.5625619+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Lords Library briefing provides information in support of the House of Lords consideration of the Rehabilitation of Offenders (Amendment) Bill [HL] on 27 January 2017."], "identifier" : {"_value" : "LIF-2017-0005"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414041", "prefLabel" : {"_value" : "Lords In Focus"}
      }
      , "title" : "Rehabilitation of Offenders (Amendment) Bill [HL]: Briefing for Lords Stages", "topic" : [{"_about" : "http://data.parliament.uk/terms/95476", "prefLabel" : {"_value" : "Administration of justice"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95538", "prefLabel" : {"_value" : "Crime"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95541", "prefLabel" : {"_value" : "Criminal law"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/677686", "abstract" : {"_value" : "The Divorce (Financial Provision) Bill [HL] is a private member\u2019s bill introduced by Baroness Deech (Crossbench). The Bill received its first reading in the House of Lords on 26 May 2016, and is scheduled to receive its second reading on 27 January 2017. The Bill proposes to replace section 25(2) of the Matrimonial Causes Act 1973 with \u201cprovisions about the principles to be applied in determining applications for such orders, including provision about the effect of pre-nuptial and post-nuptial agreements\u201d. Setting out the purpose of the Bill, Baroness Deech explained:              \n \n The purpose of this Bill is to reform the law relating to the splitting of assets on divorce.  The current law is the Matrimonial Causes Act 1973, section 25, which has not been thoroughly debated by Parliament for 40 years despite radical changes in society and families, and which has been the subject of calls for reform from the Law Commission, Resolution and the Centre for Social Justice. Reform is urgent because the law is uncertain. It is largely judge-made law, which bears little resemblance to the statute. Judicial discretion has led to unpredictability and conflicting decisions, which make it hard for parties to negotiate and lead to disproportionate costs. Legal aid has been removed and parties of modest means are left unrepresented with little guidance as to the right outcome. The Bill would implement provisions very similar to those of Scottish law, and the laws of most European and North American states. It would introduce as a fair starting point the equal division of all the property and pensions acquired by the couple after marriage; provision for short term maintenance; flexibility to allow the home to be retained for the carer and children; and binding prenuptial agreements. This is intended to facilitate mediation, reduce litigation and costs, and recognise equal partnership in marriage."}
      , "date" : {"_value" : "2017-01-24T12:02:47.9269081+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Lords Library briefing provides information in support of the House of Lords consideration of the Divorce (Financial Provision) Bill [HL] on Friday 27 January 2017."], "identifier" : {"_value" : "LIF-2017-0004"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414041", "prefLabel" : {"_value" : "Lords In Focus"}
      }
      , "title" : "Divorce (Financial Provision) Bill [HL]: Briefing for Lords Stages", "topic" : [{"_about" : "http://data.parliament.uk/terms/95555", "prefLabel" : {"_value" : "Divorce"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/677685", "abstract" : {"_value" : "The UN, in its 'Practical guide for civil society: Civil society space and the United Nations human rights system', explains:\n \n\"Freedoms of expressions, association and peaceful assembly, and the right to participate in public affairs, are human rights that enable people to share ideas, form new ones, and join together with others to claim their rights.  It is through the exercise of these public freedoms that we make informed decisions about our economic and social development.  It is through these rights that we can take part in civic activiry and build democratic societies.  To restrict them undermines our collective progress.\"\n \n "}
      , "date" : {"_value" : "2017-01-24T12:01:37.9062381+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Debate Pack has been prepared ahead of the debate on 'Protecting civil society space across the world', to be held on Thursday 26 January. The subject for the debate has been chosen by the Backbench Business Committee, following a representation by Jim Shannon, Fiona Bruce and Patrick Grady."], "identifier" : {"_value" : "CDP-2017-0031"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/37362", "prefLabel" : {"_value" : "International Affairs and Defence Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Protecting civil society space across the world", "topic" : [{"_about" : "http://data.parliament.uk/terms/95635", "prefLabel" : {"_value" : "Human rights"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/677683", "abstract" : {"_value" : "The Arbitration and Mediation Services (Equality) Bill [HL] is a private member\u2019s bill introduced by Baroness Cox (Crossbench). The Bill received its first reading in the House of Lords on 25 May 2016 and is scheduled to receive its second reading on 27 January 2017. The Bill would seek to make further provision about arbitration and mediation services and the application of equality legislation to such services.\n \nThe Arbitration and Mediation Services (Equality) Bill [HL] would make provisions regarding the application of equalities legislation to arbitration and mediation services. It seeks to prevent providers of arbitration services from doing anything that constitutes discrimination, harassment or victimisation on the grounds of sex. It would do so by inserting a new subsection into the Equalities Act 2010 and into the Arbitration Act 1996. It would also provide clarification that discrimination includes, but is not restricted to, treating evidence from men as being of greater value than that of women, or vice versa. The Family Law Act 1996 would also be amended to allow courts to set aside any order based on a mediation settlement agreement, or other negotiation agreement, if the court believes on the basis of evidence that one party\u2019s consent was not genuine. The Bill would also place an obligation on public authorities to inform those who are married according only to certain religious practices, or those in polygamous households, that they may be without legal protection.\n \nBaroness Cox has introduced similar bills in previous sessions. In 2012\u201313 her private member\u2019s bill of the same name was given a second reading in the House of Lords on 19 October 2012. In 2015\u201316 a bill of the same name progressed to its first reading in the House of Commons but did not receive a second reading."}
      , "date" : {"_value" : "2017-01-24T11:51:37.175276+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Lords Library briefing provides information in support of the House of Lords consideration of the Arbitration and Mediation Services (Equality) Bill [HL] on 27 January 2017."], "identifier" : {"_value" : "LIF-2017-0003"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414041", "prefLabel" : {"_value" : "Lords In Focus"}
      }
      , "title" : "Arbitration and Mediation Services (Equality) Bill [HL]: Briefing for Lords Stages", "topic" : [{"_about" : "http://data.parliament.uk/terms/95582", "prefLabel" : {"_value" : "Equality"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95600", "prefLabel" : {"_value" : "Family law"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95746", "prefLabel" : {"_value" : "Sex discrimination"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/677095", "abstract" : {"_value" : "The Joint Committee on the Palace of Westminster\u2019s report, Restoration and Renewal of the Palace of Westminster, was published on 8 September 2016.\n \nThe Committee concluded that \u201cthere is a clear and pressing need to tackle the work required to the Palace of Westminster and to do so in a comprehensive and strategic manner to prevent catastrophic failure in the next decade. We have also concluded that, in principle, a full decant of the Palace of Westminster presents the best option under which to deliver this work\u201d.\n \nThe Committee published a recommended text of a motion on which its report should be debated.  The motion called for its report to be agreed.  It would trigger the next stages in the process of the Restoration and Renewal Programme, including the establishment of a Sponsor Board and Delivery Authority by legislation (and shadow bodies, in the meantime); and authorise the development of a fully costed business case for a full decant of the Palace of Westminster, subject to approval by both Houses.\n \nThe House has not yet debated the Committee\u2019s report.\n \nFurther information\n \nThe Palace of Westminster R&R Programme is to publish A high level review of the proposal suggested by Anthony Delarue Associates in their letter to Sir Edward Leigh MP of 3rd November 2016. The document is available on this page under 'Supporting documents'.\n \nThe document reviews and critiques proposals received by Sir Edward Leigh, which outlined how both Houses could remain on site during the restoration and renewal of the Palace.\n \nThe document also includes a copy of the letter that Sir Edward Leigh received.\n \nSince the Committee reported, questions have been raised about the proposals to decant the Palace of Westminster; and the Treasury Committee has announced an inquiry into the value for money of the proposals."}
      , "date" : {"_value" : "2017-01-23T19:35:24.367779+00:00", "_datatype" : "dateTime"}
      , "description" : ["Debate Pack prepared ahead of the Westminster Hall debate initiated by Chris Bryant on the restoration and renewal of the Palace of Westminster on Wednesday 25 January 2017 at 9.30am."], "identifier" : {"_value" : "CDP-2017-0030"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/61055", "prefLabel" : {"_value" : "Parliament and Constitution Centre"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Restoration and renewal of the Palace of Westminster", "topic" : [{"_about" : "http://data.parliament.uk/terms/95627", "prefLabel" : {"_value" : "House of Commons"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95628", "prefLabel" : {"_value" : "House of Lords"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/675994", "abstract" : {"_value" : "This Debate Pack has been prepared ahead of the debate on access to Kadcyla and other breast cancer drugs, to be held on Thursday 26 January.\n \nThe subject for the debate has been chosen by the Backbench Business Committee, following a representation by Siobhain McDonagh.\n \nAssessment and availability of cancer drugs in the UK \n \nThe process for the assessment of drugs\u2019 clinical effectiveness and value for money varies in different parts of the UK.  In England and Wales, the National Institute of Health and Care Excellence (NICE) produces guidance about which drugs should be available on the NHS. They look at how effective a drug is and how much it costs through a process called Technology Appraisal. Local health bodies in England and Wales must make arrangements to fund drugs that have been recommended by NICE. The Department of Health, Social Services and Public Safety in Northern Ireland also uses guidance issued by NICE in helping to determine its funding decisions.\n \nIn Scotland, the Scottish Medicines Consortium (SMC) advises NHS boards about new drugs. Like NICE, they look at how effective a drug is and how much it costs. A sub-group of the SMC called the New Drugs Committee assesses all the evidence around a newly licensed drug to help the SMC make a decision about whether or not to recommend it. NHS Quality Improvement Scotland may also review NICE guidance and decide if it should apply in Scotland.\n \nEngland is the only part of the UK that has a specific fund to pay for cancer drugs (the Cancer Drugs Fund) that have not yet been reviewed for use in the NHS. However, cancer drugs may also be funded by the Scottish Government\u2019s New Medicines Fund, set up to expand and replace the Rare Conditions Medicines Fund.\n \nFurther information about how each part of the UK decides which drugs to fund can be found on the Cancer Research UK website.\n \nKadcyla (trastuzumab emtansine)\n \nKadcyla is the brand name of a drug combining trastuzumab with another substance, emtansine. It is licensed to treat HER2-positive breast cancer which has spread to other parts of the body, cannot be surgically removed and has stopped responding to initial treatment.\n \nThe drug costs around £90,000 per patient at its full list price and recent data shows that people taking Kadcyla could live up to 9 months longer than those taking the alternative, lapatinib plus capecitabine.\n \nIn August 2014 NICE decided not to recommend funding for Kadcyla, finding that the price per patient set by the manufacturer Roche is too expensive. The SMC reached a similar decision in October 2014.\n \nKadcyla has been available on the Cancer Drugs Fund (CDF) in England but has not been available in Wales and Scotland. Following changes to the Cancer Drugs Fund that took place in July 2016 NICE has reconsidered its advice on drugs previously available through the Fund. Once NICE publishes its final guidance it will cease to be available through the Cancer Drugs Fund.\n \nAround 700 patients in England access Kadcyla through the CDF in 2015/16, and it has been estimated that around 1,200 people with HER2-positive, unresectable, metastatic breast cancer would be eligible to receive Kadcyla if it were routinely funded by the NHS.\n \nOn 29 December 2016 NICE published draft guidance, confirming its original recommendation that Kadcyla should not be routinely funded on the NHS. NICE is currently consulting on its draft guidance and is expected to take a final decision in March 2017. (Consultation on the draft guidance was open until 20 January 2017. Kadcyla will continue to be available through the Cancer Drugs Fund while the NICE appraisal is ongoing:\n \nhttps://www.nice.org.uk/news/article/kadcyla-too-expensive-for-routine-funding-on-nhs\n \nIf the final NICE guidance remains negative patients already receiving the drug via the CDF will continue to receive it until the patient and their prescribing physician consider it appropriate to discontinue treatment. From 90 days after the publication of the final guidance no new patients will be able to receive Kadcyla from the CDF.\n \nBreast cancer patients and charities have raised concerns about the potential withdrawal of access to Kadcyla. See Sections 2 and 3 of this briefing pack for further information."}
      , "date" : {"_value" : "2017-01-23T16:28:53.8933094+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Debate Pack has been prepared ahead of the debate on access to Kadcyla and other breast cancer drugs, to be held on Thursday 26 January. The subject for the debate has been chosen by the Backbench Business Committee, following a representation by Siobhain McDonagh."], "identifier" : {"_value" : "CDP-2017-0029"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Access to Kadcyla and other breast cancer drugs", "topic" : [{"_about" : "http://data.parliament.uk/terms/95554", "prefLabel" : {"_value" : "Diseases"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/670449", "abstract" : {"_value" : "This briefing paper deals with the position in England and Wales unless otherwise stated.\n \nCivil partnership and marriage across the UK\n \nIn England, Wales and Scotland, same sex couples have the option to marry or to register a civil partnership if they wish to gain legal recognition for their relationship. In Northern Ireland, same sex couples may register a civil partnership but may not marry.  Across the UK, opposite sex couples may marry but they may not register a civil partnership.\n \nWhen consulting on the introduction of marriage for same sex couples, the Coalition Government considered that it was unnecessary to extend civil partnership to opposite sex couples, given the availability of both civil and religious marriage.\n \nStatistics on civil partnerships and marriage of same sex couples\n \nFollowing the introduction of marriage for same sex couples in England and Wales in March 2014, and in Scotland in December 2014, the number of civil partnerships fell. There were just over a thousand civil partnerships formed in the UK in 2015. Between 29 March 2014 and 30 June 2015, there were 7,366 marriages formed between same sex couples in England and Wales. Couples in civil partnerships in England and Wales have been able to convert their civil partnership into a marriage since 10 December 2014.  Between that date, and 30 June 2015, 7,732 couples converted their civil partnership into a marriage in England and Wales.  In 2015, there were 1,671 marriages formed between same sex couples in Scotland, of which 936 were between couples who were already in a civil partnership.\n \nConsultations on the future of civil partnership\n \nIn 2014, the Coalition Government consulted on the future of civil partnership in England and Wales. Among other things, the Government asked for views on opening up civil partnership to opposite sex couples.  In June 2014, the Coalition Government stated that, in responses to the consultation, there was no united call for reform and that it had decided not to do anything at that time.\n \nThe Scottish Government has also consulted on the future of civil partnership in Scotland. Although their consultation paper asked for views on the subject, the Scottish Government stated that it was not persuaded that opposite sex civil partnership should be introduced in Scotland. The Scottish Government has stated that it will announce its decision about the future of civil partnership \u201cin due course\u201d.\n \nCalls for civil partnership to be opened to opposite sex couples\n \nCalls continue to be made for civil partnership to be made available to opposite sex couples. Supporters of this position argue that opposite sex couples, like same sex couples, should be able to choose whether to marry or to register a civil partnership.\n \nLegal challenge\n \nIn January 2016, an opposite sex couple lost their claim for judicial review of the ban on civil partnership for opposite sex couples. The couple have appealed to the Court of Appeal: the hearing took place in early November 2016, but the judgment has not yet been made public.\n \nPrivate Member's Bill\n \nThe Civil Partnership Act 2004 (Amendment) Bill 2016-17 (the Bill) is a Private Member\u2019s Bill which was presented to Parliament by Tim Loughton on 21 July 2016.  The intent of the Bill is to amend the Civil Partnership Act 2004 to provide that opposite sex couples may enter into a civil partnership.  A second reading debate took place on 13 January 2017 but was adjourned until 24 March 2017.\n \nGovernment position\n \nThe Government has previously confirmed that it did not intend to consult further on the future of civil partnership or to change the law. In December 2016, the Government declined to comment pending the ongoing legal action, but said that there would be an update on the Government\u2019s position on civil partnership once legal proceedings had concluded.\n \n "}
      , "date" : {"_value" : "2017-01-23T15:18:24.3997815+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library briefing paper considers the calls made by some for civil partnership to be made available to opposite sex couples"], "identifier" : {"_value" : "CBP-7856"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "The future of civil partnership", "topic" : [{"_about" : "http://data.parliament.uk/terms/95521", "prefLabel" : {"_value" : "Civil partnerships"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95600", "prefLabel" : {"_value" : "Family law"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/677050", "abstract" : {"_value" : "Carbon capture and storage \u2013 a definition\n \nCarbon capture and storage (CCS) is a way of \u2018decarbonising\u2019 fossil fuel power generation, through capturing and storing the carbon dioxide (CO2) produced. \n \nCCS involves three steps;\n \n Capturing carbon dioxide (CO2) from power plants or industry, and compressing it to a liquid state Transporting the CO2 (usually via pipelines) to deep geological storage points such as depleted oil and gas fields or deep saline aquifers; and Storing the CO2 in these sites. \n \nCO2 can be captured pre- or post-combustion;  \n \n Post-combustion removes CO2 from flue gases. This can be retro-fitted. Pre-combustion reacts the fuel with oxygen, air, or steam, and after a further catalytic process removes the CO2 and uses the hydrogen left over as fuel in a combined cycle gas turbine generating station. Only new fossil fuel power plants can be equipped with this. Oxyfuel technology burns fossil fuels with nearly pure oxygen producing a flue gas of CO\u2082 and steam; the water condenses leaving flue gas of almost pure CO\u2082. This can be applied to new and existing fossil fuel stations.[1] \n \nThe ideal site for CCS generation is therefore close to a storage reservoir like depleted oil and gas fields and saline aquifers. A network of onshore and offshore pipelines to transport the captured CO2 is also required.[2]  This could perhaps even be on a scale equivalent to the North Sea oil and gas industry.[3]\n \nCCS is regulated through a licensing regime laid out in the Energy Act 2008 (section 1(5)). The Secretary of State for Business, Energy and Industrial Strategy (BEIS) is the licensing authority for offshore storage except within the territorial sea adjacent to Scotland.[4]\n \nThe role of CCS in meeting UK carbon targets\n \nThe 2008 Climate Change Act requires the Government to set five-yearly carbon budgets at least 12 years in advance after taking the independent advice of the Committee on Climate Change.[5]\n \nThe first three budgets were approved in 2009 by the Government following the advice of the CCC. The fourth budget, agreed in 2011 and covering 2023-27, set an emissions reduction target in the UK of 50% by 2025 compared to 1990 levels. The advice on the fifth budget from the CCC, The fifth carbon budget: The next step towards a low-carbon economy,  proposed the budget should be set at 1,765 MtCO2e for 2028-2032, which would equate to a 57% reduction in emissions compared to 1990 levels.  This included the following recommendation on the carbon intensity (amount of carbon dioxide emitted per unit of power) for the power sector and the role of CCS:\n \n The Government should develop policy approaches consistent with reducing carbon intensity of the power sector to below 100 gCO2/kWh in 2030 (compared to 450 gCO2/kWh in 2014 and 200-250 gCO2/kWh expected by 2020). This reduction could be delivered by a range of different mixes of low-carbon generation (i.e. renewables, nuclear and plants fitted with carbon capture and storage \u2013 CCS) to reach a total share of around 75% of generation by 2030. It is important that the low-carbon portfolio includes roll-out in the 2020s of offshore wind and CCS given their long-term importance and the role of UK deployment in driving down costs.[6] \n \nIn 2015, the then Secretary of State for Energy and Climate Change Amber Rudd pledged ahead of the Paris UN Climate Change conference to phase out unabated coal \u2013 that is coal that cannot be captured and stored through carbon capture storage   \u2013 by 2025. The pledge was not unconditional: it is contingent on a shift to gas within that timescale.\n \nTo decarbonise to the extent that the CCC has recommended would require CCS to also be applied to gas electricity generation. The CCC\u2019s view is that \u201cthe period to 2032 will be vital to the development of carbon capture and storage, which has the potential to almost halve the cost of meeting the UK\u2019s 2050 target\u201d.[7] The Government accepted the advice of the CCC for the fifth carbon budget and in June 2016 Lord Debden, Chair of the CCC welcomed the decision:\n \n The Government\u2019s commitment to reduce UK emissions by 57% by 2030 will open up opportunities for UK businesses both at home and abroad. It also demonstrates the continued broad political consensus to tackle the serious risks posed by climate change.[8] \n \nThe second carbon capture and storage competition\n \nThe UK has ambitions to be at the forefront of CCS development,[9] given access to depleted oil and gas fields where carbon could be stored, and the potential rewards, such as up to 60,000 jobs by 2030.[10]\n \nHowever, CCS generation is not yet proven on a large scale in the UK, and nor is long-term storage, despite a series of UK Government and EU initiatives aimed at incentivising its development. It has been argued that CCS technology is too expensive to be commercially viable for private developers without government support in the shape of a strike price.[11]  However, a review by the Parliamentary Advisory Group on CCS argued that good design could make CCS affordable.[12]\n \nIn March 2013 Peterhead (Aberdeenshire)[13] and the White Rose Project (Yorkshire)[14] were named as the two preferred bidders in the second UK CCS Commercialisation Competition. Both these projects were subsequently called off when one of the bidders (Drax) pulled out of the project and when the Government cancelled the £1 billion CCS Competition in the 2015 Spending Review.[15]\n \nThis was the second CCS competition to be cancelled following the first one running 2007-2011. In a report published on 20 January 2017, the National Audit Office calculated that £168 million (in 2015-16 prices) were spent by BEIS on these two CCS competitions.[16]\n \nPlanning permission for the Yorkshire Humber CCS Trunkline \u2013 a 75-kilometre pipeline between Drax in North Yorkshire and Barmston in the East Riding of Yorkshire that was linked to the White Rose Project \u2013 was also formally rejected by Greg Clark on 12 January 2017.\n \nWhat next for CCS in the UK?\n \nThere are currently no CCS projects left open for consideration in the UK. The Oxburgh Review, commissioned by the Government, and the Committee on Climate Change, both came out in 2016 in favour of reviving CCS in the UK:\n \n Oxburgh Review: The group agrees carbon capture and storage is an essential component in delivering lowest cost decarbonisation across the whole UK economy. [\u2026] UK action on CCS now will deliver lowest cost to the consumer. There is no justification for delay. Heavy costs will be imposed on current and future UK consumers by a continued failure to enact an effective CCS policy[17] Committee on Climate Change: Carbon capture and storage is of critical importance to meet the UK\u2019s carbon targets at least cost and to fulfil the ambition of the Paris Agreement.[18] \n \nHowever, as part of its obligations under the Climate Change Act, the Government is due to publish its Emissions Reductions Plan \u2013 expected in March 2016 -  setting out polices  aimed at meeting the UK\u2019s decarbonisation targets. It is widely expected to provide clarity on CCS.\n \nThis was confirmed by the Minister for Nick Hurd in evidence to the Business, Energy and Industrial Strategy Committee in January 2017. He told the Committee that the issue of CCS would be revisited and that the upcoming Emissions Reduction Plan and Industrial Strategy will provide information on the Government\u2019s thinking. He summarised the position as follows\n \n I know, because of the cancellation of the competition, that we may have given the impression that we are not interested in CCS, but that is not true at all. We are interested in finding a smarter path forward to see whether we can reduce the cost of it, which is too high, and give ourselves some intelligent optionality on it, in the future. [\u2026] The problem we have is that the taxpayer has spent quite a lot of money in the past, running to hundreds of millions, to achieve not very much. I think it was the right decision to cancel the competition. Actually, the advice I have received says that that probably was the right decision; it was not set up in the right way. We now have to find a smart path forward and we have to engage with industry to get its buy-in. We have to engage with places. The Secretary of State has made it clear that the industrial strategy is going to be heavily rooted in place. There are places in the country that are very keen to develop CCS, and part of my priority is to work through this with them and the industry. The past is the past; this could play a very important part in the future. What is the smartest route forward to give ourselves some optionality on this?[19] \n \nThe Minister also identified the overriding problems with CCS as \u201cthe cost of it, the question of who pays, the incentive structures and the investment and regulatory framework around it\u201d and that because of it the Government \u201chas had to think again\u201d.[20] The Government later confirmed in a written answer that it was studying the recommendations from the Oxburgh review and that it would \u2018set out its approach to CCS in due course.\u2019[21]\n \nCCS and Brexit\n \nThe EU supports CCS research and demonstration projects through the research framework programmes Framework Programme 7 and Horizon 2020, the NER 300 scheme and the European Energy Programme for Recovery (EEPR).\n \nAs set out by the Government in 2015, the UK benefitted from some of these programmes for two CCS projects:\n \n \u201cIn 2009 the Don Valley Project was awarded a \u20ac180m European Energy Programme for Recovery grant which contributes towards the feasibility and design phase of the project's development. The award is still in place and ~\u20ac125m has so far been claimed. In 2013 the White Rose CCS project was awarded up to \u20ac300m in potential NER300 funding. This award, which remains available, is subject to the project being able to successfully store carbon dioxide before the end of June 2020\u201d.[22] \n \nSince the UK voted to leave the EU, questions have been asked regarding the future of these funding allocations:\n \n Diana Johnson (Kingston upon Hull North): To ask the Secretary of State for Business, Energy and Industrial Strategy, what assessment he has made of when the UK will lose EU funding previously allocated to the UK for carbon capture and storage programmes. Jesse Norman: Two UK carbon capture and storage (CCS) projects have been allocated funding by the European Commission (Don Valley and White Rose); the status of this funding is subject to further discussions with the European Commission. The UK is also participating in a European Research Area Network (ERA-NET) on CCS under the Horizon 2020 programme. On 13 August 2016, the Secretary of State for Business, Energy and Industrial Strategy (BEIS) confirmed that the Government will underwrite certain EU funding, including approved Horizon 2020 research and development and innovation projects, regardless of the UK\u2019s relationship with the EU.[23] \n \nThe Government also restated recently that it was still supporting research and development projects into CCS and was committed to continue to do so.[24]\n \n[1]     A good description of CCS technology is available on the archived Office of Carbon Capture and Storage (OCCS) website. \n \n[2]     Overarching National Policy Statement for Energy (EN-1) DECC July 2011 p.54\n \n[3]     Royal Academy of Engineering, Generating the Future: UK energy systems fit for 2050, 18 March 2010, p14\n \n[4]     Oil and Gas Authority, Licensing and consents \u2013 UK carbon capture and storage\n \n[5]     The CCC was set up by the 2008 Act as an independent body to advise the Government on targets, and to report yearly to Parliament on whether those targets will be met.\n \n[6]     Committee on Climate Change, The Fifth Carbon Budget: The next step towards a low-carbon economy, November 2015\n \n[7]     Ibid., p.28\n \n[8]     The CCC, CCC welcomes Government backing for fifth carbon budget and continued ambition to meet 2050 target, 30 June 2016\n \n[9]     Department for Energy and Climate Change, Clean coal: an industrial strategy for the development of carbon capture and storage across the UK, March 2010, p16\n \n[10]    HC Deb 28 January 2010 c 343WH\n \n[11]    See for instance Carbon Capture and Storage Association, Lessons Learned \u2013 Lessons and evidence derived from UK CCS programmes, 2008-2015, 29 June 2016\n \n[12]    \u2018There is a widespread view that CCS has to be expensive. On the contrary, the high costs revealed by the earlier UK approaches reflected the design of these competitions, rather than the underlying costs of CCS itself\u2019, Lowest Cost Decarbonisation for the UK: The Critical Role of CCS, Report of the Parliamentary Advisory Group on CCS, September 2016, p.5\n \n[13]    The Peterhead CCS Project involved capturing around 85% of the CO2 from the gas-fired power plant at Peterhead, before transporting and storing it offshore in a depleted gas field beneath the North Sea. (See BEIS, Guidance: UK carbon capture and storage: government funding and support)\n \n[14]    The White Rose CCS Project in North Yorkshire proposed to capture around 90% of the CO2 from a new coal-fired power plant at Drax before transporting and storing it offshore in a saline rock formation beneath the North Sea. (See BEIS, Guidance: UK carbon capture and storage: government funding and support)\n \n[15]    DECC, HM Government Statement Re Carbon Capture, Storage, RNS Number: 9664G, 25 November 2015\n \n[16]    National Audit Office, Carbon Capture and Storage: the second competition for government support, 20 January 2017\n \n[17]    \u2018Oxburgh Review\u2019: Lowest Cost Decarbonisation for the UK: The Critical Role of CCS, Report of the Parliamentary Advisory Group on CCS, September 2016, p.4\n \n[18]    Committee on Climate Change, Letter to Rt Hon Amber Rudd: A strategic approach to Carbon Capture and Storage, 6 July 2016\n \n[19]    BEIS Committee, Oral evidence: Outcomes of Marrakesh COP22, HC 923, 10 January 2017, Q28\n \n[20]   Ibid Q30\n \n[21]    PWQ 58702, Carbon Emissions, 13 January 2017\n \n[22]    PWQ 18630, Carbon Sequestration: EU Grants and Loans, 14 December 2015\n \n[23]    PWQ 43539, Carbon Sequestration: EU Grants and Loans, 5 September 2016\n \n[24]    See for instance PWQ 54710 further in this publication."}
      , "date" : {"_value" : "2017-01-23T12:59:04.1542505+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Debate pack has been prepared for the debate on UK decarbonisation and carbon capture and storage to take place in Westminster Hall on Tuesday 24 January 2017 at 2:30pm. The subject for debate has been chosen by Philip Boswell, MP for Coatbridge, Chryston and Bellshill."], "identifier" : {"_value" : "CDP-2017-0023"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/67716", "prefLabel" : {"_value" : "Science and Environment Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "UK decarbonisation and carbon capture and storage", "topic" : [{"_about" : "http://data.parliament.uk/terms/95523", "prefLabel" : {"_value" : "Climate change"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95578", "prefLabel" : {"_value" : "Energy"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/677046", "abstract" : {"_value" : "Vaccination, antimicrobial drugs and improved hygiene mean that infectious disease has been overtaken by non-communicable disease (cancer, cardiovascular disease and diabetes) as the main cause of death globally and in the UK. However infections are still a significant health and economic burden to the UK.\n \nThis POSTnote describes recent trends in infections of particular concern in the UK. It outlines the trends that largely result from the capacity of infectious pathogens (disease causing agents) to develop resistance to existing drugs, the emergence of new infections and the re-emergence of infections linked to health inequalities or other factors. Infections are caused by viruses, bacteria, fungi, protozoa, parasites or prions. The epidemiology (causes, patterns and effects) of infectious disease are determined by the interplay of numerous factors: the individual (sex, age, health status, immunity and behaviour), the pathogen (its pathogenicity and ability to mutate) and the environment (climate, air quality and socio-economic factors such as income, quality of nutrition and housing).\n \nOverview of Key Points\n \n Infectious diseases are a significant health and economic burden in the UK, accounting for 7% of deaths and annual costs of £30bn. The national immunisation programme is widely considered to be the most effective public health intervention in the UK. There are a number of infections of particular public health concern for the UK for which there are vaccines in the early phases of development. Another area of policy interest is antimicrobial resistance. Few of the most needed new drugs are currently in development. \n \nPOST is grateful to Public Health England and the Department of Health for supplying the data used in this paper and for reviewing the content."}
      , "date" : {"_value" : "2017-01-23T11:06:01.1478936+00:00", "_datatype" : "dateTime"}
      , "description" : ["This POSTnote looks at recent UK trends in infectious disease, with a focus on those infections for which vaccines are not yet available, and where the development of antimicrobial resistance is a serious concern."], "identifier" : {"_value" : "POST-PN-0545"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/61081", "prefLabel" : {"_value" : "POST"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/61081", "prefLabel" : {"_value" : "POST"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/346721", "prefLabel" : {"_value" : "POSTnotes"}
      }
      , "title" : "UK Trends in Infectious Disease", "topic" : [{"_about" : "http://data.parliament.uk/terms/95554", "prefLabel" : {"_value" : "Diseases"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95619", "prefLabel" : {"_value" : "Health education and preventive medicine"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95673", "prefLabel" : {"_value" : "Medicine"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95737", "prefLabel" : {"_value" : "Research and innovation"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95741", "prefLabel" : {"_value" : "Science"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/677045", "abstract" : {"_value" : "The Pubs Code came into effect on 21 July 2016. The Code only applies in England and Wales and affects approximately 12,000 tied tenants of the six largest pub owning companies.\n \n The legislation creating the Pubs Code was contained in the Small Business, Enterprise and Employment Act 2015. The legislation only outlined the general principles of the Code and the role of its Adjudicator. The sponsoring Department, the then Department for Business, Innovation and Skills, revealed more details of the Code and its operation once it had analysed the responses to two consultation exercises it carried out in October and December 2015. The Code was laid before Parliament in July 2016 in the form of two Statutory Instruments .\n \nIt was thought necessary to introduce the Legislation creating the Pubs Code and its Adjudicator following several Select Committee investigations over a number of years. This was mainly due to the perceived disparity in negotiating power between individual tenants and the major pub groups. As the Bill progressed through Parliament Members succeeded in increasing the scope of the proposed powers of the Code. Probably the most important change to the Bill was to introduce the Market Rent Only (MRO) option. This gives tenants greater flexibility in how they operate their pubs by allowing them greater choice on the level of their ties to the pub owners.\n \nThe operation of the Pubs Code will be overseen by the newly created post of the Pubs Code Adjudicator (PCA). With a long history of distrust between some tied tenants and the pub owning companies it was recognised that the perceived impartiality of the PCA was crucial for the Code to operate successfully. Concerns were raised by some tied tenants and organisations when it was announced that Paul Newby had been appointed as the first PCA.\n \n During his career as a Chartered Surveyor Mr Newby has personally worked on a number of projects with several of the major pub companies. Furthermore the partnership he worked for, and continues to have some financial links to, is likely to continue to work closely with these companies. Concerns have been expressed that this will create conflicts of interest is his new role when acting as an arbiter between tenants and these companies.\n \nBoth the MRO and PCA issues featured extensively in a Westminster Hall debate on 14 April 2016 and when the PCA appeared before the Department for Business, Innovation and Skills Committee on 10 May 2016."}
      , "date" : {"_value" : "2017-01-23T10:20:17.7225574+00:00", "_datatype" : "dateTime"}
      , "description" : ["The Statutory Pubs Code and the Adjudicator.\n\nThis is a debate pack for the Backbench Business debate on 26 January 2017. The Backbench Business Committee allocated time for the debate following the request made to it by Mr Greg Mulholland and Mr Laurence Robertson on 6 December 2016.\nIt summarises the role of the Adjudicator and why it was thought necessary to create the Pubs Code. It also provides background material on the continuing controversy over the appointment of Paul Newby as the first Adjudicator and how the Code is perceived to be operating since coming into effect on 21 July 2016."], "identifier" : {"_value" : "CDP-2017-0027"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Statutory Pubs Code and the Pubs Code Adjudicator", "topic" : [{"_about" : "http://data.parliament.uk/terms/95531", "prefLabel" : {"_value" : "Competition"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/669457", "abstract" : {"_value" : "Master Trusts are trust-based occupational pension schemes which seek to generate economies of scale by serving multiple employers, who may be entirely unrelated. Whereas traditional trust-based schemes are set up a by a single employer with an interest in it, Master Trusts are set up by a product provider, who installs a group of trustees to run it. The provider also supplies administration and investment services to the trustees. Employers can use Master Trusts to provide pensions for their workers, rather than setting up their own or using a Group Personal Pension (regulated by the Financial Conduct Authority).\n \nThe use of Master Trusts has grown with the introduction of duties on employers to automatically enrol their workers into a workplace pension. Almost half (49%) of individuals auto-enrolled so far, have been enrolled into a Master Trust (PPI, The Future Book 2016, p16). In January 2016, Master Trusts had over 4 million members, up from 0.2 million members in 2010. (DWP, Impact Assessment, September 2016).\n \nIn May 2016, the Work and Pensions Select Committee described Master Trusts as a \u201cgood fit\u201d with auto-enrolment because they provide the \u201congoing oversight of investments provided by a trustee board at lower operating costs than single employer schemes, through economies of scale from pooling administrative functions\u201d. However, it called for stronger regulation:\n \n Gaps in pension law and regulation have allowed potentially unstable master trusts onto the market. Should one of these trusts collapse, there is a real danger that ordinary scheme members could lose retirement savings. There is also a risk that faith in auto-enrolment as a whole will be undermined. We support the Minister\u2019s call for a Pensions Bill to introduce stronger regulation of master trusts. We recommend the Bill makes provision for the Pensions Regulator (TPR) to have power to enforce: minimum financial and governance standards for market entry; ongoing requirements for Master Trust schemes, which might include making compliance with the Master Trust assurance framework mandatory; and measures to protect member assets in the event of a Master Trust winding up. (HC 579, March 2016). \n \nThere is now widespread agreement that the current regulatory framework for trust-based occupational pension schemes is inadequate for Master Trusts. This is because: \n \n It developed with single-employer schemes in mind and assumes an employer having an ongoing interest in the running of the scheme. Many Master Trusts were set up to make a profit, which gives rise to the need for a different type of regulation to ensure member benefits are protected. Master Trusts operate on a scale unprecedented in occupational pensions and the collapse of a large scheme has potential to create a greater shock than would be the case with a single employer scheme (Impact Assessment, para 15-19). \n \nA Master Trust Assurance Framework has been developed by the Pensions Regulator (TPR) and the Institute of Chartered Accountants in England and Wales. However, it is voluntary and does not address risks relating to financial stability and ensuring the provider holds sufficient capital in reserve.\n \nThe Pension Schemes Bill [Bill 125- 2016-17] aims to ensure those saving in a Master Trust are protected. It would provide that:\n \n An authorisation and supervision regime for Master Trusts will be introduced, so that Master Trusts would have to demonstrate to the Pensions Regulator that they meet certain key criteria on establishment, and then continue to do so. Existing Master Trusts will be brought into the regime and required to meet the new criteria. Requirements will be placed on trustees to act in certain ways in the event of wind up or closure of a Master Trust to protect members in those circumstances. \n \nThe Pensions Regulator is provided with greater powers to take action where the key criteria are not met. (Bill 125 - EN)\n \nThe Bill has now passed through its stages in the House of Lords.\n \nMuch of the detail is left to regulations, on which the Government has not yet consulted. In response to concerns that there would be insufficient opportunity for parliamentary scrutiny, the Government made amendments so that more regulations would be subject to the affirmative parliamentary procedure in the first instance (DEP 2016-0916). There is to be initial consultation on the details in autumn 2017, with implementation planned for October 2018 (although some provisions take effect from October 2016). (HL Deb 19 December 2016 c1489; HL Deb 1 November 2016 c561).\n \nThe House voted by 209 votes to 204 to accept an Opposition amendment that would require the Government to \u201cmake provision for a funder of last resort\u201d (clause 9 of HL Bill 87). This was opposed by the Government, which argued that it would be a \u201ccostly and disproportionate response.\u201d However, Baroness Drake said that, in the event of event of regulatory failure and a trust not having the means to finance wind-up, there was \u201cnothing in the Bill to show how a member is protected\u201d and \u201cno answer to the question of who will bear the costs.\u201d (HL Deb 19 December 2016 c1504-9 and section 4.3 below).\n \nOther issues of debate included:\n \n How to ensure member engagement, given that there is an acknowledged \u2018principal-agent problem\u2019 with Master Trusts \u2013 where an employer chooses a scheme for the member but does not have the same incentive as the member (for example, to ensure good outcomes and value for money). The Government said regulations would be used to ensure the regulator took account of a scheme\u2019s systems and processes for member communications and engagement in making decisions on applications for authorisation (see section 4.2 below); The requirement for Master Trusts to have a separate scheme funder (i.e. to carry out only activities relating directly to the Master Trust for which it is a scheme funder). The insurance industry argued that this would result in unnecessary cost and duplication: where schemes were funded by an FCA-regulated entity, they already had to meet robust capital requirements and could benefit from economies of scale \u2013 with shared staff, systems and premises for multiple business lines. However, the Government argued that separation was essential to enable the regulator to assess the financial positon of the scheme with certainty (see section 4.3 below); Whether conflicts of interest will be dealt with effectively. For example, many Master Trusts are set up with a profit motive, and so have obligations to shareholders. This is different to the position for single-employer trust-based schemes, where trustees have a fiduciary duty to act in the best interests of scheme members. In response to questions on this point, Ministers said conflicts of interests would be addressed through the governance requirements applying to occupational pension schemes generally (see section 4.6 below). The impact of a \u2018pause order\u2019 (under which TPR to require schemes to pause certain activities following a triggering event) on members\u2019 rights to contributions or to payment of their pension. Peers argued that the pause order should not be able to trump members\u2019 rights to employer contributions and tax relief and that there was a lack of clarity on the potential impact of a pause order on vulnerable people \u2013 who might be dependent on their pension payments. Ministers responded that the purpose of the order was to allow the regulator to go in and make sure the problem was sorted (see section 4.8 below); The extent of charges that can be applied (see sections 4.7 and 11 below). \n \nThe Bill as brought to the Commons from the Lords - Pension Schemes Bill [Bill 125 \u2013 2016-17] - is scheduled to have its Second Reading on 30 January 2017. Details are on the Parliament website."}
      , "date" : {"_value" : "2017-01-20T17:55:15.8275859+00:00", "_datatype" : "dateTime"}
      , "description" : ["Looks at provisions to regulate Master Trusts (a kind of pension scheme used by many employers for auto-enrolment) in the current Pension Schemes Bill"], "identifier" : {"_value" : "CBP-7758"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Master Trust regulation", "topic" : [{"_about" : "http://data.parliament.uk/terms/95708", "prefLabel" : {"_value" : "Pensions"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/676000", "abstract" : {"_value" : "Summary\n \nIn February 2015, the then Prime Minister David Cameron and the then Chancellor George Osborne launched 15 year economic plan to \u201cmake the Midlands the Engine for Growth in the UK.\u201d\n \nA prospectus published in December 2015 agreed on an economic plan based around five themes:\n \n Promotion of the region to encourage domestic and foreign investment. Creation of a long term transport investment strategy through the Midlands Connect Partnership. Collaboration between businesses and universities to drive business innovation and improve business productivity and competitiveness. Creation of a single, region-wide \u201cfund of funds\u201d to provide financial support to SMEs in the region. Collaboration between the employer base and skills providers to ensure skills provision is tailored to employer demand. \n \nIn April 2016, the BIS Select Committee launched an inquiry into the Northern Powerhouse and Midlands Engine; this was rolled into the BEIS Select Committee\u2019s inquiry on industrial strategy, which is ongoing."}
      , "date" : {"_value" : "2017-01-20T17:09:13.8621147+00:00", "_datatype" : "dateTime"}
      , "description" : ["This debate pack has been prepared ahead of the debate on the Midlands Engine to be held in Westminster Hall on Tuesday 24 January at 9.30am. The subject for debate has been chosen by Chris White MP."], "identifier" : {"_value" : "CDP-2017-0021"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "The Midlands Engine", "topic" : [{"_about" : "http://data.parliament.uk/terms/363582", "prefLabel" : {"_value" : "Regional planning and development"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95560", "prefLabel" : {"_value" : "Economic policy"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/675987", "abstract" : {"_value" : "UK relations with West African countries are as varied as the region itself. Historically, ties have been much closer with the \u2018Anglophone\u2019 countries, rather than their \u2018Francophone\u2019 counterparts. This remains broadly true today, although the UK also has plenty invested in the future of Francophone countries like Mali and Cote d\u2019Ivoire. One thing which all West African countries have in common is an interest in what the (as yet unclear) implications of Brexit will be for the UK\u2019s development policies and programmes.\n \nMembers participating in this debate might wish to discuss a host of issues under this heading, but amongst those which might justify consideration are:\n \n The trajectory of the political crisis in The Gambia, which is coming to a head at the time of writing, and the country\u2019s future prospects The continuing struggle of President Muhammadu Buhari to get on top of the multi-dimensional challenges he and Nigeria faces Ongoing security challenges in Mali (and the Sahel as a whole), where efforts to defeat jihadi groups are still some way from success Amidst army mutinies, how robust Cote d\u2019Ivoire\u2019s recovery really is following the bitter civil war there Ghana\u2019s recent peaceful transition from one president to another following December 2016 elections Post-Ebola recovery efforts in Sierra Leone, Liberia and Guinea The achievements and (failures?) of regional political and economic cooperation under the auspices of the Economic Community of West African States \n \n For general information about UK policy in specific West African countries, google \u201cUK and [ADD NAME OF COUNTRY].\n \n For information about UK aid to specific West African countries, see the government website \u2018Development Tracker\u2019.\n \n For BBC country profiles, click on this link."}
      , "date" : {"_value" : "2017-01-20T15:34:32.5760452+00:00", "_datatype" : "dateTime"}
      , "description" : ["The House of Commons Library prepares a briefing in hard copy and/or online for most\u202fnon-legislative debates in the Chamber and Westminster Hall other than half-hour debates.\u202fDebate Packs\u202fare produced after the announcement of parliamentary business. They are intended to provide a summary or overview of the issue being debated and identify relevant briefings and useful documents, including press and parliamentary material. More detailed briefing can be prepared for Members on request to the Library."], "identifier" : {"_value" : "CDP-2017-0028"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "UK relations with West African countries", "topic" : [{"_about" : "http://data.parliament.uk/terms/95479", "prefLabel" : {"_value" : "Africa"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95646", "prefLabel" : {"_value" : "International development"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95651", "prefLabel" : {"_value" : "International trade"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/675984", "abstract" : {"_value" : "This House of Lords Library briefing has been prepared in advance of a debate that is scheduled to take place in the House on 26 January 2017 on the following motion:\n \n Baroness Hayter of Kentish Town to move that this House takes note of the impact of the United Kingdom\u2019s withdrawal from the European Union and potential withdrawal from the single market on the rights of European Union citizens living in this country and the United Kingdom\u2019s future economic requirements. \n \nThe European single market is an internal market which currently encompasses all 28 EU member states. A number of other European countries outside the EU also participate in the single market, such as Iceland, Liechtenstein and Norway, who are parties to the European Economic Area (EEA) agreement, and Switzerland, which has a number of bilateral agreements with the EU. The UK joined the then European Economic Community (EEC) in January 1973, with the single market as it exists today being established in 1992. The single market provides for the \u2018four freedoms\u2019 within the EU: the freedom of movement for goods, services, capital and people.\n \nIn a speech on 17 January 2017, the Prime Minister, Theresa May, confirmed that the Government, in negotiating the UK\u2019s withdrawal from the EU, would seek a bespoke model for future UK-EU relations. As part of this, Mrs May announced that the UK would not retain its membership of the single market. She said that the Government would seek to protect the rights of EU citizens living in the UK on the basis that the same rights were afforded to UK citizens living in EU countries.\n \nThis briefing explores the possible impact on the rights of EU citizens living in the UK following the Prime Minister\u2019s announcement that the UK will not retain its membership of the single market on its withdrawal from the EU. It focuses on the current and future legal status of non-UK EU citizens in the UK and considers the possible effects of withdrawing from the single market on the UK\u2019s labour force. In the context of the UK\u2019s future economic requirements, the briefing concludes with an examination of the possible implications of leaving the EU for UK economy, trade and financial services.\n \nIt does not examine the different models that the UK may adopt once it has formally withdrawn from the EU. Nor does it examine the future implications for immigration between EU countries and the UK. The House of Lords Library briefing on Leaving the European Union: Future UK-EU Relationship explores both issues in further detail."}
      , "date" : {"_value" : "2017-01-20T15:09:55.3598283+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Library briefing will examine the impact on the rights of EU citizens living in the UK of the UK\u2019s decision to formally withdraw from the EU. It will also consider the arguments regarding the UK\u2019s future economic requirements of the UK."], "identifier" : {"_value" : "LLN-2017-0006"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/346713", "prefLabel" : {"_value" : "Lords Library notes"}
      }
      , "title" : "Leaving the European Union: The Single Market, the Rights of EU Citizens in the UK and the UK\u2019s Future Economic Requirements", "topic" : [{"_about" : "http://data.parliament.uk/terms/95561", "prefLabel" : {"_value" : "Economic situation"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95636", "prefLabel" : {"_value" : "Immigration"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95647", "prefLabel" : {"_value" : "International economic relations"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/625108", "abstract" : {"_value" : "In 2015, there were 6,188 deaths in the UK where the cause was determined as suicide. The suicide rate in the UK has fallen by 26% since 1981. The rate has not changed substantially since around 2003, though it is slightly higher now than its lowest point in 2007.\n \n \n \n \nSuicide rates are higher in Northern Ireland than in England and Wales. Northern Ireland\u2019s suicide rate rose sharply between 2004 and 2008.\n \n \nThe suicide rate among men is three times higher than among women. This gap has grown since the 1980s, as rates among women have fallen at a faster rate than among men. The gender gap is widest in Scotland, and narrowest in Wales.\n \n \n \n \nSuicide rates are highest among ages 40-54. Among men aged 20-49 and women aged 20-34, suicide is the most common cause of death. Among men aged 20-29, suicides make up over 30% of avoidable deaths.\n \n \n \n \nOf English regions, suicide rates are highest in the North East and lowest in London. Rates have also fallen the fastest in London \u2013 in the 1980s, London had the highest rates. (Click to enlarge chart below)\n \n \nIn Scotland, there is a link between suicide rates and deprivation. Rates among the most deprived people are three times higher than among the least deprived people. However, this gap has narrowed over the last decade.\n \n \n \n \n \n \n \n \n \nHealth Committee Inquiry\n \nIn late 2016, the Health Select Committee undertook an inquiry into suicide prevention. You can follow their hearings here, and read submitted evidence and their interim report here.\n \n \n \nGetting help\n \nIf you are affected by the themes of this briefing paper, you can call Samaritans on 08457 90 90 90 (UK) 1850 60 90 90 (ROI) or visit the Samaritans website to find details of the nearest branch.\n \nIf you are covering a suicide-related issue, please consider following the Samaritans\u2019 media guidelines on the reporting of suicide, due to the potentially damaging consequences of irresponsible reporting."}
      , "date" : {"_value" : "2017-01-20T14:38:39.4428058+00:00", "_datatype" : "dateTime"}
      , "description" : ["A summary of statistics on suicide rates in the UK. Includes charts and data on England, Scotland, Wales and Northern Ireland, trends by gender, trends by age, and trends by English region."], "identifier" : {"_value" : "CBP-7749"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70459", "prefLabel" : {"_value" : "Social and General Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Suicide: summary of statistics", "topic" : [{"_about" : "http://data.parliament.uk/terms/95547", "prefLabel" : {"_value" : "Death"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95676", "prefLabel" : {"_value" : "Mental health"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/342702", "abstract" : {"_value" : "Click thumbnail to view large map of obesity rates in England.\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nThis briefing gives statistics on obesity for England, Scotland, Wales and Northern Ireland with international comparisons. Breakdowns by age, gender, ethnicity local authority and deprivation are given where possible, and data for both adult and child obesity is covered. In addition to statistics on the prevalence of obesity, this briefing gives statistics on prescriptions of drugs for obesity, trends in bariatric surgery, and the detrimental effect of obesity on health. For information on treatments for obesity, see the recent note from POST (the Parliamentary Office of Science and Technology)."}
      , "date" : {"_value" : "2017-01-20T13:02:05.1016769+00:00", "_datatype" : "dateTime"}
      , "description" : ["27% of adults in England are obese. A further 36% are overweight. This briefing provides statistics on the obesity among adults and children in the UK, along with data on prescriptions, surgery, and international comparisons."], "identifier" : {"_value" : "SN03336"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70459", "prefLabel" : {"_value" : "Social and General Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Obesity Statistics", "topic" : [{"_about" : "http://data.parliament.uk/terms/95554", "prefLabel" : {"_value" : "Diseases"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95619", "prefLabel" : {"_value" : "Health education and preventive medicine"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95621", "prefLabel" : {"_value" : "Health services"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95693", "prefLabel" : {"_value" : "Obesity"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/675978", "abstract" : {"_value" : "Producer responsibility\n \nThe UK has a statutory producer responsibility regime for packaging, which places a legal obligation on businesses over a certain size which make or use packaging to ensure that a proportion of the packaging they place on the market is recovered and recycled.\n \nUnder this regime in 2014, Government statistics reported the UK disposed of an estimated 11.4 million tonnes of packaging waste, of which around 64% was recovered/recycled. Out of the total packaging waste disposed, 2,220,000 tonnes was plastic packaging, 842,000 tonnes of which was recycled. This is equivalent to 37.9%.\n \nHouseholder recycling\n \nGovernment statistics reported that in 2015, the amount of dry recycling from households in England stood at 5.7 million tonnes (nearly 27% of total waste from households). Of this, plastics made up 8%. There is no breakdown available for plastic packaging waste.\n \nRecyclable packaging\n \nNearly all packaging is capable of being recycled, but that does not necessarily mean that it is recycled.\n \nThere are many different types of plastic in the waste stream. It is technically possible to recycle most types of plastic but the complexity and cost of doing so impacts on whether or not it happens.\n \nAt a local level, the services provided by the authority will depend on many factors, including the associated costs, available infrastructure and recycling facilities and relative participation rates (i.e. the role of the consumer and how they dispose of their recyclable waste).\n \nCompostable packaging\n \nBiodegradable plastics (or biopolymers) have been used for some time. Biopolymers are generally designed to be composted rather than recycled, and as such require a different collection / disposal route to conventional plastics. Some, but not all, biopolymers may be suitable for home composting.\n \nVoluntary initiatives\n \nThe Debate pack provides a number of examples of voluntary initiatives and campaigns aimed at addressing this issue, including:\n \n The Plastics Industry Recycling Action Plan (PIRAP) The New Plastics Economy initiative \n \n "}
      , "date" : {"_value" : "2017-01-20T10:16:56.7285132+00:00", "_datatype" : "dateTime"}
      , "description" : ["This pack has been prepared ahead of the debate to be held in Westminster Hall on Monday 23 January 2017 at 4.30pm on e-petition 167596 to ban all non-recyclable and non-compostable packaging in the UK. The subject for the debate has been selected by the Petitions Committee and the debate will be opened by David Mackintosh MP."], "identifier" : {"_value" : "CDP-2017-0024"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Debate on an e-petition on banning non-compostable and non-recyclable packaging", "topic" : [{"_about" : "http://data.parliament.uk/terms/95777", "prefLabel" : {"_value" : "Waste management"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/675976", "abstract" : {"_value" : "Water is abstracted (withdrawn) from either freshwater (surface water and groundwater) or tidal water for a range of uses. While water issues exist many parts of the UK, this POSTnote focuses on proposed abstraction reforms in England and Wales. Total freshwater abstraction has declined by 15% since 2000, mainly because of a decline in water usage for electricity generation. However, demand is expected to rise by 9% over the next 30 years, largely because of forecast population growth of 6.6-16 million in England and Wales in areas already classified as 'water stressed'. In addition, even currently water-rich areas such as the west of the UK are likely to experience supply-demand deficits by 2050 because of climate change.\n \nKey points in this POSTnote include:\n \n Freshwater resources in the UK will be affected by climate change and rising demand due to population growth. The existing water abstraction (withdrawal) system is too inflexible to both protect freshwater environments and to meet future business and public water supply needs. Proposed reforms to the abstraction system include measures to better link abstraction to water availability and to introduce quicker and easier trading of abstraction permits. A \u2018twin-track\u2019 approach of managing both water supply and demand may help to achieve water supply resilience. Water resource decision-making could benefit from increased stakeholder collaboration and better integration with land management. \n \nAcknowledgements\n \nPOSTnotes are based on literature reviews and interviews with a range of stakeholders and are externally peer reviewed. POST would like to thank interviewees and peer reviewers for kindly giving up their time during the preparation of this briefing, including:\n \n Mike Acreman, Centre for Ecology and Hydrology* Iain Brown, York University/SEI* Christina Cook, University of British Columbia* Rob Cunningham, RSPB* Lord Deben, Climate Change Committee Gareth Edwards, University of East Anglia* Dustin Garrick, University of Oxford* Helen Gavin, Atkins* Jim Hall, University of Oxford* Paul Hammett, NFU* Peter Hetherington, Ofwat* Doug Hunt, Atkins Peter Huxtable, British Aggregates Daniel Johns, CCC Adaptation Sub-Committee* Henry Leveson-Gower, Defra* Sarah Mukherjee, Water UK Rose O\u2019Neill, WWF* Ian Pemberton, Ofwat* Alice Piure, Anglian Water* \n \n*Denotes people who acted as external reviewers of the briefing."}
      , "date" : {"_value" : "2017-01-20T09:48:46.9646567+00:00", "_datatype" : "dateTime"}
      , "description" : ["In some parts of the UK, high levels of water abstraction are reducing the quantity and quality of surface water (rivers, lakes) and groundwater (water accumulated in spaces in soil and rocks). This POSTnote sets out the challenge of balancing competing requirements for freshwater, and summarises proposed reforms to the abstraction system in England and Wales and their implications"], "identifier" : {"_value" : "POST-PN-0546"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/61081", "prefLabel" : {"_value" : "POST"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/61081", "prefLabel" : {"_value" : "POST"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/346721", "prefLabel" : {"_value" : "POSTnotes"}
      }
      , "title" : "Reform of Freshwater Abstraction", "topic" : [{"_about" : "http://data.parliament.uk/terms/95482", "prefLabel" : {"_value" : "Agriculture and environment"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95778", "prefLabel" : {"_value" : "Water"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95779", "prefLabel" : {"_value" : "Water industry"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/675399", "abstract" : {"_value" : "The Technical and Further Education Bill was introduced in the House of Lords on 10 January 2017 and is scheduled for second reading on 1 February 2017. The Bill completed third reading in the House of Commons on 9 January 2017.\n \nThe Bill includes the following provisions:\n \n To extend the remit of the Institute for Apprenticeships to include regulation of the quality of classroom based technical education in England, creating the new Institute for Apprenticeships and Technical Education (IFATE). The role of IFATE has been described by the Government as being to support the implementation of the reforms set out in its Post-16 Skills Plan. To introduce an insolvency regime for further education institutions, intended to improve the \u201cfinancial reliance\u201d of the sector. This would provide for the creation of an education administrator, to be appointed by the courts as part of the insolvency procedure. Following the devolution of responsibility for further education in some areas of England to combined authorities, the Bill would also allow the Secretary of State to continue to be provided with information by further education institutions. \n \nGovernment\u2019s Aims for the Bill\n \nThe Government\u2019s stated aim in introducing the Bill is to support the improvement of technical and further education and thereby increase social mobility and help increase productivity by addressing skill shortages in the economy. It comes at the same time that the Government has proposed the creation of 3 million new apprenticeships by 2020, with the introduction of the Apprenticeship Levy to be paid by large employers.\n \nOpposition Amendments\n \nThe Opposition has stated its support for the objectives of the Bill, but tabled a number of amendments during committee stage and report stage, the purpose of which it described as being to probe how the provisions in the Bill might work in practice.\n \nThere were two divisions on Opposition amendments to the bill at report stage: the first on a requirement for the Government to lay a strategy on improving careers education before Parliament and the second on whether to prevent education administrators from transferring certain assets to a for-profit private company. Both of these motions were defeated."}
      , "date" : {"_value" : "2017-01-19T18:15:31.7012933+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Library briefing provides information on the Technical and Further Education Bill and the consideration of the Bill in the House of Commons."], "identifier" : {"_value" : "LLN-2017-0005"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/346713", "prefLabel" : {"_value" : "Lords Library notes"}
      }
      , "title" : "Technical and Further Education Bill: Briefing for Lords Stages", "topic" : [{"_about" : "http://data.parliament.uk/terms/95614", "prefLabel" : {"_value" : "Further education"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95642", "prefLabel" : {"_value" : "Insolvency"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95769", "prefLabel" : {"_value" : "Training"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/652493", "abstract" : {"_value" : "What has the Government said about its position before treaty negotiations?\n \nFollowing the vote on 23 June 2016 to leave the European Union there has been a lot of parliamentary interest in treaty negotiations - particularly the Government\u2019s provision of information to Parliament about its negotiating position and \u2018red lines\u2019 ahead of negotiations.\n \nWho has responsibility for treaty negotiations?\n \nTreaty negotiation is a matter for the UK Government. There is no formal requirement or mechanism in the UK for parliamentary scrutiny before or during treaty negotiations (when changes could still be made to the text), although Ministers will commonly \u2018communicate with the relevant select committee\u2019 before signing a treaty [HL Deb 31 January 2008 c796].\n \nWhite and Green Papers\n \nThe Government also sometimes publishes information about its negotiating position. This paper provides some examples of green and white papers and other consultation the UK Government has used to set out its position in negotiating EU and other international treaties:\n \n Treaty of Rome (EEC membership) Renegotiation of UK terms of entry Treaty on European Union (Maastricht) Treaty of Amsterdam Treaty of Nice Treaty Establishing a Constitution for Europe Treaty of Lisbon The Biological Weapons Convention The Arms Trade Treaty \n \nThey do not always set out a negotiating strategy and they vary in the amount of detail provided."}
      , "date" : {"_value" : "2017-01-19T17:28:11.2457601+00:00", "_datatype" : "dateTime"}
      , "description" : ["How much information does the Government give Parliament about its position in advance of treaty negotiations? Is it bound to provide Parliament with information on its 'red lines' and strategies? This note looks at some past examples of White and Green Papers ahead of treaty negotiations."], "identifier" : {"_value" : "CBP-7823"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Treaty negotiations: when has the Government published its position?", "topic" : [{"_about" : "http://data.parliament.uk/terms/95494", "prefLabel" : {"_value" : "Arms control"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95514", "prefLabel" : {"_value" : "Central government"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95526", "prefLabel" : {"_value" : "Common Agricultural Policy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95532", "prefLabel" : {"_value" : "Constitution"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95542", "prefLabel" : {"_value" : "Crown"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95549", "prefLabel" : {"_value" : "Defence equipment and procurement"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95551", "prefLabel" : {"_value" : "Defence policy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95559", "prefLabel" : {"_value" : "Economic and monetary union"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95584", "prefLabel" : {"_value" : "EU budget"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95586", "prefLabel" : {"_value" : "EU defence policy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95587", "prefLabel" : {"_value" : "EU enlargement"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95588", "prefLabel" : {"_value" : "EU external relations"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95590", "prefLabel" : {"_value" : "EU institutions"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95591", "prefLabel" : {"_value" : "EU law and treaties"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95592", "prefLabel" : {"_value" : "EU political integration"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95593", "prefLabel" : {"_value" : "Europe"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95635", "prefLabel" : {"_value" : "Human rights"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95647", "prefLabel" : {"_value" : "International economic relations"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95648", "prefLabel" : {"_value" : "International law"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95649", "prefLabel" : {"_value" : "International organisations"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95650", "prefLabel" : {"_value" : "International politics and government"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95659", "prefLabel" : {"_value" : "Legislative process"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95703", "prefLabel" : {"_value" : "Parliament"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/675380", "abstract" : {"_value" : "Animal welfare is a devolved issue. The welfare of animals involved in commercial operations (i.e. those animals that are farmed) is subject to a substantial body of EU regulation; the RSPCA estimates that around 80 per cent of UK animal welfare laws originate from the EU. The terms of the Brexit negotiations will have a significant impact upon what animal welfare protections are adopted, amended or discarded.\n \nEU farm animal welfare regulations \n \nCurrently, the EU legislates on issues affecting the operation of the internal market and the free movement of animals. Council Directive 98/58/EC on the protection of animals kept for farming purposes provides general rules for the protection of animals. This EU legislation sets down minimum standards; national governments may adopt more stringent rules than this. The EU rules are based on the European Convention for the Protection of Animals kept for Farming Purposes, and they reflect the so-called 'Five Freedoms':\n \n Freedom from hunger and thirst Freedom from discomfort Freedom from pain, injury and disease Freedom to express normal behaviour Freedom from fear and distress. \n \nSimilar legislation implementing EU animal welfare regulations exists in England and all of the devolved assembles. Accompanying the legislation in each country are codes of practice, which provide welfare recommendations for those involved in the farming industry.\n \nLive animal exports\n \nEU rules to protect live animals during transport and related operations were agreed in 2004, and implemented in the UK in 2007, though there have still been a number of campaigns against such exports on welfare grounds. These regulations only apply to animals transported for commercial operations. The Council Regulation was implemented in the England by the Welfare of Animals (Transport) (England) Order 2006, and by parallel legislation in Scotland, Wales and Northern Ireland.\n \nThere have been a number of campaigns seeking to either ban live animal transport altogether, or to limit how far (and long) an animal can be transported on welfare grounds. Some of these campaigns have focussed on live animal exports through the Ports of Ramsgate and Dover, and specific events in 2012 when 40 sheep were euthanised on welfare grounds at the Port of Ramsgate. The National Farmers Union (NFU) is broadly supportive of live animal exports.\n \nAntimicrobial resistance in farm animals\n \nIn the past, it was normal practice for antimicrobials to be added to animal feed across the world in order to stimulate livestock growth and so maximise productivity. A ban on the use of antibiotics as growth promoters was implemented first in the UK and then in other European countries and Canada. The practice continued unchanged, however, in the United States and also continued to some extent in Europe, but with agents that were not used therapeutically in humans. An EU-wide ban on the use of antimicrobials as growth promoters came into force on 1 January 2006. The addition of antimicrobials to animal feed for medical purposes (either as prophylactics or as treatment for existing disease) is not affected by this ban. On 10 September 2014, the European Commission adopted a proposal for a Regulation on veterinary medicinal products.\n \nBrexit and farm animal welfare: the same protections, stronger or weaker?\n \nCurrently, national governments may adopt more stringent rules than the EU animal welfare legislation\u2014which sets down minimum standards. However, the UK Government has been resistant to \u2018gold-plating\u2019 EU regulations in the past over fears that this would weaken UK competiveness. In October, Defra\u2019s Secretary of State stated that the UK\u2019s unique selling point after we leave the EU \u201cshould be the highest standards of animal welfare, and the highest standards of food traceability.\u201d\n \nIt is currently expected that leaving the EU will result in alternative trade and support arrangements for UK agriculture. The terms of Brexit negotiations and trade deals will go a long way towards determining what animal welfare protections are adopted, amended or discarded. This may lead to the same, stronger or weaker regulations than those currently in force.\n \nThe Government has already committed to bringing forward a \u2018Great Repeal Bill\u2019 which will convert all existing EU law into domestic law \u201cwherever practical\u201d. However, there has been some concern that trading arrangements made with non-EU countries may result in a reduction in UK standards or in the standards of imported products. In order to operate on a \u2018level playing-field\u2019, farmers may call for the removal of welfare regulations which would allow them to compete with producers in countries with lower animal welfare standards. "}
      , "date" : {"_value" : "2017-01-19T16:36:29.1463412+00:00", "_datatype" : "dateTime"}
      , "description" : ["This pack has been prepared ahead of the debate on Animal Welfare Standards in Farming after the UK leaves the EU (Brexit), to be held in Westminster Hall on Tuesday 24 January 2017 430-530pm.  The Member in charge of this debate is the Rt Hon Theresa Villiers MP."], "identifier" : {"_value" : "CDP-2017-0025"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Animal welfare standards in farming after the UK leaves the EU", "topic" : [{"_about" : "http://data.parliament.uk/terms/95481", "prefLabel" : {"_value" : "Agriculture"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95489", "prefLabel" : {"_value" : "Animal welfare"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95490", "prefLabel" : {"_value" : "Animals"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95536", "prefLabel" : {"_value" : "Countryside"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95608", "prefLabel" : {"_value" : "Food"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/675376", "abstract" : {"_value" : "The Local Government Finance Bill 2016-17 would amend the framework legislation for business rates in England. Much of the Bill consists of amendments to the Local Government Finance Act 1988 (the \u20181988 Act\u2019).\n \nThe Bill is divided into four Parts, which give effect to a number of commitments regarding business rates made by the Government during 2014-2016:\n \n Part 1 provides the legislative framework for the introduction of full retention of business rate revenue by local authorities (\u2018100% business rate retention\u2019). Part 2 gives effect to a number of adjustments to liability for business rates arising from recent policy reviews and decisions, and permits initiatives towards greater digitisation of rates collection. Part 3 permits the imposition of \u2018infrastructure supplements\u2019 by mayoral combined authorities and the Mayor of London, as agreed in a number of the \u2018devolution deals\u2019 concluded in 2014-16. Part 4 introduces a new \u2018property owner levy\u2019, built upon the concept of \u2018property owner Business Improvement Districts\u2019 developed in 2014, and extends the power to create business rate supplements to mayoral combined authorities. \n \nThe Bill had its First Reading in the House of Commons on 13 January 2017 (HCDeb 13 Jan 2017 c577). Second Reading is scheduled for Monday 23 January 2017, as are a Money Resolution and Ways and Means resolution.\n \nThe Bill has previously been referred to, in the Queen\u2019s Speech and Government announcements, as the Local Growth and Jobs Bill.\n \nThe Bill extends to England and Wales, but its territorial effect is within England only. The majority of the Bill, but not all, has been certified as falling within the provisions of Standing Order 83J (i.e. the English Votes on English Laws provisions). Certified provisions will require assent from an English Grand Committee.\n \nThe Bill and explanatory notes have been published on the Bill pages of the Parliamentary website.\n \n \n \n "}
      , "date" : {"_value" : "2017-01-19T15:30:28.9911584+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library Briefing Paper provides background and analysis of the Local Government Finance Bill 2016-17."], "identifier" : {"_value" : "CBP-7873"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "The Local Government Finance Bill 2016-17", "topic" : [{"_about" : "http://data.parliament.uk/terms/95666", "prefLabel" : {"_value" : "Local government"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95764", "prefLabel" : {"_value" : "Taxation"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/675373", "abstract" : {"_value" : "Domestic politics\n \nSince becoming president in 2012, Xi Jinping appears to have accumulated much more power and authority than his predecessor, Hu Jintao, ever did during his decade in office (2002-12). But the centralisation of power around Xi since 2012 could as easily reflect weakness as strength.\n \nXi Jinping leads a Communist Party whose legitimacy is arguably shallower than ever before. The greatest single threat to that legitimacy is official corruption. Xi has made anti-corruption the central plank of his domestic policy. These steps are intended to strengthen it in the longer-term and render it fit to retain the political monopoly it has enjoyed since 1949.\n \nThe attempt to rejuvenate the party may also be involving some reversal of processes of \u2018institutionalisation\u2019 \u2013 the creation of rules to guide political and administrative behaviour, including over leadership succession \u2013 which analysts have detected over recent decades. But for some observers the degree of institutionalisation has never been particularly deep.\n \nOne view is that contestation and cooperation between different factions remains the best way of understanding what is going on in the party beneath the surface. But others are less convinced, viewing things as more fluid and informal, with networks and kinship relations playing a bigger role than factions.\n \nThe party does still have credit in the bank with the Chinese people. Although there have been economic warning signs in recent years, overall growth rates have remained high enough to maintain acquiescence. High-levels of public discontent about the increasingly predatory behaviour of some party officials at the local level do not yet appear to be translating into discontent against officials at the centre \u2013 even though they are often equally implicated.\n \nThe spectre of the collapse of the Soviet Union is never far from the minds of the party leadership. From that has come a heightened intolerance of those who, in its view, threaten the future of the system in China. This perspective has triggered the most severe human rights crack-down for many years.\n \nAs we approach the half-way point in the ten-year \u2018leadership cycle\u2019 that was apparently established under Hu Jintao, we might reasonably expect the party\u2019s 19th Congress in late-2017 to offer some insights on the succession. But there are still no formal rules that govern the succession process and Xi may yet decide that he would like to stay on beyond 2022. One indication of how it is going to play out may be whether two possible successors from the \u2018sixth generation\u2019 \u2013 both 53 years old \u2013 are promoted at the Congress to the party\u2019s top body, the Standing Committee. They are Sun Zhengcai, the party secretary of Chongqing Province, and Hu Chunhua, the party secretary of Guangdong Province.\n \nForeign policy\n \nThere continues to be much debate about the goals and objectives underpinning China\u2019s foreign policy today. The key point of contention is over whether China wants to supplant the US at the global level, achieve overall parity or is happy to play second-fiddle, with the important proviso that its \u2018core interests\u2019 in Asia are recognised.\n \nSome have argued that the Chinese leadership views the country as \u201cboth a great power and a rising power at the same time\u201d. Others claim that in many ways China\u2019s approach to foreign policy is profoundly pragmatic, upholding and sustaining global rules where they \u201cmake life easier\u201d. In this view, China is the \u201cultimate utilitarian power\u201d, with no aspirations to \u201coverwhelm the rest of the world\u201d.\n \nMaybe \u2013 but China does seem to have some non-negotiable \u2018bottom lines\u2019 on foreign policy. Least negotiable of all is the \u2018One China\u2019 policy, under which Taiwan\u2019s future can only be as part of the People\u2019s Republic of China, although it remains willing to allow for different interpretations of what it means,.\n \nIf this policy is seriously called into question by the new US Administration under President Donald Trump, China\u2019s approach to foreign policy could shift rapidly away from pragmatism.\n \nFuture prospects\n \nIn 2015, the experienced China expert David Shambaugh was widely criticised when he announced the beginning of the end of the Communist system in China.\n \n\u2018System failure\u2019 in China is widely considered a very unlikely prospect for now, including by Western governments. But such dramatic reversals nearly always are \u2013 until they happen. For all China\u2019s achievements over the past 40 years and the opportunities that many experts say lie ahead, complacency would be unwise. The Chinese leadership certainly is not.\n \nWhat about democratisation? Under Xi Jinping, the odds on China evolving towards liberal democracy, as some hoped and anticipated a decade or so ago, appear to have lengthened significantly. This leaves the most likely scenario a combination of attempts at proactive reform and reactive \u201cmuddling through\u201d.\n \nBut the risk factors are not purely domestic in nature. Now that China is a global political and economic player, the impact on it of international events inevitably deepens. There is also an increasingly direct connection between the foreign policy achievements of the Communist Party and its domestic legitimacy. A major crisis in the US-China relationship could destabilise the country. Another severe global economic down-turn might have a similar impact.\n \n "}
      , "date" : {"_value" : "2017-01-19T11:44:36.4573948+00:00", "_datatype" : "dateTime"}
      , "description" : ["This briefing is an exploratory analysis of trends \u2013 drawing on the views of selected experts \u2013 in the domestic politics and foreign policy of the People\u2019s Republic of China."], "identifier" : {"_value" : "CBP-7870"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/37362", "prefLabel" : {"_value" : "International Affairs and Defence Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "China's domestic politics and foreign policy: January 2017 analysis", "topic" : [{"_about" : "http://data.parliament.uk/terms/95497", "prefLabel" : {"_value" : "Asia"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95593", "prefLabel" : {"_value" : "Europe"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95609", "prefLabel" : {"_value" : "Foreign and Commonwealth Office"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95647", "prefLabel" : {"_value" : "International economic relations"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95648", "prefLabel" : {"_value" : "International law"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95650", "prefLabel" : {"_value" : "International politics and government"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/600884", "abstract" : {"_value" : "The National Infrastructure Commission (NIC) was launched in October 2015, having been announced at the 2015 Conservative Party Conference.\n \nThe aim of the Commission is to provide \u201cunbiased analysis of the UK\u2019s long-term infrastructure needs\u201d.\n \nIn each Parliament, the Commission will provide a comprehensive report on the UK\u2019s infrastructure needs over the next 30 years (the \u2018National Infrastructure Assessment\u2019). These reports will be updated on a rolling basis and the Government will respond to all of the recommendations.\n \nIn addition to the National Infrastructure Assessments, the NIC publishes reports on individual infrastructure projects as requested by the Government. So far, the Government has accepted all the NIC\u2019s first four reports."}
      , "date" : {"_value" : "2017-01-19T10:54:49.4131601+00:00", "_datatype" : "dateTime"}
      , "description" : ["The National Infrastructure Commission was launched in October 2015 to provide unbiased analysis of the UK\u2019s long-term infrastructure needs."], "identifier" : {"_value" : "CBP-7733"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/17113", "prefLabel" : {"_value" : "Economic Policy and Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "National Infrastructure Commission", "topic" : [{"_about" : "http://data.parliament.uk/terms/95560", "prefLabel" : {"_value" : "Economic policy"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/646316", "abstract" : {"_value" : "NHS England is responsible for commissioning NHS primary care services in England, including community pharmacy services. Clinical commissioning groups (CCGs) are free to commission further services from community pharmacies over and above those commissioned by NHS England, and local authorities are also able to commission public health services from pharmacies. The majority of NHS income for community pharmacies in England comes from payment from NHS England, through the NHS pharmaceutical services contract. The NHS England funding settlement for 2015/16 was £2.8 billion.\n \nOn 20 October 2016 the Government announced that funding for NHS contractors providing services under the community pharmacy contractual framework will be:\n \n £2.687 billion in 2016/17 £2.592 billion in 2017/18 \n \nThis represents a 4% reduction in funding in 2016/17 and a further 3.4% reduction in 2017/18.\n \nThe announcement also confirmed plans for changes to the way funding is distributed: \n \n Establishment payments will be phased out, and a range of dispensing fees will be amalgamated into a single activity fee. A Pharmacy Access Scheme to support services in isolated areas. The Government has published a list of 1,341 pharmacies that will receive access payments. A £75 million Quality Payment Scheme will award pharmacies extra funding based on how well they perform against criteria set out by the Government. The criteria are set out on p.11 of the Community pharmacy in 2016/16 and beyond: Final Package published by the Department for Health. A Pharmacy Integration Fund to support closer working with other parts of the NHS. The fund will provide £42 million in addition to the 2016-2018 funding set out above. \n \nThe changes take effect from 1 December 2016. The Government has argued that the cuts are necessary as part of wider efficiency savings being made across the NHS. Health Minister David Mowat has stated that the new funding package will lead to better value for money in pharmaceutical services, while ensuring that everybody retains ready access to a community pharmacy. Industry groups and the Opposition have been critical of the cuts, arguing that the cuts will lead to closures of community pharmacies, and that the Pharmacy Access Scheme will not protect pharmacies in the most deprived communities.\n \n The downloadable data file below includes a list of pharmacies in each English parliamentary constituency, along with a summary of which are expected to be eligible for the pharmacy access scheme. For MPs and their staff, Library researchers can provide maps of pharmacies by local area like the one featured below. Please get in touch to find out more. \n \n "}
      , "date" : {"_value" : "2017-01-19T10:31:54.6105919+00:00", "_datatype" : "dateTime"}
      , "description" : ["This briefing paper outlines the new funding settlement for NHS contractors providing services under the community pharmacy contractual framework, announced on 20 October 2016. Compared to 2015/16 levels, the funding settlement includes a reduction of 4% in 2016/17 and a further 3.4% in 2017/18."], "identifier" : {"_value" : "CBP-7811"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70459", "prefLabel" : {"_value" : "Social and General Statistics Section"}
      }
      , {"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Community pharmacy funding", "topic" : [{"_about" : "http://data.parliament.uk/terms/95620", "prefLabel" : {"_value" : "Health finance"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95621", "prefLabel" : {"_value" : "Health services"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95623", "prefLabel" : {"_value" : "Health staff and professions"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/346165", "abstract" : {"_value" : "How common are mental health problems?\n \n \nCommon mental disorders (such as depression or anxiety) are more common among women than among men. This gender difference is most pronounced among those aged 16-24.\n \n \nUnemployed and economically inactive people are more likely to report common mental disorders.\n \nThe full briefing also discusses bipolar disorder, psychotic disorder, suicidal thoughts & self-harm, and the relationship between mental health and physical health.\n \n \n \nHow many people are referred to talking therapies (such as cognitive behavioural therapy) through the Improving Access to Psychological Therapies programme?\n \n \n950,000 people entered a course of talking therapy treatment in 2015/16. 1.3 million referrals ended, of which 537,000 had finished a course of treatment (meaning that they had at least two treatment appointments).\n \n \n \nHow long are waiting times for psychological therapies?\n \n \n \nOf those finishing a course of treatment, 81.3% waited less than 6 weeks to enter treatment, and 96.2% waited less than 18 weeks.\n \n \nClick to view map of waiting times for IAPT talking therapies in 2015/16.\n \n \n \n \n \n \n \n \n \n \n \nHow much is spent on mental health services?\n \n£9.49 billion is planned to be spent by English CCGs on mental health services in 2016/17 \u2013 up from £9.15 billion in 2015/16. This amounts to 13.1% of planned CCG spending, up from 12.5% in 2015.16 Figures for individual CCG areas can be found using NHS England\u2019s Mental Health Five Year Forward View Dashboard. This does not account for all spending on mental health services, because specialised mental health commissioning is the responsibility of NHS England rather than CCGs.\n \n \n \nOther library briefings of interest:\n \nChildren and young people\u2019s mental health \u2013 policy, CAMHS services, funding and education\n \nMental Health Policy in England"}
      , "date" : {"_value" : "2017-01-19T09:33:19.0905776+00:00", "_datatype" : "dateTime"}
      , "description" : ["This briefing addresses the following questions: how common are mental health problems? How long do people wait to access talking therapies? How much is spent on mental health services?"], "identifier" : {"_value" : "SN06988"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70459", "prefLabel" : {"_value" : "Social and General Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Mental health problems: statistics on prevalence and services", "topic" : [{"_about" : "http://data.parliament.uk/terms/95621", "prefLabel" : {"_value" : "Health services"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95676", "prefLabel" : {"_value" : "Mental health"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/674645", "abstract" : {"_value" : "The Commonwealth Development Corporation Bill is focused on the work of CDC Group PLC (the CDC), the UK Government\u2019s development finance institution. Wholly owned by the Department for International Development (DFID), the CDC invests in private enterprise in a select list of developing countries to support its mission statement of creating jobs, business growth and economic development in some of the world\u2019s poorest regions.\n \nThe principal focus of the Commonwealth Development Corporation Bill is the amount of financial assistance that the Government can provide to the CDC in support of those aims. The previous Act governing its operation, the Commonwealth Development Corporation Act 1999, imposed a limit on that assistance of £1.5 billion; a limit which has now been reached following government investment of £735 million in the CDC in July 2015. The Bill would raise the investment limit to £6 billion, and allow for the Secretary of State to further increase the limit up to £12 billion without the need for further primary legislation.\n \nCertified by the Speaker of the House of Commons as a money bill, the Commonwealth Development Corporation Bill received cross-party support during its scrutiny by MPs. However, a number of amendments were tabled during the Bill\u2019s passage through the House, which fell into three broad categories: those which focused on the amount of funding being provided to the CDC; those which would impose restrictions or reporting requirements on that investment; or those which would impose conditions or restrictions on how the CDC was subsequently able to use those funds. Opposition parties focused particular attention on how the figures within the Bill had been arrived at, on issues such as transparency and the CDC\u2019s use of tax havens, and whether there was sufficiently explicit focus on the goal of poverty reduction."}
      , "date" : {"_value" : "2017-01-18T18:30:07.5310579+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Lords Library briefing provides information on the Commonwealth Development Corporation Bill 2016-17 ahead of its second reading in the House of Lords on 25 January 2017."], "identifier" : {"_value" : "LLN-2017-0004"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/346713", "prefLabel" : {"_value" : "Lords Library notes"}
      }
      , "title" : "Commonwealth Development Corporation Bill: Briefing for Lords Stages", "topic" : [{"_about" : "http://data.parliament.uk/terms/95646", "prefLabel" : {"_value" : "International development"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/340893", "abstract" : {"_value" : "This briefing paper has been withdrawn temporarily for updating.\n \nThis briefing paper deals with the position in England and Wales.\n \nMemorials in cemeteries\n \nMemorials, in this context, are sometimes referred to using a number of different terms including headstone, tombstone and gravestone.\n \nAccidents in cemeteries\n \nThe issue of memorial safety was brought to a head following cases where memorials toppled over and caused injuries, sometimes fatal, to members of the public. In particular, the death of a child in Yorkshire in 2000 highlighted the problem of unstable memorials. \n \nIn 2007, the then Government stated that reliable data was not available, but that available data showed that 21 serious accidents, caused by falling gravestones and memorials, had been reported to the Health and Safety Executive over the previous seven years.\n \nMinistry of Justice guidance, published in 2009, states that, over the previous 30 years, eight people in the UK were killed when a memorial fell on them. The guidance adds that, in view of the number of memorials and the number of visitors to burial grounds in any year, the risk of any injury is extremely low.\n \nResponsibility for maintaining memorials\n \nResponsibility for maintaining individual memorials generally remains primarily with those who erected them. Local authorities, acting as burial authorities, have general powers of management in relation to public cemeteries.  This includes power to take any action necessary to remove a danger which arises because of the condition of a vault, tombstone or memorial. Burial authorities also have duties of care under health and safety legislation and under the principles of occupier\u2019s liability.\n \nLocal authority testing of memorials\n \nIn the light of concerns about public safety, many local authorities started to carry out an inspection programme in order to identify unsafe memorials, and to ensure that they were made safe by whichever method they considered appropriate. In many cases this involved the use of a mechanical test instrument.\n \nConcerns about testing\n \nThe inspections resulted in some memorials being laid flat or cordoned off, and relatives were notified that they must pay to make them safe. This sometimes caused distress to bereaved relatives who felt that the graves were being desecrated and some argued that the tests themselves were making the graves unsafe. \n \nIn 2006, the Local Government Ombudsman and the Public Services Ombudsman for Wales expressed the view that \u201cit should not be necessary for burial authorities to lay down grave memorials on any large scale\u201d. The Ministry of Justice reiterated the need for great sensitivity and careful planning in the way that work relating to memorials was undertaken.\n \nGuidance on managing the safety of memorials in cemeteries\n \nIn January 2009, the Ministry of Justice published guidance, Managing the safety of Burial Ground Memorials. This sets out good practice on the standard expected in the risk management of memorials in all types of burial grounds, public or private.  The guidance states that the risk of any injury is extremely low and that any precautions should be proportionate to the level of risk.  The routine use of mechanical test instruments is not recommended. \n \nThe guidance recommends that operators of burial grounds should be mindful of the potential to cause distress to the bereaved, and highlights the necessity for good communication of the inspection and assessment process, in order to obtain the support of the local community.\n \nThe Institute of Cemetery and Crematorium Management (ICCM) has also issued guidance on the management of memorials.\n \nHow to complain\n \nThe Local Government Ombudsman has published a factsheet, Safety testing in cemeteries and graveyards controlled by councils, together with details about how to complain for people who believe that there has been some fault in the way the council has acted.\n \n "}
      , "date" : {"_value" : "2017-01-18T18:00:22.5893804+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library briefing paper considers the issue of memorial (headstone) safety and action to address the risk of accidents caused by unstable memorials in cemeteries"], "identifier" : {"_value" : "SN03634"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Unsafe memorials in cemeteries", "topic" : [{"_about" : "http://data.parliament.uk/terms/95508", "prefLabel" : {"_value" : "Burial and cremation"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95547", "prefLabel" : {"_value" : "Death"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95613", "prefLabel" : {"_value" : "Funerals"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/340038", "abstract" : {"_value" : "There has long been a \u2018patchwork\u2019 approach across transport modes towards passenger rights and compensation. The UK has long-established domestic rules which have gradually been supplanted by European ones in all four fields. However, the UK has \u2018opted out\u2019 of or applied exemptions from a number of EU requirements on different modes. It is as yet unclear what the impact of Brexit will be on these arrangements.\n \nThe biggest change in recent years has probably been for ferry and cruise ship passengers who now have a right to compensation and a formal complaints process where previously none existed.\n \nThat said, the two areas of greatest interest tend to be aviation and rail:\n \n Air passengers\u2019 rights are not dealt with in detail in this paper; there is a separate briefing available on the Parliament website (SN233). Rail passengers often struggle to understand how the complex compensation system works, confused by the fact that there are different compensation arrangements for passengers and, separately, for train companies (from Network Rail). This has become particularly acute over the past 18 months as passengers on several train services have experienced delays and overcrowding due to major engineering and redesign works at busy London stations and other issues. The most recent change is the application of the Consumer Rights Act 2015 to rail travel and the imminent roll out of delay/rep[ay compensation from 15 minutes. \n \nFull details of the European rules on rights and compensation can be found on the Europa website.\n \nThe rights of those with a disability and persons with reduced mobility (PRMs) as regards access to transport are covered in a separate briefing paper (SN601).\n \nInformation on other transport issues can be found on the Transport pages of the Parliament website."}
      , "date" : {"_value" : "2017-01-18T16:48:37.0123501+00:00", "_datatype" : "dateTime"}
      , "description" : ["This briefing paper provides information on passenger rights, compensation and how to make a complaint across four forms of transport: rail, bus and coach, air and sea (ferries and cruise ships)."], "identifier" : {"_value" : "SN03163"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Transport: passenger rights, compensation and complaints", "topic" : [{"_about" : "http://data.parliament.uk/terms/95501", "prefLabel" : {"_value" : "Aviation"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95509", "prefLabel" : {"_value" : "Buses"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95534", "prefLabel" : {"_value" : "Consumers"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95728", "prefLabel" : {"_value" : "Railways"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95748", "prefLabel" : {"_value" : "Shipping"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/674602", "abstract" : {"_value" : "This debate pack has been compiled ahead of the general debate on Holocaust memorial day to be held in the Commons Chamber on Thursday 19 January 2017. The subject was determined by the Backbench Business Committee.   More detailed information and advice can be provided by our subject specialist: Paul Bowers, x3441."}
      , "date" : {"_value" : "2017-01-18T15:15:50.8907373+00:00", "_datatype" : "dateTime"}
      , "description" : ["Debate on Holocaust memorial day"], "identifier" : {"_value" : "CDP-2017-0022"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/61055", "prefLabel" : {"_value" : "Parliament and Constitution Centre"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "General debate on Holocaust memorial day 2017", "topic" : [{"_about" : "http://data.parliament.uk/terms/95727", "prefLabel" : {"_value" : "Racial discrimination"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/674593", "abstract" : {"_value" : "The Library has revised the methodology used to calculate constituency claimant rates in this edition of Unemployment by Constituency, following the release of new constituency population estimates for mid-2015 and to reflect recent changes in economic activity at the national and regional level. Therefore the claimant rates included in this month\u2019s paper are not comparable with the rates shown in previous editions of Unemployment by Constituency, although in most cases the effect of the change is very small. \n \nWe have also changed the source we use to extract claimant data, in order to improve the accuracy of the data. This means claimant data are now rounded to the nearest five. \n \nThe number of people claiming Jobseeker\u2019s Allowance or claiming Universal Credit and required to seek work was 797,800 in December 2016, down 10,100 from November.\n \nThe unemployment rate was 4.8% in September-November 2016. The ILO measure of unemployment was 1.60 million people, 52,000 fewer than the previous quarter and 81,000 fewer than the year before.\n \nThe number of people in employment was 31.80 million in July-September 2016, broadly unchanged from the previous quarter and 294,000 more than the year before. The employment rate was 74.5%. \n \nAverage weekly total pay in Great Britain increased by 2.8% in the three months to November 2016 compared with the previous year. Regular pay (excluding bonuses) grew by 2.7%. CPI inflation averaged 1.0% over this period."}
      , "date" : {"_value" : "2017-01-18T13:05:20.6991887+00:00", "_datatype" : "dateTime"}
      , "description" : ["This paper contains claimant count figures for parliamentary constituencies, as well as a summary of the latest labour market statistics for the UK as a whole."], "identifier" : {"_value" : "CBP-7868"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/17113", "prefLabel" : {"_value" : "Economic Policy and Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Unemployment by Constituency, January 2017", "topic" : [{"_about" : "http://data.parliament.uk/terms/95561", "prefLabel" : {"_value" : "Economic situation"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95574", "prefLabel" : {"_value" : "Employment"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95771", "prefLabel" : {"_value" : "Unemployment"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/342242", "abstract" : {"_value" : "Current position\n \nParents have the right to decide to teach their children at home at any stage up to the end of compulsory school age. This right applies equally for the parents of children with special educational needs (SEN). Home education may also be used to meet the requirement to participate in education or training up to the age of 18.\n \nParents who choose to home-educate their children are responsible for ensuring that the education provided is efficient, full-time and suitable to the child\u2019s age, ability, aptitude and any special educational needs they may have. They do not have to follow the national curriculum. The parents of home educated children must be prepared to assume full financial responsibility, including bearing the cost of any public examinations.\n \nResponsibilities of local authorities\n \nLocal authorities have no statutory duties in relation to monitoring the quality of home education on a routine basis. However, they do have duties to make arrangements to identify children not receiving a suitable education, and to intervene if it appears that they are not. Intervention could, for example, take the form of issuing a school attendance order, although Government guidance on home education encourages authorities to address the issue informally before serving such a notice.\n \nAs part of their safeguarding duties local authorities have powers to insist on seeing a child to enquire about their welfare where there are grounds for concern, but this does not extend to seeing and questioning children for the purpose of establishing whether they are receiving a suitable education.\n \nGovernment guidance recommends that local authorities should have a written policy statement on home education and be willing to provide guidance to parents upon request. Additional guidance encourages authorities to take a flexible approach to providing financial support to the parents of home educated children with SEN, and the Special Educational Needs and Disability Code of Practice states that authorities should fund the SEN needs of home educated children where it is appropriate to do so.\n \nIssues and proposals for reform\n \nUnregistered schools\n \nThe former Chief Inspector of Schools, Sir Michael Wilshaw, raised concerns about a link between the growth of unregistered schools and an increase in the number of home educated children. In May 2016, he stated in a letter that \u201cthose operating unregistered schools are unscrupulously using the freedoms that parents have to home educate their children as a cover for their activities.\u201d He suggested that officials from Ofsted and the Department for Education should work together to consider how the current legal framework around home education should be strengthened.\n \nCasey Review\n \nIn December 2016, Dame Louise Casey published the report of her review into opportunity and integration. The report stated that parents should continue to have the right to home educate their children, but raised a number of \u201cdifficulties and risks\u201d associated with home education. These included:\n \n That the current definition of a \u201csuitable education\u201d runs counter to efforts to foster British values in schools and building cohesive communities. That some people may be misusing the right to home educate their children to place them in unregistered schools. That the current framework means that local authorities have no sure way of knowing the extent of home education or the suitability of the education provided. It also limits the extent to which authorities can be aware of any arising child protection issues. \n \nPrevious proposals for a register of home educators\n \nPublished in 2009, Graham Badman\u2019s Review of Elective Home Education recommended the establishment of a compulsory registration scheme for home educators. Provisions to establish such a scheme were included in the Children Schools and Families Bill 2009-10 but the relevant provisions were dropped from the Bill during its passage through Parliament.\n \n2012 Education Committee Report\n \nThe second section of the briefing also provides information on other reports on home education.\n \nThis includes the 2012 report from the Education Committee that, among other things reported evidence of a \u201cpostcode lottery\u201d for home educators caused by inconsistency in local authority practice, and found that over half of authorities had ultra vires statements on their websites concerning home education.\n \nThe report also recommended that the Government should review the guidance on home education and that the state should meet the cost of home educated children sitting public examinations. The Government response rejected both these recommendations."}
      , "date" : {"_value" : "2017-01-18T10:55:49.5668023+00:00", "_datatype" : "dateTime"}
      , "description" : ["This briefing sets out the current position relating to home education in England and provides brief information on recent issues raised concerning home education. It covers England only."], "identifier" : {"_value" : "SN05108"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Home education in England", "topic" : [{"_about" : "http://data.parliament.uk/terms/95518", "prefLabel" : {"_value" : "Children and families"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95665", "prefLabel" : {"_value" : "Local authorities: education"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95740", "prefLabel" : {"_value" : "Schools"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/674592", "abstract" : {"_value" : "From January 2017, we have made the following changes to our methodology:\n \n We have changed the source we use to extract claimant data. This improves the accuracy of the figures reported but means all figures are rounded to the nearest five. We have also updated the denominators used to calculate constituency claimant rates to take account of the latest constituency population estimates for mid-2015 and to reflect recent trends in economic activity at the national and regional level."}
      , "date" : {"_value" : "2017-01-18T09:31:36.9668677+00:00", "_datatype" : "dateTime"}
      , "description" : ["The Library publishes data on the number of people claiming unemployment benefits and associated \u2018claimant rates\u2019 for parliamentary constituencies in our monthly Unemployment by Constituency briefing paper."], "identifier" : {"_value" : "CBP-7869"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/17113", "prefLabel" : {"_value" : "Economic Policy and Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Unemployment by Constituency: changes in methodology, 2017", "topic" : [{"_about" : "http://data.parliament.uk/terms/95771", "prefLabel" : {"_value" : "Unemployment"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/673822", "abstract" : {"_value" : "Member Date Joined Number of MEPs Euro Zone Member Schengen Member Council of the European Union Presidency 2017\u20132030 Austria 1995 18 1999 YES Jul\u2013Dec 2018 Belgium 1958 21 1999 YES Jan\u2013Jun 2024 Bulgaria 2007 17 N/A NO Jan\u2013Jun 2018 Croatia 2013 11 N/A NO Jan\u2013Jun 2020 Cyprus 2004 6 2008 NO Jan\u2013Jun 2026 Czech Republic 2004 22 N/A YES Jul\u2013Dec 2022 Denmark 1973 13 N/A YES Jul\u2013Dec 2025 Estonia 2004 6 2011 YES Jul\u2013Dec 2017 Finland 1995 13 1999 YES Jul\u2013Dec 2019 France 1958 74 1999 YES Jan\u2013Jun 2022 Germany 1958 96 1999 YES Jul\u2013Dec 2020 Greece 1981 21 2001 YES Jul\u2013Dec 2027 Hungary 2004 22 N/A YES Jul\u2013Dec 2024 Ireland 1973 11 1999 NO Jul\u2013Dec 2026 Italy 1958 73 1999 YES Jan\u2013Jun 2028 Latvia 2004 8 2014 YES Jul\u2013Dec 2028 Lithuania 2004 11 2015 YES Jan\u2013Jun 2027 Luxembourg 1958 6 1999 YES Jan\u2013Jun 2029 Malta 2004 6 2008 YES Jan\u2013Jun 2017 Jul\u2013Dec 2030 Netherlands 1958 26 1999 YES Jul\u2013Dec 2029 Poland 2004 51 N/A YES Jan\u2013Jun 2025 Portugal 1986 21 1999 YES Jan\u2013Jun 2021 Romania 2007 32 N/A NO Jan\u2013Jun 2019 Slovakia 2004 13 2009 YES Jan\u2013Jun 2030 Slovenia 2004 8 2007 YES Jul\u2013Dec 2021 Spain 1986 54 1999 YES Jul\u2013Dec 2023 Sweden 1995 20 N/A YES Jan\u2013Jun 2023 United Kingdom 1973 73 N/A NO N/A \n \nElections in Member States in 2017\n \n France\u2019s presidential elections are set for 23 April 2017, with a second round run-off on 7 May 2017 if required. German federal elections are due to take place by October 2017. Unless it is dissolved early, in accordance with German Basic Law, 23 August 2017 is the earliest date on which the elections could be held, the latest possible date would be 22 October 2017. \n \nEuropean Council Meetings in 2017\n \n 3 February: informal meeting of EU heads of state or government 8 March: Tripartite Social Summit 9\u201310 March: European Council 22\u201323 June: European Council 19\u201320 October: European Council \n \nMembers of the European Council\n \n Name Position Held Member State Donald Tusk President of the European Council N/A Christian Kern Federal Chancellor Austria Charles Michel Prime Minister Belgium Boyko Borissov Prime Minister Bulgaria Andrej Plenković Prime Minister Croatia Nicos Anastasiades President of the Republic Cyprus Bohuslav Sobotka Prime Minister Czech Republic Lars Løkke Rasmussen Prime Minister Denmark Enda Kenny Taoiseach Ireland Jüri Ratas Prime Minister Estonia Juha Sipilä Prime Minister Finland François Hollande President of the Republic France Angela Merkel Federal Chancellor Germany Alexis Tsipras Prime Minister Greece Viktor Orbán Prime Minister Hungary Paolo Gentiloni Prime Minister Italy Māris Kučinskis Prime Minister Latvia Xavier Bettel Prime Minister Luxembourg Dalia Grybauskaitė President of the Republic Lithuania Joseph Muscat Prime Minister Malta Mark Rutte Prime Minister Netherlands Beata Szydlo Prime Minister Poland António Costa Prime Minister Portugal Klaus Werner Iohannis President Romania Robert Fico Prime Minister Slovakia Miro Cerar Prime Minister Slovenia Mariano Rajoy Brey President of the Government Spain Stefan Löfven Prime Minister Sweden Theresa May Prime Minister United Kingdom Jean Claude Juncker President of the European Commission N/A"}
      , "date" : {"_value" : "2017-01-17T17:53:15.0274362+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Lords Library briefing provides background information about EU member states, identifies key election dates in member states in 2017, when the European Council is due to meet, and lists the individuals who are current members of the European Council."], "identifier" : {"_value" : "LIF-2017-0002"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414041", "prefLabel" : {"_value" : "Lords In Focus"}
      }
      , "title" : "European Union in 2017: Background Information", "topic" : [{"_about" : "http://data.parliament.uk/terms/95590", "prefLabel" : {"_value" : "EU institutions"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/673726", "abstract" : {"_value" : "MPs will debate the \u2018Future of the DWP estate\u2019 on Wednesday 18 January 2017 at 2.30 pm in Westminster Hall. Margaret Ferrier MP will lead the debate. In 1998 the Department for Work and Pensions signed a 20-year Private Finance Initiative (PFI) contract with a private sector partner for the provision of serviced office accommodation. The contract is due to end in March 2018 and the Department is committed to reducing the size of its estate by 20% and increasing \u201cco-location\u201d of Jobcentre Plus offices with other local services such as local authority benefit teams and mental health services. On 7 December 2016 DWP announced plans to close 8 out of the 16 Jobcentres in Glasgow, as part of its review. A Westminster Hall debate on the closures took place on 20 December, and an online consultation on the proposed closure of three of the Glasgow Jobcentres runs until 31 January. The implications of the Department\u2019s review of its estate for Jobcentres and DWP offices elsewhere in Great Britain are not yet clear.  Discussions with landlords are ongoing. This House of Commons Library briefing updates the Debate Pack produced for the debate on 20 December in Jobcentre closures in Glasgow. It covers the debate on 20 December and other statements about the wider review of the DWP estate.  More detailed background, press releases, press articles and relevant earlier parliamentary material can be found in the previous Debate Pack."}
      , "date" : {"_value" : "2017-01-17T11:14:37.1275843+00:00", "_datatype" : "dateTime"}
      , "description" : ["MPs will debate the \u2018Future of the DWP estate\u2019 on Wednesday 18 January 2017 at 2.30 pm in Westminster Hall. Margaret Ferrier MP will lead the debate. This House of Commons Library briefing provides background to the debate and includes a summary of the issues and press and parliamentary coverage."], "identifier" : {"_value" : "CDP-2017-0012"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Future of the DWP estate", "topic" : [{"_about" : "http://data.parliament.uk/terms/95503", "prefLabel" : {"_value" : "Benefits administration"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95504", "prefLabel" : {"_value" : "Benefits policy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95574", "prefLabel" : {"_value" : "Employment"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95576", "prefLabel" : {"_value" : "Employment schemes"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95771", "prefLabel" : {"_value" : "Unemployment"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95784", "prefLabel" : {"_value" : "Working age benefits"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/593401", "abstract" : {"_value" : "Background\n \nThe Small Charitable Donations and Childcare Payments Act 2017 makes a number of amendments to the legislation which underpins the Gift Aid Small Donations Scheme (GASDS), introduced in April 2013. The purpose of these changes is to simplify the scheme and extend access to smaller and newer charities. The Act also makes a few technical amendments to the legislation which establishes Tax-Free Childcare, the Government\u2019s scheme to support parents\u2019 childcare costs, scheduled to be rolled out from early 2017.\n \nUnder Gift Aid charities are entitled to claim 25p tax on each £1 they receive from individual donations. This represents repayment of the basic rate tax that donors have paid on this part of their income. Individuals who are higher or additional rate taxpayers claim the extra tax they will have paid from HM Revenue & Customs (HMRC). To support any Gift Aid claim, charities must have a Gift Aid declaration from the donor, confirming they have paid the same amount or more in tax in that year.[1] If a donation has not been made out of taxed income, tax has to be paid by the donor to HMRC. Clearly those donors who are not earning enough to be paying income tax will not want to use Gift Aid. There will also be circumstances where charities may find it difficult to get a declaration from donors \u2013 say, when collecting small cash gifts in a collecting tin. The GASDS allows charities to claim a top-up payment on donations equivalent to Gift Aid in these situations.\n \nIn the 2011 Budget the then Chancellor George Osborne announced \u201ca new scheme where Gift Aid can be claimed on small donations, up to a total of £5,000 a year per charity, without the need for donors to fill in any forms at all. This means Gift Aid on the contents of the collecting tin and the street bucket, and 100,000 charities will benefit to the tune of £240m.\u201d[2] Statutory provision for the GASDS was made by the Small Charitable Donations Act 2012. As there is no link to the tax paid by the donor, the GASDS is not tax relief but is treated as public expenditure; this is why the legislation to establish the scheme was not included in the annual Finance Bill.[3]\n \nThe Act sets a number of rules for eligible charities and qualifying payments, to minimise the risk of fraud and to provide a link with Gift Aid: setting standards for a charity\u2019s compliance behaviour, and, capping the size of a charity\u2019s annual claim under GASDS by reference to its annual claim under Gift Aid (the \u2018matching rule\u2019). In addition, a charity that is connected with one or more other charities has to share the annual £5,000 main allowance. Finally, the scheme allows a charity to make an additional claim in respect of donations it has raised as part of its charitable activities in a community building \u2013 such as a village hall, town hall or place of worship. The aim of these rules is to allow \u2018groups\u2019 of charities to claim equivalent amounts if they are structured in different ways. As a consequence national organisations, like dominations of churches, may claim similar amounts whether they are structured as a single charity nationally, or as a \u2018group\u2019 structure made up of individual charities.\n \nOnly cash donations of up to £20 may qualify for a top-up payment. This limit remains in force, although the annual \u2018main allowance\u2019 for donations was increased to £8,000 from April 2016.[4]\n \nConsultation on reforming the scheme\n \nAt the time of its launch in 2013 the Government said that it would review the operation of GASDS after three years. Following a call for evidence from stakeholders, in April 2016 the Government published proposals for reforming the scheme.[5] In August the Government confirmed that responses had been \u2018generally positive\u2019, and it would legislate to simplify the compliance criteria, and to relax the community building rules, though in future charities would be entitled to a top-up payment for donations raised in eligible community buildings or for donations under the single main allowance, not for both. Finally, GASDS would be extended to include donations made by \u2018contactless payments\u2019.[6]  These changes would take effect from 6 April 2017.\n \nHMRC has published an impact assessment on these reforms: this estimates that the measures to simplify GASDS \u201ccould benefit up to 71,000 charities that currently claim Gift Aid.\u201d Restricting charities\u2019 claims to either the main allowance or community buildings allowance is estimated to impact \u201cup to 3,000 charities.\u201d Overall the changes are anticipated to \u201cdecrease receipts by approximately £15m per annum.\u201d[7]\n \nThe Bill\n \nIn the Queen\u2019s Speech on 18 May 2016 the Government confirmed that it would introduce legislation in the 2016-17 Session to reform GASDS \u201cto ensure it supports the maximum number of charities and donations possible.\u201d[8]\n \nThe Small Charitable Donations and Childcare Payments Bill (Bill 68 of 2016-17) was published on 14 September. The Bill is short, with 9 clauses. It extends to the whole of the UK. The text of the Bill, explanatory notes on its provisions, and details of its Parliamentary scrutiny are collated on its Parliament page.\n \nThe Bill was given a Second Reading on 11 October, and was considered in Public Bill Committee over a single sitting on 18 October. The Government did not table any amendments to the Bill, and the Bill was agreed without amendment.  The Bill was not amended on Report, and has completed its scrutiny in the Lords, again without amendment. It received Royal Assent on 16 January 2017.\n \nNotes\n \n[1]     Donors need to confirm that they had paid, or will have paid, income tax and/or capital gains tax of at least the amount of Gift Aid that the organisation will claim on their donation in any given tax year. For details see, HMRC, Gift Aid declarations: claiming tax back on donations, January 2016.\n \n[2]     HC Deb 23 March 2011 c962\n \n[3]     For more background on the development of GASDS see, Library Briefing paper 12/45, 14 August 2012.\n \n[4]     For more guidance see, HMRC, Claiming a top-up payment on small charitable donations, March 2016.\n \n[5]     Gift Aid Small Donations Scheme consultation, 20 April 2016. Responses were invited by 1 July 2016.\n \n[6]     HMRC, Gift Aid Small Donations Scheme \u2013 summary of responses, 10 August 2016\n \n[7]     HMRC, Small Charitable Donations and Childcare Payments Bill: Impact Assessment, September 2016 p2, p6. The Autumn Statement estimates this measure will cost £10m in 2018/19, rising to £20m by 2021/22 (Autumn Statement, Cm 9362, November 2016 Table 2.1 \u2013 item 40).\n \n[8]     Cabinet Office, Queen\u2019s Speech 2016: background briefing notes, 18 May 2016 p46"}
      , "date" : {"_value" : "2017-01-17T10:58:25.604176+00:00", "_datatype" : "dateTime"}
      , "description" : ["The Small Charitable Donations and Childcare Payments Act 2017 makes a number of amendments to the legislation which underpins the Gift Aid Small Donations Scheme (GASDS), introduced in April 2013. The purpose of these changes is to simplify the scheme and extend access to smaller and newer charities. The Act also makes a few technical amendments to the legislation which establishes Tax-Free Childcare, the Government\u2019s scheme to support parents\u2019 childcare costs, scheduled to be rolled out from early 2017."], "identifier" : {"_value" : "CBP-7711"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Small Charitable Donations and Childcare Payments Act 2017", "topic" : [{"_about" : "http://data.parliament.uk/terms/95515", "prefLabel" : {"_value" : "Charities"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95516", "prefLabel" : {"_value" : "Child care"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95764", "prefLabel" : {"_value" : "Taxation"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/673722", "abstract" : {"_value" : "A general debate on exiting the EU and security, law enforcement and criminal justice has been scheduled for the afternoon of Wednesday 18 January 2017.  "}
      , "date" : {"_value" : "2017-01-17T10:52:29.7503242+00:00", "_datatype" : "dateTime"}
      , "description" : ["A general debate on exiting the EU and security, law enforcement and criminal justice has been scheduled for the afternoon of Wednesday 18 January 2017."], "identifier" : {"_value" : "CDP-2017-0015"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Exiting the EU and security, law enforcement and criminal justice", "topic" : [{"_about" : "http://data.parliament.uk/terms/95541", "prefLabel" : {"_value" : "Criminal law"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95591", "prefLabel" : {"_value" : "EU law and treaties"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95635", "prefLabel" : {"_value" : "Human rights"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95767", "prefLabel" : {"_value" : "Terrorism"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/506212", "abstract" : {"_value" : "This paper describes the Article 50 TEU process, and developments since the EU referendum in June 2016 up to January 2017. More recent Brexit developments in the EU and the UK are discussed in other Library briefing papers on the Parliamentary website.\n \nArticle 50 TEU\n \nThe Treaty base for EU withdrawal is Article 50 of the Treaty on European Union (TEU). This is now considered the only legal way to leave the EU, although some suggested there are other ways.\n \nNotifying intention to withdraw\n \nAfter a decision to leave the EU, the first step is for the UK to notify the European Council of the UK\u2019s intention to withdraw. There is no set timeframe for when it has to do so, or in what form.\n \nThe Government assumed notification would be done by the Prime Minister under prerogative powers. But arguments that Parliament should \u2013 or even would have to \u2013 give its consent gained currency after the referendum and became the subject of a legal challenge at the High Court and the Supreme Court in the Miller case.\n \nThere is no provision for withdrawing the notification, but many analysts believe Article 50 is revocable and that the UK could change its mind about leaving the EU after notification and before actually withdrawing. The revocability of Article 50 TEU was not raised in the Miller case before the High Court, but could be important.\n \nThe Prime Minister, Theresa May, has said the Government intends to notify the European Council by the end of March 2017.\n \nAlthough UK Government ministers have talked informally to other EU leaders, the EU institutions insist there will be no formal discussions about Brexit until the UK has notified the European Council of its intention to withdraw.\n \nThe EU Commission negotiator, Michel Barnier, has been talking to other EU leaders in order to prepare the EU position on Brexit.\n \nEU-UK negotiations\n \nNotification will trigger the opening of withdrawal negotiations between the UK and the EU. The European Council will draw up a negotiating mandate (\u2018guidelines\u2019) without the UK\u2019s participation. Article 50 does not indicate how the guidelines will be adopted.\n \nThe EU negotiator, the European Commission, will then negotiate a withdrawal agreement with the UK. The withdrawal agreement will be concluded by the EU Council by a 'super' qualified majority (72% of participating states - excluding the UK) after obtaining the consent of the European Parliament. \n \nDuring the negotiations the UK will continue to participate in EU activities, the EU institutions and decision-making. But it will not take part or vote in any Council or European Council discussion concerning its withdrawal.\n \nThe negotiation period is two years from formal notification, but it can be extended if all Member States agree.\n \nMember State diplomats agreed that the scheduled UK presidency of the EU in 2017 will be held by Estonia.\n \nThe withdrawal agreement\n \nIt is not clear what the withdrawal agreement will cover, but it will probably set out the detailed withdrawal arrangements and transition provisions, taking into account the framework for the withdrawing State\u2019s future relationship with the EU.\n \nThere are particular concerns about the continuation of the UK\u2019s trading relations with third states and there is a question about possible vested rights for individuals and companies. The UK Government has not revealed its hopes or intentions for the withdrawal negotiations. The Chancellor, Philip Hammond, has said it is likely that the UK will need a transitional agreement.\n \nAgreement on future relationship with EU\n \nIt is not clear whether the UK\u2019s future relationship with the EU will be covered by the withdrawal agreement or negotiated as a separate agreement alongside the withdrawal agreement.\n \nThe UK could ask to re-join the European Free Trade Association (EFTA) and the European Economic Area (EEA). Membership of these organisations would not be automatic but subject to the unanimous approval of existing Members. The Government is not looking at existing models for its future relationship with the UK, but at a bespoke agreement with the EU.\n \nVoting on any separate post-exit EU-UK agreement could require the unanimous agreement of EU Member States and EP consent.\n \nIf the UK wanted to re-join the EU in the future, it would have to re-apply under Article 49 TEU.\n \nRelease of EU obligations on withdrawal\n \nWithdrawal will take effect either when a withdrawal agreement enters into force, or two years after notifying the European Council of the intention to withdraw (unless there is a unanimous agreement to extend the negotiations). If there is no withdrawal agreement after two years and a veto on an extension period, or if the UK does not like the agreement, it can leave the EU without a withdrawal agreement.\n \nThe other EU Member States can reject a withdrawal agreement, but they cannot stop the UK from leaving the EU.\n \nEU law will cease to apply to the UK upon withdrawal, but there might be some acquired rights for EU and UK citizens.\n \nGovernment and Parliamentary preparations\n \nThe Government has established two new departments to manage Brexit: the Department for Exiting the European Union, with David Davis as the new Secretary of State, and the Department for International Trade, led by Liam Fox. There are two new corresponding parliamentary Select Committees: the Brexit Committee, chaired by Hilary Benn, and the International Trade Committee, chaired by Angus Brendan MacNeil.\n \nDealing with EU law the UK has implemented: the 'Great Repeal Bill'\n \nOn 2 October 2016, the Prime Minister announced plans to introduce a \u201cGreat Repeal Bill\u201d in the next Queen's Speech, which will repeal the European Communities Act 1972 (the ECA) and incorporate (transpose) European Union law into domestic law, \u201cwherever practical\u201d. The Government has indicated that these legal changes within the Bill would take effect on \u201cBrexit Day\u201d: the day the UK officially leaves the European Union (EU).\n \nThe Government has indicated that the Bill will be designed to re-establish control over law-making by repealing the ECA and to provide some certainty over the content of the statute book while the UK negotiates its exit from the EU. Once the UK has left, the next legislative stage would be for Government and Parliament to decide whether to keep any EU-derived law in UK domestic law.\n \nThe devolved regions\n \nThe devolved legislatures will have to deal with EU legislation they have transposed into Scottish, Welsh or Northern Irish law. It will also be necessary to amend the relevant parts of the devolution legislation, which might require a Legislative Consent Motion under the Sewel Convention.  This is discussed in more detail in CBP 7793, Legislating for Brexit: the Great Repeal Bill, 21 November 2016."}
      , "date" : {"_value" : "2017-01-16T21:34:44.8752077+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library briefing paper looks at the process of withdrawing from the EU under Article 50 of the Treaty on European Union. There could be a complex and difficult negotiation lasting two years or more, or the UK could leave without settling its exit terms or its future relationship with the EU."], "identifier" : {"_value" : "CBP-7551"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Brexit: how does the Article 50 process work?", "topic" : [{"_about" : "http://data.parliament.uk/terms/95514", "prefLabel" : {"_value" : "Central government"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95532", "prefLabel" : {"_value" : "Constitution"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95542", "prefLabel" : {"_value" : "Crown"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95588", "prefLabel" : {"_value" : "EU external relations"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95591", "prefLabel" : {"_value" : "EU law and treaties"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95593", "prefLabel" : {"_value" : "Europe"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95648", "prefLabel" : {"_value" : "International law"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95649", "prefLabel" : {"_value" : "International organisations"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95659", "prefLabel" : {"_value" : "Legislative process"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/673364", "abstract" : {"_value" : "General background on school funding reform in England can be found in a Library briefing paper:\n \n School funding in England: Current system and proposals for 'fairer schools funding'. \n \nThis looks at the current school funding system, the Government's proposals for reforms, and commentary.  \n \nWhat is the Government proposing?\n \nThere is currently no national, 'from scratch' formula to determine how much local authority areas receive per-pupil, each year, for their schools budget. Allocations are driven largely by historical funding levels. \n \nThe Government is proposing the phased introduction of new national school funding formulas from 2018-19. One, the main national funding formula (or NFF), will be used for calculating the bulk of school funding for pupils aged approximately 5 to 16. A second formula will be used for calculating high needs funding - this is largely for special educational provision. There are ongoing parallel reforms to early years funding.\n \nIn the first year, 2018-19, the NFF would only be used to calculate local authorities' allocations and as now they would apply a local funding formula (a so-called 'soft' formula).\n \nIn 2019-20, the NFF would be used to distribute the vast majority of school funding directly to schools (a so-called 'hard' formula).\n \nThere would be transitional arrangements while the new funding system is phased in, including caps on gains and losses.\n \nThe Government is currently consulting on its proposals. Its second-stage consultations opened on 14 December 2016 and are due to close on 22 March 2017.\n \nThese changes build on reforms started by the Coalition Government, which held a number of consultations and allocated £390 million of additional funding to the \u2018least fairly funded\u2019 areas for 2015-16. Devon local authority was one of the recipients. This funding was then rolled forward to subsequent years.\n \nPotential impact for individual schools, constituencies (including East Devon) and local authority areas\n \nAlongside the second stage consultation documents, the DfE has published tables of figures illustrating potential impacts for schools and local authorities.\n \nThe DfE is clear that these are not actual allocations for schools or local authorities in any particular year, and are for illustrative purposes only, to inform the consultation.\n \nThey illustrate funding under the NFF in two hypothetical scenarios:\n \n If the NFF was introduced in full and without transitional protections in 2016-17. This figure is then compared to a baseline. If the NFF was introduced in 2018-19, with transitional protections (i.e., caps on gains and losses). Again, this figure is compared to a baseline. \n \nActual funding under the NFF would depend on pupil numbers/ characteristics at the time, any changes to the formula made post-consultation, and overall school funding. There are also other separate sources of school revenue funding, including the Pupil Premium Grant and 16-19 (sixth form) funding.\n \nNational funding formula consultation:\n \nIllustrative NFF funding for schools in East Devon\n \n Baseline funding [a] Funding school received in 2016-17 or 2016/17 (£ million)  50.4             Illustrative NFF funding if formula implemented in full in 2016-17, without transitional protections [b] Illustrative total NFF funding (£ million) 49.9       [c]= [b]/[a] -1 Percentage change compared to baseline      All schools      -1.1%    max gain      +12.0%    max loss      -2.9%              Schools with more funding than baseline      16   Schools with less or the same funding as baseline      20 Illustrative NFF funding in the first year of transition [d] Illustrative NFF year 1 funding (£ million)      50.0            [e]=[d]/[a] -1 Percentage change compared to baseline          All schools      -0.9%   max gain      +2.4%   max loss      -1.5%              Schools with more funding than baseline      16   Schools with less or the same funding as baseline      20            Number of schools excluded because they are new schools still filling up 2 \n \nSources: https://consult.education.gov.uk/funding-policy-unit/schools-national-funding-formula2/\n \nEduBase, DfE\n \nThe wider school funding context\n \nSchools in England report that they are facing rising cost pressures, especially from increased staffing costs.\n \nIn the November 2015 Spending Review, the Government said that the core schools budget would be protected in real terms over the Spending Review period, and that per pupil funding levels will be maintained in cash terms. Funding for the pupil premium would also be protected in cash terms.\n \nSavings of around £600 million would be made from the Education Services Grant (ESG). This is additional funding given to academies and local authorities for services such as human resources, school improvement and education welfare services.\n \nThe Institute for Fiscal Studies (IFS) estimated in April 2016 that there would be at least a 7% real terms reduction in per-pupil spending between 2015-16 and 2019-20, or about 8% if changes in the costs likely to be faced by schools were also accounted for.\n \nOn 14 December 2016, the National Audit Office (NAO) published a report on schools\u2019 financial health:\n \n NAO Report \u2013 financial sustainability of schools, 14 December 2016 \n \nThis reported that the department\u2019s overall schools budget was protected in real terms, but did not provide for funding per pupil to increase in line with inflation. Mainstream schools in England would be required to make £3 billion of savings by 2019-20, to counteract cost pressures. This equated to an 8% real-terms reduction in per-pupil funding for mainstream schools between 2014-15 and 2019-20.\n \nPress articles - Devon\n \n Exmouth Journal, 'Exmouth Community College faces drop in funding', 30 December 2016. Sidmouth Herald, 'Bitter disappointment\u2019 as Sidmouth College stands to lose £56,000 a year in funding shake-up', 26 December 2016. \n \nPress articles - general\n \n Times Educational Supplement, 'School leaders accuse DfE of \u2018giving with one hand whilst taking away with two\u2019, 11 January 2017. Schools Week, 'National funding formula: 10,700 schools set for extra cash, but more than 9,000 to lose out', 14 December 2016. The Telegraph, 'Rural schools set for funding boost under new Government proposals', 14 December 2016.  \n \nPress releases\n \n ASCL, 'Schools short-changed by new funding formula proposals', 16 January 2017. Department for Education, 'Funding for special educational needs support confirmed', 10 January 2017. Department for Education, 'Plan to end the postcode lottery of school funding revealed', 14 December 2016.   Joint statement by ASCL, ATL, NUT and Voice on school funding, 13 December 2016 \n \nOther useful links\n \n DfE, School national funding formula - stage 2. DfE, High needs national funding formula - stage 2. \n \n \n \n \n \n "}
      , "date" : {"_value" : "2017-01-16T13:52:07.1363885+00:00", "_datatype" : "dateTime"}
      , "description" : ["MPs will debate the subject of education funding in Devon on Wednesday 18 January 2017 in a Westminster Hall debate called by Sir Hugo Swire MP. This page provides some background information on reforms to school funding in England and potential impacts for local areas, including East Devon. It also provides links to relevant press articles and press releases."], "identifier" : {"_value" : "CDP-2017-0017"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Education funding in Devon", "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/673363", "abstract" : {"_value" : "Difficulty conceiving is a problem that affects around one in seven couples in the UK. According to NHS Choices, 84% of couples will conceive naturally within a year if they have regular unprotected sex, while 92% will conceive within two years.\n \nThe National Institute for Clinical Excellence (NICE) recommends that couples who have been unsuccessful in conceiving after two years should be offered three full cycles of in vitro fertilisation (IVF) for women under 40, and one cycle for women between 40 and 42. However, these are guidelines, and Clinical Commissioning Groups (CCGs) are not legally required to implement them. There is substantial variation between CCGs in England in terms of what fertility treatments are routinely funded.\n \nAccording to Fertility Fairness, 35 CCGs offer three cycles of IVF to women under 40, but just four CCGs out of 209) offer funding for fertility treatment which is fully in line with the NICE guidelines, all of which are in Greater Manchester. Four CCGs currently do not routinely fund any fertility treatment: Mid Essex, North East Essex, Basildon & Brentwood and South Norfolk. A number of other CCGs are currently consulting on reducing or decommissioning existing services.\n \nThere is variation between the devolved administrations regarding funding for IVF, but there is no variation within Scotland, Wales or Northern Ireland.\n \n Scotland \u2013 eligible women under 40 are entitled to two cycles. The Scottish Government is due to begin consultations with health boards on increasing this to three cycles in April 2017. Wales \u2013 eligible under 40 are entitled to two cycles. Northern Ireland \u2013 women under 40 are entitled to one cycle.  \n \n "}
      , "date" : {"_value" : "2017-01-16T13:37:57.9186584+00:00", "_datatype" : "dateTime"}
      , "description" : ["This debate pack has been prepared ahead of the debate on decommissioning of in vitro fertilisation and other NHS fertility services to be held in Westminster Hall on Thursday 19th January. The debate is being sponsored by Steve McCabe, Edward Vaizey and Tom Brake."], "identifier" : {"_value" : "CDP-2017-0019"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Decommissioning of IVF and other NHS fertility services", "topic" : [{"_about" : "http://data.parliament.uk/terms/95621", "prefLabel" : {"_value" : "Health services"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/673362", "abstract" : {"_value" : "On 8 July 2016, Burhan Wani, a 22 year-old leader of the armed group Hizbul Mujahedin, was killed by the security forces in Indian-administered Kashmir. Wani had been highly active on social media and had been called a \u201cTwitter terrorist\u201d. Tens of thousands attended his funeral, at which clashes broke out between the security forces and protestors. The security forces fired live ammunition into the crowd, killing several people. One police officer was also killed.\n \nSince Wani\u2019s death, the Kashmir Valley has seen its biggest outbreak of protest and violence since 2010. The authorities have declared a succession of curfews and closed down mobile phone services and the media. Protestors have organised a series of general strikes and there have been regular public rallies against Indian rule. Schools, colleges and universities have also been closed. The economy has been badly hit. Funerals have often led to further clashes between protestors and the security forces. Many civilians have been killed, injured (including through the use of pellet guns by the authorities) or arrested. Armed militants have increased their attacks on the security forces. In September 2016 an attack on an army base killed 19 Indian soldiers \u2013 the army\u2019s worst loss of life for well over a decade.\n \nThere has also been a serious flaring up of tension between India and Pakistan, with regular exchanges between their forces along the Line of Control. These have led to significant military casualties. Senior figures on both sides have been ratcheting up the hostile rhetoric, leading to growing fears of a major escalation in conflict between the two countries."}
      , "date" : {"_value" : "2017-01-16T12:49:31.5208733+00:00", "_datatype" : "dateTime"}
      , "description" : ["The House of Commons Library prepares a briefing in hard copy and/or online for most\u202fnon-legislative debates in the Chamber and Westminster Hall other than half-hour debates.\u202fDebate Packs\u202fare produced after the announcement of parliamentary business. They are intended to provide a summary or overview of the issue being debated and identify relevant briefings and useful documents, including press and parliamentary material. More detailed briefings can be prepared for Members on request to the Library."], "identifier" : {"_value" : "CDP-2017-0020"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/37362", "prefLabel" : {"_value" : "International Affairs and Defence Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Kashmir", "topic" : [{"_about" : "http://data.parliament.uk/terms/95497", "prefLabel" : {"_value" : "Asia"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95635", "prefLabel" : {"_value" : "Human rights"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/673360", "abstract" : {"_value" : "This briefing provides an overview of some of the issues that may arise in a debate on the rural economy.\n \n Box 1: Devolution This topic covers both devolved and reserved responsibilities for Scotland, Wales and Northern Ireland. Foreign policy is generally reserved to Westminster, for example, while policy on agriculture is generally devolved. \n \nRural businesses accounted for 25% of all businesses in England in 2014/15 and 30% of those in Scotland in 2016 (note that England and Scotland use different definitions of rural areas); 16% of those in England and 28% of those in Scotland were based on agriculture, forestry and fishing. Tourism is also an important industry for the rural economy.\n \nEU funding through the Common Agricultural Policy (CAP) is highly relevant to the rural economy. Making up nearly 40% of total EU expenditure, it provides direct payments to farmers, market support measures and rural development programmes to support the wider rural economy. Direct support for the UK has been guaranteed by the Government to 2020 but a new agricultural policy for the UK is expected in the future.\n \nIn the year to September 2016, 72% of UK food and non-alcoholic drink exports were to the EU; the UK imports more food and drink than it exports and the EU is a major source. At the current time we do not know what trading arrangement the UK will have with the EU and what farming policy will replace the Common Agricultural Policy. Both are linked \u2013 any agricultural subsidies would be highly relevant in the making of alternative trading arrangements.\n \nSome of the agricultural and environmental impacts of Brexit were picked up by the Environmental Audit Committee\u2019s recent report The Future of the Natural Environment after the EU Referendum."}
      , "date" : {"_value" : "2017-01-16T12:41:40.0024009+00:00", "_datatype" : "dateTime"}
      , "description" : ["This pack has been produced ahead of the Opposition Day debate to be held in the Commons Chamber on Tuesday 17 January 2017 on the effect of the UK leaving the EU on the rural economy. The debate will be on the motion put forward by the Scottish National Party :\nThat this House is concerned at the possible impact upon the rural economy of the Government\u2019s aim for the UK to leave the EU; and calls upon the Government to present to Parliament a clear statement of its aims for the rural economy in negotiations with the EU prior to triggering Article 50, and to give assurances on the future of agriculture, particularly with regard to funding, and fisheries after 2020."], "identifier" : {"_value" : "CDP-2017-0018"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Effect of the UK leaving the EU on the rural economy", "topic" : [{"_about" : "http://data.parliament.uk/terms/95482", "prefLabel" : {"_value" : "Agriculture and environment"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95526", "prefLabel" : {"_value" : "Common Agricultural Policy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95536", "prefLabel" : {"_value" : "Countryside"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95560", "prefLabel" : {"_value" : "Economic policy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95589", "prefLabel" : {"_value" : "EU grants and loans"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95601", "prefLabel" : {"_value" : "Farmers"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95606", "prefLabel" : {"_value" : "Fisheries"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95608", "prefLabel" : {"_value" : "Food"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/673359", "abstract" : {"_value" : "Members will debate the following motion moved by the Scottish National Party:\n \nEffect of DWP Policies on low income households\n \nThat this House is concerned at the impact of policies pursued by the Department of Work and Pensions upon low income households; notes the negative impact disclosed in the pilot schemes for Universal Credit; expresses concern about the forthcoming cuts to Work Allowances under Universal Credit and believes that the closure of JobCentres in Glasgow and other areas will create difficulties for many people in accessing services, and calls on the Department to suspend the roll out of Universal Credit and the Job Centre closure programme. "}
      , "date" : {"_value" : "2017-01-16T12:37:12.4205259+00:00", "_datatype" : "dateTime"}
      , "description" : ["MPs will debate \u2018Impact of DWP policies on low income households\u2019 on Tuesday 17 January 2017 in the Main Chamber. This is an Opposition Day debate moved by the Scottish National Party. This House of Commons Library briefing provides background to the debate and includes a summary of the issues, statistics and press and parliamentary coverage."], "identifier" : {"_value" : "CDP-2017-0013"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70459", "prefLabel" : {"_value" : "Social and General Statistics Section"}
      }
      , {"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Impact of DWP policies on low income households", "topic" : [{"_about" : "http://data.parliament.uk/terms/95503", "prefLabel" : {"_value" : "Benefits administration"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95504", "prefLabel" : {"_value" : "Benefits policy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95576", "prefLabel" : {"_value" : "Employment schemes"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95599", "prefLabel" : {"_value" : "Family benefits"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95632", "prefLabel" : {"_value" : "Housing benefits"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95749", "prefLabel" : {"_value" : "Sickness, disability and carers' benefits"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95771", "prefLabel" : {"_value" : "Unemployment"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95784", "prefLabel" : {"_value" : "Working age benefits"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/673357", "abstract" : {"_value" : "How many EU laws are there?\n \nAccording to data on the EU\u2019s Eur-Lex database, there are at present around 19,000 EU legislative acts in force. These are mainly directives, regulations, decisions and external agreements, but they include a range of other instruments.\n \nAs Commons Briefing Paper Legislating for Brexit: the Great Repeal Bill, CBP7793, 21 November 2016, explains, a major issue for Brexit is what to do about EU legislation that has been incorporated into UK law.\n \nHow are they implemented in the UK?\n \nThe European Communities Act 1972 (ECA)\n \nSection 2(2) of the European Communities Act 1972 (ECA) provides a power for subordinate legislation to be made where the EU Treaties require Member States to make provisions in their domestic law, such as for the implementation of EU directives. It also provides that other powers to adopt subordinate legislation in other Acts are interpreted as enabling them to be used to implement EU law. \n \nSecondary legislation to implement EU law\n \nMost EU directives and a small number of EU regulations and decisions are implemented in the UK by SI under the authority of the ECA - the majority - or another enabling Act.\n \nPrimary legislation to implement EU law\n \nSome EU directives are implemented by primary legislation (Act of Parliament). These will be examined in a separate briefing paper.\n \nBrexit\n \nEffects of repealing the ECA\n \nRepealing the ECA will have the effect of rendering the law as if the repealed Act had never existed, which would mean that secondary legislation made under the ECA (but not under other enabling Acts) would no longer be legally valid on Brexit day.\n \nThe 'Great Repeal Bill'\n \nAlthough the aim of the Government\u2019s proposed 'Great Repeal Bill' is to legislate to leave the EU, for practical reasons and to avoid legal gaps, the Government has said the Bill will \u201cconvert\u201d EU law into UK law where it is practical. The Government and Parliament will then decide whether to repeal, amend or keep them. It is not yet clear what role Parliament will have in such a process.\n \nThe Devolved Legislatures \n \nThe ECA applies to the whole of the UK and to different degrees in Gibraltar and the Crown Dependencies. Under the Devolution Statutes the devolved authorities may observe, transpose and implement EU law, and are obliged not to legislate or act in a way that is contrary to EU law. Brexit means they too will need to address the matter of EU-derived laws.\n \nEU regulations and external agreements\n \nBriefing Paper 7863, Legislating for Brexit: directly applicable EU law, 12 January 2017, looks at EU regulations, which will cease to have effect in the UK if the ECA is simply repealed without a saving provision, pending decisions on their future status.\n \nBriefing Paper 7850, Legislating for Brexit: EU external agreements, 5 January 2017, looks at the EU\u2019s external agreements, stating whether they are exclusive EU competence or mixed competence agreements."}
      , "date" : {"_value" : "2017-01-16T10:27:15.6063743+00:00", "_datatype" : "dateTime"}
      , "description" : ["How does the UK implement EU law and how many UK laws are there which implement EU law? This paper looks at how the majority of EU directives are implemented in the UK and lists EU-related UK Statutory Instruments."], "identifier" : {"_value" : "CBP-7867"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Legislating for Brexit: Statutory Instruments implementing EU law", "topic" : [{"_about" : "http://data.parliament.uk/terms/95526", "prefLabel" : {"_value" : "Common Agricultural Policy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95532", "prefLabel" : {"_value" : "Constitution"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95552", "prefLabel" : {"_value" : "Devolution"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95587", "prefLabel" : {"_value" : "EU enlargement"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95588", "prefLabel" : {"_value" : "EU external relations"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95591", "prefLabel" : {"_value" : "EU law and treaties"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95659", "prefLabel" : {"_value" : "Legislative process"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95703", "prefLabel" : {"_value" : "Parliament"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/672660", "abstract" : {"_value" : "On 19 January 2017, the House of Lords will debate the impact of Britain\u2019s planned withdrawal from the EU on the creative industries.\n \nThe creative industries in the UK account for a significant part of the UK economy. According to figures produced by the Department for Culture, Media and Sport (DCMS), the gross value added (GVA) for the creative industries was £84.1 billion, which accounted for 5.2 percent of the UK economy. The GVA for the creative economy\u2014which includes the contribution of all those employed in the creative industries, as well as those who work in so-called creative occupations outside the creative industries\u2014was worth £133.3 billion in 2014, accounting for 8.2 percent of the UK economy.\n \nFollowing the results of the EU referendum, a number of commentators raised concerns about the potential impact of leaving the European Union on the UK\u2019s creative industries, especially funding. Creative Europe was established by the EU in 2014 and is the European Commission\u2019s framework programme to support the EU\u2019s culture and audio-visual sectors. It has a \u20ac1.46 billion budget for the years 2014/20 with the UK receiving \u20ac40 million worth of grants over 2014 and 2015. However, with the UK set to leave the EU, its participation in this programme remains uncertain.\n \nAs the creative industries cover a wide variety of sectors, this Library briefing considers two areas of the creative industry in greater detail\u2014the video game industry and the film industry. The Entertainment Retailers Association preliminary estimates found that video games sales in 2016 were worth around £2.9 billion and as of October 2016 there were 2,044 active games companies in the UK. Trade bodies for the industry are particularly concerned that leaving the EU could make it difficult for UK companies to recruit the talent it needs. Similarly, the film and television market was worth an estimated £4.1 billion in 2015. A number of commentators have expressed concern about the potential loss of funding for the film industry from the EU\u2019s Creative Europe programme, although others have argued that the UK\u2019s exit presents opportunities for the British film market.\n \nOn 16 September 2016, the House of Commons Culture, Media and Sport Committee launched an inquiry on the impact of leaving the EU on the creative industries, tourism and the digital single market."}
      , "date" : {"_value" : "2017-01-13T15:25:36.7653467+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Lords Library briefing provides information on the potential impact of leaving the European Union on the creative industries."], "identifier" : {"_value" : "LLN-2017-0003"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/346713", "prefLabel" : {"_value" : "Lords Library notes"}
      }
      , "title" : "Leaving the European Union: Impact on the Creative Industries", "topic" : [{"_about" : "http://data.parliament.uk/terms/95496", "prefLabel" : {"_value" : "Arts"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95589", "prefLabel" : {"_value" : "EU grants and loans"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95671", "prefLabel" : {"_value" : "Media"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/672657", "abstract" : {"_value" : "Summary\n \nThe main sources of EU funding for infrastructure are the Connecting Europe Facility (CEF), the European Regional Development Fund (ERDF) and Horizon 2020. Wales is able to benefit from these sources of funding for as long as the UK remains a formal Member of the EU (which includes the period of negotiations after the triggering of Article 50).\n \nEuropean financing for infrastructure is available via the European Investment Bank (EIB). The UK\u2019s future relationship with the EIB is likely to be a feature of exit negotiations.\n \nThe UK\u2019s exit from the EU has a number of implications for infrastructure in Wales. Three of the main potential consequences for future infrastructure projects are:\n \n A reduction in the amount of funding available for infrastructure projects, if EU funding is not fully replaced by UK government funding Fewer options for the Welsh government and Welsh local authorities to obtain funding and/or financing from UK-controlled funding being allocated according to UK goals and priorities, which may be different from EU goals and priorities"}
      , "date" : {"_value" : "2017-01-13T15:10:16.7456523+00:00", "_datatype" : "dateTime"}
      , "description" : ["This debate pack has been prepared ahead of the debate on the effect of the UK leaving the  EU on infrastructure in Wales to be held in Westminster Hall on Tuesday 17 January at 2.30pm. The subject for debate has been chosen by Stephen Doughty MP."], "identifier" : {"_value" : "CDP-2017-0010"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Effect of the UK leaving the  EU on infrastructure in Wales", "topic" : [{"_about" : "http://data.parliament.uk/terms/95560", "prefLabel" : {"_value" : "Economic policy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95561", "prefLabel" : {"_value" : "Economic situation"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95724", "prefLabel" : {"_value" : "Public expenditure"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/672653", "abstract" : {"_value" : "Summary\n \nIf you\u2019re a regular of Economic Indicators you could can be forgiven for getting a sense of déjà vu as you look through this month\u2019s summary. We again report that since the EU referendum the economy has largely continued to perform well (on the back of the service sector) and that economists expect growth to slow in 2017 (with consumers expected to rein in their spending, in the face of higher prices).\n \nGrowth revised up\n \nThe economy grew by 0.6% in the quarter following the EU referendum (July-September 2016) compared with the previous three months. The ONS had previously estimated growth in the quarter to be slightly lower at 0.5%. Growth continues to be in keeping with its pre-referendum performance and as the ONS\u2019 chief economist points out, it is driven by consumer spending:\n \n Robust consumer demand continued to help the UK economy grow steadily in the third quarter of 2016. Growth was slightly stronger than first thought, though, due to greater output in the financial sector. \n \n \nGrowth was driven entirely by the service sector \u2013 it was the only broad sector of the economy to grow during Q3 2016. The importance of the service sector for economic growth is a reoccurring theme in our monthly summaries. The sector\u2019s output is 12% higher than its pre-recession peak. In contrast output from manufacturing and production remain 6% and 8% below pre-recession levels respectively. Construction has recovered to its 2008 level.\n \nMore positive news\n \nIn keeping with the growing service sector, retail sales data remain strong: over the three months to November 2016, the value of retail sales was up 2.4% compared with the previous three months. Consumer confidence is also fairly upbeat.  \n \nConfidence indicators from manufacturing and services industries have been positive. The Manufacturing Purchasing Managers\u2019 Index, an important indicator of output and confidence in the sector, reached a two-and-a half year high in December.\n \nThe labour market remains in relatively good health \u2013 the unemployment rate is the lowest it has been since July-September 2005.\n \nThe FTSE-100 \u2013 which tracks the share-prices of the 100 largest companies listed on the London Stock Exchange \u2013 closed at its eleventh successive record high on 12 January 2017.\n \nWords of caution for 2017\n \nThe pound has fallen by 1.2% against its major trading partners in the early days of 2017. Sterling is now 13.2% lower than its pre-referendum level.\n \nEconomists expect the lower value of the pound \u2013 which makes imports more expensive \u2013 to feed through to the prices paid by consumers, as businesses pass higher costs onto consumers.\n \nThe higher import prices have been felt in the early stages of the supply chain in recent months. The prices of materials and fuels bought by UK manufacturers for processing were 12.4% higher in October 2016 compared with a year ago. Much of the price growth was due to imported goods and crude oil.\n \nFor consumers the important thing is whether higher supply chain costs get reflected in the price they pay for products. Consumer prices, on the CPI measure, have been increasing in recent months. Prices were 1.2% higher in November 2016 compared with a year ago. The ONS say that more import-intensive products, including energy, have been the main driver of price increases in recent months.\n \n \nEconomists expect consumer prices to continue to rise during 2017 and, as a consequence, the purchasing power of consumers to fall, leading them to cut back on spending. Falls in consumer demand are expected to slow economic growth. On average economists expect the economy to grow by 1.3% in 2017."}
      , "date" : {"_value" : "2017-01-13T11:31:16.3278591+00:00", "_datatype" : "dateTime"}
      , "description" : ["Analysis of the latest UK and international economic indicators"], "identifier" : {"_value" : "CBP-7865"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Economic Indicators, January 2017", "topic" : [{"_about" : "http://data.parliament.uk/terms/95560", "prefLabel" : {"_value" : "Economic policy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95561", "prefLabel" : {"_value" : "Economic situation"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/672651", "abstract" : {"_value" : "A Public Service Ombudsman for the UK\n \nOn 5 December 2016 the Government published a draft Public Service Ombudsman Bill.\n \nThe Bill would create a Public Service Ombudsman (PSO) for UK reserved matters and public services in England.\n \nWhat is an ombudsman?\n \nAn ombudsman is a person appointed to receive complaints from an aggrieved person against a public authority (although ombudsmen also exist for the private sector). They usually have the power to investigate, to recommend corrective action, and to issue a report. According to the Ombudsman Association, ombudsmen offer their services \u201cfree of charge, and are thus accessible to individuals who could not afford to pursue their complaints through the courts\n \nIn the UK, the focus of ombudsmen in the public sector concerns complaints of maladministration by public bodies.\n \nThe term \u2018maladministration\u2019 is not defined in the legislation which established the various public services ombudsmen in the UK. However, it can be broadly defined as the public body not having acted properly or fairly, or having given a poor service and not put things right.\n \nWhat does the draft Bill do?\n \nThe draft Bill would:\n \n Create a single Public Service Ombudsman for UK reserved matters and for public services delivered solely in England, absorbing the existing remits and responsibilities of the Parliamentary Ombudsman, the Health Service Ombudsman and the Local Government Ombudsman. Abolish the existing Parliamentary Ombudsman, Health Service Ombudsman and Local Government Ombudsman. Abolish the MP filter, meaning that all complaints of maladministration can be made directly to the PSO. Currently, complaints to the Parliamentary Ombudsman have to be made through an MP \u2013 this is known as the \u2018MP filter\u2019. Under the draft Bill MPs would still be able to submit complaints if constituents wanted them to. Create a statutory body, known as the Board of the Public Service Ombudsman, to provide staff and resources for the PSO to carry out her functions. Provide for Parliamentary oversight and scrutiny of the Board Equip the PSO with powers to investigate complaints and to promote good complaints handling. The Housing Ombudsman is unaffected by the draft Bill and would continue. However, the draft Bill gives the Minister for the Cabinet Office the power to pass secondary legislation which would enable its responsibilities surrounding complaints against social landlords to be absorbed into the PSO\u2019s remit at a later date. \n \nOther public service ombudsman \u2013 in Scotland, Wales and Northern Ireland \u2013 are unaffected by the draft Bill, although it is envisaged that the new PSO will work with these existing ombudsmen.\n \nDoes the draft Bill go far enough?\n \nThe provisions in the draft Bill are unlikely to be controversial.\n \nMost of the criticism to date has focused on what has not been included. In particular:\n \n the new PSO does not have \u2018own initiative powers\u2019, i.e. the power to open a case without having to receive a complaint first. the draft Bill\u2019s silence on whether the PSO\u2019s findings would be binding has been labelled a \u201cregressive move which undermines the ombud\u2019s ability to deliver justice\u201d. the draft Bill has also been criticised for offering a \u201cconservative\u201d model of ombudsman. \n \nWhat happens to a draft Bill?\n \nDraft Bills are published to enable consultation and pre-legislative scrutiny. Most draft Bills are examined either by a select committee in the House of Commons or in the House of Lords, or by a joint committee of both Houses.\n \nAfter consultation and pre-legislative scrutiny has taken place, the Bill may be introduced formally in the House of Commons or House of Lords.\n \n "}
      , "date" : {"_value" : "2017-01-13T09:06:17.292201+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Commons Library Briefing Paper looks at the Draft Public Service Ombudsman Bill, published by the Cabinet Office on 5 December 2016, which would create a Public Service Ombudsman for UK reserved matters and public services delivered solely in England."], "identifier" : {"_value" : "CBP-7864"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Draft Public Service Ombudsman Bill", "topic" : [{"_about" : "http://data.parliament.uk/terms/95514", "prefLabel" : {"_value" : "Central government"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95659", "prefLabel" : {"_value" : "Legislative process"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95703", "prefLabel" : {"_value" : "Parliament"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95723", "prefLabel" : {"_value" : "Public administration"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/343144", "abstract" : {"_value" : "Driver licensing rules in the UK ultimately derive from the EU. It is as yet unclear what the impact of Brexit might be on driver licensing and testing: it seems likely that the UK would adopt a system compatible with that across the EU in order to retain the benefits of mutual recognition.\n \nDrivers are legally obliged to inform the DVLA of any changes to their health that they think might affect their legal ability to drive. Third parties, such as doctors and family members, can also make representations to the Agency if they feel someone\u2019s health is posing a danger to their driving ability.\n \nThe DVLA can withdraw a licence if a driver does not meet the required medical standard to drive. One may appeal such a decision to the Magistrate\u2019s Court.\n \nInformation on associated matters involving driver licensing and fitness to drive can be found on the Roads Topical Page of the Parliament website."}
      , "date" : {"_value" : "2017-01-12T17:54:14.7586507+00:00", "_datatype" : "dateTime"}
      , "description" : ["This paper explains the legal framework within which medical conditions for fitness to drive are assessed. It includes information on changes made to the requirements related to diabetes, epilepsy and vision in 2011 and 2013."], "identifier" : {"_value" : "SN00387"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Driving with a medical condition", "topic" : [{"_about" : "http://data.parliament.uk/terms/95738", "prefLabel" : {"_value" : "Roads"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/671990", "abstract" : {"_value" : "Formed in 2001, Pennine Acute Hospital NHS Trust (PAT) is one of the largest NHS Trusts in the country. With a total operating budget of over half a billion pounds PAT employs around 9,000 staff and serves a population of approximately 820,000 people. It runs North Manchester General Hospital, Royal Oldham Hospital, Fairfield General Hospital in Bury, and Rochdale Infirmary. PAT also provides a range of community services in North Manchester, Bury, Rochdale and Oldham.\n \nPAT was rated \"Inadequate\" overall by the Care Quality Commission (CQC) in August 2016. CQC inspectors found that the PAT provided services that were caring, but were Inadequate for being safe and well led. Rochdale Infirmary and the Trust\u2019s Community Services were rated as Good, Fairfield General Hospital was rated as Requires Improvement and North Manchester General Hospital and the Royal Oldham Hospital were rated as Inadequate. The full report of the inspection is available on the CQC website. A number of reviews have also identified serious problems with the Trust\u2019s maternity services in particular.\n \nIn March 2016, the Chief Executive of neighboring Salford Royal Hospital NHS Foundation Trust, Sir David Dalton, agreed that Salford Royal would provide leadership and support to PAT from 1 April 2016.\n \nPress articles\n \nHealth Service Journal (HSJ), Devo Manc leaders seek 'best deal' for trust turnaround, 21 December 2016\n \nHSJ, CCGs defend response to maternal deaths at 'inadequate' trust, 21 December 2016\n \nManchester Evening News (MEN), Health secretary Jeremy Hunt admits he is concerned about Pennine Acute NHS Trust, 13 December 2016\n \nMEN, MPs demand answers from Pennine Acute NHS Trust over shameful maternity care, 24 November 2016\n \nThe Guardian, 'Poor decisions and lack of compassion' reported at NHS trust, 23 November 2016 \n \nMEN, Opinion: MP Graham Stringer on why there needs to be an urgent inquiry into Pennine Acute, 12 August 2016\n \nPress releases\n \nPAT, Statement response to the MEN story in relation to maternity services, 23 November 2016\n \nPAT, New leadership team at Pennine Acute Hospitals takes action to support staff in driving improvements and safety following CQC inspection, 12 August 2016\n \nCQC, CQC finds The Pennine Acute Hospitals NHS Trust to be Inadequate, 11 August 2016"}
      , "date" : {"_value" : "2017-01-12T16:00:57.9231065+00:00", "_datatype" : "dateTime"}
      , "description" : ["MPs will debate the future of Pennine Acute Hospitals NHS Trust on Tuesday 17 January 2017, in a Westminster Hall debate called by Graham Stringer MP. This page provides some background information on the Trust, and links to relevant media reports and press releases."], "identifier" : {"_value" : "CDP-2017-0014"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Future of the Pennine Acute Hospitals NHS Trust", "topic" : [{"_about" : "http://data.parliament.uk/terms/95621", "prefLabel" : {"_value" : "Health services"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/671988", "abstract" : {"_value" : "In recent years, and in particular in 2016, events have taken place in a number of countries, including the US, the UK and Austria amongst others, which scholars and commentators have identified as exhibiting a populist and/or nationalist character and being part of a trend of disruption to the current \u2018rules-based international order\u2019. However, there is disagreement over what is meant by the terms \u2018populism\u2019 and \u2018nationalism\u2019 and whether elections and referenda or changes in political discourse subject to these characteristics pose a systemic risk to the international liberal order. This latter term is widely understood to mean the framework of liberal political and economic rules, embodied in a network of international organisations and regulations, established following the Second World War; but whether such an order exists is itself the subject of disagreement. The UK Government recognises and supports the concept of a rules-based international order.\n \nThis briefing outlines the UK Government\u2019s position on the current international order which provides the backdrop to contemporary international relations, before summarising the debate over the terms \u2018populism\u2019 and \u2018nationalism\u2019. It then surveys the work of scholars and commentators who see the rise in populism and nationalism in the domestic politics of a number of countries around the world as phenomena which exhibit either positive or negative characteristics, or a combination of the two, which in turn have been seen as influencing, or having the capacity to influence, international relations. The briefing should be read as an introduction to, and not a comprehensive survey of, the significant body of literature on the subject."}
      , "date" : {"_value" : "2017-01-12T15:57:05.1562454+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Lords Library briefing has been prepared in advance of a debate on 19 January about the challenges to the liberal international order posed by the development of populism and nationalism around the world."], "identifier" : {"_value" : "LLN-2017-0002"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/346713", "prefLabel" : {"_value" : "Lords Library notes"}
      }
      , "title" : "Populism and Nationalism: Implications for the International Order", "topic" : [{"_about" : "http://data.parliament.uk/terms/95567", "prefLabel" : {"_value" : "Elections"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95650", "prefLabel" : {"_value" : "International politics and government"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95713", "prefLabel" : {"_value" : "Political parties"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/671984", "abstract" : {"_value" : "What is \u2018directly applicable\u2019 EU law?\n \nDirectly applicable EU law does not need further domestic transposition in order to apply in the Member States. It applies as soon as it enters into force (either on the date stipulated in the act or, failing this, on the twentieth day following its publication in the Official Journal of the European Union, L series).\n \nThe Treaty on the Functioning of the European Union (TFEU) states in Article 288 that EU regulations are binding and directly applicable. EU directives are in principle not directly applicable, but they may be so, and EU decisions may be directly applicable on the same basis as directives.\n \nIn 1963 the EU Court of Justice established the principle of \u201cdirect effect\u201d of EU Treaty obligations, provided they are intended to confer rights on individuals, are precise, clear and unconditional, and do not entail any additional national or European measures (i.e. are directly applicable).\n \nHow many EU laws are directly applicable?\n \nAccording to the EU\u2019s Eur-lex website there are at present nearly 20,000 EU legislative acts in force. These are mainly directives, regulations, decisions and international agreements, but they include a range of other instruments. Of these, around 5,000 EU regulations are directly applicable in all EU Member States.\n \nDirectly applicable EU law in the UK\n \nSection 2(1) of the European Communities Act 1972 (ECA) gives the authority for directly applicable EU law to have legal effect in UK law without needing further UK enactment. Sometimes the effects of directly applicable law do need further UK implementation. EU regulations are often implemented in the UK by non-legislative or \u2018soft law\u2019 measures such as administrative rules and regulations.\n \nThe Great Repeal Bill\n \nAs Commons Briefing Paper Legislating for Brexit: the Great Repeal Bill, CBP7793, 21 November 2016, explains, a major issue for Brexit is what to do with the thousands of EU laws that are directly applicable. This is because if there is no specific provision for them, they will no longer apply in the UK as soon as the European Communities Act 1972 is repealed.\n \nAccording to the Government, the proposed \u2018Great Repeal Bill\u2019 will make provision for the EU acquis \u2013 the body of existing EU law and obligations - to be \u201cconverted\u201d into UK law \u201cwherever practical\u201d. Directly applicable laws will need to be \u2018saved\u2019 to ensure that they continue to operate until the Government (and Parliament?) decides what to do with them (which will depend largely on the outcome of the EU-UK withdrawal negotiations and the UK\u2019s future relationship with the EU)."}
      , "date" : {"_value" : "2017-01-12T14:55:02.0275147+00:00", "_datatype" : "dateTime"}
      , "description" : ["Some 5,000 EU regulations apply in the UK, They largely concern technical details required by other EU legislation and are 'directly applicable' in all EU Member States - they don't (generally) need further implementation. What are these laws and what will Brexit mean for them? This Briefing Paper explains what \u2018directly applicable\u2019 EU law is, how it applies in the UK, and estimates how many EU regulations are in force. It is one of a series of Library briefings on different elements of the EU acquis and Brexit, and will be updated periodically."], "identifier" : {"_value" : "CBP-7863"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Legislating for Brexit: directly applicable EU law", "topic" : [{"_about" : "http://data.parliament.uk/terms/95526", "prefLabel" : {"_value" : "Common Agricultural Policy"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95559", "prefLabel" : {"_value" : "Economic and monetary union"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95585", "prefLabel" : {"_value" : "EU Council of Ministers"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95588", "prefLabel" : {"_value" : "EU external relations"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95590", "prefLabel" : {"_value" : "EU institutions"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95591", "prefLabel" : {"_value" : "EU law and treaties"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95594", "prefLabel" : {"_value" : "European Commission"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95596", "prefLabel" : {"_value" : "European Parliament"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95659", "prefLabel" : {"_value" : "Legislative process"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95703", "prefLabel" : {"_value" : "Parliament"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/671967", "abstract" : {"_value" : "The Ministry of Defence has outlined a 25-year plan to streamline its massive defence estate. Analysis by the National Audit Office (NAO) suggests implementing the plan will \u201cextremely challenging\u201d and there is a \u201csignificant risk\u201d that that the poor condition of the estate will affect defence capability.\n \nThis briefing paper lays out the Government\u2019s proposals and the key findings by the NAO. The Government\u2019s plan focuses on the \u2018Built Estate\u2019 part of the Defence Estate and not the Training or Reserves estates.\n \nThe Government's plan\n \nThe Government has committed to reducing the estate in size by 30% by 2040. It has identified 91 sites across the UK it intends to dispose of by that date. These range from historic Fort George in Scotland to Woolwich barracks in London to the closure of 40 Commando\u2019s base in Devon.\n \nThe Ministry of Defence says its estate, which covers 1.8% of the UK land mass, is inefficient, expensive to maintain and incompatible with the needs of the modern armed forces. The future estate will be smaller and clustered around areas of specialisation.\n \nThe plan, also known as the Footprint Strategy, was published in A Better Defence Estate  in November 2016. The Government says it an additional £4bn will be need to be spent on the remainder of the estate over the next decade. So far it has committed £1bn.\n \nClosing these sites also releases land for up to 55,000 new homes as part of the Government\u2019s wider target of releasing land for up to 160,000 new homes by 2020.\n \nNext steps\n \n Annual report to Parliament Annual Industry day To examine Training Estate and Reserves Estate \n \nThe MOD will submit an annual update to Parliament on the implementation of the plan with the first report due in autumn 2017.\n \nDebate in Parliament\n \nThe Secretary of State for Defence gave an oral statement to the House on 7 November 2016. Sir Michael Fallon emphasised the inefficency, age and unsuitability of the estate for the current needs of the armed forces.\n \nThe strategy will deliver \u201ca better estate for service families\u201d the Defence Secretary said, to provide more stable schooling and better job opportunities for partners. Going forward, he said, the MOD will work with local authorities, the devolved administrations and industry.\n \nNia Griffiths, the shadow defence secretary, said the Labour party recognised the need for the defence estate to be restructured. But she noted the plans are \"very considerable in scale\" and expressed concern about the impact on the armed forces and families, the Government's plans for consulting relevant stakeholders (local authorities, for example) and how the Government would ensure the 55,000 homes would be affordable and in areas where there are housing shortages.\n \nSeveral MPs focused on the impact of closures of bases in their own constituencies and the strong links between the units and the local community. Drew Hendry cited the closure of the garrison at Fort George \u201cafter 250 years of service and sacrifice\u201d while Rebecca Pow worried about the \u201cknock-on effect\u201d in Taunton with 40 Commando leaving their Norton Manor camp.\n \nMembers of the Scottish National Party focused on the eight sites that are to be disposed of in Scotland and Brendan O\u2019Hara (SNP) asked how the cutbacks could be considered good for Scotland. Lady Hermon (Ind) raised the closure of three sites in Northern Ireland.\n \nThe National Audit Office describes the plan as \"challenging\"\n \nThe National Audit Office has scrutinised the plan and concluded that much of it is uncertain and carries risk. In particular, the NAO criticises historic underfunding in the estate; identifies an £8.5bn shortfall in funding needed over the next 30 years to maintain the estate; and questions the assumptions underpinning the Government\u2019s predictions of receiving £1bn in land receipts. the NAO says successfully implementing the strategy will be \"extremely challenging\".\n \nThe NAO is also critical of the contract signed with an external, Capita-led consortium. This consortium is contracted as a Strategic Business Partner to the Defence Infrastructure Organisation, which is tasked with running the defence estate. However the NAO says the business partner, brought in to improve the DIO, has not met all expectations and has not made a notable difference in transforming DIO.\n \nWhat is the defence estate?\n \n \n \nThe defence estate is 1.8% of the UK land mass and is one of the largest estates in the country. It includes land, accommodation and training facilities. The estate as a whole covers 424,000 hectares (the MOD owns 220,000 hectares of land and foreshore and has access to a further 204,000 hectares) and the \u2018built estate\u2019 covers 30 million square metres. The MOD spent £4.8bn, or 12% of its budget, on the estate in 2015-16 of which £2.7bn was spent by the Defence Infrastructure Organisation, which manages the majority of the built estate. The estate comprises three main areas:\n \n The Built Estate: barracks, naval bases, offices, storage units, depots and airfields The Housing Estate: service family homes Training Estate: training areas and ranges \n \n "}
      , "date" : {"_value" : "2017-01-12T10:04:23.3593469+00:00", "_datatype" : "dateTime"}
      , "description" : ["The Ministry of Defence holds one of the largest estates in the country and plans to reduce it in size by 30% by 2040. This Commons Library briefing paper outlines the Government's plans and critical analysis by the National Audit Office."], "identifier" : {"_value" : "CBP-7862"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/37362", "prefLabel" : {"_value" : "International Affairs and Defence Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Defence Estate Strategy", "topic" : [{"_about" : "http://data.parliament.uk/terms/95492", "prefLabel" : {"_value" : "Armed forces"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95550", "prefLabel" : {"_value" : "Defence expenditure"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95551", "prefLabel" : {"_value" : "Defence policy"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/671394", "abstract" : {"_value" : "Lord Butler of Brockwell (Crossbench), a former Cabinet Secretary, has tabled a question for short debate to ask what steps the Government is planning to take to include statistics on the time spent on parliamentary proceedings on each part of an Act in the explanatory notes on Acts of Parliament. A proposal along these lines was put forward by Daniel Greenberg, a former Parliamentary Counsel, in a paper published by the Centre for Policy Studies think tank in April 2016. Daniel Greenberg argued that line-by-line scrutiny of legislation in both Houses had \u201cbecome diluted to such a degree that it can no longer be described as taking place\u201d, and as a result there were \u201coften lengthy and significant parts of a bill that receive no detailed scrutiny at all at any point in its parliamentary passage\u201d. To address this, he suggested that the following information should be published in respect of each bill, in both the explanatory notes issued when the bill arrived in the second House and in those published once it received royal assent:\n \n The number of hours spent in committee on each part or group of clauses The number of hours spent at other amendable stages The number of amendments tabled by the Government The number of amendments tabled by others, and the percentage of those amendments that were given substantive consideration A list of those clauses on which no substantive discussion took place in committee and at each other amendable stage (whether because of the descent of a programme motion knife or for other reasons). \n \nDifferent arrangements apply in the two Houses of Parliament for the timetabling of proceedings on legislation. In the House of Commons, the majority of government bills are subject to programming. Programme orders provide a timetable for the conclusion of proceedings on a bill. They may specify by what date a stage should be completed, or how long is to be spent on a stage. A programme order may contain \u2018knives\u2019, or deadlines relating to business on particular parts of the bill; when a \u2018knife\u2019 falls, only specified decisions may be taken, and it may not be possible to debate or decide on certain clauses or amendments. In the House of Lords, there is no formal equivalent to programming. Informal negotiations take place through the \u2018usual channels\u2019 on how much time to allocate to legislative business, but their deals are not set in stone and can be altered if the House deals with business more or less quickly than expected. There have been criticisms that programming in the Commons means that not all amendments and clauses are necessarily debated, and that there is too much legislation to allow time for proper scrutiny in either House.\n \nThe House of Lords Constitution Committee is currently conducting an inquiry into the legislative process one part of which will focus specifically on the passage of legislation through Parliament. The Committee intends to take evidence on this topic in the 2017-18 parliamentary session."}
      , "date" : {"_value" : "2017-01-11T15:13:08.0224663+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Lords Library briefing examines the background to a proposal that information should be published alongside every Act showing the length of time spent on it at each stage in the parliamentary process to highlight the level of scrutiny it had received."], "identifier" : {"_value" : "LIF-2017-0001"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414041", "prefLabel" : {"_value" : "Lords In Focus"}
      }
      , "title" : "Publishing Statistics on the Time Spent on Parliamentary Proceedings on Each Part of an Act", "topic" : [{"_about" : "http://data.parliament.uk/terms/95627", "prefLabel" : {"_value" : "House of Commons"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95628", "prefLabel" : {"_value" : "House of Lords"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95659", "prefLabel" : {"_value" : "Legislative process"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95705", "prefLabel" : {"_value" : "Parliamentary procedure"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95760", "prefLabel" : {"_value" : "Statistics policy"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/345076", "abstract" : {"_value" : "Sir Eric Pickles' Review of electoral fraud\n \nOn 14 August 2015 the Cabinet Office announced that Sir Eric Pickles, the Government\u2019s Anti-Corruption Champion, was to review electoral fraud and make recommendations on what could be done to tackle the problem. His report, Securing the ballot, was published on 12 August 2016 and made fifty recommendations about various aspects of the polling and electoral registration process.\n \nThe Government's response was published on 27 December 2016. It welcomed many of the recommendations and has said it will work with the Electoral Commission, the Association of Electoral Adminstrators and others to take forward the proposals. The Government stated that the response \"creates a challenging programme of work that will take place over a number of years and requires partnership working with other governments and a range of organisations at both the national and local level\".\n \nAt the same time as publishing the response, the Government announced pilot schemes for the use of ID in polling stations. The Government will invite local authorites apply to trial different types of identification, including forms of photo ID such as driving licences and passports, or formal correspondence such as a utilities bill to prove their address backed by a signature check. Voters will be asked to produce ID before they can be given their ballot paper. These trials will take place in some areas in England at local government elections to be held in May 2018.  \n \nThe Electoral Commission's 2014 report and recommendations on electoral fraud\n \nThere has been increasing concern about electoral offences in recent years and in 2012 the Electoral Commission began a review to determine whether there were opportunities to improve confidence in the security of the electoral process. On 8 January 2014 the Commission published its final report and recommendations on electoral fraud in the UK. The Commission called for sustained action to address the risk of electoral fraud, especially in higher risk areas, and has called for the introduction of a system under which voters should be required to show proof of identity at the polling station before they can be issued with a ballot paper.\n \nRecent measures to combat electoral fraud: the introduction of Individual Electoral Registration\n \nThe Labour Government had made provision for the introduction of individual electoral registration (IER) in the Political Parties and Elections Act 2009 to help combat fraud. Following a commitment in the Coalition\u2019s Programme for government to speed up its implementation, the Electoral Registration and Administration Act 2013 made provision for the introduction of IER by 2015. IER was introduced from 10 June 2014 in England and Wales and from 19 September 2014 in Scotland. For further information see Library Briefing Paper 6764, Individual Electoral Registration. \n \nCases of electoral fraud: reports by the Electoral Commission and the police\n \nThis Briefing Paper gives details of the reports published by the Electoral Commission and the Association of Chief Police Officers on cases of alleged electoral malpractice from 2008-2015.\n \nThe All-Party Parliamentary Inquiry into electoral conduct\n \nThe Paper also provides information about the All-Party Parliamentary Inquiry into electoral conduct which published its report in October 2013. The cross-party group of MPS and Peers was commissioned by John Mann MP to examine discriminatory behaviour during election campaigns.\n \nChronology of allegations of electoral offences since 2010\n \nA chronology of allegations of electoral offences from 2010 to date is given and the different election offences are described; for information about electoral fraud before 2010 see Briefing Paper 3667, Postal voting and electoral fraud 2001-09."}
      , "date" : {"_value" : "2017-01-11T14:30:52.1045555+00:00", "_datatype" : "dateTime"}
      , "description" : ["Sir Eric Pickles, the Government\u2019s Anti-Corruption Champion, has carried out a review of electoral fraud and has made fifty recommendations on what could be done to tackle the problem. The Government has now published its response. This Briefing Paper provides information about electoral fraud since 2010 and includes details of the reports published by the Electoral Commission and the Association of Chief Police Officers on cases of alleged electoral malpractice."], "identifier" : {"_value" : "SN06255"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/61055", "prefLabel" : {"_value" : "Parliament and Constitution Centre"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Electoral fraud since 2010", "topic" : [{"_about" : "http://data.parliament.uk/terms/95567", "prefLabel" : {"_value" : "Elections"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95569", "prefLabel" : {"_value" : "Electoral register"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/340359", "abstract" : {"_value" : "Driver licensing rules in the UK ultimately derive from the EU. It is as yet unclear what the impact of Brexit might be on driver licensing and testing: it seems likely that the UK would adopt a system compatible with that across the EU in order to retain the benefits of mutual recognition.\n \nFor at least the last ten years there have been stories in the media about possible changes to the licensing and/or testing requirements for older drivers. However, despite the speculation, there have been no recent changes to the requirements for older drivers.\n \nSince the 2015 General Election the Government has published a road safety statement and a motoring services strategy, both of which referred to the need to support older drivers and ensure that they are safe. The independent Older Drivers Task Force reported in July 2016. The Government is currently considering its recommendations, which included:\n \n the automatic requirement for drivers to notify the DVLA at age 70 of any medical condition that may affect safe driving should be raised to 75; DVLA should require evidence of an eyesight test at age 75 and encourage vision checks every two years, particularly from age 60; and the Government should support an evaluation of driving appraisal courses offered by the public sector and those in the private sector who wish to participate. \n \nInformation on associated matters involving driver licensing and fitness to drive can be found on the Roads Topical Page of the Parliament website."}
      , "date" : {"_value" : "2017-01-11T14:26:46.4148762+00:00", "_datatype" : "dateTime"}
      , "description" : ["This paper describes the licencing and medical fitness rules for drivers over the age of 70, and summarises recent Government statements on older drivers and the recommendations of the Older Drivers Task Force."], "identifier" : {"_value" : "SN00409"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Older drivers", "topic" : [{"_about" : "http://data.parliament.uk/terms/95697", "prefLabel" : {"_value" : "Older people"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95738", "prefLabel" : {"_value" : "Roads"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/671382", "abstract" : {"_value" : "Resignation of Martin McGuinness \n \nOn 9 January 2017 Martin McGuinness of Sinn Fein announced that he was resigning as deputy First Minister of Northern Ireland. This set in train a sequence of statutory provisions that seem likely to lead to an early election to the Northern Ireland Assembly.\n \nMr McGuinness\u2019s resignation was in protest at the conduct of the First Minister, Arlene Foster of the DUP. His resignation letter sets out his reasons in detail. They pertain mainly to Ms Foster\u2019s reaction to criticism over her role in the Renewable Heat Incentive (RHI) energy subsidy scheme, which has led to significant costs to the taxpayer and criticism from the Northern Ireland Audit Office.\n \nArlene Foster and RHI\n \nIn 2012, when she was Enterprise, Trade and Investment Minister, Ms Foster established a Renewable Heat Incentive scheme, or RHI. This was a subsidy scheme to increase the use of heat from renewable energy sources, and was available to non-domestic users. Variations of RHI are in place across the UK, although the operation of the Northern Ireland scheme differed in important ways. There was no upper limit on the amount of energy for which payments would be made.\n \nIn late 2015 the scheme became heavily oversubscribed. It was eventually closed in February 2016 on the grounds that it posed a risk to the block grant for 20 years, the length of time for which claimants who continue to comply with regulations will be supported.\n \nThe Northern Ireland Comptroller and Auditor General, Kieran Donnelly, expressed:\n \n concerns in relation to the operation of the scheme and the circumstances surrounding the large increase in demand in October and November 2015 which will result in a significant cost to the Northern Ireland block grant for many years.[1] \n \nAccording to the accompanying press release, he found that\n \n Commitments under the scheme have exceeded the maximum amount that HM Treasury were prepared to fund. The excess funding will now have to be met from the Northern Ireland block grant. Over the next five years, this additional cost to the NI block is estimated to be £140 million and significant costs will continue to be incurred until 2036.[2] \n \nThe total cost is expected to be around £1bn, of which about £400m will come from the block grant over the next 20 years.[3]\n \nSinn Fein had called for an independent investigation into the RHI scheme with the power to compel witnesses and documents. It also argued that Ms Foster should step aside temporarily while the investigation took place. On 6 January 2016 she stated:\n \n With the exception of the issue of stepping aside, we believe that the proposals provided to us by Sinn Féin provide a basis for taking an investigation forward. Officials have raised a number of technical issues in relation to the proposals, however there do not appear to us to be any insuperable obstacles to agreement being reached.[4] \n \nThe First Minister also drew criticism for her reaction to the criticisms of her. Ms Foster has argued that some of the criticism is personal and some is misogynistic.[5] Naomi Long, leader of the Alliance Party, described this as \u201cabsolutely wrong\u201d and a \u201cdistraction tactic\u201d.[6] Ms Foster also posted a picture on Facebook of a guinea pig wearing heart-shaped glasses, with the caption \u201cCan\u2019t see all the haters when I got my love glasses on\u201d. Ms Long suggested this was not an appropriate response to the wider situation and said \u201cthey\u2019re not haters, they\u2019re taxpayers. And angry ones at that\u201d.[7]\n \nImplications of resignation\n \nThe present statutory framework that determines what follows from the resignation of the deputy First Minister has not been used before. Under s16B(2) of the Northern Ireland Act 1998, as amended by the Northern Ireland (St Andrews Agreement) Act 2007, the resignation of the deputy First Minister implies that the First Minister also ceases to hold office at the same time. She may continue to exercise limited First Minister functions until a new incumbent is in place.\n \nThe sub-section provides:\n \n If either the First Minister or the deputy First Minister ceases to hold office at any time, whether by resignation or otherwise, the other\u2014 (a) shall also cease to hold office at that time; but (b) may continue to exercise the functions of his office until immediately before those offices are filled in accordance with this section. \n \nThe section goes on to set out the procedure for filling the two vacant offices of First Minister and deputy First Minister.\n \nThe procedure (see below for details) takes place within a period of seven days from the vacancies arising (s16B(3)), so in this case by 5.00pm on 16 January 2017. The process must come to an end during this period: no person may take up office as First Minister or deputy First Minister after the end of that seven day period (s16B(8)).\n \nIf the posts have not been filled by the end of the seven days, the Secretary of State proposes a date for an election, and an Order in Council dissolves the Assembly and calls the election. This takes place under ss32(3) and (4).\n \nProcedure for new First Minister/deputy First Minister\n \nThe procedure is as follows:\n \n The nominating officers of the largest parties of the two largest designations (currently Unionist and Nationalist in that order \u2013 \u201cOther\u201d is also possible) put forward the names of the new First Minister and deputy First Minister respectively (ss16B(4) and (5)). This means that the DUP \u201cshall nominate a member of the Assembly to be the First Minister,\u201d and Sinn Fein \u201cshall nominate a member of the Assembly to be the deputy First Minister.\u201d In his resignation letter Mr McGuinness said that Sinn Fein will not nominate a person for the post of deputy First Minister. There is provision for further nominations, made according to the same procedure, if \u201cthe persons nominated\u201d (the Act does not identify them separately in this sub-section) do not affirm the terms of the pledge of office and take up office within 15 minutes. This is under s16B(6) and Standing Order 44(1). The 15 minutes may be extended if approved by the Assembly. This process can be repeated as many times as necessary to fill the posts, within the seven days. The two posts must be filled together. Under s16B(9) the nominees shall not take up office until each of them has affirmed the terms of the pledge of office. \n \nSecretary of State\u2019s statement\n \nOn 10 January 2016 the Secretary of State for Northern Ireland, James Brokenshire, made a statement to the House of Commons. He expressed the likelihood of an early election and the seriousness of the situation:\n \n As mentioned above, if the posts of First Minister and deputy First Minister are not filled by the end of the seven day period, an Assembly election is called. Under the terms of the Northern Ireland Act 1998 as amended by the Northern Ireland (St Andrews Agreement) Act 2007, the position is clear: should the offices of First and Deputy First Minister not be filled within seven days from Mr McGuinness\u2019s resignation, it falls to me as Secretary of State to set a date for an Assembly election. Although there is no fixed timetable in the legislation for me to do that, it needs to be within a reasonable period. In his resignation letter, Mr McGuinness said:  \u201cIn the available period Sinn Féin will not nominate to the position of deputy First Minister.\u201d  I am very clear that in the event of the offices not being filled, I have an obligation to follow the legislation. As things stand, therefore, an early Assembly election looks highly likely. I should add that the rules state that, once an election has been held, the Assembly must meet again within one week, with a further two-week period to form a new Executive. Should that not be achieved, as things currently stand I am obliged to call another election. So right hon. and hon. Members should be in no doubt: the situation we face in Northern Ireland today is grave and the Government treat it with the utmost seriousness.[8] \n \nMr Brokenshire stated that he was in regular contact with the DUP and Sinn Fein, and had also spoken to the Independent Unionist Justice Minister, Claire Sugden, and to the Irish Government. He went on:\n \n The UK and the Irish Governments will continue to provide every possible support and assistance to the Executive parties. However, we have to be realistic. The clock is ticking, and an election is inevitable if there is no resolution, despite the widely held view that an election would deepen divisions and threaten the continuity of the devolved institutions.[9] \n \nNext election\n \nThe next Assembly will be elected under arrangements brought in by the Northern Ireland (Miscellaneous Provisions) Act 2014, and in particular by the Assembly Members (Reduction of Numbers) Act (Northern Ireland) 2016. The latter reduces the number of Members elected per constituency from 6 to 5, and thereby reduces the total for the time being to 90. This provision takes effect at the first election after the 2016 election, and, under ss1(2) and (3), this includes one called under s32 of the 1998 Act.\n \n \n \nReferences \n \n[1]     Department of Enterprise, Trade and Investment Resource Accounts 2015-16, Report by Comptroller and Auditor General for Northern Ireland, 5 July 2016\n \n[2]     Renewable Heat Incentive Scheme, Media Release, Northern Ireland Audit Office, 5 July 2016.\n \n[3]     \u201cQ&A: What is the Renewable Heat Incentive (RHI) sheme?,\u201d BBC News website, 13 December 2016. The precise calculation is on p104 of the C&AG report cited above.\n \n[4]     \u201cRHI scandal: Foster \u2018comfortable\u2019 with Sinn Fein plan,\u201d BBC News website, 6 January 2017\n \n[5]     \u201cRHI scandal: Arlene Foster says calls to step down \u2018misogynistic\u2019,\u201d BBC News website, 4 January 2017\n \n[6]     \u201cArlene Foster misogyny claims over calls to stand down for RHI probe rejected by women politicians,\u201d Belfast Telegraph, 4 January 2017\n \n[7]     \u201cRHI scandal: Foster \u2018comfortable\u2019 with Sinn Fein plan,\u201d BBC News website, 6 January 2017\n \n[8]     HC Deb 10 January 2017, c175\n \n[9]     HC Deb 10 January 2017, c176"}
      , "date" : {"_value" : "2017-01-11T13:29:53.4335558+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library note sets out the legal implications of the resignation of Martin McGuinness as deputy First Minister of Northern Ireland on 9 January 2017."], "identifier" : {"_value" : "CBP-7860"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Northern Ireland: resignation of Deputy First Minister", "topic" : [{"_about" : "http://data.parliament.uk/terms/95552", "prefLabel" : {"_value" : "Devolution"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95567", "prefLabel" : {"_value" : "Elections"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95691", "prefLabel" : {"_value" : "Northern Ireland Assembly"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/671380", "abstract" : {"_value" : "House of Commons Report Stage and Third Reading of the Higher Education and Research Bill 2015-16\n \nThe Report Stage and Third Reading of the Higher Education and Research Bill 2015-16 took place on 21 November 2016. The debate covered many areas that were raised previously during the Committee Stage of the Bill.\n \nChanges made to the Bill\n \nThe Government made 36 amendments to the Bill, many of which were in response to issues raised by the Public Bill Committee. No non-Government amendments were agreed.\n \nBelow is an overview of the substantive amendments made to the Bill at Report Stage \u2013 other amendments made were minor or technical in nature and are not discussed.\n \nMonitoring the financial sustainability of higher education providers\n \nNew clause 1 places a statutory duty on the Office for Students (OFS) to monitor and report on the financial sustainability of all registered higher education providers in England which are in receipt of, or eligible for, OFS funding or tuition fee loans. The Minister for Universities, Science, Research and Innovation, Jo Johnson, said that the amendment was made in response to \u201cstakeholder evidence and to the Committee debates\u201d. The amendment aims to ensure that the OFS effectively monitors the overall financial health of the sector and informs the Secretary of State, so that the Government can take appropriate actions.\n \nAcademic freedom and institutional autonomy\n \nAmendments 1, 12 and 13 concerned academic freedom and institutional autonomy. These issues had been raised during the Committee Stage. The Minister said that \u201cacademic freedom and institutional autonomy are keystones of our higher education system\u201d, and that the Bill introduced additional protections in that area. However, in response to concerns voiced by the Public Bill Committee, the Minister moved these amendments to strengthen the protections further. The amendments aimed to ensure that the Secretary of State could not issue guidance about the opening and closing of specific courses.\n \nStudent representation on the board of the OFS\n \nAmendment 21 was made in response to the Bill Committee\u2019s concerns about student representation on the board of the OFS. The Minister said that the amendment \u201cclarifies beyond doubt that at least one member of the OFS board must have experience of representing or promoting the interests of individual students or students generally\u201d.\n \nPublication of student protection plans\n \nAmendment 4 increases the protection for students by creating a requirement that student protection plans should be published.\n \nBreakdown of higher education (HE) admissions data by ethnicity, gender and socioeconomic background\n \nAmendments 2 and 3 clarifies that the OFS can ask HE providers to publish and share with the OFS the number of applications, offers, acceptances and completion rates for students, each broken down by ethnicity, gender and socioeconomic background.\n \nUKRI and the devolved administration \n \nAmendment 35 related to the board of UKRI and ensures that, when making appointments, the Secretary of State will have regard to the importance of the board having experience of the research and innovation systems in one or more of the devolved Administrations.\n \nDivisions\n \nAlthough no non-Government amendments were agreed, Members pressed a several amendments to a vote. Some of these concerned areas of general debate in higher education and were not specific to the provisions in the Bill. Many of the issues raised by the amendments had been debated during the Committee Stage of the Bill.\n \nNew Clause 2 was moved by Wes Streeting (Labour). This amendment would allow the appointment of three independent advisers, who would look carefully at any proposals that, retroactively, make changes to student loan repayment conditions. This new clause was proposed in response to the freezing of the student loan repayment threshold. Mr Streeting said that the change to loan terms was retrospective and regressive. The Minister said in response:\n \nthe key terms and conditions are set out in legislation\u2014it is the law that binds us\u2014and are subject to the scrutiny and oversight of Parliament. FCA regulation is therefore unnecessary, as students are already protected. [HC Deb 21 November 2016 c658]\n \nThe new clause was negatived by 278 votes to 180.\n \nNew Clause 5 was moved by Gordon Marsden (Labour), it aimed to revoke the Education (Student Support) (Amendment) Regulations 2015 which abolished maintenance grants for students. The Minister said that revoking the regulations would reduce the support for students on the lowest income. The new clause was negatived by 278 votes to 181.\n \nNew Clause 14 was moved by Carol Monaghan (SNP), it aimed to ensure that an evaluation was undertaken of the impact of the absence of post study work visas on the UK economy. Mr Johnson said that the Bill was not an \u201cappropriate vehicle\u201d for commissioning research on this issue. The new clause was negatived by 280 votes to 211.\n \nAmendment 47 was moved by Gordon Marsden (Labour), it concerned the Teaching Excellence Framework (TEF) and aimed to ensure that TEF measures were subject to scrutiny by, and approval of, both Houses of Parliament. Concerns had been expressed by Members of the Bill Committee about the lack of parliamentary scrutiny of the TEF. The Minister responded that the amendment would hamper the development of the TEF. The amendment was negatived by 277 votes to 216.\n \nAmendment 40 concerned the process by which the OFS would grant foundation degree awarding powers. The amendment aimed to ensure that in granting degree awarding powers the OFS would have to ensure that providers are maintaining standards and operating in the interests of students and the public. Speaking to the amendment, Gordon Marsden said that he was concerned about \u201cnew providers and those that could go for opportunist, fast-buck courses\u201d. The Minister said that providers would have to meet high standards to make such awards and that the amendments were unnecessary. The amendment was negatived by 281 votes to 212.\n \nAmendment 56 was moved by Carol Monaghan (SNP), it aimed to ensure people with relevant experience of the Scottish, Welsh and Northern Ireland higher education sectors would be represented on the UKRI board. In responding the Minister said that the issue of UK wide research was a reserved matter, he also said that it was the Secretary of State\u2019s duty to work for the interests of the whole of the UK. The amendment was negatived by 275 votes to 217.\n \nThird Reading\n \nIn the Third Reading debate the Minister stressed that the Government had listened to all the points made during debates on the Bill and, in response, had made changes in areas such as institutional autonomy, student representation and the role of the devolved administrations in research. The Opposition responded that the government had done \u201ctoo little too late\u201d and that the Bill \u201cfailed in its overarching aims for social mobility\u201d. Gordon Marsden said that the Opposition could not support the Bill. Carol Monaghan, speaking for the SNP, said that they \u201chad concerns about many aspects\u201d of the Bill and could not support it.\n \nThe Bill passed its Third Reading by 279 votes to 214."}
      , "date" : {"_value" : "2017-01-11T12:39:22.2455476+00:00", "_datatype" : "dateTime"}
      , "description" : ["The Higher Education and Research Bill 2016 will make changes to the regulation of the higher education sector and create new higher education bodies.  This page gives an overview of the amendments made to the Bill during its Report Stage and Third reading on 21 November 2016."], "identifier" : {"_value" : "CBP-7859"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Higher Education and Research Bill 2016 Report Stage and Third Reading", "topic" : [{"_about" : "http://data.parliament.uk/terms/95625", "prefLabel" : {"_value" : "Higher education"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95761", "prefLabel" : {"_value" : "Students"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/671378", "abstract" : {"_value" : "The NHS and social care systems are facing significant financial challenges as a consequence of the ageing and growing population. Although health spending has been protected relative to other public services, there are concerns that increasing demand, and pressure on local authority social care budgets, are impacting  on NHS performance and threatening the financial stability and sustainability of the health and social care systems. \n \n \n \n \n \nThe have been a range of briefings on NHS and social care funding in England, and the current pressures they face, including the following briefings from the Commons Library:\n \n NHS funding and financial sustainability NHS Indicators: England, December 2016 NHS Winter Pressures 2016/17 - Weekly Update Social care funding, and the care home market (England) Social care: paying for care home places and domiciliary care (England);                                                                                                  Social care: Announcement delaying introduction of funding reform (including the cap) and other changes until April 2020 (England); Social care: how the postponed changes to paying for care, including the cap, would have worked (England) \n \n \n \nFurther reading:\n \nSecretary of State for Health, Statement to the Commons on mental health and NHS performance update (9 January 2017):\n \nhttps://hansard.parliament.uk/commons/2017-01-09/debates/A0C1CB51-3E77-4FD0-87D9-AD36C2C11CE5/MentalHealthAndNHSPerformance\n \n \n \nLetter to Prime Minister from Chairs of Select Committees on NHS and social care funding (6 January 2017):\n \nhttp://www.parliament.uk/business/committees/committees-a-z/commons-select/communities-and-local-government-committee/news-parliament-2015/prime-minister-health-and-social-care-correspondence-16-17/\n \n \n \nBlog from Chris Hopson, Chief Executive of NHS Providers (11 January 2017):\n \nhttps://www.nhsproviders.org/news-blogs/blogs/the-big-questions-for-the-year-ahead\n \n \n \nBBC News, NHS conditions worst ever, say leading nurses (11 January 2017):\n \nhttp://www.bbc.co.uk/news/health-38570177\n \n \n \nNAO, Financial sustainability of the NHS (22 November 2016):\n \nhttps://www.nao.org.uk/report/financial-sustainability-of-the-nhs/\n \n \n \nHealth Select Committee Inquiry: Department of Health and NHS Funding\n \nHealth Select Committee Report: Impact of the Spending Review on health and social care, July 2016\n \nHealth Committee Report: Public Health Post - 2013 - Structures, organisation,  funding and delivery inquiry, August 2016\n \nPublic Accounts Committee Inquiry: Financial Sustainability of the NHS\n \nPublic Accounts Committee Report: Sustainability and financial performance of acute hospital trusts inquiry, May 2016 \n \nLords Select Committee: Long Term Sustainability of the NHS\n \n "}
      , "date" : {"_value" : "2017-01-11T11:33:21.3339058+00:00", "_datatype" : "dateTime"}
      , "description" : ["MPs will debate NHS and Social Care Funding on Wednesday 11 January. This will be an be an opposition day debate. This page provides links to relevant library briefing papers and other reports."], "identifier" : {"_value" : "CDP-2017-0011"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70459", "prefLabel" : {"_value" : "Social and General Statistics Section"}
      }
      , {"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "NHS and Social Care Funding", "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/670445", "abstract" : {"_value" : "Since 2014, for child support cases dealt with by the Child Maintenance Service (CMS), fees have been charged for applications, collection services (where the \"Collect and Pay\" service is used) and enforcement.  For legacy cases that are dealt with by the Child Support Agency (CSA), there are no fees.\n \nThis note sets out the levels of fees, and also notes that any person aged 18 or under or a victim of domestic violence or abuse is exempt from the application fee. \n \nIt also provides policy background and the total amount of receipts paid to the CMS to March 2016."}
      , "date" : {"_value" : "2017-01-10T16:17:00.2144396+00:00", "_datatype" : "dateTime"}
      , "description" : ["Fees are payable in respect of application, collection (if using \"Collect and Pay\") and enforcement under the current statutory child maintenance scheme administered by the CMS.  This note sets out information on the fees and the policy background."], "identifier" : {"_value" : "CBP-7777"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Child maintenance: fees (UK excluding NI)", "topic" : [{"_about" : "http://data.parliament.uk/terms/95517", "prefLabel" : {"_value" : "Child support"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/670413", "abstract" : {"_value" : "This pack has been prepared ahead of the debate on the maritime industry to take place in Westminster Hall on 12 January 2017 at 3pm. The subject for the debate has been chosen by Alistair Carmichael.\n \nThe maritime industries (shipping, ports and business services) were estimated to contribute at least £8.5 billion a year to the UK economy in 2012 and the associated marine industries (shipbuilding and repair, construction of ports and marinas and marine leisure) are estimated to contribute £2.5 billion. The sector employed at least 113,000 people in 2012.\n \nThere has for some time been a good deal of concern about the application of the NMW to seafarers and enforcement. The law in this area is somewhat complex given the territorial aspects.  The RMT union have estimated that 8,300 seafarers are working in the UK shipping industry for rates below the current national minimum wage. \n \nFollowing the UK referendum vote to leave the EU the concerns for the maritime industry are likely to be surrounding general policy areas such as employment law, immigration, border controls and contract law, as well as transport specific areas such as freedom to trade, safety and the environment, tonnage tax and security."}
      , "date" : {"_value" : "2017-01-10T12:13:32.2436747+00:00", "_datatype" : "dateTime"}
      , "description" : ["This pack has been prepared ahead of the debate on the maritime industry to take place in Westminster Hall on 12 January 2017 at 3pm. The subject for the debate has been chosen by Alistair Carmichael."], "identifier" : {"_value" : "CDP-2017-0009"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/16849", "prefLabel" : {"_value" : "Business and Transport Section"}
      }
      , {"_about" : "http://data.parliament.uk/terms/17113", "prefLabel" : {"_value" : "Economic Policy and Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Future of the UK Maritime industry", "topic" : [{"_about" : "http://data.parliament.uk/terms/95640", "prefLabel" : {"_value" : "Industry"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95748", "prefLabel" : {"_value" : "Shipping"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/669687", "abstract" : {"_value" : "This debate pack provides background information regarding the issues, and press and Parliamentary coverage.  "}
      , "date" : {"_value" : "2017-01-09T16:19:56.4782019+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library debate pack has been prepared for the Westminster Hall debate on funding of the Crown Prosecution Service on Wednesday 11 January 2017. The debate has been tabled by Karl Turner MP."], "identifier" : {"_value" : "CDP-2017-0002"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Funding of Crown Prosecution Service", "topic" : [{"_about" : "http://data.parliament.uk/terms/95476", "prefLabel" : {"_value" : "Administration of justice"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/669686", "abstract" : {"_value" : "This Pack provides background to the Stormont Agreement and Implementation Plan agreed on 17 November 2016 between the UK and Irish Governments and the largest Northern Ireland parties, the Fresh Start agreement. Full details are given in the Commons Library briefing on the Northern Ireland (Stormont Agreement and Implementation Plan) Bill to implement provisions of the Fresh Start Agreement on tackling paramilitarism and balanced budgets.\n \nThe pack also contains links to recent news articles, press releases, parliamentary and NI Assembly material as well as links to further reading."}
      , "date" : {"_value" : "2017-01-09T16:07:21.3455287+00:00", "_datatype" : "dateTime"}
      , "description" : ["Debate Pack for the Westminster Hall Debate on the Implementation of the Stormont House Agreement initiated by Sir Jeffrey Donaldson, 10 January 2016 at 4.30pm."], "identifier" : {"_value" : "CDP-2017-0008"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/61055", "prefLabel" : {"_value" : "Parliament and Constitution Centre"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Implementation of the Stormont House Agreement", "topic" : [{"_about" : "http://data.parliament.uk/terms/95691", "prefLabel" : {"_value" : "Northern Ireland Assembly"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/669677", "abstract" : {"_value" : "This debate pack provides a brief overview of and links to information on the following areas concerning access to justice: proposed changes to personal injury law and to soft tissue (whiplash) claims; court fees; changes to legal aid; court closures; and court reform. \n \nAccess to justice refers to the right of an individual to have effective access to the courts, so that they have the means to resolve legal disputes. \n \nRecent changes to the justice system, in particular increases in court fees and court closures, have led many prominent commentators on the justice system, including MPs and the senior judiciary, to raise concerns over their impact on access to justice.\n \nThe Government has argued that such changes ensure that the courts and tribunal service is sustainably funded, which in turn will enable access to justice to be protected. \n \nIn a consultation titled Transforming our Justice System, the Government has stated that it is committed to pursuing reforms to the courts and tribunal system to provide the public with a justice system that \u201cis affordable, intelligible and available for use by all, convenient for those who cannot easily attend in person, and supportive of those not comfortable with the law or technology\u201d."}
      , "date" : {"_value" : "2017-01-09T15:18:29.1019993+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library debate pack has been prepared for the Westminster Hall debate on access to justice on Wednesday 11 January 2017. The debate has been tabled by Rob Marris MP."], "identifier" : {"_value" : "CDP-2017-0001"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Access to Justice", "topic" : [{"_about" : "http://data.parliament.uk/terms/95476", "prefLabel" : {"_value" : "Administration of justice"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95520", "prefLabel" : {"_value" : "Civil law"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95537", "prefLabel" : {"_value" : "Courts"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95657", "prefLabel" : {"_value" : "Legal aid"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95710", "prefLabel" : {"_value" : "Personal injury"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/669676", "abstract" : {"_value" : "1.1   The Soft Drink Industry Levy\n \nIn the 2016 Budget, the former chancellor, George Osborne announced the introduction of a levy on soft drinks. The levy would apply to manufacturers and importers of sugar added soft drinks and would be implemented in April 2018.  There would be exemptions for fruit juices and milk based drinks and for small producers.  The proceeds of the Levy would be used in England to increase spending on PE in schools, after school clubs and breakfast clubs.[1]\n \n Box 1: Sugar and health The consumption of high sugar food and drink can lead to weight gain which increases the risk of medical conditions such as type 2 diabetes, heart disease and stroke. High sugar consumption can also increase the risk of tooth decay. There has been particular concern around the impact of high sugar products on children, and the levels of obesity in this group. Both the World Health Organisation[2] and the Scientific Advisory Committee on Nutrition[3] recommended a reduction in the daily intake of free sugars in 2015.[4] In October 2015, Public Health England published its report, Sugar Reduction: The evidence for action which recommended interventions to reduce sugar consumption.[5]  The report stated that no single action would be effective in reducing sugar intake. It recommended a broad range of different measures, one of those was an introduction of a tax on high sugar products.  The report stated that \u201cit is likely that price increases on specific high sugar products like sugar sweetened drinks, such as through fiscal measures like a tax or levy, if set high enough, would reduce purchasing at least in the short term.\u201d  Proposals for a tax on sugar sweetened drinks have been supported in recent years by a number of medical organisations, such as the British Medical Association[6], World Health Organisation[7] and the Faculty of Public Health.[8]  \n \n \n \nIt is planned that the levy will consist of two rates, based on the sugar content of these beverages. Pure fruit juices and milk-based drinks are to be exempt from the levy, and there will be an exclusion for small producers.\n \nThe Government have said that the expected revenue for this levy will be £520 million in the first year.[9] Based on this, the Office for Budget Responsibility (OBR) has estimated that the rates implied are 18 pence/litre for the lower bracket sugary drinks, and 24 pence/litre for those drinks over 8g/litre.[10] \n \nThe Government have emphasised that the intention of the policy is to encourage producers to reformulate their products to reduce sugar content, and therefore come under the threshold for the levy. In the second half of 2016, a number of producers, including Lucozade Ribena Suntory[11] and Tesco[12] have announced that they are taking action to reduce the total sugar content of their products.\n \n Box 2: Soft drinks controlled under the levy A chart published by the Behavioural Insights Team illustrates the different cut off points for the two levy rates against the sugar content on a wide range of sugary soft drinks:     \n \n \n \nThe Soft Drink Industry Levy has been widely welcomed by health organisations[13].  For example, the President of the Faculty of Public Health described the levy as a step in the right direction, and that it will have a positive effect on the lives of the population.[14]  The Sports and Recreation Alliance Chief Executive, Emma Boggis, said that the funding for sport will deliver more opportunities for children to be active:\n \n The Budget 2016 has a lot of positive outcomes for sport and recreation. The funding for sport in both primary and secondary schools from the reinvestment of the sugar levy will deliver more opportunities to get children of a young age active, which is crucial if they are to stay active in later life. There is a great opportunity for our members to engage with the education sector to deliver high quality sport and physical activity so that that the experiences of young people are positive. Sport and recreation makes a strong contribution to our economy which is why it is vital the industry is supported so it is good to see Government valuing the social and economic impact we see from hosting international tournaments.[15] \n \nHowever, some industry representatives have expressed concerns about the levy, saying it could lead to job losses and not have a significant impact on obesity levels.[16] \n \nA Lancet study published in December 2016 looked at three possible industry responses to the Soft Drink industry Levy- reformulation, a price rise, and a change in the market share of low, medium and high sugar products. The authors\u2019 modelling suggested that the first scenario, where industry reformulates its products would result in the greatest benefits to health.  In its best case scenario, the study estimated that there could be a 144,000 fewer obese adults in around two years following the introduction of the levy, and 19,000 fewer cases of type 2 diabetes in over ten years, following reformulation (a 30% reduction in sugar content of all high sugar drinks, and 15% reduction in medium sugar drinks).[17]\n \nDraft Finance Bill 2017\n \nThe draft finance Bill was published in December 2016. Provisions relating to the Soft Drink Industry Levy are within clauses 51-78 and Schedules 15 and 17 of the Bill.  The draft Bill is currently subject to consultation until 1 February 2017.\n \nThe HMRC website provides links to:\n \n The Draft Finance Bill 2017 Draft explanatory notes A tax information and impact note relating to the Soft drink Industry Levy \n \nThis briefing does not provide a clause by clause description of this section of the draft Bill. However, the following bullet points provide some further detail on the proposed levy:\n \n The levy will apply from April 2018 to producers and importers of soft drinks. A lower tax rate will apply to drinks with a total sugar content of 5 grams or more per 100ml; a higher rate will apply to drinks with a sugar content of 8 grams or more per 100ml; The 100ml applies to the \u2018prepared drink.\u2019 This will mean that any drink that requires dilution will be assessed at the diluted level (as indicated by information on the packaging of the product); Fruit juice, vegetable juice and milk are not considered an added sugar ingredient. The Bill gives HMRC powers to prescribe what is meant by fruit/vegetable juice; The levy will not apply to drinks where no sugar has been added, to milk based, or milk substitute based drinks; HMRC have powers under the draft Bill to make regulations specifying further criteria for exempt soft drinks; Drinks containing up to 1.2% ABV alcohol are included in the levy but provision will be made to exclude some of these drinks from the levy; There are a number of exemptions to the provisions within the Bill. This includes baby formula and products used to treat dietary conditions; Small producers will be excluded from the levy. The small producer threshold has been set at one million litres of product; The Commissioners of Revenue and Customs may make regulations in regards of the payment, collection and recovery of the levy. \n \n1.2   Childhood obesity and physical activity\n \nThe National Child Measurement Programme reports that in 2015/16 22% of children in England that 22% of 4-5 year olds were overweight or obese, and in year six that that proportion increased to over a third.[18]\n \nChildren living in deprived areas are substantially more likely to be obese. Among reception (age 4-5) children, 5.5% of those in the least deprived areas are obese compared with 12.5% of those in the most deprived areas. In Year 6 (age 10-11), 11.7% of children in the least deprived areas are obese, compared with 26.0% in the most deprived areas. So in both age groups, children in the most deprived areas are more than twice as likely to be obese, as shown in the chart below:\n \nChildhood obesity by deprivation decile, England, 2015/16\n \nChildren in the most deprived areas are also marginally more likely to be underweight than those in the least deprived areas.\n \nThe 2015 Health Survey for England provides the following key findings on physical activity in children:\n \n Excluding school-based activities, 22% of children aged between 5 and 15 met the physical activity guidelines of being at least moderately active for at least 60 minutes every day (23% of boys, 20% of girls). These proportions have increased since 2012, when 21% of boys and 16% of girls met the guidelines. The proportion of both boys and girls aged 5 to 15 meeting current recommendations was lower in the higher quintiles than in the lower quintiles of equivalised household income. Girls aged between 5 and 10 who were obese were less likely to meet the current guidelines than those who were neither overweight nor obese; 14% compared with 28% respectively. Four in five children (79%) participated in activities such as walking and sports in the last week while in a lesson at school. Time spent being sedentary (excluding time at school) during the week and at weekends increased with age. \n \nActivity levels in 2015 were lower than in 2008 for boys, with 23% and 28% of boys meeting the guidelines respectively. Across the same period, activity levels among girls were at a similar level in 2015 as in 2008 (20% and 19% respectively).\n \n1.3   Spending from the levy\n \nThe Government have said that income from the Soft Drink Industry Levy will be spent on school PE and sport provision and breakfast clubs in England. The 2016 Budget document provided more information about this investment:\n \n double the primary school PE and sport premium from £160 million per year to £320 million per year from September 2017 to help schools support healthier, more active lifestyles. This funding will enable primary schools to make further improvements to the quality and breadth of PE and sport they offer, such as by introducing new activities and after school clubs and making greater use of coaches provide up to £285 million a year to give 25% of secondary schools increased opportunity to extend their school day to offer a wider range of activities for pupils, including more sport provide £10 million funding a year to expand breakfast clubs in up to 1,600 schools starting from September 2017, to ensure more children have a nutritious breakfast as a healthy start to their school day[19] \n \nThe Devolved Administrations will receive money from the levy through the Barnett formula.\n \nThe Government have said that the expected revenue for this levy will be £520 million in the first year.[20] The OBR have said that this revenue is likely to decrease due to reformulation and the promotion of lower sugar alternative.  They have estimated that income in 2019-20 will be £500 million and in 2020-21, will be £455 million.[21]\n \nInformation about sports in schools and breakfast clubs is provided in a number of library briefing papers:\n \n School Sport School Sport Partnerships School meals and nutritional standards (England) \u2013 section 5 discusses breakfast clubs \n \nThe following sections highlight a number of relevant Government policies in this area.\n \nPhysical activity in the childhood obesity plan\n \nIn August 2016 the Government published Childhood Obesity: A Plan for Action, with the aim of significantly reducing the rate of childhood obesity in England within the next 10 years.  This included the Soft Drink Industry Levy, a Public Health England plan to run a programme to reformulate high sugar products and clearer food labelling.\n \nThe action plan highlighted the health benefits of physical activity and cited evidence of a link between improved academic performance, and physical activity and participation in organised sports. It stated that every primary school child should \u201cget at least 60 minutes of moderate to vigorous physical activity a day\u201d, with at least 30 minutes delivered in school and the remaining 30 minutes supported by parents outside of school time. A new online tool will be made available that will help schools plan at least 30 minutes of physical activity every day.\n \nWith regards to physical activity and sport in schools, the action plan also said:\n \n Public Health England will develop advice to schools for 2017-18 on how they can \u201cwork with the school nurses, health centres, healthy weight teams in local authorities and other resources, to help children develop a healthier lifestyle.\u201d County Sports Partnerships have been asked to work with other providers, including National Governing Bodies of sport, \u201cto ensure that from September 2017, every primary school in England has access to a co-ordinated offer of high quality sport and physical activity programmes, both local and national.\u201d A new healthy rating scheme for primary schools will be introduced from September 2017, which physical activity will be a key part of. \n \nSchool Sports Partnerships\n \nSchool Sport Partnerships were one strand of the last Labour Government\u2019s Physical Education, School Sport and Club Links (PESSCL) Strategy, launched in 2002. They were described in a 2011 Ofsted report as \u201ca family of secondary, primary and special schools working together to increase the quality and quantity of PE and sports opportunities for young people.\u201d\n \nIn a letter to the Chair of the Youth Sport Trust in October 2010, the then Education Secretary, Michael Gove, announced that the Coalition Government was lifting the requirements of the previous Government\u2019s PE and Sport Strategy and would end ring-fenced funding for School Sport Partnerships.\n \nThe letter also clarified that schools could continue to use School Sport Partnerships if they wished:\n \n I should also clarify that the Department is not closing down school sport partnerships. Rather, they are being entrusted to schools, who can decide whether and how to use them in the future. Information on the numbers of School Sport Partnerships or similar arrangements still in place is not collected centrally. \n \nBreakfast clubs\n \nSchools are not required to provide breakfast clubs, although many do so.\n \nMagic Breakfast deliver breakfasts under a contract with the Department for Education to set up breakfast clubs in schools where over 35% of pupils are eligible for free school meals and there was no previously existing breakfast provision. \n \nIn November 2016, the Institute for Fiscal Studies and the National Children\u2019s Bureau published the results of a study into the impact of breakfast clubs, with largely positive findings about their impact.\n \nThe study found that children in year 2, where schools had been offered support to open a breakfast club made the equivalent of two months\u2019 additional progress in reading, writing and maths over the course of a year. Pupils in year 6 had similar gains in English, with smaller positive effects reported on maths and science attainment.[22]\n \nThe report also found that:\n \n Gains were likely to be the result of the content or context of the school breakfasts, rather than of increasing overall breakfast consumption; Pupil absences declined as a result of breakfast club provision; Behaviour and concentration in the classroom improved substantially. \n \nThe report stated that these gains had been achieved at relatively low cost, albeit with fairly low take-up rates. It also noted that attainment levels rose more amongst children from less disadvantaged (non-FSM) backgrounds, rather than for those eligible for FSM.\n \nExtended school services\n \nIn addition to increasing funding for the Primary PE and Sport Premium, the Government have said that revenue from the soft drinks industry levy will also be invested in giving schools the opportunity to extend the school day to provide activities for pupils, including sport.\n \nIn December 2016, the Minister, Edward Timpson, stated that the Department for Education was \u201ccurrently determining the details of how the funding will be allocated.\u201d He additionally stated that the Department will \u201cprovide further details in due course so that schools have sufficient time to apply for the funding and implement their plans.\u201d[23]\n \nSince April 2011 extended services funding has formed part of the overall schools revenue funding.  As a result, there has been no specific amount earmarked for extended services. It is up to school leaders and their partners locally to decide what services and activities should be offered. As part of their wider strategies to raise standards for the most disadvantaged children, schools can also use Pupil Premium funding on extended services.\n \nSchools may accommodate extended and community services, such as after-school clubs, out-of-school childcare (including breakfast clubs and holiday care), and sport and youth clubs. They may not use their schools funding to provide non-educational activities, and may charge for their facilities to be used.\n \nSection 88 of the Children and Families Act 2014 removed previously existing duties on school governing bodies in England to consult local authorities, parents and staff, and have regard to advice and guidance given by the local authority or the Secretary of State, before offering facilities or services (such as school-based childcare) to the community.\n \n[1]     HC Deb 16 March 2016 c964\n \n[2]     WHO, WHO calls on countries to reduce sugars intake among adults and children, March 2015\n \n[3]     SACN, Expert nutritionists recommend halving sugar in diet, July 2015\n \n[4]     Free Sugars is a term used by the World Health Organisation to describe \u201call monosaccharides and disaccharides added to foods by the manufacturer, cook, or consumer, plus sugars naturally present in honey, syrups, and fruit juices.\u201d\n \n[5]     PHE, Sugar Reduction: The evidence for action, October 2015\n \n[6]     BMA, Doctors' leaders call for 20 per cent sugar tax amid warnings over impact of poor diet on nation's health, 13 July 2015\n \n[7]     WHO, WHO urges global action to curtail consumption and health impacts of sugary drinks, 11 October 2016\n \n[8]     FPH, FPH welcomes publication of PHE's sugar report, October 2015\n \n[9]     HM Treasury, Budget 2016 Policy Costings, March 2016 p12\n \n[10]    Office of Budget Responsibility, Economic & Fiscal Outlook Cm 9212, March 2016 par 4.76\n \n[11]    The Times, Lucozade promises \u2018game-changing\u2019 reformulation with less sugar, November 2016\n \n[12]    Tesco, Tesco reduces sugar content in all own brand soft drinks, November 2016\n \n[13]    RCPCH, George Osborne unveils sugar tax on soft drinks, 16 March 2016\n \n[14]    Faculty of Public Health, FPH warmly welcomes new sugar tax, 16 March 2016\n \n[15]    Sport and Recreation Alliance, Budget 2016 - Primary PE and school sport premium to get sugar tax funding, 17 March 2017\n \n[16]    British Soft Drinks Association, BSDA's response to the Soft Drinks Tax Consultation and the Childhood Obesity Strategy, October 2016\n \n[17]    The Lancet, Health impact assessment of the UK soft drinks industry levy: a comparative risk assessment modelling study, December 2016\n \n[18]    National Child Measurement Programme - England, 2015-16, November 2016\n \n[19]    Budget 2016, HC 901 March 2016 para 1.90-96\n \n[20]    OBR, Budget 2016: policy costings, March 2016\n \n[21]    OBR, Budget 2016: policy costings, March 2016\n \n[22]    IFS, Breakfast clubs work their magic in disadvantaged English schools, November 2016\n \n[23]    PQ55271, 1 December 2016.\n \n "}
      , "date" : {"_value" : "2017-01-09T15:06:08.329687+00:00", "_datatype" : "dateTime"}
      , "description" : ["This pack has been prepared ahead of the debate to be held in Westminster Hall on Tuesday 10 January 2017 at 2.30pm on the allocation of funding from the soft drinks industry levy for sport in schools. The debate will be opened by Justin Tomlinson MP"], "identifier" : {"_value" : "CDP-2017-0006"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Allocation of funding from the soft drinks industry levy for sport in schools", "topic" : [{"_about" : "http://data.parliament.uk/terms/95608", "prefLabel" : {"_value" : "Food"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95619", "prefLabel" : {"_value" : "Health education and preventive medicine"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95693", "prefLabel" : {"_value" : "Obesity"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95740", "prefLabel" : {"_value" : "Schools"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95758", "prefLabel" : {"_value" : "Sports and Olympic Games"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/668840", "abstract" : {"_value" : "The Policing and Crime Bill will return to the Commons for consideration of Lords Amendments on 10 January 2017.  307 amendments were made in the Lords, and these are set out in HL Bill 118, Lords Amendments to the Policing and Crime Bill. Most of these were Government amendments.  The Home Office has produced Explanatory Notes.\n \nThis paper looks at the main amendments, and briefly summarises the debate on them.\n \nThere were a number of controversial amendments which the Government opposed. These are:\n \n Lords Amendments 24 and 159 (introduced by the crossbencher, Baroness O\u2019Neill) which would require the Government to instigate an independent enquiry into police handling of complaints about allegations of corrupt relationships between the police and newspaper organisations. The proposals are similar to the original proposal for the second part of the Leveson Inquiry as agreed in 2012; the Government have been consulting on whether to proceed with this. Peers in favour argued that the Government should \u201cget on with\u201d a commitment that had already been made; others queried whether the likely outcome would justify the cost.  The Government maintained that the Government\u2019s consultation (which closes on 10 January 2017) was proportionate and in the public interest. Lords Amendments 96 and 302 (moved by Labour\u2019s Lord Rosser) concerning parity of funding at inquests. Where a PCC is an interested person at an inquest, he or she would have to recommend to the Secretary of State whether or not the family of the deceased needs financial support to ensure parity of legal representation.  Where this was recommended, the Secretary of State would have to provide financial assistance.  Lord Rosser cited the Hillsborough hearings and other cases, where bereaved families were not able to match the kind of funding for legal representation which the police had. The Government argued that it would be \u201cpremature\u201d to proceed with the amendment, and that it should first consider the recommendations of a report commissioned into the experiences of the Hillsborough families. Lords Amendments 134 and 305 (moved by Labour\u2019s Baroness Royall of Blaisdon) which would increase the maximum penalty for the offence of stalking involving fear or violence or serious alarm or distress from five years to ten yearsʹ The Government argued that in such serious cases, other offences with longer sentences can apply, and that it would review the operation of this stalking offence, including looking at the maximum sentence. However, on 6 January 2017, the Government announced that it would introduce an amendment going further than Baroness Royall\u2019s amendment. Lords Amendments 136 to 142 and 307 (moved by the Liberal Democrat Baroness Brinton) which would set out various rights for victims in primary legislation and establish a framework for reviews in homicide cases which have not resulted in convictions; the Government is committed to bringing forward proposals on victims\u2019 rights in due course, and argues that more time is needed; it also says that proposals for homicide reviews are unnecessary. \n \nA number of amendments tabled by Opposition party and crossbench peers and backbenchers have been supported by the Government. These include amendments on pardons for homosexuality offences; and an amendment to remove the duty of coroners to conduct an inquest in all cases where the deceased had an authorisation for the deprivation of their liberty in place.\n \n "}
      , "date" : {"_value" : "2017-01-09T11:24:49.7282794+00:00", "_datatype" : "dateTime"}
      , "description" : ["The Policing and Crime Bill will return to the Commons for consideration of Lords Amendments on 10 January 2017. This paper looks at the main amendments, and briefly summarises the debate on them."], "identifier" : {"_value" : "CBP-7789"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25036", "prefLabel" : {"_value" : "Home Affairs Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Policing and Crime Bill - Lords Amendments", "topic" : [{"_about" : "http://data.parliament.uk/terms/95541", "prefLabel" : {"_value" : "Criminal law"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95604", "prefLabel" : {"_value" : "Fire services"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95652", "prefLabel" : {"_value" : "Internet and cybercrime"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95712", "prefLabel" : {"_value" : "Police"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/669673", "abstract" : {"_value" : "With the conflict raging on since early 2015, Yemen has been labelled by Amnesty International as the \u201cforgotten war\u201d.  Since the Saudi-led intervention started in March 2015 against Iran-backed Shi\u2019a Houthi forces, the Saudis and their allies have managed to push back the Houthis from Aden. However Aden remains far from secure, with a number of key officials having been assassinated, and the influence of Al-Qaeda in the Arabian Peninsula (AQAP) and ISIS/Daesh is growing. Heavy fighting has been ongoing in the south of the country, exacerbating the humanitarian situation there. The Houthi militias have been accused of recruiting child soldiers. Many analysts see the war in Yemen as a proxy war between Saudi Arabia and Iran.\n \nThere have been allegations that UK-supplied arms have been used to commit violations of international humanitarian law and that UK personnel are close to the Saudi-led coalition\u2019s targeting decisions. The Defence Secretary told the House of Commons on 19 December 2016 that the Saudi Government had informed the UK it had used B-755 cluster munitions supplied by the UK in the 1980s in an attack on northern Yemen in January 2016. The Saudi Government has said will no longer use these munitions in its military operations. The UK Government continues to resist calls to suspend arms sales to Saudi Arabia \u2013 a stance which is set to be the subject of judicial review in early February 2017."}
      , "date" : {"_value" : "2017-01-09T11:14:58.3573712+00:00", "_datatype" : "dateTime"}
      , "description" : ["The House of Commons Library prepares a briefing in hard copy and/or online for most\u202fnon-legislative debates in the Chamber and Westminster Hall other than half-hour debates.\u202fDebate Packs\u202fare produced after the announcement of parliamentary business. They are intended to provide a summary or overview of the issue being debated and identify relevant briefings and useful documents, including press and parliamentary material. More detailed briefing can be prepared for Members on request to the Library."], "identifier" : {"_value" : "CDP-2017-0007"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/37362", "prefLabel" : {"_value" : "International Affairs and Defence Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Yemen", "topic" : [{"_about" : "http://data.parliament.uk/terms/95549", "prefLabel" : {"_value" : "Defence equipment and procurement"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95635", "prefLabel" : {"_value" : "Human rights"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95646", "prefLabel" : {"_value" : "International development"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95677", "prefLabel" : {"_value" : "Middle East"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/669672", "abstract" : {"_value" : "Integrity in research refers to the behaviours and values that result in high quality, ethical and valuable research. This POSTnote considers current approaches to fostering an environment conducive to good research in the UK, and detecting and preventing practices that fall short of expected standards. It also examines the current mechanisms for supporting integrity in the UK, whether these are sufficient, or if another form of oversight, such as regulation, might be preferable.\n \nPoor practice ranges from minor errors to serious misconduct. While fraud does occur, it is thought to be extremely rare. Questionable research practices are a more widespread concern, as they are thought to be more prevalent and have a greater impact on the research record.\n \nThere are concerns about how to maintain integrity in research, because of fears that the \u2018publish or perish\u2019 culture leads to poor or questionable research practices. While many mechanisms do exist for reducing poor practice, and these are thought to have a positive effect on reducing such behaviour, there remain concerns that the system is disjointed, lacks openness and transparency, and that the incentive structure is such that good practice is not recognised or rewarded. Strategies for tackling this therefore focused on reducing institutional pressures on researchers, through enhancing openness and transparency, improving oversight and training, and re-aligning incentives for researchers so that they are rewarded for engaging in rigorous and accurate research.\n \nThe key points in this briefing are:\n \n There are concerns about how to maintain integrity in research, because of fears that the \u2018publish or perish\u2019 culture leads to poor or questionable research practices. Compromised research integrity can put public health at risk and waste resources, undermine public trust in science and damage reputations. Various mechanisms exist to promote good practice in research, including: institutional guidelines; a sector-wide concordat; regulatory bodies for some disciplines; peer review; and a variety of legal actions. There are differing views over whether these mechanisms are sufficient, or if another form of oversight, such as regulation, might be preferable. \n \nAn update to this note was published on 08 Jan 2018.\n \nAcknowledgments\n \nPOSTnotes are based on literature reviews and interviews with a range of stakeholders and are externally peer reviewed. POST would like to thank the following interviewees and peer reviewers for kindly giving up their time during the preparation of this briefing:\n \n Prof Jonathan Montgomery, Nuffield Council on Bioethics Jamie Arrowsmith, Universities UK Chris Graf, the Committee on Publication Ethics Dr Mark Sheehan, Ethox Centre Dr Tony Peatfield, Research Councils UK Dr Frances Rawle, Research Councils UK Dr Rhys Morgan, Research Strategy Office, University of Cambridge Alice Jamieson, Wellcome Trust Niall McDermott, NHS England Prof Chris Witty, Department of Health Mathias Willumsen, Danish Committees on Scientific Dishonesty Dr Steven Hill, Higher Education Funding Council of England Catherine Joynson, Nuffield Council on Bioethics Dr Ritu Dhand, Nature James Parry, UK Research Integrity Office Prof Nicholas Steneck, University of Michigan Graham Farrant, Social Research Association Dr Ron Iphofen, Social Research Association Lord Krebs, University of Oxford Prof Frances Balkwill, Barts Cancer Institute Dr Frances Downey, The Royal Society Chris Peters, Sense about Science Medical Academic Staff Committee, British Medical Association Committee on Publication Ethics Dr Claire Cope, The Academy of Medical Sciences The Russell Group Research Integrity Forum \n \n \n \n   "}
      , "date" : {"_value" : "2017-01-09T10:50:13.5624392+00:00", "_datatype" : "dateTime"}
      , "description" : ["A POSTnote that considers current approaches to promoting integrity in research."], "identifier" : {"_value" : "POST-PN-0544"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/61081", "prefLabel" : {"_value" : "POST"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/61081", "prefLabel" : {"_value" : "POST"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/346721", "prefLabel" : {"_value" : "POSTnotes"}
      }
      , "title" : "Research Integrity", "topic" : [{"_about" : "http://data.parliament.uk/terms/95623", "prefLabel" : {"_value" : "Health staff and professions"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95672", "prefLabel" : {"_value" : "Medical ethics"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95737", "prefLabel" : {"_value" : "Research and innovation"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95741", "prefLabel" : {"_value" : "Science"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/668841", "abstract" : {"_value" : "There has been a growing consensus over the last few years that better integration of pharmacies with general practitioners and the wider NHS presents an opportunity to improve patient care. Indeed, a Royal Pharmaceutical Society report from 2013 argued that studies of pharmacy dating back three decades have argued that pharmacists have the capacity and ability to expand their role from traditional medicine dispensing services to direct delivery of clinical and public health services.\n \nA White Paper published in 2008 set out a future vision for pharmacy services that argued (among other things) for the pharmacy sector to have close involvement in the development of clinical pathways that support integrated care. The paper also called for pharmacies to take on a more active role in providing clinical and public health services.\n \nSince the White Paper, community pharmacies have become increasingly involved in the provision of services outside traditional dispensing of medicine. Community pharmacies provide services including medicines use review, public health promotion and supporting self-care. However, there has arguably been slow progress on the integration of pharmacies with other parts of the NHS.\n \nIn 2013, the Royal Pharmaceutical Society (RPS) set up a Commission on future models of care, which published its report in November 2013, setting out findings and recommendations. The Commission found \u201cwidespread support\u201d for the extension of the role of pharmacy in provision of services, in order to adapt to the changing needs of patients in the context of tightening budgets.\n \nThe NHS Five Year Forward View (FYFV), published in October 2014, set out a vision for the future of the NHS over the next five years, aimed at adapting the NHS to meet the changing needs of patients and the wider population. The FYFV proposed seven new models, aimed at removing barriers between providers of NHS care, and developing integrated services.\n \nIn July 2015, NHS England launched a pilot to increase the presence of clinical pharmacists in general practice. As of December 2016, there were more than 490 additional clinical pharmacists working in GP practices across England under this pilot. In April 2016, the General Practice Forward View (GPFV) was published, committing to extend this programme, by investing a further £112 million to support 1,500 more pharmacists in general practice by 2020.\n \nIn April 2016, in the context of the FYFV and GPFV, an independent review into community pharmacy clinical services was commissioned by the Chief Pharmaceutical Officer (\u201cthe Murray Review\u201d) to identify the barriers preventing the best use of community pharmacy, and to make recommendations for new models of care and commissioning. The review, which was published in December 2016, found that poor integration with other parts of the NHS was one of three key barriers to unlocking this potential. \n \nThe review, by Richard Murray, the Director of Policy at the King\u2019s Fund, was well-received by industry groups, including the RPS, which described it as \u201ccompletely in line with our own vision for the profession\u201d.\n \nCurrent government policy towards community pharmacy is in support of stronger integration of community pharmacy with general practice and the wider NHS.\n \nThe government has pursued several policies which are intended to lead to better integration of community pharmacy, including the introduction of a Pharmacy Integration Fund (PhIF) as part of the 2016/17 community pharmacy funding settlement. While the government has not yet officially responded to the Murray review, in an answer to an oral question on 20th December 2016, David Mowat described the review as \u201can essential road map that sets out how we are going to move the community pharmacy network away from a remuneration model based just on dispensing and onto services as well\u201d. According to Health Minister David Mowat, NHS England is intending to respond to the review soon.\n \n "}
      , "date" : {"_value" : "2017-01-06T16:44:48.0585134+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library debate pack has been prepared for the Westminster Hall debate on pharmacies and integrated healthcare in England on Wednesday 11 January 2017. The debate has been tabled by Anne Main MP."], "identifier" : {"_value" : "CDP-2017-0005"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Pharmacies and integrated healthcare in England", "topic" : [{"_about" : "http://data.parliament.uk/terms/95620", "prefLabel" : {"_value" : "Health finance"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95621", "prefLabel" : {"_value" : "Health services"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95623", "prefLabel" : {"_value" : "Health staff and professions"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/345435", "date" : {"_value" : "2017-01-06T12:15:56.9382231+00:00", "_datatype" : "dateTime"}
      , "identifier" : {"_value" : "SN06504"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Export of Live Animals within the European Union", "topic" : [{"_about" : "http://data.parliament.uk/terms/95481", "prefLabel" : {"_value" : "Agriculture"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95489", "prefLabel" : {"_value" : "Animal welfare"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95490", "prefLabel" : {"_value" : "Animals"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95536", "prefLabel" : {"_value" : "Countryside"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/668836", "abstract" : {"_value" : "The international community has expressed serious concern over the current political climate in the Democratic Republic of the Congo (DRC), as well as alarm over the security, political and human rights situation in Burundi.\n \nDuring 2016, the political and security situation in the DRC deteriorated. President Joseph Kabila and his allies announced a delay until April 2018 of parliamentary and presidential elections which were originally due in late-2016. Although a small part of the political opposition went along with this move, it sparked significant street protests.  At least 34 people were reportedly killed by the security forces in December. However, on New Year\u2019s Eve the Catholic Church brokered a broader-based deal under which elections will take place by the end of 2017, in which Kabila will not stand for a third-term. A transitional government with an opposition politician as prime minister is also to be established. This has sparked optimism that the political crisis might be peacefully resolved \u2013 but critics doubt that Kabila will honour this deal. Meanwhile, North Kivu and Kasai are sites of growing violence and there are reports of growing discontent within the army over pay and conditions.\n \nIn Burundi, which has been in turmoil since 2015, when President Pierre Nkurunziza successfully engineered a third term in office for himself, the security and political situation is if anything even more dire. Political repression is intense and violence continues. The UN and African Union have been unable to have much impact on the crisis to date. Burundi accuses neighbouring Rwanda of supporting armed insurgents and has announced its departure from the International Criminal Court.\n \n Notwithstanding periodic criticism that it interferes in the internal politics of some of its neighbours, Rwanda continues to be viewed by the international community as a stable and economically successful developing country. Opponents argue that President Paul Kagame has created an authoritarian political culture that could be storing up trouble for the future. Kagame held a referendum in 2015 to change the constitution to allow him to stand again for the presidency in 2017.\n \nIn marked contrast to its neighbours, Tanzania has avoided large-scale political instability and violence in recent decades. But it currently hosts well over 100,000 Burundian refugees and Zanzibar remains a source of political tensions. Elections there in October 2015 were annulled by the electoral authorities. The opposition boycotted the re-run in March 2016. The annulment was criticised by the international community but little punishment has followed. Calls for another government of national unity on the Isles have been resisted by the ruling party. More broadly, new President John Magufuli has focused on anti-corruption efforts since taking office and is still enjoying healthy levels of public support."}
      , "date" : {"_value" : "2017-01-06T12:15:53.2504385+00:00", "_datatype" : "dateTime"}
      , "description" : ["The House of Commons Library prepares a briefing in hard copy and/or online for most\u202fnon-legislative debates in the Chamber and Westminster Hall other than half-hour debates.\u202fDebate Packs\u202fare produced after the announcement of parliamentary business. They are intended to provide a summary or overview of the issue being debated and identify relevant briefings and useful documents, including press and parliamentary material. More detailed briefing can be prepared for Members on request to the Library."], "identifier" : {"_value" : "CDP-2017-0004"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/37362", "prefLabel" : {"_value" : "International Affairs and Defence Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Security and political situation in the African Great Lakes region", "topic" : [{"_about" : "http://data.parliament.uk/terms/95479", "prefLabel" : {"_value" : "Africa"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/668373", "abstract" : {"_value" : "On Tuesday 10 January 2017 at 9.30am in Westminster Hall MPs will take part in a 90 minute debate on supporting children\u2019s wellbeing and mental health in a school environment.\n \nThis debate was scheduled by the Back Bench Business Committee following a representation by Norman Lamb MP.\n \nWatch the representation to the committee\n \nWatch the debate live on Parliament TV\n \nThis debate pack contains background information as well as relevant press coverage, parliamentary material and further reading.\n \nThe following library briefing paper may also be of interest:\n \nChildren and young people\u2019s mental health \u2013 policy, CAMHS services, funding and education"}
      , "date" : {"_value" : "2017-01-05T17:41:44.8385134+00:00", "_datatype" : "dateTime"}
      , "description" : ["MPs will debate  \"Supporting children\u2019s wellbeing and mental health in a school environment\", in Westminster Hall on Tuesday 10 January 2017.  Norman Lamb MP will lead the debate.  This House of Commons Library briefing provides a background summary of the issues and press and parliamentary coverage."], "identifier" : {"_value" : "CDP-2016-0257"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/70510", "prefLabel" : {"_value" : "Social Policy Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414037", "prefLabel" : {"_value" : "Commons Debate packs"}
      }
      , "title" : "Supporting children\u2019s wellbeing and mental health in a school environment", "topic" : [{"_about" : "http://data.parliament.uk/terms/95621", "prefLabel" : {"_value" : "Health services"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95676", "prefLabel" : {"_value" : "Mental health"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95740", "prefLabel" : {"_value" : "Schools"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/668372", "abstract" : {"_value" : "The Neighbourhood Planning Bill was introduced in the House of Lords on 14 December 2016 and is scheduled for second reading on 17 January 2017. It completed report stage in the House of Commons on 13 December 2016 and was passed at third reading without a division the same day. The Government describes the Neighbourhood Planning Bill as having two primary aims:\n \n To help identify and free up more land to build homes on to give communities as much certainty as possible about where and when development will take place; and To speed up the delivery of new homes, in particular by reducing the time it takes to get from planning permission being granted to building work happening on site and new homes being delivered. \n \nAt the Bill\u2019s second reading in the House of Commons, Teresa Pearce, Shadow Secretary of State for Communities and Local Government, stated that the Bill did not \u201cappear at first glance to be a controversial one\u201d and included elements that the Labour Party supported. However, she expressed particular concern about the Bill\u2019s proposed reforms to pre-commencement planning conditions which, under the Bill, would normally require the written agreement of the planning applicant. There was a division on an opposition amendment on this issue during committee, which was defeated. The Government introduced a series of new clauses on development documents which were added during the Bill\u2019s committee stage. At report stage, the subject of pre-commencement planning conditions was again raised and was the subject of a further division on an opposition amendment, which was defeated. There was also a division on an opposition amendment on removing permitted development rights to allow the change of use of pubs, which was defeated. Other non-government amendments discussed at report stage (which were not divided upon or added to the Bill) included a new clause on the clustering of betting shops, new clauses on consultation between planning authorities and neighbourhood planning bodies and the issue of five-year land supply for housing, the housing needs of disabled and older people and the Bill\u2019s compulsory purchase provisions, amongst others. The Government made a number of technical amendments to the Bill.\n \nOn 12 December 2016, before report stage on the Bill, Gavin Barwell, Minister for Housing and Planning, made a written statement on neighbourhood planning. This included directions on when Local Plans should be considered out of date under the National Planning Policy Framework and on the issue of five-year land supply for housing. These issues were subject to non-government amendments at the Bill\u2019s report stage. The Minister also announced that the Government would be publishing a white paper on housing in \u201cdue course\u201d."}
      , "date" : {"_value" : "2017-01-05T16:53:14.143548+00:00", "_datatype" : "dateTime"}
      , "description" : ["This House of Lords Library briefing provides information on the Neighbourhood Planning Bill ahead of its second reading in the House of Lords, which is scheduled for 17 January 2016."], "identifier" : {"_value" : "LLN-2017-0001"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/25284", "prefLabel" : {"_value" : "House of Lords Library"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/346713", "prefLabel" : {"_value" : "Lords Library notes"}
      }
      , "title" : "Neighbourhood Planning Bill: Briefing for Lords Stages", "topic" : [{"_about" : "http://data.parliament.uk/terms/95629", "prefLabel" : {"_value" : "Housing"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95634", "prefLabel" : {"_value" : "Housing supply"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95711", "prefLabel" : {"_value" : "Planning"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/668371", "abstract" : {"_value" : "EU external agreements\n \nThe Europa Treaties database lists 890 bilateral and 259 multilateral international treaties and agreements which the EU or the EU and the Member States have signed and/or ratified.  Most have been concluded and signed by the EU and have not needed national ratification. But many are so-called \u201cmixed agreements\u201d, which both the EU and the individual Member States have ratified because they contain some policy provisions which are within the EU\u2019s exclusive competence and others which are within the competence of the Member States. There are currently 745 exclusive EU agreements and 230 mixed competence agreements.\n \nCommons Library Briefing Paper 7792, List of EU trade agreements, 21 November 2016, lists 63 EU trade agreements.\n \nHow the UK adopts EU agreements\n \nUnder the Constitutional Reform and Governance Act 2010, mixed agreements requiring ratification in the UK must be laid before Parliament for at least 21 sitting days once they are signed, along with an Explanatory Memorandum.  At this point they are published as a Command Paper in the European Union Treaty series. After ratification they are re-published in the UK Treaty Series.\n \nA mixed agreement must be defined as an EU Treaty for the purposes of the European Communities Act 1972 (ECA). This is done by secondary legislation: a draft Order in Council is laid before Parliament and may be debated and/or approved by both Houses by the affirmative procedure.  There are to date 120 \u201cdefinition of treaties\u201d Orders. They are listed in Commons Briefing Paper, Legislating for Brexit: Statutory Instruments implementing EU law, January 2017.\n \nBrexit and EU agreements\n \nOpinions differ on the effects of Brexit on external agreements. On balance, most analysts believe that both exclusive and mixed agreements will fall on Brexit day, and will have to be renegotiated after Brexit, or possibly in parallel with negotiations on the withdrawal agreement (could this be achieved within the two-year negotiating period?).  There is a view, however, that where the UK has ratified a mixed agreement in its own right, aspects of the mixed agreement will remain in force.\n \nThis paper considers how Brexit might affect EU external agreements. Sections 2 and 3 list bilateral and multilateral EU agreements as at December 2016, noting whether they are exclusive or mixed competence, and the date of signature. Those marked with an asterisk have not yet entered into force."}
      , "date" : {"_value" : "2017-01-05T13:13:34.7338248+00:00", "_datatype" : "dateTime"}
      , "description" : ["The EU has over 1,000 external agreements with other countries or organisations, many of which the individual Member States, as well as the EU, have ratified. Many of them concern trade but they cover a range of policy areas and it is not clear what Brexit will mean for the UK's participation in these agreements."], "identifier" : {"_value" : "CBP-7850"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Legislating for Brexit: EU external agreements", "topic" : [{"_about" : "http://data.parliament.uk/terms/95523", "prefLabel" : {"_value" : "Climate change"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95588", "prefLabel" : {"_value" : "EU external relations"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95591", "prefLabel" : {"_value" : "EU law and treaties"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95648", "prefLabel" : {"_value" : "International law"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95649", "prefLabel" : {"_value" : "International organisations"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95650", "prefLabel" : {"_value" : "International politics and government"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95656", "prefLabel" : {"_value" : "Latin America"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95659", "prefLabel" : {"_value" : "Legislative process"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95677", "prefLabel" : {"_value" : "Middle East"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95690", "prefLabel" : {"_value" : "North America"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95701", "prefLabel" : {"_value" : "Overseas territories"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/453912", "abstract" : {"_value" : "Microbeads and microplastics\n \nMicrobeads and other microplastics are used in a variety of cosmetic and personal care products such as scrubs, soaps, lotions and toothpastes. They are added to these products for a number of purposes, such as to make the product more abrasive or for decoration.\n \nThese particles of plastic can enter the environment when consumers rinse them down the drain. The plastic can then subsequently be released into rivers and the sea with waste water outflows.\n \nThe scale of the issue\n \nMicroplastic debris in marine environments is growing in volume. It comes from a number of sources, such as the breakdown of larger pieces of plastic over time and industrial scrubbers used to blast-clean surfaces.\n \nMicrobeads and other microplastics from cosmetics make up a small proportion of marine microplastic pollution. Studies have calculated that 0.1% to 4.1% of marine microplastic pollution in Europe was from cosmetic product sources. 4.1% equates to between 2,400-8,600 tonnes of plastic entering the marine environment per year.\n \nImpacts of microplastics\n \nMicroplastics are likely to have environmental impacts. Studies have shown they can be ingested by marine animals leading to physical harm and reproductive or toxic effects.\n \nThere is evidence to suggest that microplastics are entering the human food chain. On the basis of current evidence microplastics in seafood are not currently thought to represent a human health risk, although uncertainties remain. The Government has said that the Chief Medical Officer will review their impact on human health.\n \nCosmetic microplastic ban\n \nA number of companies are voluntarily phasing out some types of microplastic in cosmetic products in the EU. The voluntary measures taken by industry could reduce cosmetic microplastic use by almost 50% by 2020.\n \nIn the USA a ban on microbeads in cosmetic and personal care products will be phased in over the next few years. There have been calls for a similar ban in the UK and EU to address what is perceived to be an unnecessary source of microplastic pollution. In September 2016, the UK Government committed to banning the manufacture and sale of cosmetics and personal care products containing microbeads in all of the UK by October 2017. In December 2016, the Government published a consultation document, which closes on 28 February 2017.\n \nNews of the Government\u2019s proposed ban was welcomed by the Marine Conservation Society. However, some in the industry question the proportionality of a ban given the success of voluntary efforts and the relatively small contribution that cosmetic products make to marine pollution. A recent research report commissioned by the European Union recommended that more information be collected to help determine whether a ban is required or whether the industry is responding adequately to the issue."}
      , "date" : {"_value" : "2017-01-04T16:26:38.3958709+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library briefing paper examines the use of microplastics and microbeads and plans to ban their use in the UK. It also discusses their possible impacts on the environment and human health."], "identifier" : {"_value" : "CBP-7510"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/67716", "prefLabel" : {"_value" : "Science and Environment Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Microbeads and microplastics in cosmetic and personal care products", "topic" : [{"_about" : "http://data.parliament.uk/terms/95581", "prefLabel" : {"_value" : "Environmental protection"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95669", "prefLabel" : {"_value" : "Marine environment"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95714", "prefLabel" : {"_value" : "Pollution"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    , {"_about" : "http://data.parliament.uk/resources/667390", "abstract" : {"_value" : "The Commonwealth Development Corporation Bill 2016-17 was introduced on 16 November 2016 and received its Second Reading on 9 June 2015. This Briefing Paper summarises the progress of the Bill; it complements Briefing Paper 7809 Commonwealth Development Corporation Bill 2016-17 that was prepared before the Bill\u2019s Second Reading debate.\n \nCDC Group plc (henceforth \u201cCDC\u201d) is a public limited private equity company owned entirely by the Department for International Development (DFID) that invests in businesses in developing countries to support the private sector and foster development. The financial assistance that the Government provides to CDC recently reached its legislated limit of £1.5 billion, so the Bill provides for an increase of this limit to £6 billion, with the potential for this to be extended further to £12 billion by statutory instrument.\n \nSecond reading\n \nOn 29 November the Bill passed its second reading in the Commons without a vote, and while the Bill received support in the debate, some concerns were raised. These ranged from past excessive executive pay, CDC\u2019s failure to focus sufficiently on poverty-reduction, its reduced levels of investment in agriculture and infrastructure, its routing of investments through tax havens and the fact that a decision to increase the organisation\u2019s capital would preceding the publication of its investment strategy for 2017-21.\n \nCommittee stage\n \nThere were two sittings at Commons committee stage, both taking place on 6 December 2016. There was a third sitting planned for 8 December 2016 but this did not take place.\n \nThe debate at the Committee stage focused on the two main provisions of the Bill. It first focused on the amount of the initial increase (to £6 billion), with amendments to change this discussed and withdrawn or negatived on division. The debate then turned to the provision that would enable the Government to further increase the limit to £12 billion by statutory instrument. A number of new clauses were proposed that would place conditions on this further increase relating to reporting on CDC\u2019s performance, adherence to DFID\u2019s partnership principles and the geographical and sectoral focus of CDC\u2019s investments. These new clauses were subsequently withdrawn with one negatived on division.\n \nNo amendments or new clauses were carried and the Bill is going into report stage without amendment."}
      , "date" : {"_value" : "2017-01-03T16:28:11.3913183+00:00", "_datatype" : "dateTime"}
      , "description" : ["This Commons Library briefing summarises the progress of the Commonwealth Development Corporation Bill 2016-17."], "identifier" : {"_value" : "CBP-7849"}
      , "publisher" : {"_about" : "http://data.parliament.uk/terms/25267", "prefLabel" : {"_value" : "House of Commons Library"}
      }
      , "section" : [{"_about" : "http://data.parliament.uk/terms/17113", "prefLabel" : {"_value" : "Economic Policy and Statistics Section"}
      }
      ], "subType" : {"_about" : "http://data.parliament.uk/terms/414033", "prefLabel" : {"_value" : "Commons Briefing papers"}
      }
      , "title" : "Commonwealth Development Corporation Bill 2016-17: Progress of the Bill", "topic" : [{"_about" : "http://data.parliament.uk/terms/95479", "prefLabel" : {"_value" : "Africa"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95497", "prefLabel" : {"_value" : "Asia"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95602", "prefLabel" : {"_value" : "Financial institutions"}
      }
      , {"_about" : "http://data.parliament.uk/terms/95646", "prefLabel" : {"_value" : "International development"}
      }
      ], "type" : "http://data.parliament.uk/schema/parl#ResearchBriefing"}
    ], "itemsPerPage" : 500, "page" : 0, "startIndex" : 1, "totalResults" : 259, "type" : "http://purl.org/linked-data/api/vocab#Page"}
}

    http_version: 
  recorded_at: Wed, 24 Jan 2018 09:42:03 GMT
- request:
    method: get
    uri: http://lda.data.parliament.uk/researchbriefings.json?_page=1&_pageSize=500&max-date=2017-03-20&min-date=2017-01-01
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - lda.data.parliament.uk
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 24 Jan 2018 09:42:04 GMT
      Content-Type:
      - application/json
      Set-Cookie:
      - __cfduid=dae3a127c71f9af9a26ff7582ca8dfe6e1516786923; expires=Thu, 24-Jan-19
        09:42:03 GMT; path=/; domain=.parliament.uk; HttpOnly
      X-Response-Id:
      - '16870'
      Access-Control-Allow-Origin:
      - "*"
      Expires:
      - Wed, 24 Jan 2018 09:58:43 GMT
      Etag:
      - W/"e0bb2e1f328af427"
      Content-Location:
      - http://lda.data.parliament.uk/researchbriefings.json?max-date=2017-03-20&min-date=2017-01-01&_pageSize=500&_page=1
      Server:
      - cloudflare
      Cf-Ray:
      - 3e220a6237739c29-AMS
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: |
        { "format" : "linked-data-api", "version" : "0.2", "result" : {"_about" : "http://lda.data.parliament.uk/researchbriefings.json?max-date=2017-03-20&min-date=2017-01-01&_pageSize=500&_page=1", "definition" : "http://lda.data.parliament.uk/meta/researchbriefings.json?max-date=2017-03-20&min-date=2017-01-01", "extendedMetadataVersion" : "http://lda.data.parliament.uk/researchbriefings.json?max-date=2017-03-20&min-date=2017-01-01&_metadata=all&_pageSize=500&_page=1", "first" : "http://lda.data.parliament.uk/researchbriefings.json?max-date=2017-03-20&min-date=2017-01-01&_page=0", "isPartOf" : {"_about" : "http://lda.data.parliament.uk/researchbriefings.json?max-date=2017-03-20&min-date=2017-01-01", "definition" : "http://lda.data.parliament.uk/meta/researchbriefings.json?max-date=2017-03-20&min-date=2017-01-01", "hasPart" : "http://lda.data.parliament.uk/researchbriefings.json?max-date=2017-03-20&min-date=2017-01-01&_pageSize=500&_page=1", "type" : "http://purl.org/linked-data/api/vocab#ListEndpoint"}
            , "items" : [], "itemsPerPage" : 500, "page" : 1, "prev" : "http://lda.data.parliament.uk/researchbriefings.json?max-date=2017-03-20&min-date=2017-01-01&_page=0", "startIndex" : 501, "totalResults" : 259, "type" : "http://purl.org/linked-data/api/vocab#Page"}
        }
    http_version: 
  recorded_at: Wed, 24 Jan 2018 09:42:04 GMT
recorded_with: VCR 4.0.0
